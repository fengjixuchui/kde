From patchwork Fri Sep 25 19:03:35 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Tom Lendacky <thomas.lendacky@amd.com>
X-Patchwork-Id: 11800615
Return-Path: <SRS0=qKOj=DC=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 43F1C112C
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 25 Sep 2020 19:04:29 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 0898121D42
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 25 Sep 2020 19:04:29 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (1024-bit key) header.d=amdcloud.onmicrosoft.com
 header.i=@amdcloud.onmicrosoft.com header.b="PFOcTaEr"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729745AbgIYTE2 (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Fri, 25 Sep 2020 15:04:28 -0400
Received: from mail-bn8nam11on2077.outbound.protection.outlook.com
 ([40.107.236.77]:28641
        "EHLO NAM11-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1728069AbgIYTE1 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 25 Sep 2020 15:04:27 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=iMlp+NnyQYMHni7mJpzT6sqRMDbSTaYdOoL1QMk2pml+xqo1Su83I14WwKI9NmhG2dmFL3cHGQ0rUWpbNu/YFSG5juZbk9t0kvXPXYlyoljTVEtQ6sztDgzmACEvKUtfpVlOu2bAVa50dFNG+rp5C5FIM1PXXUhsvph5IHgV/UcRibvVuNT4BJwTqIG5fgnkzEbkf+l3Kp5SFmOhS0QnljANA7cRR5u7Ele12StoW7NOPGSWhDjhNcyVFVVrwwdGwsKi4gHrzW+U/CgeDLBI4y3Dpln9yfENhxgPy07m45mIjMXEaSyzj8L0Yhb3HryfFfH8TPZZl+8NYeSbCeqyGw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=qnGr0S8uGAzeDpWKwoRpwkcNUvB3BEpyqXdIK+1wAC4=;
 b=ifdZ2bBRpSmPydYx7h+A7vmB5YKKd9eVzEUr31QFwECc7nZfvbcU+4xAG2Ny8gBuqUlFvva/EdH2N1uBkxrFwvmIXFEKnUzYbhfXYmy2kYrUex5nnQ3pEk6by6tQJE+zhxg8UJXuaQ61wdPuqrE/ez1VfOjcaQgcWfSmBP1PPRhbH0nSPoxmJPCd+vbpMd8ZdLhDSZ+HOz6DOSFu6dADsUTqsEdWK1YS9yUgVGf1BUqES7iyaQ0Jpr+H14kqiyDs/TJMW8D+onCIuy4WmM51Kqeoz5zO4/eXjrpQDAxI2Bh/0btB3jFCyyS/SyWR3Qdx9kuPvOU2asmL2hTN+ew4ww==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=qnGr0S8uGAzeDpWKwoRpwkcNUvB3BEpyqXdIK+1wAC4=;
 b=PFOcTaErpmUzYeeRWBZksAj+KhoCRBw8nbtbdOwamdIK9qcfVt8ceG47HVpZCZs3DxDKt4kq7FtRcl2R7tBINBUWjl3Hvzs5k03xXvYDTKZF4Xi5wtnSPMX5AGI5rP02A9MnQUuNWIgOZJ1VctCqda/Z6API0bY0Ct4kKBsrWRg=
Authentication-Results: nongnu.org; dkim=none (message not signed)
 header.d=none;nongnu.org; dmarc=none action=none header.from=amd.com;
Received: from DM5PR12MB1355.namprd12.prod.outlook.com (2603:10b6:3:6e::7) by
 DM6PR12MB4297.namprd12.prod.outlook.com (2603:10b6:5:211::20) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.3412.22; Fri, 25 Sep 2020 19:04:25 +0000
Received: from DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346]) by DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346%3]) with mapi id 15.20.3391.024; Fri, 25 Sep 2020
 19:04:25 +0000
From: Tom Lendacky <thomas.lendacky@amd.com>
To: qemu-devel@nongnu.org, kvm@vger.kernel.org
Cc: Marcel Apfelbaum <marcel.apfelbaum@gmail.com>,
        Paolo Bonzini <pbonzini@redhat.com>,
        "Dr. David Alan Gilbert" <dgilbert@redhat.com>,
        Eduardo Habkost <ehabkost@redhat.com>,
        Richard Henderson <rth@twiddle.net>,
        Connor Kuehl <ckuehl@redhat.com>,
        Brijesh Singh <brijesh.singh@amd.com>,
        Jiri Slaby <jslaby@suse.cz>,
        Marcelo Tosatti <mtosatti@redhat.com>,
        "Michael S. Tsirkin" <mst@redhat.com>
Subject: [PATCH v4 1/6] sev/i386: Add initial support for SEV-ES
Date: Fri, 25 Sep 2020 14:03:35 -0500
Message-Id: 
 <29ff1690a9f84536ccd303cda9f105814e117f45.1601060620.git.thomas.lendacky@amd.com>
X-Mailer: git-send-email 2.28.0
In-Reply-To: <cover.1601060620.git.thomas.lendacky@amd.com>
References: <cover.1601060620.git.thomas.lendacky@amd.com>
X-ClientProxiedBy: DM5PR15CA0032.namprd15.prod.outlook.com
 (2603:10b6:4:4b::18) To DM5PR12MB1355.namprd12.prod.outlook.com
 (2603:10b6:3:6e::7)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from tlendack-t1.amd.com (165.204.77.1) by
 DM5PR15CA0032.namprd15.prod.outlook.com (2603:10b6:4:4b::18) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3412.20 via Frontend
 Transport; Fri, 25 Sep 2020 19:04:24 +0000
X-Mailer: git-send-email 2.28.0
X-Originating-IP: [165.204.77.1]
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: cb7633e1-5362-4627-6c89-08d86185d1c0
X-MS-TrafficTypeDiagnostic: DM6PR12MB4297:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <DM6PR12MB42975FAABACF8B8C51B55C29EC360@DM6PR12MB4297.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:2043;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 W6h2JHIx4sslAl+7ApPXQleOuljSoufIHXrMJt0F226KXT+NWHdDuPoMnbvQwvNjz1Adv9eI9iUyreQ1Eeo8bg2xdscmRaWx0c8+V+jRbfqidlYb428Ic0U2taPP/QyzqCzdJvmm86mF2De0uuEYPMNMNmThkWMxvW8Mp8K0Ud2cQ/3gjarY52OBr7ZflCVXLOgjsqWEOZSnju8ghu6qrqp1ATWrOc9nEcPg2gOyMzLzK2vl0qLX164j5LEcSSFqdISDkbriQVFJGHtMEnwST38tDrdUZ2pJZcqgFGLKEQVvw9SnUQl8YTwiOXin4Q9RDC1BZJLrlqIQvxdX3KwJMsevc94EBNczU7sugUNIlPXKjnt3W0TT7ZbzrCST2clTPLbpfNimY9HgL780flyg0IdaL0TOky9fpOacvNh9rHw=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DM5PR12MB1355.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(346002)(136003)(396003)(376002)(39860400002)(26005)(7416002)(956004)(186003)(6666004)(16526019)(54906003)(2616005)(6486002)(66556008)(66946007)(36756003)(8936002)(66476007)(86362001)(316002)(478600001)(7696005)(52116002)(2906002)(5660300002)(4326008)(83380400001)(8676002)(309714004);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 75N56JZPgwqEk1hgORCezZDfTSlBrEKkYfrIQvkeAsTfgAW84DYcfuz5Q7sVQxCiYAqvXN0wN1T90wpHbT1OYjavfII2IBgf5G/OCP9QHKTDIjZKtrL4ob4th7mMehz0HWY8dU0v+xf3iLYVSIc3q19oLaaJa+nvXHRTI87cIxaby99bnR3CkHn4LcFdJ4LY/XxD9MEPwd5akB1inNOMK5Zl7jfsCe6zIpU/ZMPAAirdDlD8imBDm99MIvcQU61mwSZRIQ5ih09/mZnB5HU1S/RDekCymVGLWzNtlWB2ne0hNpIkagT4X3o+krC3cDgnTWJ6ROHtQrYOh3ZP6jBjRFUTKvkFvfni/nn4C20ya8pmZBb+Yzq0fwIiMK1nOXuv//hOKPwKEmipuIUKEXzXSJ7M1UmgZAezVnXUnCCTGN+Qz2eYZYwUseT7WIv5kh/1cniL5WrR6g7ZbksivwXzv1eGiszdeKT0BMeeuNtrni7hUhduyGTQiHYzAo+t4WhTaCJNRAg4ow58YEc/ve2IaQTZ6RwU2/s0Fd/LKxGxRfmru17DMzS137CJeDVaeCBf3cr+N6bW6t9e0CwVtRTLJep+vw87XPMjJvRVlreVHEFoyoNh/51dYLZOM8w1ECEBXU7fZLig43Y6htFItzdMjw==
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 cb7633e1-5362-4627-6c89-08d86185d1c0
X-MS-Exchange-CrossTenant-AuthSource: DM5PR12MB1355.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Sep 2020 19:04:25.3077
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 fd5aSg4bFPy2ESMgDvjr7+cOKV11ZrEvYuWOytDJNUJUL9vlTt3PEFUOmyGASKhI2KuXie/EPoaYPdX0wyrQ3g==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM6PR12MB4297
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Tom Lendacky <thomas.lendacky@amd.com>

Provide initial support for SEV-ES. This includes creating a function to
indicate the guest is an SEV-ES guest (which will return false until all
support is in place), performing the proper SEV initialization and
ensuring that the guest CPU state is measured as part of the launch.

Co-developed-by: Jiri Slaby <jslaby@suse.cz>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
---
 target/i386/cpu.c      |  1 +
 target/i386/sev-stub.c |  5 +++++
 target/i386/sev.c      | 44 ++++++++++++++++++++++++++++++++++++++++--
 target/i386/sev_i386.h |  1 +
 4 files changed, 49 insertions(+), 2 deletions(-)

diff --git a/target/i386/cpu.c b/target/i386/cpu.c
index 3ffd877dd5..ca0e17ed07 100644
--- a/target/i386/cpu.c
+++ b/target/i386/cpu.c
@@ -5940,6 +5940,7 @@ void cpu_x86_cpuid(CPUX86State *env, uint32_t index, uint32_t count,
         break;
     case 0x8000001F:
         *eax = sev_enabled() ? 0x2 : 0;
+        *eax |= sev_es_enabled() ? 0x8 : 0;
         *ebx = sev_get_cbit_position();
         *ebx |= sev_get_reduced_phys_bits() << 6;
         *ecx = 0;
diff --git a/target/i386/sev-stub.c b/target/i386/sev-stub.c
index 88e3f39a1e..040ac90563 100644
--- a/target/i386/sev-stub.c
+++ b/target/i386/sev-stub.c
@@ -49,3 +49,8 @@ SevCapability *sev_get_capabilities(Error **errp)
     error_setg(errp, "SEV is not available in this QEMU");
     return NULL;
 }
+
+bool sev_es_enabled(void)
+{
+    return false;
+}
diff --git a/target/i386/sev.c b/target/i386/sev.c
index 93c4d60b82..af6b88691f 100644
--- a/target/i386/sev.c
+++ b/target/i386/sev.c
@@ -358,6 +358,12 @@ sev_enabled(void)
     return !!sev_guest;
 }
 
+bool
+sev_es_enabled(void)
+{
+    return false;
+}
+
 uint64_t
 sev_get_me_mask(void)
 {
@@ -578,6 +584,20 @@ sev_launch_update_data(SevGuestState *sev, uint8_t *addr, uint64_t len)
     return ret;
 }
 
+static int
+sev_launch_update_vmsa(SevGuestState *sev)
+{
+    int ret, fw_error;
+
+    ret = sev_ioctl(sev->sev_fd, KVM_SEV_LAUNCH_UPDATE_VMSA, NULL, &fw_error);
+    if (ret) {
+        error_report("%s: LAUNCH_UPDATE_VMSA ret=%d fw_error=%d '%s'",
+                __func__, ret, fw_error, fw_error_to_str(fw_error));
+    }
+
+    return ret;
+}
+
 static void
 sev_launch_get_measure(Notifier *notifier, void *unused)
 {
@@ -590,6 +610,14 @@ sev_launch_get_measure(Notifier *notifier, void *unused)
         return;
     }
 
+    if (sev_es_enabled()) {
+        /* measure all the VM save areas before getting launch_measure */
+        ret = sev_launch_update_vmsa(sev);
+        if (ret) {
+            exit(1);
+        }
+    }
+
     measurement = g_new0(struct kvm_sev_launch_measure, 1);
 
     /* query the measurement blob length */
@@ -684,7 +712,7 @@ sev_guest_init(const char *id)
 {
     SevGuestState *sev;
     char *devname;
-    int ret, fw_error;
+    int ret, fw_error, cmd;
     uint32_t ebx;
     uint32_t host_cbitpos;
     struct sev_user_data_status status = {};
@@ -745,8 +773,20 @@ sev_guest_init(const char *id)
     sev->api_major = status.api_major;
     sev->api_minor = status.api_minor;
 
+    if (sev_es_enabled()) {
+        if (!(status.flags & SEV_STATUS_FLAGS_CONFIG_ES)) {
+            error_report("%s: guest policy requires SEV-ES, but "
+                         "host SEV-ES support unavailable",
+                         __func__);
+            goto err;
+        }
+        cmd = KVM_SEV_ES_INIT;
+    } else {
+        cmd = KVM_SEV_INIT;
+    }
+
     trace_kvm_sev_init();
-    ret = sev_ioctl(sev->sev_fd, KVM_SEV_INIT, NULL, &fw_error);
+    ret = sev_ioctl(sev->sev_fd, cmd, NULL, &fw_error);
     if (ret) {
         error_report("%s: failed to initialize ret=%d fw_error=%d '%s'",
                      __func__, ret, fw_error, fw_error_to_str(fw_error));
diff --git a/target/i386/sev_i386.h b/target/i386/sev_i386.h
index 4db6960f60..4f9a5e9b21 100644
--- a/target/i386/sev_i386.h
+++ b/target/i386/sev_i386.h
@@ -29,6 +29,7 @@
 #define SEV_POLICY_SEV          0x20
 
 extern bool sev_enabled(void);
+extern bool sev_es_enabled(void);
 extern uint64_t sev_get_me_mask(void);
 extern SevInfo *sev_get_info(void);
 extern uint32_t sev_get_cbit_position(void);

From patchwork Fri Sep 25 19:03:37 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Tom Lendacky <thomas.lendacky@amd.com>
X-Patchwork-Id: 11800725
Return-Path: <SRS0=qKOj=DC=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 5D38F92C
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 25 Sep 2020 20:38:50 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 12A5F20838
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 25 Sep 2020 20:38:50 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (1024-bit key) header.d=amdcloud.onmicrosoft.com
 header.i=@amdcloud.onmicrosoft.com header.b="a8dsyG4v"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728692AbgIYUis (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Fri, 25 Sep 2020 16:38:48 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:54744 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728718AbgIYUif (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 25 Sep 2020 16:38:35 -0400
Received: from NAM11-CO1-obe.outbound.protection.outlook.com
 (mail-co1nam11on2060e.outbound.protection.outlook.com
 [IPv6:2a01:111:f400:7eab::60e])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id D1293C0613E2
        for <kvm@vger.kernel.org>; Fri, 25 Sep 2020 12:19:44 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=mJfBWCAfHmmUL1GzvaL+BulGqmFPS1Ie8YvidOfVjmQh/BUzeue2J7kCmh8zWJ9G1LcePAP/mcm6hi7nDS4qOCySen0ZaQWswp81iXawCODIanGkikJdC/W5C+MYME9yHfq0sQi69urXvliXFft/ucTA/i5DK1HRMG+AdtPvP6wfi1HzLqVYItlM3fLwaVqHEXL0q5S9OP3Gq7rtwy3ZmaZX3rr+QGU/dPpVhMhSFIgPiEJDn6i4jqDgMYVs4s9L+ttFGzS+xKo9KGj5x63G+VyHL2hzti1f/7WhoQ90TACqzzOb95ypp8r34f4B/3hujCn3eP3BYQeJ+nWWVZWFQg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=lxrwlL0cR26elBTmRMEa1mNxtYDzDEpSnRjqv5XNVuE=;
 b=fV7mdok+2GM0UMxBV6m5s2jPnCEua2YNpZ4WhBajamgfGE/ZaNl3Sv6Mt6WZZdSeB0avBR5Idt4yg7X1hUmuIknkWIDRVnt6kNGzxV7C+RkKAtVJSKZ95K3aH47BtIonHMMzUMYeV7ybm2X3E2Su8i62trsRKezATKxCePET9a76IdJSO1sgd11r2htNGMQYc70JZ9w0eNTRLwzMPcEf1B7MTbYFzLSIxE8vm2vnjWxS9WNDF/4AGmVJ+UPONnxRG1NGprsfSQyNLBi9uF7pKpePG414HHBJAhxsSw2C7A0qjrJu2zEr/1u/1VeCPX+0tisVWQq0w+bVy1u9/raCXA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=lxrwlL0cR26elBTmRMEa1mNxtYDzDEpSnRjqv5XNVuE=;
 b=a8dsyG4vjzq23k4y8F6Uxc7D8VSTyyZZ0RFm/XG8ALpWPVBCbwFcBz2/jWv2JzqQLQcjsZ4p681J9w+Ka4ADjjAyBhUrcqTBXztjWB5rylFAoxqVg9c+RfJL+LafcpRK8cDdryxKZmNzmpykjJImqjm7fFQYGu8KDrw2kzTvZ40=
Authentication-Results: nongnu.org; dkim=none (message not signed)
 header.d=none;nongnu.org; dmarc=none action=none header.from=amd.com;
Received: from DM5PR12MB1355.namprd12.prod.outlook.com (2603:10b6:3:6e::7) by
 DM6PR12MB4297.namprd12.prod.outlook.com (2603:10b6:5:211::20) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.3412.22; Fri, 25 Sep 2020 19:04:40 +0000
Received: from DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346]) by DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346%3]) with mapi id 15.20.3391.024; Fri, 25 Sep 2020
 19:04:40 +0000
From: Tom Lendacky <thomas.lendacky@amd.com>
To: qemu-devel@nongnu.org, kvm@vger.kernel.org
Cc: Marcel Apfelbaum <marcel.apfelbaum@gmail.com>,
        Paolo Bonzini <pbonzini@redhat.com>,
        "Dr. David Alan Gilbert" <dgilbert@redhat.com>,
        Eduardo Habkost <ehabkost@redhat.com>,
        Richard Henderson <rth@twiddle.net>,
        Connor Kuehl <ckuehl@redhat.com>,
        Brijesh Singh <brijesh.singh@amd.com>,
        Jiri Slaby <jslaby@suse.cz>,
        Marcelo Tosatti <mtosatti@redhat.com>,
        "Michael S. Tsirkin" <mst@redhat.com>
Subject: [PATCH v4 3/6] sev/i386: Allow AP booting under SEV-ES
Date: Fri, 25 Sep 2020 14:03:37 -0500
Message-Id: 
 <1b65b7dfaceb5c06d3288bd47e712d2eb15a1d1d.1601060620.git.thomas.lendacky@amd.com>
X-Mailer: git-send-email 2.28.0
In-Reply-To: <cover.1601060620.git.thomas.lendacky@amd.com>
References: <cover.1601060620.git.thomas.lendacky@amd.com>
X-ClientProxiedBy: DM5PR2001CA0010.namprd20.prod.outlook.com
 (2603:10b6:4:16::20) To DM5PR12MB1355.namprd12.prod.outlook.com
 (2603:10b6:3:6e::7)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from tlendack-t1.amd.com (165.204.77.1) by
 DM5PR2001CA0010.namprd20.prod.outlook.com (2603:10b6:4:16::20) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3412.20 via Frontend
 Transport; Fri, 25 Sep 2020 19:04:39 +0000
X-Mailer: git-send-email 2.28.0
X-Originating-IP: [165.204.77.1]
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 1d8d30ae-ce3f-4f1b-6046-08d86185dae2
X-MS-TrafficTypeDiagnostic: DM6PR12MB4297:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <DM6PR12MB4297A9FAB5A9D64DA227AD07EC360@DM6PR12MB4297.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:224;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 nBO++Vd/NNUVYcINUkmgTye0bumHN5iSr0FWWLFtjV8Q6/3gd+oiyRnjP86UiuzoNCyCh7d3eKoXpxjFQKHpk3wjzJOpBPUyPmCoCQRA1PDb+OHAO9Y8fL3QdchRZx0YCPc/pIYZvA6QmqmAXL04s2f7TgHNyDzGdEP4iYHowq8bFMumd56Ce4oihSGpc5W9//Qptrx4+jqNq/4ZsYClzixk9UiB8eLT2hiaxiMjPy0xClSBpnJwtE/8qu8Zx7Y0rw+60S1+MZGpzDe8Iq3rGOkN+Wpz5TWVcIX0STX6u6n75wTtR+N0HIkrMsZeTD8r8CmVMa2l5mbpeNNy8UWI+tXVWDcC1Vpzg73hZIvYs0bt1Sfu6AUS357rF94433+Z
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DM5PR12MB1355.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(346002)(136003)(396003)(376002)(39860400002)(26005)(7416002)(956004)(186003)(16526019)(54906003)(2616005)(6486002)(66556008)(66946007)(36756003)(8936002)(66476007)(86362001)(316002)(478600001)(7696005)(52116002)(2906002)(5660300002)(4326008)(83380400001)(8676002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 unr8yxFOOszkFEUKauwYnQjAxgZ2vpk3h1osE8PKCmgFSb8CZ50q5il7F/9n21nTeV5O6uDR12Vv+lsd8NcPVVi66qbiN9Vk+VX+uZfwoXa1+H/fUqMcQsrelvS+JocMPgKz/aWhWlBddIShrfkvGm9NUIt41ftkfoO1tolLmreYJl0ORLSmi0gz52OT19Bwg2J6bjkksnZG9moC43N+SnoeQxzeO0nef/azPaguq4M+eQpNEZtOV6rhxFtqxb9KYWM6/HQOeKvr8775YkecUiNRpgplyIOAY5TPUcLgKitvoz+veLWkHvRMcIjtTKz63AdE/y7rOdU72ptbv3gJjOHx5kH4U/w66X6kHYAn+3oSlHnTk4gQrzOg66xx0sCxElSPCsiHDX7BBz7iaJn+/ch/yAMw4x7AnCATUCJyiT3co0uSUNpUaE0lz+XoshweBRs3HtoZwahiEEAgW/nEoFZHwhAyVnztmWvKrLkXQGa/ybiGU1VS0XVM+R45ibD30JOir28KZaSvxeN31psJsZALtmha8iHyx0BGa747x1aNkYoAejoKzcrCyQjg8BiRgAQsnbMjGP1JdznBpNkiFkgf4743byAvgeBep/T6RMQke5Z1i5mW+Z54MyAwC1aSHpgH/GQCkfUEkR8Sh/dWDA==
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 1d8d30ae-ce3f-4f1b-6046-08d86185dae2
X-MS-Exchange-CrossTenant-AuthSource: DM5PR12MB1355.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Sep 2020 19:04:40.6367
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 6FIRNGMim4Uo70FpMxpskNcONnQ/HrVlwwvY4xLOZymaeqoCybGwBoWiewoCAyf8Izb6ELdn1xx8OrnA7Qx9pw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM6PR12MB4297
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Tom Lendacky <thomas.lendacky@amd.com>

When SEV-ES is enabled, it is not possible modify the guests register
state after it has been initially created, encrypted and measured.

Normally, an INIT-SIPI-SIPI request is used to boot the AP. However, the
hypervisor cannot emulate this because it cannot update the AP register
state. For the very first boot by an AP, the reset vector CS segment
value and the EIP value must be programmed before the register has been
encrypted and measured.

Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
---
 accel/kvm/kvm-all.c    | 64 ++++++++++++++++++++++++++++++++++++++++++
 accel/stubs/kvm-stub.c |  5 ++++
 hw/i386/pc_sysfw.c     | 10 ++++++-
 include/sysemu/kvm.h   | 16 +++++++++++
 include/sysemu/sev.h   |  3 ++
 target/i386/kvm.c      |  2 ++
 target/i386/sev.c      | 59 ++++++++++++++++++++++++++++++++++++++
 7 files changed, 158 insertions(+), 1 deletion(-)

diff --git a/accel/kvm/kvm-all.c b/accel/kvm/kvm-all.c
index ad8b315b35..08b66642dd 100644
--- a/accel/kvm/kvm-all.c
+++ b/accel/kvm/kvm-all.c
@@ -39,6 +39,7 @@
 #include "qemu/main-loop.h"
 #include "trace.h"
 #include "hw/irq.h"
+#include "sysemu/kvm.h"
 #include "sysemu/sev.h"
 #include "qapi/visitor.h"
 #include "qapi/qapi-types-common.h"
@@ -120,6 +121,12 @@ struct KVMState
     /* memory encryption */
     void *memcrypt_handle;
     int (*memcrypt_encrypt_data)(void *handle, uint8_t *ptr, uint64_t len);
+    int (*memcrypt_save_reset_vector)(void *handle, void *flash_ptr,
+                                      uint64_t flash_size, uint32_t *addr);
+
+    uint32_t reset_cs;
+    uint32_t reset_ip;
+    bool reset_data_valid;
 
     /* For "info mtree -f" to tell if an MR is registered in KVM */
     int nr_as;
@@ -239,6 +246,62 @@ int kvm_memcrypt_encrypt_data(uint8_t *ptr, uint64_t len)
     return 1;
 }
 
+void kvm_memcrypt_set_reset_vector(CPUState *cpu)
+{
+    X86CPU *x86;
+    CPUX86State *env;
+
+    /* Only update if we have valid reset information */
+    if (!kvm_state->reset_data_valid) {
+        return;
+    }
+
+    /* Do not update the BSP reset state */
+    if (cpu->cpu_index == 0) {
+        return;
+    }
+
+    x86 = X86_CPU(cpu);
+    env = &x86->env;
+
+    cpu_x86_load_seg_cache(env, R_CS, 0xf000, kvm_state->reset_cs, 0xffff,
+                           DESC_P_MASK | DESC_S_MASK | DESC_CS_MASK |
+                           DESC_R_MASK | DESC_A_MASK);
+
+    env->eip = kvm_state->reset_ip;
+}
+
+int kvm_memcrypt_save_reset_vector(void *flash_ptr, uint64_t flash_size)
+{
+    CPUState *cpu;
+    uint32_t addr;
+    int ret;
+
+    if (kvm_memcrypt_enabled() &&
+        kvm_state->memcrypt_save_reset_vector) {
+
+        addr = 0;
+        ret = kvm_state->memcrypt_save_reset_vector(kvm_state->memcrypt_handle,
+                                                    flash_ptr, flash_size,
+                                                    &addr);
+        if (ret) {
+            return ret;
+        }
+
+        if (addr) {
+            kvm_state->reset_cs = addr & 0xffff0000;
+            kvm_state->reset_ip = addr & 0x0000ffff;
+            kvm_state->reset_data_valid = true;
+
+            CPU_FOREACH(cpu) {
+                kvm_memcrypt_set_reset_vector(cpu);
+            }
+        }
+    }
+
+    return 0;
+}
+
 /* Called with KVMMemoryListener.slots_lock held */
 static KVMSlot *kvm_get_free_slot(KVMMemoryListener *kml)
 {
@@ -2193,6 +2256,7 @@ static int kvm_init(MachineState *ms)
         }
 
         kvm_state->memcrypt_encrypt_data = sev_encrypt_data;
+        kvm_state->memcrypt_save_reset_vector = sev_es_save_reset_vector;
     }
 
     ret = kvm_arch_init(ms, s);
diff --git a/accel/stubs/kvm-stub.c b/accel/stubs/kvm-stub.c
index 82f118d2df..3aece9b513 100644
--- a/accel/stubs/kvm-stub.c
+++ b/accel/stubs/kvm-stub.c
@@ -114,6 +114,11 @@ int kvm_memcrypt_encrypt_data(uint8_t *ptr, uint64_t len)
   return 1;
 }
 
+int kvm_memcrypt_save_reset_vector(void *flash_ptr, uint64_t flash_size)
+{
+    return -ENOSYS;
+}
+
 #ifndef CONFIG_USER_ONLY
 int kvm_irqchip_add_msi_route(KVMState *s, int vector, PCIDevice *dev)
 {
diff --git a/hw/i386/pc_sysfw.c b/hw/i386/pc_sysfw.c
index b6c0822fe3..321ff94261 100644
--- a/hw/i386/pc_sysfw.c
+++ b/hw/i386/pc_sysfw.c
@@ -156,7 +156,8 @@ static void pc_system_flash_map(PCMachineState *pcms,
     PFlashCFI01 *system_flash;
     MemoryRegion *flash_mem;
     void *flash_ptr;
-    int ret, flash_size;
+    uint64_t flash_size;
+    int ret;
 
     assert(PC_MACHINE_GET_CLASS(pcms)->pci_enabled);
 
@@ -204,6 +205,13 @@ static void pc_system_flash_map(PCMachineState *pcms,
             if (kvm_memcrypt_enabled()) {
                 flash_ptr = memory_region_get_ram_ptr(flash_mem);
                 flash_size = memory_region_size(flash_mem);
+
+                ret = kvm_memcrypt_save_reset_vector(flash_ptr, flash_size);
+                if (ret) {
+                    error_report("failed to locate and/or save reset vector");
+                    exit(1);
+                }
+
                 ret = kvm_memcrypt_encrypt_data(flash_ptr, flash_size);
                 if (ret) {
                     error_report("failed to encrypt pflash rom");
diff --git a/include/sysemu/kvm.h b/include/sysemu/kvm.h
index 5bbea53883..b7ff481d61 100644
--- a/include/sysemu/kvm.h
+++ b/include/sysemu/kvm.h
@@ -254,6 +254,22 @@ bool kvm_memcrypt_enabled(void);
  */
 int kvm_memcrypt_encrypt_data(uint8_t *ptr, uint64_t len);
 
+/**
+ * kvm_memcrypt_set_reset_vector - sets the CS/IP value for the AP if SEV-ES
+ *                                 is active.
+ */
+void kvm_memcrypt_set_reset_vector(CPUState *cpu);
+
+/**
+ * kvm_memcrypt_save_reset_vector - locates and saves the reset vector to be
+ *                                  used as the initial CS/IP value for APs
+ *                                  if SEV-ES is active.
+ *
+ * Return: 1 SEV-ES is active and failed to locate a valid reset vector
+ *         0 SEV-ES is not active or successfully located and saved the
+ *           reset vector address
+ */
+int kvm_memcrypt_save_reset_vector(void *flash_prt, uint64_t flash_size);
 
 #ifdef NEED_CPU_H
 #include "cpu.h"
diff --git a/include/sysemu/sev.h b/include/sysemu/sev.h
index 98c1ec8d38..5198e5a621 100644
--- a/include/sysemu/sev.h
+++ b/include/sysemu/sev.h
@@ -18,4 +18,7 @@
 
 void *sev_guest_init(const char *id);
 int sev_encrypt_data(void *handle, uint8_t *ptr, uint64_t len);
+int sev_es_save_reset_vector(void *handle, void *flash_ptr,
+                             uint64_t flash_size, uint32_t *addr);
+
 #endif
diff --git a/target/i386/kvm.c b/target/i386/kvm.c
index 9efb07e7c8..7c2a3a123b 100644
--- a/target/i386/kvm.c
+++ b/target/i386/kvm.c
@@ -1913,6 +1913,8 @@ void kvm_arch_reset_vcpu(X86CPU *cpu)
     }
     /* enabled by default */
     env->poll_control_msr = 1;
+
+    kvm_memcrypt_set_reset_vector(CPU(cpu));
 }
 
 void kvm_arch_do_init_vcpu(X86CPU *cpu)
diff --git a/target/i386/sev.c b/target/i386/sev.c
index 0d4bd3cd75..9c081173db 100644
--- a/target/i386/sev.c
+++ b/target/i386/sev.c
@@ -22,6 +22,7 @@
 #include "qom/object_interfaces.h"
 #include "qemu/base64.h"
 #include "qemu/module.h"
+#include "qemu/uuid.h"
 #include "sysemu/kvm.h"
 #include "sev_i386.h"
 #include "sysemu/sysemu.h"
@@ -69,6 +70,21 @@ struct SevGuestState {
 #define DEFAULT_GUEST_POLICY    0x1 /* disable debug */
 #define DEFAULT_SEV_DEVICE      "/dev/sev"
 
+/* SEV Information Block GUID = 00f771de-1a7e-4fcb-890e-68c77e2fb44e */
+static const QemuUUID sev_info_block_guid_le = {
+    .data = UUID_LE(0x00f771de, 0x1a7e, 0x4fcb,
+                    0x89, 0x0e, 0x68, 0xc7, 0x7e, 0x2f, 0xb4, 0x4e),
+};
+
+typedef struct __attribute__((__packed__)) SevInfoBlock {
+    /* SEV-ES Reset Vector Address */
+    uint32_t reset_addr;
+
+    /* SEV Information Block size and GUID */
+    uint16_t size;
+    QemuUUID guid;
+} SevInfoBlock;
+
 static SevGuestState *sev_guest;
 static Error *sev_mig_blocker;
 
@@ -831,6 +847,49 @@ sev_encrypt_data(void *handle, uint8_t *ptr, uint64_t len)
     return 0;
 }
 
+int
+sev_es_save_reset_vector(void *handle, void *flash_ptr, uint64_t flash_size,
+                         uint32_t *addr)
+{
+    QemuUUID *info_guid;
+    SevInfoBlock *info;
+
+    assert(handle);
+
+    /*
+     * Initialize the address to zero. An address of zero with a successful
+     * return code indicates that SEV-ES is not active.
+     */
+    *addr = 0;
+    if (!sev_es_enabled()) {
+        return 0;
+    }
+
+    /*
+     * Extract the AP reset vector for SEV-ES guests by locating the SEV GUID.
+     * The SEV GUID is located 32 bytes from the end of the flash. Use this
+     * address to base the SEV information block.
+     *
+     * Because SevInfoBlock is a packed structure, operate on the GUID
+     * directly to avoid compiler warnings/errors.
+     */
+    info_guid = flash_ptr + flash_size - 0x20 - sizeof(*info_guid);
+    if (!qemu_uuid_is_equal(info_guid, &sev_info_block_guid_le)) {
+        error_report("SEV information block not found in pflash rom");
+        return 1;
+    }
+
+    info = flash_ptr + flash_size - 0x20 - sizeof(*info);
+    if (!info->reset_addr) {
+        error_report("SEV-ES reset address is zero");
+        return 1;
+    }
+
+    *addr = info->reset_addr;
+
+    return 0;
+}
+
 static void
 sev_register_types(void)
 {

From patchwork Fri Sep 25 19:03:38 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Tom Lendacky <thomas.lendacky@amd.com>
X-Patchwork-Id: 11800757
Return-Path: <SRS0=qKOj=DC=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 18B4F112E
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 25 Sep 2020 21:08:47 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id E939E23730
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 25 Sep 2020 21:08:46 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (1024-bit key) header.d=amdcloud.onmicrosoft.com
 header.i=@amdcloud.onmicrosoft.com header.b="1NMYsxHO"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728795AbgIYVIg (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Fri, 25 Sep 2020 17:08:36 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:59446 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726731AbgIYVIf (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 25 Sep 2020 17:08:35 -0400
Received: from NAM11-BN8-obe.outbound.protection.outlook.com
 (mail-bn8nam11on2062e.outbound.protection.outlook.com
 [IPv6:2a01:111:f400:7eae::62e])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 0C5D7C0613D6
        for <kvm@vger.kernel.org>; Fri, 25 Sep 2020 12:10:22 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=X/Um1p3AovVydtswi1qLrr150t3z4GQQmCNZcDBDYXXwg7VyA/Z5hBWG2buJ14FeWJCkj9dmRw7PIs3D1DLxqxUvFkVBdm4eXSJMkBm5ihGOAAJaijnfroZcsY9nlk30aOrm6oErhW4pQ64nNhJouFcDgbV55+Pl0gy3VFiKxZwoE5/qHDaNQ09XTGOqHTzDoPcFfaUak8vy7K+PlyKmxPYHI8TRfI7aRTFvKAjRlW3Q2E/SDr4wG0wF2RjmLnQp6QmZqmdFh+sXeeC4TS4uZKIwbdbBt8hsy5elCIHl7knrHritTuGQ+PoyYAKqxhv/Pj/m6pnqcFJgvLCLjIC6pA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=TTsr4nd8RWrfRb11z5zIPJohWSIyFWKOcjm5SrLAVyc=;
 b=FUwOmjDfAGl0ITLro8j8A95v0NicFGye1fFPGAwTxNLEcgUeklajl0sldmEecyke0V9oaqxzHS679rLv/CglBaVOhiNnrL2FCvxEBy8dcXnJt4L/fX+fZSxPu4IXP4CypJotfZrawXhECOZ9f5hHG6dJWTchSoV70U52v3uBxdP1P4ihYB+Ndm2M/NWP5BKhnb2urEUzdXbjoxN5ETdVrTjo+lI1WFu8R4NaidzuKqP8A1xwDmlUU9whlN1mIlYgCXyysqaxuhkrYGLB+pfHefmRHddbyFEmik0K1V1Uq2ZN7PgQycJC3b8RYIpGVVJjEuN6MXkWNMONNk3CGQ4d+w==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=TTsr4nd8RWrfRb11z5zIPJohWSIyFWKOcjm5SrLAVyc=;
 b=1NMYsxHOiUbIikt55f078kcTqSFipLr61pi6BgDvEFTLklRFGtxzc4zxWY6rVD9brVNghH2IAwCRoIkGhCZ2gqzXAIUmhrztQhpzDL2fVzO3cJXCZP+jMudJbAjgCOQGWtvhyAGNzi0UWOXsBRQqcTBTcSIlzNooRCZYUxNtsQk=
Authentication-Results: nongnu.org; dkim=none (message not signed)
 header.d=none;nongnu.org; dmarc=none action=none header.from=amd.com;
Received: from DM5PR12MB1355.namprd12.prod.outlook.com (2603:10b6:3:6e::7) by
 DM6PR12MB4297.namprd12.prod.outlook.com (2603:10b6:5:211::20) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.3412.22; Fri, 25 Sep 2020 19:04:48 +0000
Received: from DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346]) by DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346%3]) with mapi id 15.20.3391.024; Fri, 25 Sep 2020
 19:04:48 +0000
From: Tom Lendacky <thomas.lendacky@amd.com>
To: qemu-devel@nongnu.org, kvm@vger.kernel.org
Cc: Marcel Apfelbaum <marcel.apfelbaum@gmail.com>,
        Paolo Bonzini <pbonzini@redhat.com>,
        "Dr. David Alan Gilbert" <dgilbert@redhat.com>,
        Eduardo Habkost <ehabkost@redhat.com>,
        Richard Henderson <rth@twiddle.net>,
        Connor Kuehl <ckuehl@redhat.com>,
        Brijesh Singh <brijesh.singh@amd.com>,
        Jiri Slaby <jslaby@suse.cz>,
        Marcelo Tosatti <mtosatti@redhat.com>,
        "Michael S. Tsirkin" <mst@redhat.com>,
        Peter Maydell <peter.maydell@linaro.org>,
        Aurelien Jarno <aurelien@aurel32.net>,
        Jiaxun Yang <jiaxun.yang@flygoat.com>,
        Aleksandar Rikalo <aleksandar.rikalo@syrmia.com>,
        David Gibson <david@gibson.dropbear.id.au>,
        David Hildenbrand <david@redhat.com>
Subject: [PATCH v4 4/6] sev/i386: Don't allow a system reset under an SEV-ES
 guest
Date: Fri, 25 Sep 2020 14:03:38 -0500
Message-Id: 
 <c40de4c1bf4d14d60942fba86b2827543c19374a.1601060620.git.thomas.lendacky@amd.com>
X-Mailer: git-send-email 2.28.0
In-Reply-To: <cover.1601060620.git.thomas.lendacky@amd.com>
References: <cover.1601060620.git.thomas.lendacky@amd.com>
X-ClientProxiedBy: DM5PR20CA0044.namprd20.prod.outlook.com
 (2603:10b6:3:13d::30) To DM5PR12MB1355.namprd12.prod.outlook.com
 (2603:10b6:3:6e::7)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from tlendack-t1.amd.com (165.204.77.1) by
 DM5PR20CA0044.namprd20.prod.outlook.com (2603:10b6:3:13d::30) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3412.20 via Frontend
 Transport; Fri, 25 Sep 2020 19:04:47 +0000
X-Mailer: git-send-email 2.28.0
X-Originating-IP: [165.204.77.1]
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: eda5e69a-bde3-45dd-b25e-08d86185df89
X-MS-TrafficTypeDiagnostic: DM6PR12MB4297:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <DM6PR12MB4297D0B1B35925344B131D56EC360@DM6PR12MB4297.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:1002;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 QWklHsCGlz2k1irQtRKW4+XTWpwBpR1EYN4s+8W694UxUjMOERw5Uvnu3oYeNrsMozBRyCXb+nti0uOo74GYqehrlfsHwKCky8AGJcu176+Ecstj5P8w280C4axZSi0vyaNI5pqKIFDECJzVXOm+wN+/cccMpcccI76XsK7KJzejcQvJyoKnLeiVrlI6Z8jPyHxUTld0x+syCSDSb+uvM8bV8HmjCWTuevWvYrDp4Pd8Szy+Cma19yKAtTlvX0zMol2y+qzfT85CwZ8mSWosdnyQ3TAW8sYipsnKQzBiE0vyX/HfPGwvIg1L2SVFbJjS8LVuiYWmLTiCITbkpjuKyiI91EnD8xaxTyMNs5NH0X0+G4Q1X2dtu0gn4RKnufFi
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DM5PR12MB1355.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(346002)(136003)(396003)(376002)(39860400002)(26005)(7416002)(956004)(186003)(6666004)(16526019)(54906003)(2616005)(6486002)(66556008)(66946007)(36756003)(8936002)(66476007)(86362001)(316002)(478600001)(7696005)(52116002)(2906002)(5660300002)(4326008)(83380400001)(8676002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 erUX9xP7UvcEAtZoZrbp6OP7DMItOjj6XR3zcgR+pbF7q9Xi3F5wsadC8Ejb+xI5rq81XpyYgcQVpAVulheIIJoZ46b2bU2pQt8Xi6TtfrROvBppnXrkxFQuYenhfcTDHFawOCZJmhxTn8qO7QzCMqmSGZ8ljbANYHe2QF/Nwt7n9iFXKY6WjOx6W7EokcbduQR6LsrmN2IGlEtFzz5a7jqUYThkXk3I9BZU5vNOItmXZYFifkMngATf1DbRTtFTt1N2eGOJIRMOxEzG/YR6xFkag+JJlJhqxrvIQ38aqzA7w0jjdxuIt8JIqcW6Zf4+y+AV2+xpVA8RnIl9zhvHtqca0u2cp0yrnuCedMtuzkh/XBl2rKORYOAd+2Kyw9ZSJ+EKT4rr+Hg2zXk7ie8vRQ2Dsh41q6l++SbHFrHumYazStHbnHbKGfJXxD10mOUSCzG/e70Y42CK44hGWz1c0fQGlJRhUdAeoRYubeE1qZSmmItZS+FDfOST/c/ldfDTp+6WClr/pcIus7Wr1QbSbAGI32XChldqJFEjuWOLbqL0xc27BMyBAt9ZDaGw5P51w0IzIXoMQOpp7OqtTvFK0e+n3aAArPs4UVFrymVGhBZqe0+IW//wc4UiytqyhaCci6uyTmDOp/Htle25CZ/qmg==
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 eda5e69a-bde3-45dd-b25e-08d86185df89
X-MS-Exchange-CrossTenant-AuthSource: DM5PR12MB1355.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Sep 2020 19:04:48.4381
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 aPxYTdMnMaOIY4Kys3FEJCjFTRyhX3KYVJEsEJ2gFtpKDiarbQuRGAlLUyuzo5TogATHVzdqxpzRJOiQuZv44A==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM6PR12MB4297
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Tom Lendacky <thomas.lendacky@amd.com>

An SEV-ES guest does not allow register state to be altered once it has
been measured. When an SEV-ES guest issues a reboot command, Qemu will
reset the vCPU state and resume the guest. This will cause failures under
SEV-ES. Prevent that from occuring by introducing an arch-specific
callback that returns a boolean indicating whether vCPUs are resettable.

Cc: Peter Maydell <peter.maydell@linaro.org>
Cc: Aurelien Jarno <aurelien@aurel32.net>
Cc: Jiaxun Yang <jiaxun.yang@flygoat.com>
Cc: Aleksandar Rikalo <aleksandar.rikalo@syrmia.com>
Cc: David Gibson <david@gibson.dropbear.id.au>
Cc: David Hildenbrand <david@redhat.com>
Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
---
 accel/kvm/kvm-all.c       |  5 +++++
 include/sysemu/cpus.h     |  2 ++
 include/sysemu/hw_accel.h |  5 +++++
 include/sysemu/kvm.h      | 10 ++++++++++
 softmmu/cpus.c            |  5 +++++
 softmmu/vl.c              |  5 ++++-
 target/arm/kvm.c          |  5 +++++
 target/i386/kvm.c         |  6 ++++++
 target/mips/kvm.c         |  5 +++++
 target/ppc/kvm.c          |  5 +++++
 target/s390x/kvm.c        |  5 +++++
 11 files changed, 57 insertions(+), 1 deletion(-)

diff --git a/accel/kvm/kvm-all.c b/accel/kvm/kvm-all.c
index 08b66642dd..a161fff813 100644
--- a/accel/kvm/kvm-all.c
+++ b/accel/kvm/kvm-all.c
@@ -2388,6 +2388,11 @@ void kvm_flush_coalesced_mmio_buffer(void)
     s->coalesced_flush_in_progress = false;
 }
 
+bool kvm_cpu_check_are_resettable(void)
+{
+    return kvm_arch_cpu_check_are_resettable();
+}
+
 static void do_kvm_cpu_synchronize_state(CPUState *cpu, run_on_cpu_data arg)
 {
     if (!cpu->vcpu_dirty) {
diff --git a/include/sysemu/cpus.h b/include/sysemu/cpus.h
index 3c1da6a018..d3e6cdf126 100644
--- a/include/sysemu/cpus.h
+++ b/include/sysemu/cpus.h
@@ -24,6 +24,8 @@ void dump_drift_info(void);
 void qemu_cpu_kick_self(void);
 void qemu_timer_notify_cb(void *opaque, QEMUClockType type);
 
+bool cpus_are_resettable(void);
+
 void cpu_synchronize_all_states(void);
 void cpu_synchronize_all_post_reset(void);
 void cpu_synchronize_all_post_init(void);
diff --git a/include/sysemu/hw_accel.h b/include/sysemu/hw_accel.h
index e128f8b06b..6d387226d4 100644
--- a/include/sysemu/hw_accel.h
+++ b/include/sysemu/hw_accel.h
@@ -17,6 +17,11 @@
 #include "sysemu/hvf.h"
 #include "sysemu/whpx.h"
 
+static inline bool cpu_check_are_resettable(void)
+{
+    return kvm_enabled() ? kvm_cpu_check_are_resettable() : true;
+}
+
 static inline void cpu_synchronize_state(CPUState *cpu)
 {
     if (kvm_enabled()) {
diff --git a/include/sysemu/kvm.h b/include/sysemu/kvm.h
index b7ff481d61..51a12c83ed 100644
--- a/include/sysemu/kvm.h
+++ b/include/sysemu/kvm.h
@@ -581,4 +581,14 @@ int kvm_get_max_memslots(void);
 /* Notify resamplefd for EOI of specific interrupts. */
 void kvm_resample_fd_notify(int gsi);
 
+/**
+ * kvm_cpu_check_are_resettable - return whether CPUs can be reset
+ *
+ * Returns: true: CPUs are resettable
+ *          false: CPUs are not resettable
+ */
+bool kvm_cpu_check_are_resettable(void);
+
+bool kvm_arch_cpu_check_are_resettable(void);
+
 #endif
diff --git a/softmmu/cpus.c b/softmmu/cpus.c
index e3b98065c9..ee9c46527c 100644
--- a/softmmu/cpus.c
+++ b/softmmu/cpus.c
@@ -927,6 +927,11 @@ void hw_error(const char *fmt, ...)
     abort();
 }
 
+bool cpus_are_resettable(void)
+{
+    return cpu_check_are_resettable();
+}
+
 void cpu_synchronize_all_states(void)
 {
     CPUState *cpu;
diff --git a/softmmu/vl.c b/softmmu/vl.c
index f7b103467c..1f54c6b416 100644
--- a/softmmu/vl.c
+++ b/softmmu/vl.c
@@ -1475,7 +1475,10 @@ void qemu_system_guest_crashloaded(GuestPanicInformation *info)
 
 void qemu_system_reset_request(ShutdownCause reason)
 {
-    if (no_reboot && reason != SHUTDOWN_CAUSE_SUBSYSTEM_RESET) {
+    if (!cpus_are_resettable()) {
+        error_report("cpus are not resettable, terminating");
+        shutdown_requested = reason;
+    } else if (no_reboot && reason != SHUTDOWN_CAUSE_SUBSYSTEM_RESET) {
         shutdown_requested = reason;
     } else {
         reset_requested = reason;
diff --git a/target/arm/kvm.c b/target/arm/kvm.c
index 0dcb9bfe13..f9584a1425 100644
--- a/target/arm/kvm.c
+++ b/target/arm/kvm.c
@@ -1029,3 +1029,8 @@ int kvm_arch_msi_data_to_gsi(uint32_t data)
 {
     return (data - 32) & 0xffff;
 }
+
+bool kvm_arch_cpu_check_are_resettable(void)
+{
+    return true;
+}
diff --git a/target/i386/kvm.c b/target/i386/kvm.c
index 7c2a3a123b..eefd1a11b6 100644
--- a/target/i386/kvm.c
+++ b/target/i386/kvm.c
@@ -26,6 +26,7 @@
 #include "sysemu/kvm_int.h"
 #include "sysemu/runstate.h"
 #include "kvm_i386.h"
+#include "sev_i386.h"
 #include "hyperv.h"
 #include "hyperv-proto.h"
 
@@ -4738,3 +4739,8 @@ bool kvm_has_waitpkg(void)
 {
     return has_msr_umwait;
 }
+
+bool kvm_arch_cpu_check_are_resettable(void)
+{
+    return !sev_es_enabled();
+}
diff --git a/target/mips/kvm.c b/target/mips/kvm.c
index 72637a1e02..ad612e74c1 100644
--- a/target/mips/kvm.c
+++ b/target/mips/kvm.c
@@ -1296,3 +1296,8 @@ int mips_kvm_type(MachineState *machine, const char *vm_type)
 
     return -1;
 }
+
+bool kvm_arch_cpu_check_are_resettable(void)
+{
+    return true;
+}
diff --git a/target/ppc/kvm.c b/target/ppc/kvm.c
index d85ba8ffe0..d9a4750324 100644
--- a/target/ppc/kvm.c
+++ b/target/ppc/kvm.c
@@ -2948,3 +2948,8 @@ void kvmppc_svm_off(Error **errp)
         error_setg_errno(errp, -rc, "KVM_PPC_SVM_OFF ioctl failed");
     }
 }
+
+bool kvm_arch_cpu_check_are_resettable(void)
+{
+    return true;
+}
diff --git a/target/s390x/kvm.c b/target/s390x/kvm.c
index f2f75d2a57..f68210373f 100644
--- a/target/s390x/kvm.c
+++ b/target/s390x/kvm.c
@@ -2543,3 +2543,8 @@ void kvm_s390_stop_interrupt(S390CPU *cpu)
 
     kvm_s390_vcpu_interrupt(cpu, &irq);
 }
+
+bool kvm_arch_cpu_check_are_resettable(void)
+{
+    return true;
+}

From patchwork Fri Sep 25 19:03:39 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Tom Lendacky <thomas.lendacky@amd.com>
X-Patchwork-Id: 11800727
Return-Path: <SRS0=qKOj=DC=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id F283F92C
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 25 Sep 2020 20:43:41 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id BD09A21D42
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 25 Sep 2020 20:43:41 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (1024-bit key) header.d=amdcloud.onmicrosoft.com
 header.i=@amdcloud.onmicrosoft.com header.b="ZfmhL0e8"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728895AbgIYUnf (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Fri, 25 Sep 2020 16:43:35 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:55530 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728856AbgIYUnf (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 25 Sep 2020 16:43:35 -0400
Received: from NAM11-BN8-obe.outbound.protection.outlook.com
 (mail-bn8nam11on20615.outbound.protection.outlook.com
 [IPv6:2a01:111:f400:7eae::615])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 766A7C0613D9
        for <kvm@vger.kernel.org>; Fri, 25 Sep 2020 12:15:53 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=dyKTLNzLJS1AU94jxBVtW9QSit/uZGvyM2ZT1fJ0QjZLqLoNzGeWnGKf9FXSwjKvo5zXxuIA7Xx36IjCPWwsYfL5n/ZYKa+pdf9q1SZSq8I6VDxNwW1c8vB8aSTlPYM+3GICQCiHRp7WUo/fHVtGGxE7X4YfQRJHpV0G+WfIPkyRHcqUkZIb2IONBcrSlhH0c+O0ehlWmaPixGjNRGamjl8HcrLgsVKugn4savco2dl160QwSdo+PdqivGNGfONLXFNQph7ghSW6v/yOwIWPlNnwAHzckf1julVJFKkeYDQXt7w5GNGqHQXwHISNqNzIbWwF+TN+MLTQGZaCyoC5EA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=CcEIoxSbsvJlPyskQ0rbz1fEN1HfciJgHrROeNeiM0s=;
 b=W8apDHtgCyK2l9cqSzwe/Q0QEW84yzd70HSG5mhO+PHj/RJj6RxF912xZb7kg0GsD8DA0BNFLPWVq5rRFEdNbma5i1iNThxA+xvhmI6vvBBNV+qfFq0W4BFVLKVz+ylSBBVS1Gnu5pBMbL7OQ9CybpP/ejtuxPyYfFbQVyr5LVLxjQl6z7n3P4ZnZtDwaO/+NjrOU6Uv0I9SVrFkzl8IxxPsXhgYgQF/qei/9H+h8eSz6WkeMXLBIp9q8xf81BB62f+P/U8Nf3oQlXzOwa82XovXmh6ZADYZh8YCWmd3qZyBzo6x+C4gI/981c0naC+shNGzjjVCFXxMD9SWhrmjvA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=CcEIoxSbsvJlPyskQ0rbz1fEN1HfciJgHrROeNeiM0s=;
 b=ZfmhL0e86DoJ8aRPVqzBjs2yeXvu0c7a5375753oROB1WxMK/+eIlbdvPGkqGMsDyh2b4QkhnQZjnGguEQcwisZK2wl19xWtIwD+lgy/H1DBih8lJuGVaqzu4OAf7MvVVxEdTyedtZfFS/I5CtDnhgvQaSKig21MCw9KpQMsTyk=
Authentication-Results: nongnu.org; dkim=none (message not signed)
 header.d=none;nongnu.org; dmarc=none action=none header.from=amd.com;
Received: from DM5PR12MB1355.namprd12.prod.outlook.com (2603:10b6:3:6e::7) by
 DM6PR12MB4297.namprd12.prod.outlook.com (2603:10b6:5:211::20) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.3412.22; Fri, 25 Sep 2020 19:04:56 +0000
Received: from DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346]) by DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346%3]) with mapi id 15.20.3391.024; Fri, 25 Sep 2020
 19:04:56 +0000
From: Tom Lendacky <thomas.lendacky@amd.com>
To: qemu-devel@nongnu.org, kvm@vger.kernel.org
Cc: Marcel Apfelbaum <marcel.apfelbaum@gmail.com>,
        Paolo Bonzini <pbonzini@redhat.com>,
        "Dr. David Alan Gilbert" <dgilbert@redhat.com>,
        Eduardo Habkost <ehabkost@redhat.com>,
        Richard Henderson <rth@twiddle.net>,
        Connor Kuehl <ckuehl@redhat.com>,
        Brijesh Singh <brijesh.singh@amd.com>,
        Jiri Slaby <jslaby@suse.cz>,
        Marcelo Tosatti <mtosatti@redhat.com>,
        "Michael S. Tsirkin" <mst@redhat.com>,
        Sean Christopherson <sean.j.christopherson@intel.com>
Subject: [PATCH v4 5/6] kvm/i386: Use a per-VM check for SMM capability
Date: Fri, 25 Sep 2020 14:03:39 -0500
Message-Id: 
 <eaec49f1ce4c8fd69277b1a7c374dcd87b9bb95d.1601060620.git.thomas.lendacky@amd.com>
X-Mailer: git-send-email 2.28.0
In-Reply-To: <cover.1601060620.git.thomas.lendacky@amd.com>
References: <cover.1601060620.git.thomas.lendacky@amd.com>
X-ClientProxiedBy: DM5PR21CA0002.namprd21.prod.outlook.com
 (2603:10b6:3:ac::12) To DM5PR12MB1355.namprd12.prod.outlook.com
 (2603:10b6:3:6e::7)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from tlendack-t1.amd.com (165.204.77.1) by
 DM5PR21CA0002.namprd21.prod.outlook.com (2603:10b6:3:ac::12) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3433.8 via Frontend
 Transport; Fri, 25 Sep 2020 19:04:55 +0000
X-Mailer: git-send-email 2.28.0
X-Originating-IP: [165.204.77.1]
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 7e59e862-45aa-431b-273e-08d86185e433
X-MS-TrafficTypeDiagnostic: DM6PR12MB4297:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <DM6PR12MB4297117BF6ECEA5EF655BC3FEC360@DM6PR12MB4297.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:4502;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 Q0MkHATowLlULWWtDVxg67vliy3nktJCLuicNPHHA881ko8u/1OCA2pPYKCs3QML/8fu29ZCJ5T9QCLFYhjeJefGeau9mudSSi5kTAG1uuZDA0zxWLWfotgL2tSxCvN4GtWDGhWs5O8NNokQJaQeP1s9xj0spOtzMx/5F4u9pLsrak0GE25BUp05QRDPBkV2pgAf9qwV2dBiebttqeqeSdRJdVfuXr426R0kOV4SOZdjjd4ZtoOvtkWk8RxiqeRKcalKX1FHxTkhNL9nPaC0I4699mND2AVw5z7r2q9tu5NXjCBz+D09fKW2gVd29+HW8x9djqFxJTlQge9IhqucvsFuCU0xYM29MBB6RPin97o8iUfFDbzb8iLktO7QDpCm
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DM5PR12MB1355.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(346002)(136003)(396003)(376002)(39860400002)(26005)(4744005)(7416002)(956004)(186003)(6666004)(16526019)(54906003)(2616005)(6486002)(66556008)(66946007)(36756003)(8936002)(66476007)(86362001)(316002)(478600001)(7696005)(52116002)(2906002)(5660300002)(4326008)(83380400001)(8676002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 BFJg1kd0vupApHrwJS8y97Vah83n67YUO6q3kuGNWV9iAjV6E8H+ZVWAqiDM0N0E5gB/Rrr6mcXv2Q5JtWKehaiJ4Z+SebOGFxYOnFb89chLRih/TClj74Ot1JWVECIpe7uwr2B682RhIVKfNv0MzMM57nAt50v0IckN56aPWxivCXSlODttYF+8bi46tZgiCY2XZkVK1lsEE7k4eepIIjdX+AhqOI+/G0j9aER4oCfbw+eF7DurRxNS7QfmbSybGhmDe0uvw5whpyvxlw8eI+AJXPxtWucMocOXRKaaHLnxWMZmdWxgLz5TeyQk2KrYUPC8m/TCRonhPj8Fh//8b+vLapIteDhocftOsDXvZYKROFh9LkY4nsmB0issWjQDNIulh69md/Ysg81oe/78TyQUIPqX3LpMLy6KPnonG3L9wum+WT7zsZaA6P+XuKRX1TeU+iyenLxYw5xqje4s65aAWB9LHAI42M6Upn/KmSBRyGXaJ0kesiuEY3LEck9Ndsh7mghg80IOSRqEqIyk3M4g4vkmwi1JFISW6PqtGCBLW9LXFHfcHe+dGVYhmVsP+7Ixd2ekjdQBtn9dVHTnb1hj1EFKNpBaSJ+l/uNmacDMy+IoulN9Af9KqR9f4Ouklp/dOrKk9K7e6O2RunHTJw==
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 7e59e862-45aa-431b-273e-08d86185e433
X-MS-Exchange-CrossTenant-AuthSource: DM5PR12MB1355.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Sep 2020 19:04:56.2346
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 vtt85i2uKmjWi7BI5trD03OZcOffnwgdsC6leKwjBewCDkI/UJ010pAr8Xk7/LMxC+g7LGfgz+Wtf+tx88rkqQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM6PR12MB4297
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Tom Lendacky <thomas.lendacky@amd.com>

SMM is not currently supported for an SEV-ES guest by KVM. Change the SMM
capability check from a KVM-wide check to a per-VM check in order to have
a finer-grained SMM capability check.

Suggested-by: Sean Christopherson <sean.j.christopherson@intel.com>
Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
---
 target/i386/kvm.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/target/i386/kvm.c b/target/i386/kvm.c
index eefd1a11b6..917cdf8055 100644
--- a/target/i386/kvm.c
+++ b/target/i386/kvm.c
@@ -134,7 +134,7 @@ int kvm_has_pit_state2(void)
 
 bool kvm_has_smm(void)
 {
-    return kvm_check_extension(kvm_state, KVM_CAP_X86_SMM);
+    return kvm_vm_check_extension(kvm_state, KVM_CAP_X86_SMM);
 }
 
 bool kvm_has_adjust_clock_stable(void)

From patchwork Fri Sep 25 19:03:40 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Tom Lendacky <thomas.lendacky@amd.com>
X-Patchwork-Id: 11800751
Return-Path: <SRS0=qKOj=DC=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 64C0B112E
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 25 Sep 2020 21:08:42 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 4274A2389E
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 25 Sep 2020 21:08:42 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (1024-bit key) header.d=amdcloud.onmicrosoft.com
 header.i=@amdcloud.onmicrosoft.com header.b="rheVKHLv"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728831AbgIYVIg (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Fri, 25 Sep 2020 17:08:36 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:59448 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726743AbgIYVIf (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 25 Sep 2020 17:08:35 -0400
Received: from NAM11-BN8-obe.outbound.protection.outlook.com
 (mail-bn8nam11on20618.outbound.protection.outlook.com
 [IPv6:2a01:111:f400:7eae::618])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id CEF3AC0613D7
        for <kvm@vger.kernel.org>; Fri, 25 Sep 2020 12:11:21 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=aWA5nW2B+lBNzd1EdEKFJ8GvwuOj20bp8MctUVZ/MAygeaTJbRkTi85mBAzT5l4sJ2yfKUdIMBpVtzl9apZIO108faV3Xwlk7X4OQvdK9z8aHqXEb8kaRXrqIMH6Aq3BvVsPabtkZ3C8aokurDU3N14wtRHdOPPii0xxTAqSQTkS4irwcq3TwcGh29a4HVSdwMMFi06X2nI1X/RnHtow5ccefv0KN2LtICgbTh1B/gsOVQWz1vKVtfoH6ZsezluImLUpasdunsCtOz4n230I9QdXa11FHV9AB1YdY1P4Vk4M/u5UsWqrJnzGA75D2wssY4NxrT9Ozl4h6IakYw/u0Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=qUExxZlpjBC1vkPTH+mWTdoLVsXwFGz0EGGEDNi95DA=;
 b=LqnjDAVEm50ZVpo1HfkWTurDlPyUYtRVETReKb3QxPi0JDMixNcomXrcEywMR/T/jw7P2xpZCF61ZbJanYAcbBRlxwG6wXiQNzYESUtrNUvrBablwv42yeoomyLLaL7c1q3sGcLWgdQl9QwvZPrEL3lush3ZV6YlidTTKebH0sDfnsgXjiMXFIq5NsZBduces8imlc3A1icvXbm24r6bW0JXf3OunfQMAZzsnDl+Fr/2Q1ALoO/MnPeYmLDGshRYQAMUiSt1J9JXa5jCZ2M7EgUzJmTbhXT+0kRvpGqG1bqTOGlfJ2+bZThuiz9QTRiYrWmBddmlHFyM8n1AuJN5bg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=qUExxZlpjBC1vkPTH+mWTdoLVsXwFGz0EGGEDNi95DA=;
 b=rheVKHLvM/wDHF7+sAm7WYjhm0/1Ho4Tw9VjMeoVO/tVP1K/gTrVuNJ2K0BU3f8Cf8R7+hYSbb+oP+YKISjfeSsoJ7g9/qSu3a1JSJEI36sQXdT+xk4JLIQkJO+O2yoAEWtTgb3hQQrFga0cRYI7A2mYbVrr4YYywGCRKLeTjYw=
Authentication-Results: nongnu.org; dkim=none (message not signed)
 header.d=none;nongnu.org; dmarc=none action=none header.from=amd.com;
Received: from DM5PR12MB1355.namprd12.prod.outlook.com (2603:10b6:3:6e::7) by
 DM6PR12MB4297.namprd12.prod.outlook.com (2603:10b6:5:211::20) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.3412.22; Fri, 25 Sep 2020 19:05:03 +0000
Received: from DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346]) by DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346%3]) with mapi id 15.20.3391.024; Fri, 25 Sep 2020
 19:05:03 +0000
From: Tom Lendacky <thomas.lendacky@amd.com>
To: qemu-devel@nongnu.org, kvm@vger.kernel.org
Cc: Marcel Apfelbaum <marcel.apfelbaum@gmail.com>,
        Paolo Bonzini <pbonzini@redhat.com>,
        "Dr. David Alan Gilbert" <dgilbert@redhat.com>,
        Eduardo Habkost <ehabkost@redhat.com>,
        Richard Henderson <rth@twiddle.net>,
        Connor Kuehl <ckuehl@redhat.com>,
        Brijesh Singh <brijesh.singh@amd.com>,
        Jiri Slaby <jslaby@suse.cz>,
        Marcelo Tosatti <mtosatti@redhat.com>,
        "Michael S. Tsirkin" <mst@redhat.com>
Subject: [PATCH v4 6/6] sev/i386: Enable an SEV-ES guest based on SEV policy
Date: Fri, 25 Sep 2020 14:03:40 -0500
Message-Id: 
 <1cfb0be5fdad55948f42f9056dfc16dc435099cf.1601060620.git.thomas.lendacky@amd.com>
X-Mailer: git-send-email 2.28.0
In-Reply-To: <cover.1601060620.git.thomas.lendacky@amd.com>
References: <cover.1601060620.git.thomas.lendacky@amd.com>
X-ClientProxiedBy: DM5PR07CA0087.namprd07.prod.outlook.com
 (2603:10b6:4:ae::16) To DM5PR12MB1355.namprd12.prod.outlook.com
 (2603:10b6:3:6e::7)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from tlendack-t1.amd.com (165.204.77.1) by
 DM5PR07CA0087.namprd07.prod.outlook.com (2603:10b6:4:ae::16) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3412.20 via Frontend
 Transport; Fri, 25 Sep 2020 19:05:02 +0000
X-Mailer: git-send-email 2.28.0
X-Originating-IP: [165.204.77.1]
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 07469ac6-3651-49ee-369c-08d86185e8a0
X-MS-TrafficTypeDiagnostic: DM6PR12MB4297:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <DM6PR12MB42972EF7E11DFC22A562E8D2EC360@DM6PR12MB4297.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6430;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 kyPiIOJx1/w6zTB7dMTjZZOg03ZGTjoHynhBYwGQLF1uesY781JxNriaCEwBAoQ65mlLCpsLdCXNxySp+ivNnWs6OkFGqScqG/akOsMuBbW9GsgYESTq7er/lnww2cLGAXIlVAqXYytE0L8s99XRokRcw7fKOhCvRHMRSvYrkYZHTI60uEHPXlSMBwWMHP2g3iXrUpIxrTAEh9UmWVOe7XJFcBPLNM5vhk0MXIFHqaxkEf6mPobjXg24tRPqThqobGO9Qgu9dnl8MJ5FtQe7KS+ejehS6vqHlNjwqaVNt6XsUjtYmD+p/FcpaTybDvUWCLpMLGuCEywWGz3Nr59TnxIJ8cYm0uE0cTg/4Wf4u95QaRw3QvXlmu98dbxjFj/S
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DM5PR12MB1355.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(346002)(136003)(396003)(376002)(39860400002)(26005)(4744005)(7416002)(956004)(186003)(6666004)(16526019)(54906003)(2616005)(6486002)(66556008)(66946007)(36756003)(8936002)(66476007)(86362001)(316002)(478600001)(7696005)(52116002)(2906002)(5660300002)(4326008)(83380400001)(8676002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 jHY1I4sgNygabV2amgs2B5gqe58IbD6LtLjhZaqOc+xYyhJM3leTFBy7r0V1O3LlLrRIsLWCf7ym0oJCZnqv5I7dtRnSv4QxhKPoXCihEpomlAECLMpMlqWB+Sap0e+YKsk6ZZamlTMBNNhfNY59a7X4UmPnr9fSkYHDRG6wjP0310mMLbJozIeLIfitYZX7brhtN73FFD2XVpJeZe5r0ZqRLFte7SQ3TonQwecoq2mjM44SMV1n9IIyXJHD0PgKIX73X7Xi0CjFtFAa7ZqfAV1yB9NZ706m+THwTa7cdO47iAJnP+N5oMI2UghCkj+rMCWTXI8qtMLqqHgDZ8KfHIiRJldVgDGztJaU11ma21kSlM/3tsyEFiaKziE+Abv0+ga/WNdc03AuQswi8BmhmN69pWLpvjB3g6vuf/aiio17la7LG6r1P5jO5bkExQaMxcP6spKMQy4lz0sLSUU2ytI41i4OimqK48pCVu0BbYGbiWLnY5T8gj+g1uill44ZC7mfrfG1Tw5lCHEYxah48IY7ljOW4+0kmWIp28dltiDQGZZNPfiPVFhJIz1J0katZWtkRStiXlLDS1JAVohd+ZYHPD/2UiGsRl9ssYzm8FhD1esOtabWMiddXur81jS/dhVo7lA8Jz5agfayZBJpKA==
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 07469ac6-3651-49ee-369c-08d86185e8a0
X-MS-Exchange-CrossTenant-AuthSource: DM5PR12MB1355.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Sep 2020 19:05:03.7222
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 3aBhQteN0R/xRClzASdw0EXJK7xfIpGpVzdSq/k4YS5LDY7e7lV0mFYbXtTLxnzkER0ob/fwAR8FEKZUrTUqqg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM6PR12MB4297
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Tom Lendacky <thomas.lendacky@amd.com>

Update the sev_es_enabled() function return value to be based on the SEV
policy that has been specified. SEV-ES is enabled if SEV is enabled and
the SEV-ES policy bit is set in the policy object.

Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>
Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
---
 target/i386/sev.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/target/i386/sev.c b/target/i386/sev.c
index 9c081173db..d3342f5cb2 100644
--- a/target/i386/sev.c
+++ b/target/i386/sev.c
@@ -377,7 +377,7 @@ sev_enabled(void)
 bool
 sev_es_enabled(void)
 {
-    return false;
+    return sev_enabled() && (sev_guest->policy & SEV_POLICY_ES);
 }
 
 uint64_t
