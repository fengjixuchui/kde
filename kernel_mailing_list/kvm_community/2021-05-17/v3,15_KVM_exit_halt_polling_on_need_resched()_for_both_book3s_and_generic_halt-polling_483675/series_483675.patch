From patchwork Mon May 17 14:00:24 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Wanpeng Li <kernellwp@gmail.com>
X-Patchwork-Id: 12262053
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-15.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FORGED_FROMDOMAIN,FREEMAIL_FROM,
	HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT
	autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 385B6C433ED
	for <kvm@archiver.kernel.org>; Mon, 17 May 2021 14:01:28 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 17E6E611BF
	for <kvm@archiver.kernel.org>; Mon, 17 May 2021 14:01:28 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S237584AbhEQOCn (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Mon, 17 May 2021 10:02:43 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:34664 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S237568AbhEQOCi (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 17 May 2021 10:02:38 -0400
Received: from mail-pg1-x52f.google.com (mail-pg1-x52f.google.com
 [IPv6:2607:f8b0:4864:20::52f])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 77BCDC061756;
        Mon, 17 May 2021 07:01:21 -0700 (PDT)
Received: by mail-pg1-x52f.google.com with SMTP id 27so3416715pgy.3;
        Mon, 17 May 2021 07:01:21 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id;
        bh=OXpOhNWfIpuhpnHdPJrluE5Py5GUd57HQ7WW+PgXS2c=;
        b=ajL8VZkyPWHRi81eL4m4qbx/XsNbUiH/XOIqcU9VNghE0X8fkTeVlF8Q5rgmQBb9mx
         WeSoobDW7gQ2QXTgFE8iy+Uy+AnPcmuDU5J+86toTiU28EjGs0Wyczr1kCRGIex8awP0
         6IBYMfWUrNCZHQ0+6BeQOo0lFfJuWTQazVCm6cOGR4m5qNa6B944km18Mfr9ptqmZ6PU
         QG8Gb6ikoUgFmDYDT8J+0VhBapuj38UxDEFLn86hrdCjBL3/kQQ4XyhoFrRJ2lkAYAT1
         dzpAvPz6sr0D7XJRCwd8HUROK1P3tZCoLq9KfjstjvpjZzS7lV1kGh1TPflhdI/7axyO
         E94A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id;
        bh=OXpOhNWfIpuhpnHdPJrluE5Py5GUd57HQ7WW+PgXS2c=;
        b=eFrBCw4iaHxh/s4IAIunVoUFx/56zBZIsQZuPMpv/pLmA0txvh3GM+inOb6aqg8SWm
         7PxTyjyf+oUgGaVdWagv0OzkK/mwXBnGilAnvo3p1T2/VtSfwNwbLk0A0ckbPxeOD5YM
         iX1q+j7HCSODkrlcfIqkpMe3g4sKiggwyrGLjMXwdt689AuqyvthcDhDEJ7Ixt5MYo+A
         HjbNSGvQpL16m5V8ohm+neIqf0vNoR65IRpXhQwZ/0R/p6RWNUx9daBaEQjJ8HXVhlDT
         CLJx7qHRN3TZ7pbCewGDOrl7JUFNMIhKbvOqzynOecm5eMVwBl8LelEnKgzxhozjwXF/
         5a1A==
X-Gm-Message-State: AOAM533XtuW84s3KOS0/VpypdlhxkQEDR4ivsKmPk8kTG/lugRjVyxET
        cSd47484g8HJOv8Wa+8FY6Own07/Ss4=
X-Google-Smtp-Source: 
 ABdhPJwHxSzExHpL+57mfMVKEs8ePvUwo63gs+VDRh9qqggeYBWmNPE1HPIzDUpx8Ac16na1HngHlw==
X-Received: by 2002:a65:5bc6:: with SMTP id o6mr993570pgr.364.1621260080787;
        Mon, 17 May 2021 07:01:20 -0700 (PDT)
Received: from localhost.localdomain ([203.205.141.61])
        by smtp.googlemail.com with ESMTPSA id
 k10sm3074229pfu.175.2021.05.17.07.01.17
        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 17 May 2021 07:01:20 -0700 (PDT)
From: Wanpeng Li <kernellwp@gmail.com>
X-Google-Original-From: Wanpeng Li <wanpengli@tencent.com>
To: linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: Paolo Bonzini <pbonzini@redhat.com>,
        Sean Christopherson <seanjc@google.com>,
        Vitaly Kuznetsov <vkuznets@redhat.com>,
        Wanpeng Li <wanpengli@tencent.com>,
        Jim Mattson <jmattson@google.com>,
        Joerg Roedel <joro@8bytes.org>,
        Ben Segall <bsegall@google.com>,
        Venkatesh Srinivas <venkateshs@chromium.org>,
        David Matlack <dmatlack@google.com>,
        Paul Mackerras <paulus@ozlabs.org>,
        Suraj Jitindar Singh <sjitindarsingh@gmail.com>
Subject: [PATCH v3 1/5] KVM: exit halt polling on need_resched() for both
 book3s and generic halt-polling
Date: Mon, 17 May 2021 07:00:24 -0700
Message-Id: <1621260028-6467-1-git-send-email-wanpengli@tencent.com>
X-Mailer: git-send-email 2.7.4
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Wanpeng Li <wanpengli@tencent.com>

Inspired by commit 262de4102c7bb8 (kvm: exit halt polling on need_resched()
as well), CFS_BANDWIDTH throttling will use resched_task() when there is just
one task to get the task to block. It was likely allowing VMs to overrun their
quota when halt polling. Due to PPC implements an arch specific halt polling
logic, we should add the need_resched() checking there as well. This
patch adds a helper function that to be shared between book3s and generic
halt-polling loop.

Cc: Ben Segall <bsegall@google.com>
Cc: Venkatesh Srinivas <venkateshs@chromium.org>
Cc: Jim Mattson <jmattson@google.com> 
Cc: David Matlack <dmatlack@google.com>
Cc: Paul Mackerras <paulus@ozlabs.org>
Cc: Suraj Jitindar Singh <sjitindarsingh@gmail.com>
Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
Reviewed-by: David Matlack <dmatlack@google.com>
Reviewed-by: Venkatesh Srinivas <venkateshs@chromium.org>
---
v2 -> v3:
 * add a helper function
v1 -> v2:
 * update patch description

 arch/powerpc/kvm/book3s_hv.c | 2 +-
 include/linux/kvm_host.h     | 2 ++
 virt/kvm/kvm_main.c          | 9 +++++++--
 3 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/arch/powerpc/kvm/book3s_hv.c b/arch/powerpc/kvm/book3s_hv.c
index 28a80d240b76..360165df345b 100644
--- a/arch/powerpc/kvm/book3s_hv.c
+++ b/arch/powerpc/kvm/book3s_hv.c
@@ -3936,7 +3936,7 @@ static void kvmppc_vcore_blocked(struct kvmppc_vcore *vc)
 				break;
 			}
 			cur = ktime_get();
-		} while (single_task_running() && ktime_before(cur, stop));
+		} while (kvm_vcpu_can_block(cur, stop));
 
 		spin_lock(&vc->lock);
 		vc->vcore_state = VCORE_INACTIVE;
diff --git a/include/linux/kvm_host.h b/include/linux/kvm_host.h
index 2f34487e21f2..bf4fd60c4699 100644
--- a/include/linux/kvm_host.h
+++ b/include/linux/kvm_host.h
@@ -1583,4 +1583,6 @@ static inline void kvm_handle_signal_exit(struct kvm_vcpu *vcpu)
 /* Max number of entries allowed for each kvm dirty ring */
 #define  KVM_DIRTY_RING_MAX_ENTRIES  65536
 
+bool kvm_vcpu_can_block(ktime_t cur, ktime_t stop);
+
 #endif
diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index 6b4feb92dc79..c81080667fd1 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -2945,6 +2945,12 @@ update_halt_poll_stats(struct kvm_vcpu *vcpu, u64 poll_ns, bool waited)
 		vcpu->stat.halt_poll_success_ns += poll_ns;
 }
 
+
+bool kvm_vcpu_can_block(ktime_t cur, ktime_t stop)
+{
+	return single_task_running() && !need_resched() && ktime_before(cur, stop);
+}
+
 /*
  * The vCPU has executed a HLT instruction with in-kernel mode enabled.
  */
@@ -2973,8 +2979,7 @@ void kvm_vcpu_block(struct kvm_vcpu *vcpu)
 				goto out;
 			}
 			poll_end = cur = ktime_get();
-		} while (single_task_running() && !need_resched() &&
-			 ktime_before(cur, stop));
+		} while (kvm_vcpu_can_block(cur, stop));
 	}
 
 	prepare_to_rcuwait(&vcpu->wait);

From patchwork Mon May 17 14:00:25 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Wanpeng Li <kernellwp@gmail.com>
X-Patchwork-Id: 12262055
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-15.8 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FORGED_FROMDOMAIN,FREEMAIL_FROM,
	HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,USER_AGENT_GIT autolearn=ham
	autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 2C2EDC433B4
	for <kvm@archiver.kernel.org>; Mon, 17 May 2021 14:01:32 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 0BED860E0C
	for <kvm@archiver.kernel.org>; Mon, 17 May 2021 14:01:32 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S237599AbhEQOCo (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Mon, 17 May 2021 10:02:44 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:34676 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S237575AbhEQOCk (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 17 May 2021 10:02:40 -0400
Received: from mail-pf1-x431.google.com (mail-pf1-x431.google.com
 [IPv6:2607:f8b0:4864:20::431])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 533DFC061573;
        Mon, 17 May 2021 07:01:24 -0700 (PDT)
Received: by mail-pf1-x431.google.com with SMTP id x188so5003206pfd.7;
        Mon, 17 May 2021 07:01:24 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=+j3s61DfilBbdVnALbykcBci/7JJ6WTH2JZ9k+XRHnU=;
        b=W7g8/GRnta0CUdCKvH6q3+BTbrfVMZ2Dgypt4bokyz3VI3XNFxaK7jHh176QcdG192
         z2oKm+4fToet79rcJkGjz0pYtRbh/knkVyhmEPVqKM7O1KeszYrDZE3hXr5IjNDabkdC
         RKwHvbSbomti7LdFjiede5FFHojCzgCzNg3Y8kaUapUIZdBF/FNUquvjXmq+jGloCjOV
         QApgTGKYzwpup9TZof5cOvVL3rHknGSNneP4Nn6bgXfDVZG+Za9jdH6tNij21CBJnODH
         nBB3RAZfGNqWKp1LJMz2FFkQK9DR+aKVttks58bLNUHGhw8W59eMbjOf6U9xAF4xFeco
         wrfA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=+j3s61DfilBbdVnALbykcBci/7JJ6WTH2JZ9k+XRHnU=;
        b=Ap5uzTLojXN8mJzD7YYLAHngVAUu0DGO550BcOemPbKKqu58O4AbewOOQtv2nMDTlu
         auXF3UYt+VDZPXCyw9jNZqwMXAcsmNTuNBZRDhqG79uXDD5yImnfn2EjyxAn6lmFrZ7t
         EF5V/yxk2AqjODcyUsCzo0LrTXtvjNbLV8X+ic9Lod5S7FBq3NCe+nX5+Oh58xdaJgJr
         r0UBWVmaXtW2YEt6b72sALU0NPEqlST762CMtWRZa3mQuJ+byiEH7gYY5kltApEEW7Ge
         kawlDVeXGWjl4DsqmGRnz0qzQPD+ln+zGYCD8ZaQXlYRYRtxzSLQfnNQ0igCBwHxemiI
         q+IA==
X-Gm-Message-State: AOAM532kWOFe9QwL2eyOLtqS/O+8UaAlSjB57is2i1SNMSlGlqNJ0NJe
        BaTlkqT8UA1gBodnZmsRWrjgUgADfmA=
X-Google-Smtp-Source: 
 ABdhPJxrncufwdLBI0i7fwUTKAAG8JEiUuwcsVlhfey6fS/fk/gjmsiPjF6aj48zOouQ/l91x5YSMA==
X-Received: by 2002:a63:6986:: with SMTP id
 e128mr61397794pgc.16.1621260083531;
        Mon, 17 May 2021 07:01:23 -0700 (PDT)
Received: from localhost.localdomain ([203.205.141.61])
        by smtp.googlemail.com with ESMTPSA id
 k10sm3074229pfu.175.2021.05.17.07.01.21
        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 17 May 2021 07:01:23 -0700 (PDT)
From: Wanpeng Li <kernellwp@gmail.com>
X-Google-Original-From: Wanpeng Li <wanpengli@tencent.com>
To: linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: Paolo Bonzini <pbonzini@redhat.com>,
        Sean Christopherson <seanjc@google.com>,
        Vitaly Kuznetsov <vkuznets@redhat.com>,
        Wanpeng Li <wanpengli@tencent.com>,
        Jim Mattson <jmattson@google.com>,
        Joerg Roedel <joro@8bytes.org>
Subject: [PATCH v3 2/5] KVM: X86: Bail out of direct yield in case of
 under-committed scenarios
Date: Mon, 17 May 2021 07:00:25 -0700
Message-Id: <1621260028-6467-2-git-send-email-wanpengli@tencent.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1621260028-6467-1-git-send-email-wanpengli@tencent.com>
References: <1621260028-6467-1-git-send-email-wanpengli@tencent.com>
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Wanpeng Li <wanpengli@tencent.com>

In case of under-committed scenarios, vCPU can get scheduling easily,
kvm_vcpu_yield_to add extra overhead, we can observe a lot of race
between vcpu->ready is true and yield fails due to p->state is
TASK_RUNNING. Let's bail out in such scenarios by checking the length
of current cpu runqueue, it can be treated as a hint of under-committed
instead of guarantee of accuracy. The directed_yield_successful/attempted 
ratio can be improved from 50+% to 80+% in the under-committed scenario. 

Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
---
v2 -> v3:
 * update patch description
v1 -> v2:
 * move the check after attempted counting
 * update patch description

 arch/x86/kvm/x86.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 9b6bca616929..dfb7c320581f 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -8360,6 +8360,9 @@ static void kvm_sched_yield(struct kvm_vcpu *vcpu, unsigned long dest_id)
 
 	vcpu->stat.directed_yield_attempted++;
 
+	if (single_task_running())
+		goto no_yield;
+
 	rcu_read_lock();
 	map = rcu_dereference(vcpu->kvm->arch.apic_map);
 

From patchwork Mon May 17 14:00:26 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Wanpeng Li <kernellwp@gmail.com>
X-Patchwork-Id: 12262057
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-15.8 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FORGED_FROMDOMAIN,FREEMAIL_FROM,
	HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,USER_AGENT_GIT
	autolearn=unavailable autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id EE2ACC433ED
	for <kvm@archiver.kernel.org>; Mon, 17 May 2021 14:01:35 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id C9F1360FF1
	for <kvm@archiver.kernel.org>; Mon, 17 May 2021 14:01:35 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S237631AbhEQOCs (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Mon, 17 May 2021 10:02:48 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:34688 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S237574AbhEQOCn (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 17 May 2021 10:02:43 -0400
Received: from mail-pj1-x1033.google.com (mail-pj1-x1033.google.com
 [IPv6:2607:f8b0:4864:20::1033])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 2ACE7C061573;
        Mon, 17 May 2021 07:01:27 -0700 (PDT)
Received: by mail-pj1-x1033.google.com with SMTP id
 j6-20020a17090adc86b02900cbfe6f2c96so3765502pjv.1;
        Mon, 17 May 2021 07:01:27 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=/2GPjTLQ/YR+wnuKsns5/Hi1QLal2y1jDQCRlyJhbRk=;
        b=m78vKY4Ils3Zka2LHxaL7/u8+Ux75+b2P5JcA51NnA/mOemelC6vljDXQ+wiyyhvCj
         JcjTebx//vYgWfEddx+4wvQUX1l7NeyFbhAH3MOb85xrYr/KeMFbUGJY7jhAj3QsUWqa
         Z6idJdQmlCCZ11B9YyUIFVhbybDaPahq0a8NVz/nVkumfpLeikq53mrI198nC7ujuGCT
         Cogu7jTwppj9IZ3sh48PkLyHT+42fOsBnPkjyLMzJmam9bpe9gqLeEqpZ1l08W//h4XJ
         4UAwQtoURr7VZfMLg2KuYO2WNphH7/SD7nw9RoaemRDr4C21vW2+X2i7LfF1/mWAclO7
         qSRg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=/2GPjTLQ/YR+wnuKsns5/Hi1QLal2y1jDQCRlyJhbRk=;
        b=k6G5HSWZBpeFC3c5o5B8zeDl5S9l3gVnt7spPcyYBMgnbAkksYo43tYzdc2fnfxdn5
         wRWW+CAEacRwk9GDLNlU2E4TLNwk4A3bCz9pCQF6rgjL+25Wm6oWyOl0QxlE2xBO18jX
         TvTEXwTuhneyEjEh3IFvUNVe/2+G9vZr8u9KXCaGOJ4OB9pM2sxys25V1p8zDIOmf4u1
         sM9lSf17x8jZJKbSS5bR3hhXJ5uu3eLxqC8UZhNaTRY37YMx5AtoGH9t+h/cbX3trrA+
         Avusii+NSLMbM0jDNcmI9X6kABaGQzVNyEbu+kX2bZa5rx86cv67nvHDCnpmEK+zfscG
         hwJg==
X-Gm-Message-State: AOAM5333rs8yO9h5ZkTyvepiYM9dfvDFTLP6LYe+80fNK6oOUMY3S9JU
        XrY4ToHGgCk78aouwiUBmW0fMRnO/tM=
X-Google-Smtp-Source: 
 ABdhPJwaT9yOEYd0kc9RCcyNp41kW9zpGoSd03Lqy76hsnwtT1jmF+q8DlO5M2OCw0rdT+rzvYgcMA==
X-Received: by 2002:a17:90a:4a0e:: with SMTP id
 e14mr58581pjh.209.1621260086511;
        Mon, 17 May 2021 07:01:26 -0700 (PDT)
Received: from localhost.localdomain ([203.205.141.61])
        by smtp.googlemail.com with ESMTPSA id
 k10sm3074229pfu.175.2021.05.17.07.01.23
        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 17 May 2021 07:01:26 -0700 (PDT)
From: Wanpeng Li <kernellwp@gmail.com>
X-Google-Original-From: Wanpeng Li <wanpengli@tencent.com>
To: linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: Paolo Bonzini <pbonzini@redhat.com>,
        Sean Christopherson <seanjc@google.com>,
        Vitaly Kuznetsov <vkuznets@redhat.com>,
        Wanpeng Li <wanpengli@tencent.com>,
        Jim Mattson <jmattson@google.com>,
        Joerg Roedel <joro@8bytes.org>, stable@vger.kernel.org
Subject: [PATCH v3 3/5] KVM: X86: Fix vCPU preempted state from guest's point
 of view
Date: Mon, 17 May 2021 07:00:26 -0700
Message-Id: <1621260028-6467-3-git-send-email-wanpengli@tencent.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1621260028-6467-1-git-send-email-wanpengli@tencent.com>
References: <1621260028-6467-1-git-send-email-wanpengli@tencent.com>
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Wanpeng Li <wanpengli@tencent.com>

Commit 66570e966dd9 (kvm: x86: only provide PV features if enabled in guest's
CPUID) avoids to access pv tlb shootdown host side logic when this pv feature
is not exposed to guest, however, kvm_steal_time.preempted not only leveraged
by pv tlb shootdown logic but also mitigate the lock holder preemption issue.
From guest's point of view, vCPU is always preempted since we lose the reset
of kvm_steal_time.preempted before vmentry if pv tlb shootdown feature is not
exposed. This patch fixes it by clearing kvm_steal_time.preempted before
vmentry.

Fixes: 66570e966dd9 (kvm: x86: only provide PV features if enabled in guest's CPUID)
Reviewed-by: Sean Christopherson <seanjc@google.com>
Cc: stable@vger.kernel.org
Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
---
v1 -> v2:
 * add curly braces

 arch/x86/kvm/x86.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index dfb7c320581f..bed7b5348c0e 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -3105,6 +3105,8 @@ static void record_steal_time(struct kvm_vcpu *vcpu)
 				       st->preempted & KVM_VCPU_FLUSH_TLB);
 		if (xchg(&st->preempted, 0) & KVM_VCPU_FLUSH_TLB)
 			kvm_vcpu_flush_tlb_guest(vcpu);
+	} else {
+		st->preempted = 0;
 	}
 
 	vcpu->arch.st.preempted = 0;

From patchwork Mon May 17 14:00:27 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Wanpeng Li <kernellwp@gmail.com>
X-Patchwork-Id: 12262059
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-15.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FORGED_FROMDOMAIN,FREEMAIL_FROM,
	HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT
	autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 9BC52C433B4
	for <kvm@archiver.kernel.org>; Mon, 17 May 2021 14:01:41 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 814A0611BF
	for <kvm@archiver.kernel.org>; Mon, 17 May 2021 14:01:41 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S237685AbhEQOC4 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Mon, 17 May 2021 10:02:56 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:34716 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S237627AbhEQOCs (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 17 May 2021 10:02:48 -0400
Received: from mail-pf1-x42c.google.com (mail-pf1-x42c.google.com
 [IPv6:2607:f8b0:4864:20::42c])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 6B3CBC061761;
        Mon, 17 May 2021 07:01:31 -0700 (PDT)
Received: by mail-pf1-x42c.google.com with SMTP id d78so4141718pfd.10;
        Mon, 17 May 2021 07:01:31 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=p6jAyFEHVFCxlZGpGxYbrWuXzrXvA1+9+mG4jRlrIQk=;
        b=hDuAmQ4A43GWP0rKjcktZ9hykeiArJVyGcpT4ujdQRFXSuywufDCZFAYgkM2exL46R
         CwYqu8QPpPsZQvgWPTT1EfxUKKA5uEpuCb0xc199tMlwKt67dquZw7yFdxF7BC9Hf06i
         gROqkq6d/HN1ithnaqgpCkOgwFuUpflhf3GjiQb++cKtJnwnAWVSXDHZGbp+/2abu9m8
         pqNeC5PPQNUw6jyeFCDYhqB6ne1SEMGXPztMw/HAbAu6oIxMET7PePOTNzTFrw3yX/Aj
         0k7husLzMEEQJ3QCU4/vNMKH3yqX0wgac8QI3+pnAvBC6FNv0GlnPVBbO633fl4WJIcQ
         t+nw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=p6jAyFEHVFCxlZGpGxYbrWuXzrXvA1+9+mG4jRlrIQk=;
        b=X0h/x0Z+1RxriOTzM8ToK84BYQx67sCePFAj6GYt+VrQmYChpUNr0jFtDHyRIh7fkz
         8l/BHWRFVC7M2MU/8Em85RnZmkAQHiHFllBd5yVgTnagCVPeJN50Z4QOiGtWkiDE9UR+
         OZn0uy0NgwR70s8LPjP3WuGlPCfiTLFol7pkiCcC62b5SMkTUK+fi23uneOdpP+nCeER
         D1FKBYSaT/GeWHfpir65PvBiwyEd00jtnVPvMj24dgijcO7TLyuG6BSayWZ1hEkTpoAM
         AoHgLCfJDq3ezY3kMeBLgz4CFHwAFBVy6hvq8VY0+xTUljWq2TdPdV6hOfwm9zH3PGlr
         kr9w==
X-Gm-Message-State: AOAM532/7L9bUCznphbQnxEFKnIDtXGKirkbJT86ox69ozUITLkDyNFv
        Upkwq20cfRwOYW153sa0S19Rt8El4yc=
X-Google-Smtp-Source: 
 ABdhPJwj9HbY7SlYmRb/kfzs3XrJiDdyRtN9RdDvWJz/I86GDCxyl34GyEAXm4sgQnz/hmSL5B9ePw==
X-Received: by 2002:a63:571d:: with SMTP id l29mr9510292pgb.179.1621260090676;
        Mon, 17 May 2021 07:01:30 -0700 (PDT)
Received: from localhost.localdomain ([203.205.141.61])
        by smtp.googlemail.com with ESMTPSA id
 k10sm3074229pfu.175.2021.05.17.07.01.26
        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 17 May 2021 07:01:30 -0700 (PDT)
From: Wanpeng Li <kernellwp@gmail.com>
X-Google-Original-From: Wanpeng Li <wanpengli@tencent.com>
To: linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: Paolo Bonzini <pbonzini@redhat.com>,
        Sean Christopherson <seanjc@google.com>,
        Vitaly Kuznetsov <vkuznets@redhat.com>,
        Wanpeng Li <wanpengli@tencent.com>,
        Jim Mattson <jmattson@google.com>,
        Joerg Roedel <joro@8bytes.org>
Subject: [PATCH v3 4/5] KVM: x86: hyper-v: Task srcu lock when accessing
 kvm_memslots()
Date: Mon, 17 May 2021 07:00:27 -0700
Message-Id: <1621260028-6467-4-git-send-email-wanpengli@tencent.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1621260028-6467-1-git-send-email-wanpengli@tencent.com>
References: <1621260028-6467-1-git-send-email-wanpengli@tencent.com>
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Wanpeng Li <wanpengli@tencent.com>

   WARNING: suspicious RCU usage
   5.13.0-rc1 #4 Not tainted
   -----------------------------
   ./include/linux/kvm_host.h:710 suspicious rcu_dereference_check() usage!

  other info that might help us debug this:

  rcu_scheduler_active = 2, debug_locks = 1
   1 lock held by hyperv_clock/8318:
    #0: ffffb6b8cb05a7d8 (&hv->hv_lock){+.+.}-{3:3}, at: kvm_hv_invalidate_tsc_page+0x3e/0xa0 [kvm]

  stack backtrace:
  CPU: 3 PID: 8318 Comm: hyperv_clock Not tainted 5.13.0-rc1 #4
  Call Trace:
   dump_stack+0x87/0xb7
   lockdep_rcu_suspicious+0xce/0xf0
   kvm_write_guest_page+0x1c1/0x1d0 [kvm]
   kvm_write_guest+0x50/0x90 [kvm]
   kvm_hv_invalidate_tsc_page+0x79/0xa0 [kvm]
   kvm_gen_update_masterclock+0x1d/0x110 [kvm]
   kvm_arch_vm_ioctl+0x2a7/0xc50 [kvm]
   kvm_vm_ioctl+0x123/0x11d0 [kvm]
   __x64_sys_ioctl+0x3ed/0x9d0
   do_syscall_64+0x3d/0x80
   entry_SYSCALL_64_after_hwframe+0x44/0xae

kvm_memslots() will be called by kvm_write_guest(), so we should take the srcu lock.

Fixes: e880c6ea5 (KVM: x86: hyper-v: Prevent using not-yet-updated TSC page by secondary CPUs)
Reviewed-by: Vitaly Kuznetsov <vkuznets@redhat.com>
Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
---
 arch/x86/kvm/hyperv.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/arch/x86/kvm/hyperv.c b/arch/x86/kvm/hyperv.c
index f98370a39936..f00830e5202f 100644
--- a/arch/x86/kvm/hyperv.c
+++ b/arch/x86/kvm/hyperv.c
@@ -1172,6 +1172,7 @@ void kvm_hv_invalidate_tsc_page(struct kvm *kvm)
 {
 	struct kvm_hv *hv = to_kvm_hv(kvm);
 	u64 gfn;
+	int idx;
 
 	if (hv->hv_tsc_page_status == HV_TSC_PAGE_BROKEN ||
 	    hv->hv_tsc_page_status == HV_TSC_PAGE_UNSET ||
@@ -1190,9 +1191,16 @@ void kvm_hv_invalidate_tsc_page(struct kvm *kvm)
 	gfn = hv->hv_tsc_page >> HV_X64_MSR_TSC_REFERENCE_ADDRESS_SHIFT;
 
 	hv->tsc_ref.tsc_sequence = 0;
+
+	/*
+	 * Take the srcu lock as memslots will be accessed to check the gfn
+	 * cache generation against the memslots generation.
+	 */
+	idx = srcu_read_lock(&kvm->srcu);
 	if (kvm_write_guest(kvm, gfn_to_gpa(gfn),
 			    &hv->tsc_ref, sizeof(hv->tsc_ref.tsc_sequence)))
 		hv->hv_tsc_page_status = HV_TSC_PAGE_BROKEN;
+	srcu_read_unlock(&kvm->srcu, idx);
 
 out_unlock:
 	mutex_unlock(&hv->hv_lock);

From patchwork Mon May 17 14:00:28 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Wanpeng Li <kernellwp@gmail.com>
X-Patchwork-Id: 12262061
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-15.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FORGED_FROMDOMAIN,FREEMAIL_FROM,
	HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT
	autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id CAF6DC433B4
	for <kvm@archiver.kernel.org>; Mon, 17 May 2021 14:01:43 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id AD987611EE
	for <kvm@archiver.kernel.org>; Mon, 17 May 2021 14:01:43 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S237693AbhEQOC6 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Mon, 17 May 2021 10:02:58 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:34742 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S237645AbhEQOCw (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 17 May 2021 10:02:52 -0400
Received: from mail-pj1-x102e.google.com (mail-pj1-x102e.google.com
 [IPv6:2607:f8b0:4864:20::102e])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 9C51EC06175F;
        Mon, 17 May 2021 07:01:35 -0700 (PDT)
Received: by mail-pj1-x102e.google.com with SMTP id gm21so3719961pjb.5;
        Mon, 17 May 2021 07:01:35 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=tPPyKEGZVk5W3b/nB56WzLLuyaXrswVyUx1Ed/5o3O4=;
        b=atyrkP7BjqyHjY2IB7GyY0a5GmCwQFfhG0p/q6m54DEi0AY69wWhJgByPa8Y6nNmdy
         STirIna+BxQaUMp80+jQIflI7bvR3lrb3IdK++O4vUn80zYUvtsYDnLhGTDXlt9RiU64
         DyI5GDe+q9nXiprQ/HGX4de5LDWHvkjuVJIsxM+wxN8pyMGGoyw45u1v7SnGxt+fPxW9
         hA/B6NB8CIL/woWH3rS5X9cf0Pd3zvsHronm3N7st5cvEM2iAiwAxTuCEFqeOgnyBWcb
         FvGLmlHltyHvm/0v0zL6CD7AKbrDe68ov3uLQJaZh9oMAchqii2cqkJtSEEtTXy1mdYS
         Y35w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=tPPyKEGZVk5W3b/nB56WzLLuyaXrswVyUx1Ed/5o3O4=;
        b=NtcjQRIYnf0YTPuClgyD551zBeiIeU4B0GslxSVFwXh73+4lYywCrBiA/L5m9C8e4Q
         7a0RtBNtpVd9XucIxCcQoT8/lS+HIV0QdZaKUP9oix2j4kBp4aey5x/3eMgA0Vhs6i0k
         mM755pFFbK4HwDQ77JCPVfd5RvJz1LugJXbbtkKGb9vaX0BKR+ef5Lxt86ecwJ7RGh/O
         6kv6xF/dcK+U6VKU/Rc1slesktdHp6yEufFvYjm/iBjIYSINlBC2cz1b95GVUUSyIxJf
         LFPFMWeeQ/5UKnzIAiUrqRMZzqvQE8xd8fams5Tbl3KSECS1Aom1tWH4758+tajg1Lcq
         37Rg==
X-Gm-Message-State: AOAM532ib0hi8U3RNTsMLlc+JQfCop7UjLLg27DuK7N1a61zufaLlG1f
        5ODaue4sx4PuUU6Ki0pY7EPEnjsDUvY=
X-Google-Smtp-Source: 
 ABdhPJzfvxgIpucSVaKIfaF+zi+C+hFNNk08SdZS9g9Piwygu4QotouqiXsKm/5X1dFpFRoTUqAnJg==
X-Received: by 2002:a17:90a:4404:: with SMTP id
 s4mr91755pjg.218.1621260094856;
        Mon, 17 May 2021 07:01:34 -0700 (PDT)
Received: from localhost.localdomain ([203.205.141.61])
        by smtp.googlemail.com with ESMTPSA id
 k10sm3074229pfu.175.2021.05.17.07.01.31
        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 17 May 2021 07:01:34 -0700 (PDT)
From: Wanpeng Li <kernellwp@gmail.com>
X-Google-Original-From: Wanpeng Li <wanpengli@tencent.com>
To: linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: Paolo Bonzini <pbonzini@redhat.com>,
        Sean Christopherson <seanjc@google.com>,
        Vitaly Kuznetsov <vkuznets@redhat.com>,
        Wanpeng Li <wanpengli@tencent.com>,
        Jim Mattson <jmattson@google.com>,
        Joerg Roedel <joro@8bytes.org>
Subject: [PATCH v3 5/5] KVM: LAPIC: Narrow the timer latency between
 wait_lapic_expire and world switch
Date: Mon, 17 May 2021 07:00:28 -0700
Message-Id: <1621260028-6467-5-git-send-email-wanpengli@tencent.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1621260028-6467-1-git-send-email-wanpengli@tencent.com>
References: <1621260028-6467-1-git-send-email-wanpengli@tencent.com>
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Wanpeng Li <wanpengli@tencent.com>

Let's treat lapic_timer_advance_ns automatically tune logic as hypervisor
overhead, move it before wait_lapic_expire instead of between wait_lapic_expire 
and the world switch, the wait duration should be calculated by the 
up-to-date guest_tsc after the overhead of automatically tune logic. This 
patch reduces ~30+ cycles for kvm-unit-tests/tscdeadline-latency when testing 
busy waits.

Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
---
 arch/x86/kvm/lapic.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/arch/x86/kvm/lapic.c b/arch/x86/kvm/lapic.c
index c0ebef560bd1..552d2acf89ab 100644
--- a/arch/x86/kvm/lapic.c
+++ b/arch/x86/kvm/lapic.c
@@ -1598,11 +1598,12 @@ static void __kvm_wait_lapic_expire(struct kvm_vcpu *vcpu)
 	guest_tsc = kvm_read_l1_tsc(vcpu, rdtsc());
 	apic->lapic_timer.advance_expire_delta = guest_tsc - tsc_deadline;
 
-	if (guest_tsc < tsc_deadline)
-		__wait_lapic_expire(vcpu, tsc_deadline - guest_tsc);
-
 	if (lapic_timer_advance_dynamic)
 		adjust_lapic_timer_advance(vcpu, apic->lapic_timer.advance_expire_delta);
+
+	guest_tsc = kvm_read_l1_tsc(vcpu, rdtsc());
+	if (guest_tsc < tsc_deadline)
+		__wait_lapic_expire(vcpu, tsc_deadline - guest_tsc);
 }
 
 void kvm_wait_lapic_expire(struct kvm_vcpu *vcpu)
