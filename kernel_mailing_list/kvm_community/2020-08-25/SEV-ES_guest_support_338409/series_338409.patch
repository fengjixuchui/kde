From patchwork Tue Aug 25 19:05:40 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Tom Lendacky <thomas.lendacky@amd.com>
X-Patchwork-Id: 11736265
Return-Path: <SRS0=SWjj=CD=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 4E831159A
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 25 Aug 2020 19:06:12 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 3213D2075E
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 25 Aug 2020 19:06:12 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (1024-bit key) header.d=amdcloud.onmicrosoft.com
 header.i=@amdcloud.onmicrosoft.com header.b="M82Qy+3a"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726556AbgHYTGL (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Tue, 25 Aug 2020 15:06:11 -0400
Received: from mail-co1nam11on2079.outbound.protection.outlook.com
 ([40.107.220.79]:49711
        "EHLO NAM11-CO1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726303AbgHYTGJ (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 25 Aug 2020 15:06:09 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=dNTUSg/BzxrQJeQN1Lk0yWyn1flm6UQuwvT+YtlKEkKqJVDXB3sKTvULP7DwIIvx7ZHDybGTF7b1AG/YBkvhGPVq1MUidIu5JtrIvGGD8gjzS8xK3+94e4tVspUrxGEE4KRezcgvSEyNjmZmLXngAM1mJ60kpPoFvd7j7Ct4BQ9r/sj4mkpdqWoMQHv6xt4VB94TPwBYzCnTdzh645mSG9pBmn4DsWy+7GiT9MFNTWjjQr+1lfBGOY4X3hnAW361PurD1xdf911lJpW9VX/eZJn17Gudafj6oE0thqeZ4j5mVlzWOnXT6amGqRsu+sr07VPDmV0GL/bcW1XxNBoqkA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=MJ+BpJng5csN/LA+I/qcPQkYM/tISIORmRx+LOYMnks=;
 b=DEV843dJZ+BpWDH+gOM/8Io6mBBUm7EKKcCObNRwnOkNxG4VXfTnfH12V/rrkbbnRqTQ1hCQ+3vCGM7GSq0RMxNwJgVb7KVWNLRCwuAWr+vCgzDq2L8yxIIoX/uNXBJCs1EgxMg3HxhRJ7GYyqk6Nfnoibpumx7w5WyvU9YPJQeC3o65BUDtOgeuuFIR/lhRAZcB2tcQibmRtwxV2mbwwVuD1LzQMDKlReDiOsTcEihk1FPebmoXJ/exkecxlHpH3EfoLz8IUMet1wPl8GpJX/0sKr9cXrEAajP15/Ig4giorT1+CjQNI22EB+iP4mSfx7XZR8EMvXmz37Md+zR1mQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=MJ+BpJng5csN/LA+I/qcPQkYM/tISIORmRx+LOYMnks=;
 b=M82Qy+3a5osu+M9iWrXfWqCt4Q6ovsq/0fY57AimJmUc45CHCL2+EqLxJGArbzRQF52vABdFVPBzhdMNPHKvugfitsqfQ/cmw3y3ZxebeS9JNpgoNCfCz8O5HWGM2hCzQvCOn0wPAE1XcsamneEG1H3Whockj4xdMTQQQy+0UBM=
Authentication-Results: nongnu.org; dkim=none (message not signed)
 header.d=none;nongnu.org; dmarc=none action=none header.from=amd.com;
Received: from DM5PR12MB1355.namprd12.prod.outlook.com (2603:10b6:3:6e::7) by
 DM5PR1201MB0219.namprd12.prod.outlook.com (2603:10b6:4:56::19) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.3305.25; Tue, 25 Aug 2020 19:06:06 +0000
Received: from DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346]) by DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346%3]) with mapi id 15.20.3305.026; Tue, 25 Aug 2020
 19:06:06 +0000
From: Tom Lendacky <thomas.lendacky@amd.com>
To: qemu-devel@nongnu.org, kvm@vger.kernel.org
Cc: Marcel Apfelbaum <marcel.apfelbaum@gmail.com>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Eduardo Habkost <ehabkost@redhat.com>,
        Richard Henderson <rth@twiddle.net>,
        Jiri Slaby <jslaby@suse.cz>,
        Marcelo Tosatti <mtosatti@redhat.com>,
        "Michael S . Tsirkin" <mst@redhat.com>
Subject: [PATCH 1/4] sev/i386: Add initial support for SEV-ES
Date: Tue, 25 Aug 2020 14:05:40 -0500
Message-Id: 
 <88dc46aaedd17a3509d7546a622a9754dad895cb.1598382343.git.thomas.lendacky@amd.com>
X-Mailer: git-send-email 2.28.0
In-Reply-To: <cover.1598382343.git.thomas.lendacky@amd.com>
References: <cover.1598382343.git.thomas.lendacky@amd.com>
X-ClientProxiedBy: DM5PR12CA0056.namprd12.prod.outlook.com
 (2603:10b6:3:103::18) To DM5PR12MB1355.namprd12.prod.outlook.com
 (2603:10b6:3:6e::7)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from 255.255.255.255 (255.255.255.255) by
 DM5PR12CA0056.namprd12.prod.outlook.com (2603:10b6:3:103::18) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3326.19 via Frontend
 Transport; Tue, 25 Aug 2020 19:06:05 +0000
X-Mailer: git-send-email 2.28.0
X-Originating-IP: [165.204.77.1]
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 0ddc2d9c-82a0-433d-cdcc-08d84929eb1c
X-MS-TrafficTypeDiagnostic: DM5PR1201MB0219:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <DM5PR1201MB02194578774DFC92EFC06EDCEC570@DM5PR1201MB0219.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:2043;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 DkWYuh3DAgGbkwvY6N0zDEGGnLrPTiyttB/aPom7rWNyU6KhXoCa+JES7AlQzbwpzX9CB4FtARrf37o57ANQtO648QaPdyhzw7kbzy+olcSh1Rju2lpQwzDxrf7PlTWuytO7krX68r+7zMHGx8dpQ4Jf6sihgFBboZW3MMzThwiaMn5tK/7yaHeEgCKPD58j4Msg9z+XTbgi9uy2jFS/dZ6/ra5U5HYWEPQIF/Lm+KFjDyVRSZv4DCb+1l987Od8VFTRs/STRoQI+FfEpkroRBuxQGtuVXm48fhQld1uYYAEusMNSq00BYAecSpn4ru2GCbDINHYBp4EsPM73bBiAxva7ygdFgVBEePoSxQhqkgxz7i+YnRJL3ZuJCPW4Xet3iALUsA3K+kpThZsjLaCpRqHK8rpm8KkGKPxJm4eqn8=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DM5PR12MB1355.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(396003)(136003)(376002)(39860400002)(366004)(346002)(4326008)(186003)(86362001)(8676002)(83380400001)(54906003)(16576012)(8936002)(6486002)(316002)(478600001)(36756003)(52116002)(26005)(6666004)(66556008)(2616005)(66476007)(66946007)(956004)(2906002)(5660300002)(136400200001)(309714004);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 p7myolQbTVCGy+rCIbIy9j9eW4HKvjP0mF9pvwIJ0vIAI7rjWGvlwYeNraOpydLV6YdigRW34S15Z02gFF3np6IASPUPrhB3myGJypURXtQanDErxeA2tPpGO6X/8leH3/yAaMZWT3bviziLv2nAB36etu2ocv9eP0ebCxhvhRLoeccTIaYaZK5P+k2vSfMz9I1EigeQnH1hErw6NNaSAkU2rmNK8OZqNXwI4f0JOPJRioXX/w94NsXvOUqssy/IY5CsqsNG8HUJOy2pBeY7/N8dcJi4xB1RmLbGneBkwipWFSFpDJBIzHRiK5DAkh2RT+7Ki8zFT6oSZGkszLcQE5+LipGb0l2+hH6zKCKoSXM9wmWdQWpa7LJLbW8nLXi/sckD6gyN3ruMLAlMDyhm1uXxPnWl3OWjodAK1U0v0xtpwoB9Dxu6DYziEn91N8YOvii38PD7EtxMg2hoGyWmtwDK29CzCtm9SJ6SBbKQFwS4FMP/vv1AFAUINU0gJt4/ZlTw5Z5nPVE4NH2fVuAzxdMcgezlP0m1HMJmCXEDDurcllYA/AvllReLMlD2WB+SN8TA27970wPC3GYzprq5bTP9Y0G2Ze6RC8JVcFDpFfzWrpuhGsJs1IP4tF2lfY8TbR5tU48WmpXqN+E3cFYr0Q==
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 0ddc2d9c-82a0-433d-cdcc-08d84929eb1c
X-MS-Exchange-CrossTenant-AuthSource: DM5PR12MB1355.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Aug 2020 19:06:06.2874
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 y8XaMQylx0Z9UlituBiJIcmFv2XuzITUrNwiRXmh2Jqu24apH7ziFH2W4KQvyZO1ifj4m9tbCw8LpJcpdDebCw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM5PR1201MB0219
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Tom Lendacky <thomas.lendacky@amd.com>

Provide initial support for SEV-ES. This includes creating a function to
indicate the guest is an SEV-ES guest (which will return false until all
support is in place), performing the proper SEV initialization and
ensuring that the guest CPU state is measured as part of the launch.

Co-developed-by: Jiri Slaby <jslaby@suse.cz>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
---
 target/i386/cpu.c      |  1 +
 target/i386/sev-stub.c |  5 +++++
 target/i386/sev.c      | 46 ++++++++++++++++++++++++++++++++++++++++--
 target/i386/sev_i386.h |  1 +
 4 files changed, 51 insertions(+), 2 deletions(-)

diff --git a/target/i386/cpu.c b/target/i386/cpu.c
index 588f32e136..bbbe581d35 100644
--- a/target/i386/cpu.c
+++ b/target/i386/cpu.c
@@ -5969,6 +5969,7 @@ void cpu_x86_cpuid(CPUX86State *env, uint32_t index, uint32_t count,
         break;
     case 0x8000001F:
         *eax = sev_enabled() ? 0x2 : 0;
+        *eax |= sev_es_enabled() ? 0x8 : 0;
         *ebx = sev_get_cbit_position();
         *ebx |= sev_get_reduced_phys_bits() << 6;
         *ecx = 0;
diff --git a/target/i386/sev-stub.c b/target/i386/sev-stub.c
index 88e3f39a1e..040ac90563 100644
--- a/target/i386/sev-stub.c
+++ b/target/i386/sev-stub.c
@@ -49,3 +49,8 @@ SevCapability *sev_get_capabilities(Error **errp)
     error_setg(errp, "SEV is not available in this QEMU");
     return NULL;
 }
+
+bool sev_es_enabled(void)
+{
+    return false;
+}
diff --git a/target/i386/sev.c b/target/i386/sev.c
index c3ecf86704..6c9cd0854b 100644
--- a/target/i386/sev.c
+++ b/target/i386/sev.c
@@ -359,6 +359,12 @@ sev_enabled(void)
     return !!sev_guest;
 }
 
+bool
+sev_es_enabled(void)
+{
+    return false;
+}
+
 uint64_t
 sev_get_me_mask(void)
 {
@@ -578,6 +584,22 @@ sev_launch_update_data(SevGuestState *sev, uint8_t *addr, uint64_t len)
     return ret;
 }
 
+static int
+sev_launch_update_vmsa(SevGuestState *sev)
+{
+    int ret, fw_error;
+
+    ret = sev_ioctl(sev->sev_fd, KVM_SEV_LAUNCH_UPDATE_VMSA, NULL, &fw_error);
+    if (ret) {
+        error_report("%s: LAUNCH_UPDATE_VMSA ret=%d fw_error=%d '%s'",
+                __func__, ret, fw_error, fw_error_to_str(fw_error));
+        goto err;
+    }
+
+err:
+    return ret;
+}
+
 static void
 sev_launch_get_measure(Notifier *notifier, void *unused)
 {
@@ -590,6 +612,14 @@ sev_launch_get_measure(Notifier *notifier, void *unused)
         return;
     }
 
+    if (sev_es_enabled()) {
+        /* measure all the VM save areas before getting launch_measure */
+        ret = sev_launch_update_vmsa(sev);
+        if (ret) {
+            exit(1);
+        }
+    }
+
     measurement = g_new0(struct kvm_sev_launch_measure, 1);
 
     /* query the measurement blob length */
@@ -684,7 +714,7 @@ sev_guest_init(const char *id)
 {
     SevGuestState *sev;
     char *devname;
-    int ret, fw_error;
+    int ret, fw_error, cmd;
     uint32_t ebx;
     uint32_t host_cbitpos;
     struct sev_user_data_status status = {};
@@ -745,8 +775,20 @@ sev_guest_init(const char *id)
     sev->api_major = status.api_major;
     sev->api_minor = status.api_minor;
 
+    if (sev_es_enabled()) {
+        if (!(status.flags & SEV_STATUS_FLAGS_CONFIG_ES)) {
+            error_report("%s: guest policy requires SEV-ES, but "
+                         "host SEV-ES support unavailable",
+                         __func__);
+            goto err;
+        }
+        cmd = KVM_SEV_ES_INIT;
+    } else {
+        cmd = KVM_SEV_INIT;
+    }
+
     trace_kvm_sev_init();
-    ret = sev_ioctl(sev->sev_fd, KVM_SEV_INIT, NULL, &fw_error);
+    ret = sev_ioctl(sev->sev_fd, cmd, NULL, &fw_error);
     if (ret) {
         error_report("%s: failed to initialize ret=%d fw_error=%d '%s'",
                      __func__, ret, fw_error, fw_error_to_str(fw_error));
diff --git a/target/i386/sev_i386.h b/target/i386/sev_i386.h
index 4db6960f60..4f9a5e9b21 100644
--- a/target/i386/sev_i386.h
+++ b/target/i386/sev_i386.h
@@ -29,6 +29,7 @@
 #define SEV_POLICY_SEV          0x20
 
 extern bool sev_enabled(void);
+extern bool sev_es_enabled(void);
 extern uint64_t sev_get_me_mask(void);
 extern SevInfo *sev_get_info(void);
 extern uint32_t sev_get_cbit_position(void);

From patchwork Tue Aug 25 19:05:41 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Tom Lendacky <thomas.lendacky@amd.com>
X-Patchwork-Id: 11736267
Return-Path: <SRS0=SWjj=CD=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id A353F159A
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 25 Aug 2020 19:06:24 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 7F2142075F
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 25 Aug 2020 19:06:24 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (1024-bit key) header.d=amdcloud.onmicrosoft.com
 header.i=@amdcloud.onmicrosoft.com header.b="2sIZU4YI"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726831AbgHYTGX (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Tue, 25 Aug 2020 15:06:23 -0400
Received: from mail-bn7nam10on2056.outbound.protection.outlook.com
 ([40.107.92.56]:7937
        "EHLO NAM10-BN7-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726471AbgHYTGR (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 25 Aug 2020 15:06:17 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=ZJv7bHW3sqYN3ZdWO0NJY7sjyJpAdeV9qc1eE2kWzcft41UR8ZTxc7H/CixSuiw9ryksD9d5mONIpxFaEABv3wYjm3l/qanV3lC0/scauP/TIB/XrVazDVDtSzDOw1BCcCFBh0arK9tSHMmcwgIvSHaz+Qix9zXxixFcKLyqSZLIO6PdqE4ZFtt20ZBngqz1vmSZeHjnfWW93tyfcLuYoYL3/gjgDPG/QziIUQa7gfGGDSCajMpqvaSqOmI9u9fEX4sjbLbwdFoz7SKnmGDBrOnQAOYzjV2aQepHzuorBa2zdeODRqtIEtYit0HEGET8xJZ7xRkxxleuqrl3snb7DQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=nXpZsopJUS+9+DSP2X2MdQm/93801DxJ2bVFn2+m9Uo=;
 b=RZGexH1ylyWpGR+itYOuR2DbnDlb4kf4Oh48G0P7Bf0WnEZb2y3EHb5pY3mfSNWixbsywSt/EkvlYIzRYfyln3kLftGebggRT1QG3TFrg89BE0Ua6sHfAsP7GWCWK4Ggw/B8eXxABtbK35mrxsWf7Mgm3n7SZkSjCsfIYtq/F7dA/UNPJVLxyPiNroSMe/5Z6hoNSlIw4HvN9oMCgmI/toCMKnmGDl+YbbB+v94jS1ctwd4djm9zpHw/iYftTkQc/BAyHPKwQo3v5ocQ58gLuLgHE2sNKE54hMaOOPdGhjETljmGZ4ovgVOxOhXSn/xDM0Mu+pgHux0IlhTY/zANNQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=nXpZsopJUS+9+DSP2X2MdQm/93801DxJ2bVFn2+m9Uo=;
 b=2sIZU4YI9MQohUUcL5NyGwGa+pyzHgFrbbQWGeH/xd/E6hR6F1GVvnwpOItd2J9KfiowQPzvOYR0kF32pFlThvlZT4c3+noSzwR/efuZ+70omgBbH26ffGW98B8xcBlH7ZyHH2Fc8dNnZdtUuNdbgTRJMoBrw9Ofx0Qo/WFYK0E=
Authentication-Results: nongnu.org; dkim=none (message not signed)
 header.d=none;nongnu.org; dmarc=none action=none header.from=amd.com;
Received: from DM5PR12MB1355.namprd12.prod.outlook.com (2603:10b6:3:6e::7) by
 DM5PR1201MB0219.namprd12.prod.outlook.com (2603:10b6:4:56::19) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.3305.25; Tue, 25 Aug 2020 19:06:14 +0000
Received: from DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346]) by DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346%3]) with mapi id 15.20.3305.026; Tue, 25 Aug 2020
 19:06:14 +0000
From: Tom Lendacky <thomas.lendacky@amd.com>
To: qemu-devel@nongnu.org, kvm@vger.kernel.org
Cc: Marcel Apfelbaum <marcel.apfelbaum@gmail.com>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Eduardo Habkost <ehabkost@redhat.com>,
        Richard Henderson <rth@twiddle.net>,
        Jiri Slaby <jslaby@suse.cz>,
        Marcelo Tosatti <mtosatti@redhat.com>,
        "Michael S . Tsirkin" <mst@redhat.com>
Subject: [PATCH 2/4] sev/i386: Allow AP booting under SEV-ES
Date: Tue, 25 Aug 2020 14:05:41 -0500
Message-Id: 
 <a3fc1bfb697a85865710fa99a3e1169e7d355a18.1598382343.git.thomas.lendacky@amd.com>
X-Mailer: git-send-email 2.28.0
In-Reply-To: <cover.1598382343.git.thomas.lendacky@amd.com>
References: <cover.1598382343.git.thomas.lendacky@amd.com>
X-ClientProxiedBy: DM6PR03CA0066.namprd03.prod.outlook.com
 (2603:10b6:5:100::43) To DM5PR12MB1355.namprd12.prod.outlook.com
 (2603:10b6:3:6e::7)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from 255.255.255.255 (255.255.255.255) by
 DM6PR03CA0066.namprd03.prod.outlook.com (2603:10b6:5:100::43) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3305.25 via Frontend
 Transport; Tue, 25 Aug 2020 19:06:13 +0000
X-Mailer: git-send-email 2.28.0
X-Originating-IP: [165.204.77.1]
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 133609e1-5380-4e50-025a-08d84929efe6
X-MS-TrafficTypeDiagnostic: DM5PR1201MB0219:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <DM5PR1201MB0219DA90A6F92B26E270E141EC570@DM5PR1201MB0219.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:568;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 Ue0KsU/mk1CqW8Oib4jeLn33wRBxqkrtMZmzZlWEetuVXZjSVXhY8La90LV8VIJ4j7YtXlWS/+/0w4hZ6N7Y/4n0HDu4sxB8KLt9iKg0RIAP/EE1tKqhm3MJnraczx1YM01EfIbsoSjbRjBU1QASZynLR7WPHcf8kw2Xal+gYOPKNr7WeFyAbdIlDMv5kbafI+Kyaa3pnVNX1DYfXoUCgvf0o9HoyPUrEUoCOi2QSkjb5JeLcwsk1ZN2HPMpzHk9aSvgsUTT44V+X6JAQL/JKg+NuaKg0D1E2WIwAfIzdzc0RzVNjzT0Tv/u8N5qvxBXwpBTiFpxDF1Hllpgd4TbkmVMsPCl9gj2A9MsSB8lCMLBScZ9C7QkAfVRw8FiOfJc
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DM5PR12MB1355.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(396003)(136003)(376002)(39860400002)(366004)(346002)(4326008)(186003)(86362001)(8676002)(83380400001)(54906003)(16576012)(8936002)(6486002)(316002)(478600001)(36756003)(52116002)(26005)(6666004)(66556008)(2616005)(66476007)(66946007)(956004)(2906002)(5660300002)(136400200001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 JbVVL9uA5aRZp/eJZxp2sMZMBDx7+Or2HzlsR9kVU7nq1At1ueTOTezchmi4pMT0jKZFMiQDy1LDK5n3c85pXG3KVV0+YmcAMQbeax4WArTpxSNVlOg5BKsXBD508xer18CrNFd9VZqB+JApO8v1M28feouzeimO4/qZgkIx0+t9WhZVfJfdWwchxztu3cEIkGzDkNPTCnXNts6nci6rarimZ/CY2cOCHMWCpyPN/vw9oylBec5p29+A/GU3VSZOeFRuU3WlV8TX5gmMCEc0s2o9SsqEldyM3spi699DoTNn0D0VcHU3ycd6ZyAI1XSxYX5kIYwzhJrk1zTz+APZR26rTPnF85e0sdZtZp5E675+zqX2E/hdbHpqiyKaHeKeI4GxVfcWYkYG1PoaNNHjvHJpf03hOJge0G8mcJpUryKZKox5bZTgG2HNb2+lKu4QlWNn2eX1S9hwsTS+Uqum01Q1HhuAG08wRtbQiFuxYNCC86i3JG7lf0MVTGnqbDvMOkVO2f0f6IVtbcrxlWU9SacKRBF2YCp2YLblSplOx3xLDBd9Lru/mktxf+6Seu8tJ9bjXt6o6cQgJNr9QqpKRIfsrB7UVwGkIDYl86L9N9yfbCXDzFcZVu5V4oeLuskWiEhjAjXjnJdx7RDYNDLZRw==
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 133609e1-5380-4e50-025a-08d84929efe6
X-MS-Exchange-CrossTenant-AuthSource: DM5PR12MB1355.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Aug 2020 19:06:14.3149
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 Oe10q60ni7whalyQp92I5PHAqq/HPrk6K6GmYabWACWqKs31vb7zt4rC3q3WdJ8ZVJ9Ua5rZlJaJaSN8X+TIPQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM5PR1201MB0219
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Tom Lendacky <thomas.lendacky@amd.com>

When SEV-ES is enabled, it is not possible modify the guests register
state after it has been initially created, encrypted and measured.

Normally, an INIT-SIPI-SIPI request is used to boot the AP. However, the
hypervisor cannot emulate this because it cannot update the AP register
state. For the very first boot by an AP, the reset vector CS segment
value and the EIP value must be programmed before the register has been
encrypted and measured.

Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
---
 accel/kvm/kvm-all.c    | 60 ++++++++++++++++++++++++++++++++++++++++++
 accel/stubs/kvm-stub.c |  5 ++++
 hw/i386/pc_sysfw.c     | 10 ++++++-
 include/sysemu/kvm.h   | 16 +++++++++++
 include/sysemu/sev.h   |  2 ++
 target/i386/kvm.c      |  2 ++
 target/i386/sev.c      | 47 +++++++++++++++++++++++++++++++++
 7 files changed, 141 insertions(+), 1 deletion(-)

diff --git a/accel/kvm/kvm-all.c b/accel/kvm/kvm-all.c
index 63ef6af9a1..54e8fd098d 100644
--- a/accel/kvm/kvm-all.c
+++ b/accel/kvm/kvm-all.c
@@ -39,6 +39,7 @@
 #include "qemu/main-loop.h"
 #include "trace.h"
 #include "hw/irq.h"
+#include "sysemu/kvm.h"
 #include "sysemu/sev.h"
 #include "qapi/visitor.h"
 #include "qapi/qapi-types-common.h"
@@ -120,6 +121,11 @@ struct KVMState
     /* memory encryption */
     void *memcrypt_handle;
     int (*memcrypt_encrypt_data)(void *handle, uint8_t *ptr, uint64_t len);
+    int (*memcrypt_save_reset_vector)(void *handle, void *flash_ptr, uint64_t flash_size, uint32_t *addr);
+
+    unsigned int reset_cs;
+    unsigned int reset_ip;
+    bool reset_valid;
 
     /* For "info mtree -f" to tell if an MR is registered in KVM */
     int nr_as;
@@ -239,6 +245,59 @@ int kvm_memcrypt_encrypt_data(uint8_t *ptr, uint64_t len)
     return 1;
 }
 
+void kvm_memcrypt_set_reset_vector(CPUState *cpu)
+{
+    X86CPU *x86;
+    CPUX86State *env;
+
+    /* Only update if we have valid reset information */
+    if (!kvm_state->reset_valid)
+        return;
+
+    /* Do not update the BSP reset state */
+    if (cpu->cpu_index == 0)
+        return;
+
+    x86 = X86_CPU(cpu);
+    env = &x86->env;
+
+    cpu_x86_load_seg_cache(env, R_CS, 0xf000, kvm_state->reset_cs, 0xffff,
+                           DESC_P_MASK | DESC_S_MASK | DESC_CS_MASK |
+                           DESC_R_MASK | DESC_A_MASK);
+
+    env->eip = kvm_state->reset_ip;
+}
+
+int kvm_memcrypt_save_reset_vector(void *flash_ptr, uint64_t flash_size)
+{
+    CPUState *cpu;
+    uint32_t addr;
+    int ret;
+
+    if (kvm_memcrypt_enabled() &&
+        kvm_state->memcrypt_save_reset_vector) {
+
+        addr = 0;
+        ret = kvm_state->memcrypt_save_reset_vector(kvm_state->memcrypt_handle,
+                                                    flash_ptr, flash_size, &addr);
+        if (ret) {
+            return ret;
+        }
+
+        if (addr) {
+            kvm_state->reset_cs = addr & 0xffff0000;
+            kvm_state->reset_ip = addr & 0x0000ffff;
+            kvm_state->reset_valid = true;
+
+            CPU_FOREACH(cpu) {
+                kvm_memcrypt_set_reset_vector(cpu);
+            }
+        }
+    }
+
+    return 0;
+}
+
 /* Called with KVMMemoryListener.slots_lock held */
 static KVMSlot *kvm_get_free_slot(KVMMemoryListener *kml)
 {
@@ -2193,6 +2252,7 @@ static int kvm_init(MachineState *ms)
         }
 
         kvm_state->memcrypt_encrypt_data = sev_encrypt_data;
+        kvm_state->memcrypt_save_reset_vector = sev_es_save_reset_vector;
     }
 
     ret = kvm_arch_init(ms, s);
diff --git a/accel/stubs/kvm-stub.c b/accel/stubs/kvm-stub.c
index 82f118d2df..3aece9b513 100644
--- a/accel/stubs/kvm-stub.c
+++ b/accel/stubs/kvm-stub.c
@@ -114,6 +114,11 @@ int kvm_memcrypt_encrypt_data(uint8_t *ptr, uint64_t len)
   return 1;
 }
 
+int kvm_memcrypt_save_reset_vector(void *flash_ptr, uint64_t flash_size)
+{
+    return -ENOSYS;
+}
+
 #ifndef CONFIG_USER_ONLY
 int kvm_irqchip_add_msi_route(KVMState *s, int vector, PCIDevice *dev)
 {
diff --git a/hw/i386/pc_sysfw.c b/hw/i386/pc_sysfw.c
index b6c0822fe3..321ff94261 100644
--- a/hw/i386/pc_sysfw.c
+++ b/hw/i386/pc_sysfw.c
@@ -156,7 +156,8 @@ static void pc_system_flash_map(PCMachineState *pcms,
     PFlashCFI01 *system_flash;
     MemoryRegion *flash_mem;
     void *flash_ptr;
-    int ret, flash_size;
+    uint64_t flash_size;
+    int ret;
 
     assert(PC_MACHINE_GET_CLASS(pcms)->pci_enabled);
 
@@ -204,6 +205,13 @@ static void pc_system_flash_map(PCMachineState *pcms,
             if (kvm_memcrypt_enabled()) {
                 flash_ptr = memory_region_get_ram_ptr(flash_mem);
                 flash_size = memory_region_size(flash_mem);
+
+                ret = kvm_memcrypt_save_reset_vector(flash_ptr, flash_size);
+                if (ret) {
+                    error_report("failed to locate and/or save reset vector");
+                    exit(1);
+                }
+
                 ret = kvm_memcrypt_encrypt_data(flash_ptr, flash_size);
                 if (ret) {
                     error_report("failed to encrypt pflash rom");
diff --git a/include/sysemu/kvm.h b/include/sysemu/kvm.h
index b4174d941c..f74cfa85ab 100644
--- a/include/sysemu/kvm.h
+++ b/include/sysemu/kvm.h
@@ -247,6 +247,22 @@ bool kvm_memcrypt_enabled(void);
  */
 int kvm_memcrypt_encrypt_data(uint8_t *ptr, uint64_t len);
 
+/**
+ * kvm_memcrypt_set_reset_vector - sets the CS/IP value for the AP if SEV-ES
+ *                                 is active.
+ */
+void kvm_memcrypt_set_reset_vector(CPUState *cpu);
+
+/**
+ * kvm_memcrypt_save_reset_vector - locates and saves the reset vector to be
+ *                                  used as the initial CS/IP value for APs
+ *                                  if SEV-ES is active.
+ *
+ * Return: 1 SEV-ES is active and failed to locate a valid reset vector
+ *         0 SEV-ES is not active or successfully located and saved the
+ *           reset vector address
+ */
+int kvm_memcrypt_save_reset_vector(void *flash_prt, uint64_t flash_size);
 
 #ifdef NEED_CPU_H
 #include "cpu.h"
diff --git a/include/sysemu/sev.h b/include/sysemu/sev.h
index 98c1ec8d38..f48bfa55a7 100644
--- a/include/sysemu/sev.h
+++ b/include/sysemu/sev.h
@@ -18,4 +18,6 @@
 
 void *sev_guest_init(const char *id);
 int sev_encrypt_data(void *handle, uint8_t *ptr, uint64_t len);
+int sev_es_save_reset_vector(void *handle, void *flash_ptr, uint64_t flash_size, uint32_t *addr);
+
 #endif
diff --git a/target/i386/kvm.c b/target/i386/kvm.c
index 6f18d940a5..10eaba8943 100644
--- a/target/i386/kvm.c
+++ b/target/i386/kvm.c
@@ -1912,6 +1912,8 @@ void kvm_arch_reset_vcpu(X86CPU *cpu)
     }
     /* enabled by default */
     env->poll_control_msr = 1;
+
+    kvm_memcrypt_set_reset_vector(CPU(cpu));
 }
 
 void kvm_arch_do_init_vcpu(X86CPU *cpu)
diff --git a/target/i386/sev.c b/target/i386/sev.c
index 6c9cd0854b..5146b788fb 100644
--- a/target/i386/sev.c
+++ b/target/i386/sev.c
@@ -70,6 +70,18 @@ struct SevGuestState {
 #define DEFAULT_GUEST_POLICY    0x1 /* disable debug */
 #define DEFAULT_SEV_DEVICE      "/dev/sev"
 
+/* SEV Information Block GUID = 00f771de-1a7e-4fcb-890e-68c77e2fb44e */
+#define SEV_INFO_BLOCK_GUID "\xde\x71\xf7\x00\x7e\x1a\xcb\x4f\x89\x0e\x68\xc7\x7e\x2f\xb4\x4e"
+
+typedef struct __attribute__((__packed__)) SevInfoBlock {
+    /* SEV-ES Reset Vector Address */
+    uint32_t reset_addr;
+
+    /* SEV Information Block size and GUID */
+    uint16_t size;
+    char guid[16];
+} SevInfoBlock;
+
 static SevGuestState *sev_guest;
 static Error *sev_mig_blocker;
 
@@ -827,6 +839,41 @@ sev_encrypt_data(void *handle, uint8_t *ptr, uint64_t len)
     return 0;
 }
 
+int
+sev_es_save_reset_vector(void *handle, void *flash_ptr, uint64_t flash_size, uint32_t *addr)
+{
+    SevInfoBlock *info;
+
+    assert(handle);
+
+    /* Initialize the address to zero. An address of zero with a sucessful
+     * return code indicates that SEV-ES is not active.
+     */
+    *addr = 0;
+    if (!sev_es_enabled()) {
+        return 0;
+    }
+
+    /* Extract the AP reset vector for SEV-ES guests by locating the SEV GUID.
+     * The SEV GUID is located 32 bytes from the end of the flash. Use this
+     * address to base the SEV information block.
+     */
+    info = flash_ptr + flash_size - 0x20 - sizeof(*info);
+    if (memcmp(info->guid, SEV_INFO_BLOCK_GUID, 16)) {
+        error_report("SEV information block not found in pflash rom");
+        return 1;
+    }
+
+    if (!info->reset_addr) {
+        error_report("SEV-ES reset address is zero");
+        return 1;
+    }
+
+    *addr = info->reset_addr;
+
+    return 0;
+}
+
 static void
 sev_register_types(void)
 {

From patchwork Tue Aug 25 19:05:42 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Tom Lendacky <thomas.lendacky@amd.com>
X-Patchwork-Id: 11736269
Return-Path: <SRS0=SWjj=CD=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 98A7316B1
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 25 Aug 2020 19:06:28 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 7B7702075F
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 25 Aug 2020 19:06:28 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (1024-bit key) header.d=amdcloud.onmicrosoft.com
 header.i=@amdcloud.onmicrosoft.com header.b="foGvAMRC"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726799AbgHYTG1 (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Tue, 25 Aug 2020 15:06:27 -0400
Received: from mail-bn7nam10on2056.outbound.protection.outlook.com
 ([40.107.92.56]:7937
        "EHLO NAM10-BN7-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726777AbgHYTGZ (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 25 Aug 2020 15:06:25 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=IbTEsnU2PcNmjfk1FeN7Sk/CqflXDjRK0Vi761brPaUnHHBpl8bLTNVvmiFvbzbkEht7kU0tZaj3/agziSm+pMkPwgQlCLZ0XWPE9hKzbNdgJW0sPFOCGBHdYqmsywLyGhCa29IuLs5u/2nEPk6wWYeJArdgyMJ1Ir5n/BrTEr0IYSisxekepuN3/ZmLcCU+V15xDk5QTdbssUbIGJK+dHYlqNreQV7XVg7bmGxf6y6wIKXQJJYmIVwYN74TvA0nVdRKfx7qWq4q4vJqWfFhCBGkEd4iyGBwinmMGduYpo19WHWyYQtIUAH9ITtfoD59rRSqrxrCwi/duJkTnib1Kw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Ad/nf83l2epmwPr5uQxGiDbyaCIjQcn72MgaSbtOkXA=;
 b=M8EHC6/nS8IzHuLK73BMceH8VgTfM1r4EkJCb82jKIBcHD+UwkwL7JZXF4Tu3SdP+U9mbs1htuG/A7MgzWV5oGZMYf9fFA1H/yDjJxWAjSgsTz2VIfEyDPb53NV15h8Xw8QIfIp8rdFSZe6KDmiqTij+4waDCZ3/vBQPrCxTFswfpuv8O51C5+9RR9iDGsKWgnXClWncLxlsJX+kY5bnSnpPRKxtM96HTlwOQJoesuikWV3o02OvzjCHCaW37WBLhBsE6QmTC+KQx609FzziTo8OkM0+pFn4ktYh+sWiuD7y8BxtXvhJm+24je51ZZ2RFEkXxWgLy+dis++Vk17v9g==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Ad/nf83l2epmwPr5uQxGiDbyaCIjQcn72MgaSbtOkXA=;
 b=foGvAMRCEW8GyRVdLX0sEV9JV5MSsFheVArnXkuzkcuL45ULTVdYU+6WPhQICqbMKk2+NtSLb3qXkgoKsuN/TnaFdyxd+U7H9nQzlQ4TjnFHYnpACLk//WUN8if2Go385OEsqnLQPZWM4Lrl/ubrs9Ua/a/V3qrpvkzzLyieEvc=
Authentication-Results: nongnu.org; dkim=none (message not signed)
 header.d=none;nongnu.org; dmarc=none action=none header.from=amd.com;
Received: from DM5PR12MB1355.namprd12.prod.outlook.com (2603:10b6:3:6e::7) by
 DM5PR1201MB0219.namprd12.prod.outlook.com (2603:10b6:4:56::19) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.3305.25; Tue, 25 Aug 2020 19:06:22 +0000
Received: from DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346]) by DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346%3]) with mapi id 15.20.3305.026; Tue, 25 Aug 2020
 19:06:22 +0000
From: Tom Lendacky <thomas.lendacky@amd.com>
To: qemu-devel@nongnu.org, kvm@vger.kernel.org
Cc: Marcel Apfelbaum <marcel.apfelbaum@gmail.com>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Eduardo Habkost <ehabkost@redhat.com>,
        Richard Henderson <rth@twiddle.net>,
        Jiri Slaby <jslaby@suse.cz>,
        Marcelo Tosatti <mtosatti@redhat.com>,
        "Michael S . Tsirkin" <mst@redhat.com>
Subject: [PATCH 3/4] sev/i386: Don't allow a system reset under an SEV-ES
 guest
Date: Tue, 25 Aug 2020 14:05:42 -0500
Message-Id: 
 <b394ef2e743ebd57d3b8fb5ce1d5069c030ffcfc.1598382343.git.thomas.lendacky@amd.com>
X-Mailer: git-send-email 2.28.0
In-Reply-To: <cover.1598382343.git.thomas.lendacky@amd.com>
References: <cover.1598382343.git.thomas.lendacky@amd.com>
X-ClientProxiedBy: DM5PR04CA0072.namprd04.prod.outlook.com
 (2603:10b6:3:ef::34) To DM5PR12MB1355.namprd12.prod.outlook.com
 (2603:10b6:3:6e::7)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from 255.255.255.255 (255.255.255.255) by
 DM5PR04CA0072.namprd04.prod.outlook.com (2603:10b6:3:ef::34) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3326.19 via Frontend
 Transport; Tue, 25 Aug 2020 19:06:21 +0000
X-Mailer: git-send-email 2.28.0
X-Originating-IP: [165.204.77.1]
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: a38ec267-063a-45b1-c359-08d84929f481
X-MS-TrafficTypeDiagnostic: DM5PR1201MB0219:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <DM5PR1201MB021916684866E417C76DD181EC570@DM5PR1201MB0219.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:418;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 EiazKAsyb/ymA9ReNqx5WgUJskeRDjbriiMy6NmfTvxbD/M8oYbeflFNxLNjXm+RGoVASt5DYZ0vt2REp3cCOYHjM2lLsa1cD4gdDaEZxMKhjOmozB4umTWNfU7cEpXzrn4Tg8jGeKnIYsVlq9WxL6svLQA1YOyxpgrjVxKd0WjQlsvWV+9fZo6Hu9IR1h3bWvJniVHncSHB1scDXIJNklh3JUkk8pJeu9mqHibwEJDOUCjc9+dmZhv9fhUtsLKCzEaPRPGsMCPafZt0cI8WpvdmpY88cOB8NjshfBT1v0jchFciptNmLNseByk5TuT4NlgXwFtoapMm46u8nbrtmK2Bs2tbk8vMFkOuPhnRv2KUwrVLVaRoC7hhyx0TOm3H
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DM5PR12MB1355.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(396003)(136003)(376002)(39860400002)(366004)(346002)(4326008)(186003)(86362001)(8676002)(83380400001)(54906003)(16576012)(8936002)(6486002)(316002)(478600001)(36756003)(52116002)(26005)(6666004)(66556008)(2616005)(66476007)(66946007)(956004)(2906002)(5660300002)(136400200001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 9VCSk67WJUEOHaTTwrZqZoiXgwHBbN+q1M/xqCyPImdsttk8WKcrv6r6jHCsAKtH8BMe1ChQsM+BNb5rSi4/vmwK7I5SJHmYgrn/OJVX6OaturzwUQE79zn8a3V9+sRdj1VaqbGHvNF3YOvZ6XTBH2HOTWJSxb+UE4L9MGKFShAfXPhIrkrUJCsxKwa09VD4kR3GyA0jS6xTh6xJMWpgquUn0/r3lzjWt0bArjT5sS+OeCB7LBgIRwXMZZTgBKmtIkbtNwC+69wguwrGKesuitwGC+JTs2hUnAX9mTj18BbCSNu9OObDLSPuL2ueJq/6VElJEgxH5yd6D00cc2wgC863YpXvmUugUP4C9ldrS/lRDtUpc3d9XawpyzVXgAa40cQD/wtdyo/3/vx7Zk/hvYRyg3s84Dp6qCQ3vDNNKAqLA22mCFjGBdCq0k4tA/njoTHI0kPZTPj7f4J9mtQmfq2X/E2OL4Jfrfha8Vdo9yEBCDBeZSKlO5P9GOPdFmeMNSmsDUdjRLhX9Uqk6OynuPAzMLTml6WilEVCc9d8M7MQx4ea8G3z+usF08O0pkQiFDAWDCD2kQMPHldAcHV8Efai87goCrfMpSrh8CMHWxVJjR70ZjGx01aFKhKVpB4MNpx3HfYmSdZKSq7EHUMqVA==
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 a38ec267-063a-45b1-c359-08d84929f481
X-MS-Exchange-CrossTenant-AuthSource: DM5PR12MB1355.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Aug 2020 19:06:22.1595
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 v+uFI3g/d6iQaD+m+iMFNXsY17cdfNDFDzwAE5/71u6ErD9UgK+BBeHQBYYqza96iR+ngBhQMMfeGb1ssb0mcA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM5PR1201MB0219
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Tom Lendacky <thomas.lendacky@amd.com>

An SEV-ES guest does not allow register state to be altered once it has
been measured. When a SEV-ES guest issues a reboot command, Qemu will
reset the vCPU state and resume the guest. This will cause failures under
SEV-ES, so prevent that from occurring.

Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
---
 accel/kvm/kvm-all.c       | 8 ++++++++
 include/sysemu/cpus.h     | 2 ++
 include/sysemu/hw_accel.h | 4 ++++
 include/sysemu/kvm.h      | 2 ++
 softmmu/cpus.c            | 5 +++++
 softmmu/vl.c              | 5 ++++-
 6 files changed, 25 insertions(+), 1 deletion(-)

diff --git a/accel/kvm/kvm-all.c b/accel/kvm/kvm-all.c
index 54e8fd098d..1d925821b2 100644
--- a/accel/kvm/kvm-all.c
+++ b/accel/kvm/kvm-all.c
@@ -2384,6 +2384,14 @@ void kvm_flush_coalesced_mmio_buffer(void)
     s->coalesced_flush_in_progress = false;
 }
 
+bool kvm_cpu_check_resettable(void)
+{
+    /* If we have a valid reset vector override, then SEV-ES is active
+     * and the CPU can't be reset.
+     */
+    return !kvm_state->reset_valid;
+}
+
 static void do_kvm_cpu_synchronize_state(CPUState *cpu, run_on_cpu_data arg)
 {
     if (!cpu->vcpu_dirty) {
diff --git a/include/sysemu/cpus.h b/include/sysemu/cpus.h
index 3c1da6a018..6d688c757f 100644
--- a/include/sysemu/cpus.h
+++ b/include/sysemu/cpus.h
@@ -24,6 +24,8 @@ void dump_drift_info(void);
 void qemu_cpu_kick_self(void);
 void qemu_timer_notify_cb(void *opaque, QEMUClockType type);
 
+bool cpu_is_resettable(void);
+
 void cpu_synchronize_all_states(void);
 void cpu_synchronize_all_post_reset(void);
 void cpu_synchronize_all_post_init(void);
diff --git a/include/sysemu/hw_accel.h b/include/sysemu/hw_accel.h
index e128f8b06b..1fddf4f5e1 100644
--- a/include/sysemu/hw_accel.h
+++ b/include/sysemu/hw_accel.h
@@ -17,6 +17,10 @@
 #include "sysemu/hvf.h"
 #include "sysemu/whpx.h"
 
+static inline bool cpu_check_resettable(void)
+{
+    return kvm_enabled() ? kvm_cpu_check_resettable() : true;
+}
 static inline void cpu_synchronize_state(CPUState *cpu)
 {
     if (kvm_enabled()) {
diff --git a/include/sysemu/kvm.h b/include/sysemu/kvm.h
index f74cfa85ab..eb94bbbff9 100644
--- a/include/sysemu/kvm.h
+++ b/include/sysemu/kvm.h
@@ -494,6 +494,8 @@ int kvm_physical_memory_addr_from_host(KVMState *s, void *ram_addr,
 
 #endif /* NEED_CPU_H */
 
+bool kvm_cpu_check_resettable(void);
+
 void kvm_cpu_synchronize_state(CPUState *cpu);
 void kvm_cpu_synchronize_post_reset(CPUState *cpu);
 void kvm_cpu_synchronize_post_init(CPUState *cpu);
diff --git a/softmmu/cpus.c b/softmmu/cpus.c
index a802e899ab..32f286643f 100644
--- a/softmmu/cpus.c
+++ b/softmmu/cpus.c
@@ -927,6 +927,11 @@ void hw_error(const char *fmt, ...)
     abort();
 }
 
+bool cpu_is_resettable(void)
+{
+    return cpu_check_resettable();
+}
+
 void cpu_synchronize_all_states(void)
 {
     CPUState *cpu;
diff --git a/softmmu/vl.c b/softmmu/vl.c
index 4eb9d1f7fd..422fbb1650 100644
--- a/softmmu/vl.c
+++ b/softmmu/vl.c
@@ -1475,7 +1475,10 @@ void qemu_system_guest_crashloaded(GuestPanicInformation *info)
 
 void qemu_system_reset_request(ShutdownCause reason)
 {
-    if (no_reboot && reason != SHUTDOWN_CAUSE_SUBSYSTEM_RESET) {
+    if (!cpu_is_resettable()) {
+        error_report("cpus are not resettable, terminating");
+        shutdown_requested = reason;
+    } else if (no_reboot && reason != SHUTDOWN_CAUSE_SUBSYSTEM_RESET) {
         shutdown_requested = reason;
     } else {
         reset_requested = reason;

From patchwork Tue Aug 25 19:05:43 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Tom Lendacky <thomas.lendacky@amd.com>
X-Patchwork-Id: 11736271
Return-Path: <SRS0=SWjj=CD=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 6E7DA16B1
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 25 Aug 2020 19:06:37 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 54E622075F
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 25 Aug 2020 19:06:37 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (1024-bit key) header.d=amdcloud.onmicrosoft.com
 header.i=@amdcloud.onmicrosoft.com header.b="CbBt/T9U"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726839AbgHYTGg (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Tue, 25 Aug 2020 15:06:36 -0400
Received: from mail-bn7nam10on2068.outbound.protection.outlook.com
 ([40.107.92.68]:10080
        "EHLO NAM10-BN7-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726840AbgHYTGc (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 25 Aug 2020 15:06:32 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=X2jzrRPJ8/FLEwWrIkIiz57hacjxNNnGAK0Ty6EAsuWPibtYVKYLHu8PzgEPGXLXRFRikVah8r5AhW/IYGKrWh25666OEAT+w7X5763FuAg0lXkgss8OZJ2cvgL819LVebM5TJBI/L27djmruwRwQDWXhAwKA4llMk+kakuX7D2Zzbh7z4mWlAArhEU/qcQouSQNIrb81iUWO66vQsTA0r+0RejjbP4hOqzNCoql8PC3ZXysSlB3T1J+1DCZFAgvy1b8otUYIc1lzlD0Wo/TL7eedeG4QRdmeTLjO5yN3j9rmWg6TGeTaHsPdgf2/BOkK7MtSvDG7EbUc2gDvjXFIQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Ow1m4GXEZvMOOFuF2jbpJkKWGA1rQF6Uh32xVVBeyYY=;
 b=f949HC/wABCK7vrQwMZueC7ubGmqEYHaLYw/awLdp86wCxtZBuxkMcp6PlGiIdy4NBsmtVczqcvK/gIed3UjnIQwEGmmgZwMb8nZkE4/uvz8CuNrZx6Y9gTy+IGOlcLigt3a3LppIaYe/qLrC1OEIyyp+SSvkUoadKigVKtUiwFeSwPomURR5BjXUG80Y4uPIOj4EYllIIZv2n4W3gIJ1QpTwqmQbz/60NIUWYPPn6fh4m9Zi2I882s5S3U7X60+cTc1Zs572qZeui2aa306x737mAulx17UZIvXpVe4UZvpki4oDkKUgWzgEJ2SMnt32KsXgAICFibBWCRj37JEHA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Ow1m4GXEZvMOOFuF2jbpJkKWGA1rQF6Uh32xVVBeyYY=;
 b=CbBt/T9U0oR+io47rhdNhG/t1vt+AuTV0Vwt/uQDuJaOXcB5ToErF1FYbB02vsIhiIrHXVFuU388TdBFfDpRjZ4TvlziKP+IV+zAvyTnBNAIZygQf+wfCKqLGJY9x/umHHXACkDyegOhC/DbRN/QHB2cUPeNJVM6FmAyzAR3wbg=
Authentication-Results: nongnu.org; dkim=none (message not signed)
 header.d=none;nongnu.org; dmarc=none action=none header.from=amd.com;
Received: from DM5PR12MB1355.namprd12.prod.outlook.com (2603:10b6:3:6e::7) by
 DM5PR1201MB0219.namprd12.prod.outlook.com (2603:10b6:4:56::19) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.3305.25; Tue, 25 Aug 2020 19:06:29 +0000
Received: from DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346]) by DM5PR12MB1355.namprd12.prod.outlook.com
 ([fe80::299a:8ed2:23fc:6346%3]) with mapi id 15.20.3305.026; Tue, 25 Aug 2020
 19:06:29 +0000
From: Tom Lendacky <thomas.lendacky@amd.com>
To: qemu-devel@nongnu.org, kvm@vger.kernel.org
Cc: Marcel Apfelbaum <marcel.apfelbaum@gmail.com>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Eduardo Habkost <ehabkost@redhat.com>,
        Richard Henderson <rth@twiddle.net>,
        Jiri Slaby <jslaby@suse.cz>,
        Marcelo Tosatti <mtosatti@redhat.com>,
        "Michael S . Tsirkin" <mst@redhat.com>
Subject: [PATCH 4/4] sev/i386: Enable an SEV-ES guest based on SEV policy
Date: Tue, 25 Aug 2020 14:05:43 -0500
Message-Id: 
 <8390c20d2f7e638d166f7b771c3e11363a7852f6.1598382343.git.thomas.lendacky@amd.com>
X-Mailer: git-send-email 2.28.0
In-Reply-To: <cover.1598382343.git.thomas.lendacky@amd.com>
References: <cover.1598382343.git.thomas.lendacky@amd.com>
X-ClientProxiedBy: DM5PR13CA0065.namprd13.prod.outlook.com
 (2603:10b6:3:117::27) To DM5PR12MB1355.namprd12.prod.outlook.com
 (2603:10b6:3:6e::7)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from 255.255.255.255 (255.255.255.255) by
 DM5PR13CA0065.namprd13.prod.outlook.com (2603:10b6:3:117::27) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3326.10 via Frontend
 Transport; Tue, 25 Aug 2020 19:06:29 +0000
X-Mailer: git-send-email 2.28.0
X-Originating-IP: [165.204.77.1]
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: bf206588-4478-40b8-1fdd-08d84929f930
X-MS-TrafficTypeDiagnostic: DM5PR1201MB0219:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <DM5PR1201MB0219A795677B14EA9DC4EF3CEC570@DM5PR1201MB0219.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:9508;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 8TxRoL0qImlDHXNa/LRrjIuYg43uUWsRKVsTlQQiTlKpIlE1w89ZdtP9YI+FNoUMb7LftmuFk/kCHV5qGJcYDavOKCxIOEuuy3u6MA1K0cNKJpquDgdZM/L+Jz8pQKzZ+4G2lUmryO8n8KpKIL8rIv3o7wc5CCAd5jiD0SPUm2/2ywZxwKZ0M8McMGnY5yiAH3MTgHgYKcroLXI0U1V4izxdD7SRxDkwKkNknLP4SFfeskRIgbi5ds46P2xLQn0zhzUXLFPk/Nm+HXKNyfxWRYtRMG5a8j6hHVWiK3cKhPICqZvTkh8PC0Ri9Lnf/4RnZr9+op+SGnunadfOqv0h1VRlHf0Q2/FAW9jKUti+0jNA4i566+3b6Z2LsrydT49g
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DM5PR12MB1355.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(396003)(136003)(376002)(39860400002)(366004)(346002)(4326008)(186003)(86362001)(8676002)(83380400001)(54906003)(16576012)(8936002)(6486002)(316002)(478600001)(36756003)(52116002)(26005)(6666004)(66556008)(2616005)(66476007)(66946007)(956004)(2906002)(5660300002)(136400200001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 v9USAGvmyJacV4ftxTaw7YDNOgeBBeb2KTecAr3sguftgZROGaFvn4xacEiMq0aenoiYrtjKviuKh/vx/rwSxToO4CUVTG+qLbvHmVuiTs1y9o+9sNm3esze/6c1B0YSW2lxtvmBYXC1XYYLdPstrkrzUe1j6Inud4iJiBq/76dD6EYjw8IK3iHSvBeY6hYSVFE3eaN6kLd4QLzyLmM+Bq4EIbwNzQLwPwVDoM96WmFtBmWyYJq0rZaRjwWJHg63AmIHVAW0ngE+Cl9XAvOazaTgWtkrgDfumBbU4sbeBFXCRbnTP7Iz38cf1vybK2fsVpvF57bkodaMuxmFzlnqyP1wcB+6UKrKYciWMqsawUJ98HxGxVmdpcgLrhx6Hr3txU+B0IaazeV0u4Kkwz4BPY83ztOUd0LxOJA0HwG3ZLW5+HD9JLUtsNlO32s54TdTlz7Ox3VgMBa165Imo2CtqiAcBDXx+SAI044DJucF0hxAnQXhUWF+rbSpPNL4rIlVd64XvlfW7fy829FljVr4qj9y8PgMFURJcnZ5WNMgFA+WWYpAA+T+ZAIVIrphvpT+h+s/wZF5TK2b4WhoAvq2A94rJYixlQs3JRMREcZ+x0DQ4kcXNrWYFZEqKybfpi6ZTK2oxqkhaNbnM15RBwgFGQ==
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 bf206588-4478-40b8-1fdd-08d84929f930
X-MS-Exchange-CrossTenant-AuthSource: DM5PR12MB1355.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Aug 2020 19:06:29.8871
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 LY+WXkQ5tcVGnyGltdJIeO2p44VTO2hBlsBhIhUDkMIN0kpgO5szAy4zkjEsFdy3mRs5KxscjThILRcqbp3+ww==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM5PR1201MB0219
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Tom Lendacky <thomas.lendacky@amd.com>

Update the sev_es_enabled() function return value to be based on the SEV
policy that has been specified. SEV-ES is enabled if SEV is enabled and
the SEV-ES policy bit is set in the policy object.

Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
---
 target/i386/sev.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/target/i386/sev.c b/target/i386/sev.c
index 5146b788fb..153c2cba2c 100644
--- a/target/i386/sev.c
+++ b/target/i386/sev.c
@@ -70,6 +70,8 @@ struct SevGuestState {
 #define DEFAULT_GUEST_POLICY    0x1 /* disable debug */
 #define DEFAULT_SEV_DEVICE      "/dev/sev"
 
+#define GUEST_POLICY_SEV_ES_BIT (1 << 2)
+
 /* SEV Information Block GUID = 00f771de-1a7e-4fcb-890e-68c77e2fb44e */
 #define SEV_INFO_BLOCK_GUID "\xde\x71\xf7\x00\x7e\x1a\xcb\x4f\x89\x0e\x68\xc7\x7e\x2f\xb4\x4e"
 
@@ -374,7 +376,7 @@ sev_enabled(void)
 bool
 sev_es_enabled(void)
 {
-    return false;
+    return (sev_enabled() && (sev_guest->policy & GUEST_POLICY_SEV_ES_BIT));
 }
 
 uint64_t
