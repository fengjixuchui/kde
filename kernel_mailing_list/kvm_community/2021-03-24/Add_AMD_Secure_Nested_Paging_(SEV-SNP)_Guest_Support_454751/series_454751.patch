From patchwork Wed Mar 24 16:44:12 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12161687
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id A63AAC433E2
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:29 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 6825361A0E
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:29 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236610AbhCXQo6 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Wed, 24 Mar 2021 12:44:58 -0400
Received: from mail-bn8nam12on2055.outbound.protection.outlook.com
 ([40.107.237.55]:61165
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S236512AbhCXQoo (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 24 Mar 2021 12:44:44 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=BPG66eJktK8b5iPmyHLhuf/TOMbTkxOXlVWNrXDJWV39VPu0sSq6d+FkbaPtPeDhh8zBNWEUvFIAyturN+acU7UFJ9CEMuqLBu9UXH0Q9DT0SYFrSRWRsx5aAv6dlPtTAwyeGpQPmWouYYfK8D7shPJ9JxKWozfXt87G7NznaG+8LpbiJ8VA2++5h7j4fUjzSXPrk5L6WRaup/vRhOru5SGSP8nqjR2XNNNLbkULaYrHT8ci/vLCIIyqD3QC+gmdtJr6kxUJN99Rx8Ki7CUCAxBteTrfuVx3IapMu5vOuhDwMyq1buviiTGKJX5PRrAieeLG1/Qisvr1jTVNDB7YJQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=P1ZsLS3VYeU7Lc/sTMx0EH63IpRTYdy8IAEWThPE4yc=;
 b=QlPZoLcw9k/916SpEMq/6rqaozZPdQVPfPHHo1uEgcu9DG4s2VMOgyBp8b0SWiAamiOVnAC72r6cXoHaEPtFzGYcf4GIR1jnE0FxgYAzS+dkrE19AI1ehZy0sHD1QXvJOLbJ22UjMQFvaBQjdEkVaFd77fMwIxSZPEWCWlnAXqTyQrfRl+EomhFZy7xA6cAzy2av2GEy3+VP6UEqH5VMhD5TUyVCwlZaUNqgCkDIhZA40M/D6lgfoVkjl0vIfLtgosr1S0X831F1wo0ymptDApbo7/8uTj4ozynStJFyjAeeKQlcrOzvqOjFIOQ3ZXF3xL/p2mMu44gGlJM0FFEdHQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=P1ZsLS3VYeU7Lc/sTMx0EH63IpRTYdy8IAEWThPE4yc=;
 b=hHH/SQVsCjtJUrQ3IcZSHKwSIy6ioPxYsm6xTvok+aaQxDL9+NdYeo94/78DdM1OBze+ObFTssA1H26VE/Na1C56vsUS5oHCkMsSbxtoyy7gww/DWuaCiCo9mssEk4wHVUcCuKD7rPj/Wqc+4R51wrNkuH9Bv0MQdu2w8WxwXnI=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN1PR12MB2447.namprd12.prod.outlook.com (2603:10b6:802:27::22) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3955.18; Wed, 24 Mar
 2021 16:44:39 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d%3]) with mapi id 15.20.3955.027; Wed, 24 Mar 2021
 16:44:39 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: linux-kernel@vger.kernel.org, x86@kernel.org, kvm@vger.kernel.org
Cc: ak@linux.intel.com, Brijesh Singh <brijesh.singh@amd.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        Joerg Roedel <jroedel@suse.de>,
        "H. Peter Anvin" <hpa@zytor.com>, Tony Luck <tony.luck@intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Tom Lendacky <thomas.lendacky@amd.com>,
        David Rientjes <rientjes@google.com>,
        Sean Christopherson <seanjc@google.com>
Subject: [RFC Part1 PATCH 01/13] x86/cpufeatures: Add SEV-SNP CPU feature
Date: Wed, 24 Mar 2021 11:44:12 -0500
Message-Id: <20210324164424.28124-2-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210324164424.28124-1-brijesh.singh@amd.com>
References: <20210324164424.28124-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SA0PR11CA0010.namprd11.prod.outlook.com
 (2603:10b6:806:d3::15) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SA0PR11CA0010.namprd11.prod.outlook.com (2603:10b6:806:d3::15) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.24 via Frontend
 Transport; Wed, 24 Mar 2021 16:44:37 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: a41b520e-8759-4794-8141-08d8eee41d37
X-MS-TrafficTypeDiagnostic: SN1PR12MB2447:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN1PR12MB24477BDCA52DD3A802D614CDE5639@SN1PR12MB2447.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:4941;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 v6rsIdyU9RbV9HW+vE2uoO3BTjFF45ATUm34+lr+TzBwZtd9mJvse+Jqv/C+CvfNhDkwkjWqGr/HVrTp+K7LFgwYR8sZnimapO9taUz2RIJaSSK8TR4KQEXGFe858GBa/0mnwf9KPo39ObUHh3qA1wkV49ikCCpLCiG0uhFfggmQEXDYgUvleWGSV/8AUBqbELXUxMHNx550g0OHsckZ5E1OeERahQZ7SBKvAdZgiUcJe+6sMnovsxqfBWpueGQEPMjwSY1WZEcY5nwgnoaG5GWro+tAZ3IFoldRE1JDp4UpG0zVVD+h5FkK4tA/ZWUZgOVBXgQVpmlHKI4W5X3mfUuVJddIelqLYYx0FGc6bjh8Iy/dAaBeChApOmGCjM+OYSQMmjLUkNlYQsowd9aZwx3Q5ohy2t/bB3XkTVWPMNm7JQFWDe+uZvXo8VRoN3BT9deAmQ9YEAWMykFhAX/AI5g2mYoTuh1PiqMjn8Zd3E1dWRkmWZnSUHoydXHKgZkh7eL4ODJfrkor9kulGQhwtm2Rx7kGVqKRoGerkWYgIHqK5g6vds70fJq/TXibWeOCiyuOruO0URb9mJ2jZaGN/l1onWvQMBUQpDTqVdL6Qep3ZFgYAdrg1QCY8krG/qlue0dndLWF0lDlKO1+7T3cUWkJMIMnLbEyLUNM8D6OgHU=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(346002)(396003)(136003)(366004)(16526019)(38100700001)(5660300002)(26005)(44832011)(36756003)(1076003)(54906003)(8676002)(316002)(83380400001)(8936002)(4326008)(956004)(2906002)(186003)(6486002)(86362001)(7416002)(2616005)(66946007)(7696005)(478600001)(66556008)(66476007)(52116002)(6666004);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 A4JvgWKerJE4pb8+bnjhCwe2EX+m9LRnjzUaQvI6Fq31hL6MHXFVTLiTIdukWzJ1fovvWodvp0DYcWSxzN1b3fQ7nh3nNV6hFj3VhTyjWCrmsMJUQ9M4fK4k+RqPuIBFXKzrk0Jb7KS+c15+rQT5GHxfw59/zmvlTv356gI+uI4T+KYlFCBiOlBF8NA7hKera8PseDfTinpnufGsml2Q4Yg2Ck4i7nr1E8FoqzVRIpFwvvQGiA4wxHIjUb5oE6S56jvWujOHrPQjlG3njMsE595mDm84ZgXl9Cmc9T28rCS00fUgT3Yw+rywdldZW2iujHEfutk5xzt7X25Usby2voaupZCc0aaP8p8XOQm1MZCBrJu9PQUsbKKZ7FsXaWqfbY1HLuhTnEi1r+fcSuPLhPybBcQUMC0NgEH5sc4+2VAM/FXVdmIGwE/Q8xgU8uXLnUcGunMQYuqDwavPnctawvpT/KaH9pyZcrHmCau1vt0TCjesbn9IJoEfJWZeGfMZ5THA2jFgbnJ4zK5NmkelVWsWS4w85v07WFLuncwks2J1VrRm9bNYRBpo6xODf/Au9DHklSdp/LI2n4RRzFqNg2JA7jltmpQTNJbIEfmDYmBKt9aM8/tu4Hq9nhOyONIMAbmeg48y5y8BIcivhoiYct3s/iomMVPTxF+TCK52MsFRGB/2J3BhGmW8yyAIOfC7zH3MSUwf6yHKY9odzIufaMdabKdYCd5Nd0VydYF8drgfKiI4xq6ANh/2P3WfhYz4IliJp5jHMV4i33S7Wakfhsxgy3wCqKgB7pR/L9SgQznb5w19VUzIKFkRKioj3wSbhF0t/R5kEt/YeVHzglV8DkkmcSw9Sis9Yvcm+l+D4/EhrvB/9VELqWHs66RDRgqhOog2g+ZkCKPFP0/YgKTSqonrCS7c7Q/B31t3Lfa8mHjdByP0tlZ9u2PbIb1psjpGaAJUR2ozTwWmZ35AMIO0kVv/2weEbGrNZBD+QylToS2A/KeLCRO7rZV7XLB4eKCqpJqvxsf2dnrUVy1v/1Rp1x2fcCnKMBjFolPEdL8X2xMA+ny06XCO8irYCAxmK6m8DBHu5puRz0ocGfU5J4IBYM5As2ltsaGDkBfn44onEoZcCzVSYN+d+wE3/F3/l5ANcYAPjV5Iui4AVxjlitTkKJ2MUXJV7UJG4zuxR/5OPVc8vtSWSSTFXmXFFuOLvGaO+lZxnS8RXbAtqPQZp9nNGALF63Z8CXIXOyUICvfoDqmF/9Z+E2Yy9on5cEW6yOP98JiCAvBb5qQogPkPoLLweyGOfT5tu/Bk1uCPkVwXS2BSG9k84gDP/QdTIIv467lt
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 a41b520e-8759-4794-8141-08d8eee41d37
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2021 16:44:38.5075
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 ttnaftJOCDW5xmHuV2UKieGVvPCqqcnTffaJbDYpZrRd08jTEjK3pi8fnlwTWyf4lzIHBDBbcYcIoud4f99EUQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN1PR12MB2447
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Add CPU feature detection for Secure Encrypted Virtualization with
Secure Nested Paging. This feature adds a strong memory integrity
protection to help prevent malicious hypervisor-based attacks like
data replay, memory re-mapping, and more.

Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Joerg Roedel <jroedel@suse.de>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Tony Luck <tony.luck@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Sean Christopherson <seanjc@google.com>
Cc: x86@kernel.org
Cc: kvm@vger.kernel.org
Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/cpufeatures.h | 1 +
 arch/x86/kernel/cpu/amd.c          | 3 ++-
 arch/x86/kernel/cpu/scattered.c    | 1 +
 3 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/arch/x86/include/asm/cpufeatures.h b/arch/x86/include/asm/cpufeatures.h
index 84b887825f12..a5b369f10bcd 100644
--- a/arch/x86/include/asm/cpufeatures.h
+++ b/arch/x86/include/asm/cpufeatures.h
@@ -238,6 +238,7 @@
 #define X86_FEATURE_VMW_VMMCALL		( 8*32+19) /* "" VMware prefers VMMCALL hypercall instruction */
 #define X86_FEATURE_SEV_ES		( 8*32+20) /* AMD Secure Encrypted Virtualization - Encrypted State */
 #define X86_FEATURE_VM_PAGE_FLUSH	( 8*32+21) /* "" VM Page Flush MSR is supported */
+#define X86_FEATURE_SEV_SNP		( 8*32+22) /* AMD Secure Encrypted Virtualization - Secure Nested Paging */
 
 /* Intel-defined CPU features, CPUID level 0x00000007:0 (EBX), word 9 */
 #define X86_FEATURE_FSGSBASE		( 9*32+ 0) /* RDFSBASE, WRFSBASE, RDGSBASE, WRGSBASE instructions*/
diff --git a/arch/x86/kernel/cpu/amd.c b/arch/x86/kernel/cpu/amd.c
index f8ca66f3d861..39f7a4b5b04c 100644
--- a/arch/x86/kernel/cpu/amd.c
+++ b/arch/x86/kernel/cpu/amd.c
@@ -586,7 +586,7 @@ static void early_detect_mem_encrypt(struct cpuinfo_x86 *c)
 	 *	      If BIOS has not enabled SME then don't advertise the
 	 *	      SME feature (set in scattered.c).
 	 *   For SEV: If BIOS has not enabled SEV then don't advertise the
-	 *            SEV and SEV_ES feature (set in scattered.c).
+	 *            SEV, SEV_ES and SEV_SNP feature (set in scattered.c).
 	 *
 	 *   In all cases, since support for SME and SEV requires long mode,
 	 *   don't advertise the feature under CONFIG_X86_32.
@@ -618,6 +618,7 @@ static void early_detect_mem_encrypt(struct cpuinfo_x86 *c)
 clear_sev:
 		setup_clear_cpu_cap(X86_FEATURE_SEV);
 		setup_clear_cpu_cap(X86_FEATURE_SEV_ES);
+		setup_clear_cpu_cap(X86_FEATURE_SEV_SNP);
 	}
 }
 
diff --git a/arch/x86/kernel/cpu/scattered.c b/arch/x86/kernel/cpu/scattered.c
index 236924930bf0..eaec1278dc2e 100644
--- a/arch/x86/kernel/cpu/scattered.c
+++ b/arch/x86/kernel/cpu/scattered.c
@@ -45,6 +45,7 @@ static const struct cpuid_bit cpuid_bits[] = {
 	{ X86_FEATURE_SEV_ES,		CPUID_EAX,  3, 0x8000001f, 0 },
 	{ X86_FEATURE_SME_COHERENT,	CPUID_EAX, 10, 0x8000001f, 0 },
 	{ X86_FEATURE_VM_PAGE_FLUSH,	CPUID_EAX,  2, 0x8000001f, 0 },
+	{ X86_FEATURE_SEV_SNP,		CPUID_EAX,  4, 0x8000001f, 0 },
 	{ 0, 0, 0, 0, 0 }
 };
 

From patchwork Wed Mar 24 16:44:13 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12161673
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 847ADC433E1
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:29 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 597EF61A14
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:29 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236600AbhCXQo5 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Wed, 24 Mar 2021 12:44:57 -0400
Received: from mail-bn8nam12on2055.outbound.protection.outlook.com
 ([40.107.237.55]:61165
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S236526AbhCXQoo (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 24 Mar 2021 12:44:44 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=l199L+V4Ge089NWVG3wErxFWsgGricRNfA32GAN99V4ExFD7+T4mnGZkqpzWpvoouy6ASAJJKqxbZGK14NGV0pWgaiUU+PJq4fSrd0S3198o39Ddy0kOsnwXZSQDs5sQHzLg4XabxdUArBAAhjhm1HKbXyne5/j7xJrBiZYgIfj1ghlcsEhKULuIZJsI0nIalUlqzo4+yv+ddVcZxTxJY66HjgZe3XyWStnTGPCUcWmSQSPPp0qah5qiCHhVjWSbcSi4td+rtfJvdF2dlDF37kapVuGdspqpxt5xmApZQWRXsaObm+QzglxBWrbxeYnxP3+NNjiKDpExYFuVZdcE5A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=F2NZ/x5l9g3J9T9OeEShBfA14lpT0Z5ht9s1VtNtVes=;
 b=ETBvkNSVh6HU5pnv62b/psTkta9CF+z9Yx5+kuZu92c9PA2lU3jnwpueV5fSzVbcUuDQ1ROWMjm7xFVZaEEii+sIQofhWHyV7fzvlfza/Yl6O3rFk6crc8dB5P0jlxr/mDXcoGli6+T16xEKtrLgzEQAa1X98QTPd0ItvNbSTowhtlTgM1npnZQ/RA/hbfpVs+HqnnslqUk28T+6lBTJkONXMM5cmcdL8gtDp6zVuDDnkpEdR9coXhBAdQQx4RXjt26GpgS7AsBJ4rWC6DArg84YBtr0DP1qANkLY7qaIpGiKvsnOSVlBH1E+Mimhei1rZYSNfiDkPYLBaWUTNN4Aw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=F2NZ/x5l9g3J9T9OeEShBfA14lpT0Z5ht9s1VtNtVes=;
 b=a4NAEKpq0q9JqBodYpaLTrEy1q3xXDEn2zc4pj0d2I2h69k1n0ptpUrxe6DWdLVP/hAngWbVL7q+oNwisWyb7+hS7BAvhTdAGT/JaoZg9crXEpUthSFgoSa1/JeXZIKwhrhVi1ipBnuSbmWM7ElTtUgg/R6bwP2UoJPu0qHYVZQ=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN1PR12MB2447.namprd12.prod.outlook.com (2603:10b6:802:27::22) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3955.18; Wed, 24 Mar
 2021 16:44:39 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d%3]) with mapi id 15.20.3955.027; Wed, 24 Mar 2021
 16:44:39 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: linux-kernel@vger.kernel.org, x86@kernel.org, kvm@vger.kernel.org
Cc: ak@linux.intel.com, Brijesh Singh <brijesh.singh@amd.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        Joerg Roedel <jroedel@suse.de>,
        "H. Peter Anvin" <hpa@zytor.com>, Tony Luck <tony.luck@intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Tom Lendacky <thomas.lendacky@amd.com>,
        David Rientjes <rientjes@google.com>,
        Sean Christopherson <seanjc@google.com>
Subject: [RFC Part1 PATCH 02/13] x86/mm: add sev_snp_active() helper
Date: Wed, 24 Mar 2021 11:44:13 -0500
Message-Id: <20210324164424.28124-3-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210324164424.28124-1-brijesh.singh@amd.com>
References: <20210324164424.28124-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SA0PR11CA0010.namprd11.prod.outlook.com
 (2603:10b6:806:d3::15) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SA0PR11CA0010.namprd11.prod.outlook.com (2603:10b6:806:d3::15) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.24 via Frontend
 Transport; Wed, 24 Mar 2021 16:44:38 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 3b8ae719-fcde-4577-58ff-08d8eee41dc3
X-MS-TrafficTypeDiagnostic: SN1PR12MB2447:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN1PR12MB2447EEA587502202A498183AE5639@SN1PR12MB2447.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6430;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 5Qf+YoSr5ur7bPrY5YoUgrWmqDeLQPTntdstwKnjGjyL25uAF7UYK0IYOlCT8Te9Qh/LxF5FZ/eA4EvwwvDZm2xQ1CAuWDKt8jU4eSvQ8h8nMVv4VcV1LJHtcDsiq7xHvGou4hJD2pQ2YCY19C3YXfLgHn1z6bURbHnhkp5g/lIOufHH2BakhyQJwFolWTq6/tql1XHXtYsIA3dU0Zq8+jlaiA9F5rQ8mziCw+tFFGnRjAYy5k2WbuyYYEdVjNr/e90p5lCfVVhrWy9bc+nApvEXiH6x1RvI36NDebY6LUbxTjI9uUghdiAAZKDNsi0LuRH8BR8TgvpAtFRNhKYM4EN197L5jbX1W7LROJDOGMzBquklelZ5C/VprlkWyO6sA6R5N7LN2CgKg1AQfn9nOUa/B8a+Nelz8kNDYaEmGFcXAvEDC1Ge3txnFKgUJZ5yf8YgMiG73bc+nvBtvih8I3TZIHt37HIuSAvxKJv14DyoFfP5NAgcoqzIvrzBZ3NgTkrE8aIkNq42fLGHItoeZNLr/3i+RFT9Zfseph417tN/LEuFVPHkhjXMjddXE4cKH/VghlciMQ1zfbztIdW6Y4pvGErkDMnMBeUlTfxhHTBzG4uiA43Cz2JoAichtBEf6xYhHSJb1FYPPCsP3xrOfdAoZw58XEQc3Iz11i1q+po=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(346002)(396003)(136003)(366004)(16526019)(38100700001)(5660300002)(26005)(44832011)(36756003)(1076003)(54906003)(8676002)(316002)(8936002)(4326008)(956004)(2906002)(186003)(6486002)(86362001)(7416002)(2616005)(66946007)(7696005)(478600001)(66556008)(66476007)(52116002)(6666004);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 Kj0AFu9969HfJLrKBn1vT6GhX6xdeub9uV/+wJeWsAHM6tQ3yh7/f1hE9AGXQBBXz+wzxzZ/U5ZWqxzqHqjHfl6ro9d31pOn1ilurulPG5mvgJxBciqwxmm2dCJ4imGeKQLLIRYjEpeQ6dI6brcarMHGM62lzOP8DDHRGCZM09+RpUyaKLKMQJvwHDt6XrVTjL0jyeVXKMI79m6u4LFUgeQZDGPRZcZZLz0dyC9y1jaKy8obBVMJJAmPv3u5Nn/r05p6kze3b0qG8T32ko5WbdRKblLk0TZQbz6GFzDffpRJHy2XqkCADUc9VNtvhw1lmYsuqhfWm6LD8rjNkWVMQ+cM8Iq6rsw+lLJyZ7LZdGK+jPbyusa614DJuEwkc7D5jYw1qrRdLWL8/Gfr5wiEBBm5mhJqjXqs44ZQUicT0v/Xnwxm+XHoBxO9T/jD012qIS1GJD+7LkZLDuhL3zsIeFecfVHkoHqvok2iktsVWUGpM40lvbppagmNv+sSsIEbgkHdG2SkyD/gpWRF66VzYzuoPR+cYzGQkGW+k3m4e0ei5WLNjqanyb/XNSbfUDSXBryaEoMR02SY9DAPCXxqfc3yBFCzi9CzDQBrBUzLRYmYkH805aPW9ba5Udd6wmqoXwgYOOFGraBTG9dg3qsyywy3yc8UxiFfoSwnUFmr+P+24sdf1uXUNol6UX9gDbA5n9Ywd1ZV1RRNTnfbqVG51eSItcjiTfUxTIi2IgpYvIIwaHr7pxunaQBNK8lFoBR2pZkviKL4b74DPSi8lwSfAB0wD5GpdudRlKJjZ0LnZuG/ciqBs3tZjS7ODWuqrnENlO4nThiOtZiFy1SVTsQPiLyvRgrYT96coAqWJxxcHrMTn0FEyWz/p1o+HnhS+2aYzNBlpW0naUMYCwjfS56H0Efe2GIBKDqfUxEN48obqzK45McsaLXg8QB39YGYUwbbfEOEBU8lestcJiInYSJlSwt00Pyn5s5aO/yoUg0rnwBcWnTD6H2zP0su4qBBMVi4VCr1/C1waE8m/EpvUY+VDpiep3UWo/F6vj6aRC0kaLH7xllH/syp9dtBueuqFzvZdmZH7CfhtC0q0zgr7siIHb4cirLVQztmLvBcMenn8M3OOoag7PZVhMpIUthQgl5Qn7LTOemK0J/zHLMl6rHH6i0ALWmAlwdIwXThZKYvTEmlEmiLvoqn0RLGTjthYpWaVvwX3bVEe88wI519thjTTwnRF6cPe62dLDHwu0K3QjXbl5ym13a4v1ownEEMe9iK4ynL5eMQn4mFR9dff+7mS8mXgrOVG3wdKcv2GcuoAWFe1IBi6BlUgFpS3v3Iy4cx
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 3b8ae719-fcde-4577-58ff-08d8eee41dc3
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2021 16:44:39.4119
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 xbMaWGVs1GKQ/8ilnzFRxeWWfHx3x6t0e9vnJYW4ZqPOXV2ch/hrcfnJZwOOFfp6wRD1HKsc78N7IoEhlmiSjg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN1PR12MB2447
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The sev_snp_active() helper can be used by the guest to query whether the
SNP - Secure Nested Paging feature is active.

Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Joerg Roedel <jroedel@suse.de>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Tony Luck <tony.luck@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Sean Christopherson <seanjc@google.com>
Cc: x86@kernel.org
Cc: kvm@vger.kernel.org
Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/mem_encrypt.h | 2 ++
 arch/x86/include/asm/msr-index.h   | 2 ++
 arch/x86/mm/mem_encrypt.c          | 9 +++++++++
 3 files changed, 13 insertions(+)

diff --git a/arch/x86/include/asm/mem_encrypt.h b/arch/x86/include/asm/mem_encrypt.h
index 31c4df123aa0..d99aa260d328 100644
--- a/arch/x86/include/asm/mem_encrypt.h
+++ b/arch/x86/include/asm/mem_encrypt.h
@@ -54,6 +54,7 @@ void __init sev_es_init_vc_handling(void);
 bool sme_active(void);
 bool sev_active(void);
 bool sev_es_active(void);
+bool sev_snp_active(void);
 
 #define __bss_decrypted __section(".bss..decrypted")
 
@@ -79,6 +80,7 @@ static inline void sev_es_init_vc_handling(void) { }
 static inline bool sme_active(void) { return false; }
 static inline bool sev_active(void) { return false; }
 static inline bool sev_es_active(void) { return false; }
+static inline bool sev_snp_active(void) { return false; }
 
 static inline int __init
 early_set_memory_decrypted(unsigned long vaddr, unsigned long size) { return 0; }
diff --git a/arch/x86/include/asm/msr-index.h b/arch/x86/include/asm/msr-index.h
index 546d6ecf0a35..b03694e116fe 100644
--- a/arch/x86/include/asm/msr-index.h
+++ b/arch/x86/include/asm/msr-index.h
@@ -477,8 +477,10 @@
 #define MSR_AMD64_SEV			0xc0010131
 #define MSR_AMD64_SEV_ENABLED_BIT	0
 #define MSR_AMD64_SEV_ES_ENABLED_BIT	1
+#define MSR_AMD64_SEV_SNP_ENABLED_BIT	2
 #define MSR_AMD64_SEV_ENABLED		BIT_ULL(MSR_AMD64_SEV_ENABLED_BIT)
 #define MSR_AMD64_SEV_ES_ENABLED	BIT_ULL(MSR_AMD64_SEV_ES_ENABLED_BIT)
+#define MSR_AMD64_SEV_SNP_ENABLED	BIT_ULL(MSR_AMD64_SEV_SNP_ENABLED_BIT)
 
 #define MSR_AMD64_VIRT_SPEC_CTRL	0xc001011f
 
diff --git a/arch/x86/mm/mem_encrypt.c b/arch/x86/mm/mem_encrypt.c
index c3d5f0236f35..5bd50008fc9a 100644
--- a/arch/x86/mm/mem_encrypt.c
+++ b/arch/x86/mm/mem_encrypt.c
@@ -390,6 +390,11 @@ bool noinstr sev_es_active(void)
 	return sev_status & MSR_AMD64_SEV_ES_ENABLED;
 }
 
+bool sev_snp_active(void)
+{
+	return sev_status & MSR_AMD64_SEV_SNP_ENABLED;
+}
+
 /* Override for DMA direct allocation check - ARCH_HAS_FORCE_DMA_UNENCRYPTED */
 bool force_dma_unencrypted(struct device *dev)
 {
@@ -462,6 +467,10 @@ static void print_mem_encrypt_feature_info(void)
 	if (sev_es_active())
 		pr_cont(" SEV-ES");
 
+	/* Secure Nested Paging */
+	if (sev_snp_active())
+		pr_cont(" SEV-SNP");
+
 	pr_cont("\n");
 }
 

From patchwork Wed Mar 24 16:44:14 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12161675
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id B795EC433E3
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:29 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 7A07461A23
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:29 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236632AbhCXQo7 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Wed, 24 Mar 2021 12:44:59 -0400
Received: from mail-bn8nam12on2055.outbound.protection.outlook.com
 ([40.107.237.55]:61165
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S236534AbhCXQop (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 24 Mar 2021 12:44:45 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=GPCAg6ReHFJ16//ZVWRYY6uIPZcFF076ZnYAtHbRj0Z4XwUfZPkMW8D6cbnG5l9LeMUfe9f88bYlyLoEkDtvS2Q/X+65Lnr0UE3/l6q4xMm5Ldxl4O0dZdMsKLLkuTVV73JxKTUrHHBXLZOHcvqBWbJE6oEhSLJroNiXxXbnxAhceshnEU42RMrTeZNat68tqeesKRdGGxKZ6LaHHkMi3H0nLk+fOOq4VV6+nbO9KQZ0ysruziXAOmmn/TDiUgucyTqJg44daGCYRO+IvVNXjCmU5E1guzNYregBRGr/zT2sn0lSJQyiWq1T74J/AmYPOf/Qcpn0MMUKd6SdTgmTzw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=tpeREZuGyZHkejv4iB1xhXBxxu95RMFStqFm9qXQHQQ=;
 b=TwYEca622f5+FfyuTxOE0Qv7QecL0yixfULnElXLBhHEi6pyDOlGkchFtO7xfKBauifLDmy2RK42Di1fIM/pw4W9xsoCHAQCbOUtlZrD9rz8jPXWMZMdb2/af+9mMbl3xMEs9X9u4u3y8n5NKmW4CaK4FM9cfTmscJ6y17MZw89pIx3yQJJPRmkghynfvSqTh2qdnXUn2aXgSAw/zPM0LESabRNZIxnvmUC1arvn45H1uqi9UTDDyPJJo6WFA5xyJpgLMpQ8TpFd8MFGt23LykPIjfbI3p8BUCuuk4zCKZc056Gcag/DfvQUgVgvGybQer2n8/aX0008OeYGACqYnA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=tpeREZuGyZHkejv4iB1xhXBxxu95RMFStqFm9qXQHQQ=;
 b=L7nlokroXUJVb5Q0kiSCLuvjYovhFoxGA+yveaHEiN0fcCRjU03CeZ7Tc59zk6yqorrLymg5XQ5vTU3Ihm/6EA5nCsGNcAml7ilVlIhQfBkHCPBCoATG3f9KMHI/0DjsIhARtWlHs4sI9q64pTtyRyctL3pfaxM8SNvZfEKSxtU=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN1PR12MB2447.namprd12.prod.outlook.com (2603:10b6:802:27::22) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3955.18; Wed, 24 Mar
 2021 16:44:40 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d%3]) with mapi id 15.20.3955.027; Wed, 24 Mar 2021
 16:44:40 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: linux-kernel@vger.kernel.org, x86@kernel.org, kvm@vger.kernel.org
Cc: ak@linux.intel.com, Brijesh Singh <brijesh.singh@amd.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        Joerg Roedel <jroedel@suse.de>,
        "H. Peter Anvin" <hpa@zytor.com>, Tony Luck <tony.luck@intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Tom Lendacky <thomas.lendacky@amd.com>,
        David Rientjes <rientjes@google.com>,
        Sean Christopherson <seanjc@google.com>
Subject: [RFC Part1 PATCH 03/13] x86: add a helper routine for the PVALIDATE
 instruction
Date: Wed, 24 Mar 2021 11:44:14 -0500
Message-Id: <20210324164424.28124-4-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210324164424.28124-1-brijesh.singh@amd.com>
References: <20210324164424.28124-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SA0PR11CA0010.namprd11.prod.outlook.com
 (2603:10b6:806:d3::15) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SA0PR11CA0010.namprd11.prod.outlook.com (2603:10b6:806:d3::15) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.24 via Frontend
 Transport; Wed, 24 Mar 2021 16:44:39 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: c876d590-53fe-4127-13e3-08d8eee41e39
X-MS-TrafficTypeDiagnostic: SN1PR12MB2447:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN1PR12MB2447F0324E75FA3B7DB8F4A7E5639@SN1PR12MB2447.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:5516;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 Tzj2pBO2/42vmolapRiur+BL/a2og3C+O/6H32c65czUcVSHlB2zpBSqLMv72CTHX8PYsHsKllWWBSQHgepz4PXgSu+uzzl0tEKs5I+ELrWGL4gDnnaU1Ah2qwtuwVywDb7eBTh3X1Sym0UbrHKjkalYwX6R6I96xze16xoKW3LcrAwouWRU4cm8/G1WKmzAprmNam0bFbdRNkZwGjM0SNaEUjERyhjJfqlvXv2vhWMFhUQqYgbnuVJsLGb/fmbjRQLjxbhEZhKCXKKHfWSOeXb1RRor91YTBPNe/xIqNy85BotBv5xt9Ecoo7cvQWAxiRIYFUBvQRRQOV/4RVfsjIvExmy1MIGsLDOi+KqovnaN6jtCf1y7Zn57Z/j5/siG6/+izPQPRNgTQdweKJzId5AAym8OgC5ld1w8Uar/LEhJ8FbHVQEG+6bVTMXY6TlGi27L2JxvgiGh2xcwuzjfS1lsHMdGNlUkzw4Xb1+8fUwFXh9Vmt8XG7aXNbO4rGeX1fDP5X16h3+PnkrAW12/1/Tacg3h030VjqvzkMn3AhIdzjGW7lwUnA1APzTGBIAFDb/LVHLj4T9Ub7//JTXJerD3m21TGGpIXxFfEMbma8eXUpnrO7Qkr5Fb8AMTQLWlL2R2W7vkD/DuzehBhpprgv1m9sYzKfseQwSPmM7jOlk=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(346002)(396003)(136003)(366004)(16526019)(38100700001)(5660300002)(26005)(44832011)(36756003)(1076003)(54906003)(8676002)(316002)(83380400001)(8936002)(4326008)(956004)(2906002)(186003)(6486002)(86362001)(7416002)(2616005)(66946007)(7696005)(478600001)(66556008)(66476007)(52116002)(6666004);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: =?utf-8?q?/6LskArME3GZRSFS+2yOOXmhgWX8NI?=
	=?utf-8?q?0uQMRjyIcAiLqLtrZvHccTZOfKjV0i39YseiZcgnrzrodKK+/5WvtgG1giHf5wxPr?=
	=?utf-8?q?W7vsD3Ti8/tBFtqJyDxDHKVIB3i6uomMI5X7zLbPYEmFWFo2arew4zIaaPhIZqNcm?=
	=?utf-8?q?4PDg2AVeVuzSQ6/KuYtX+5wBB0Ua3npd5i9Cl1J1/aGA7ZmEYznXnf8tjHOHa11YW?=
	=?utf-8?q?ztd33Z5S/RUWwOPpWaUgDcfEzRanMuwGEkay8wrAiFMe+9LWu8EFKJVnniSMPSKl+?=
	=?utf-8?q?/SzbUp/pKR5oL5GLC9oFe4UqdmZ1vyh5urvbdtoiX3gbv42ofYkfedJfZwp+jk/57?=
	=?utf-8?q?LepsEyIdpJG6+WOAg65aqTRet3EL8knnURrDQUb/KRHdlxi1uZYPBvG4G3G6IyssP?=
	=?utf-8?q?dpgvG10o4IZhsry/ax0880ZbJ87Lh/HwjT3cGReIBJ3VXThb3RdA7rb9xR9Zsi4ig?=
	=?utf-8?q?JdRWzmEUW8CWCin4obSXCVRgqMGQWUKsAxKTBQLGe2RS+EqIJCR/+T4G4Om0sDhMK?=
	=?utf-8?q?XA9BVQZ3II6CVV/8+fF+OHsUqOEISUrQqKRqCZiRU5Um07cL8xfgKgTn9VXF2excm?=
	=?utf-8?q?SljgnUjYGp7sJR0/KF3tBtRrQa3aVLiebJymzcpRI9quVFaeghY17f915v5uhKZnL?=
	=?utf-8?q?frbKsAFOuLT5JHWXo01b4M1D6jZHmgf1adJa4iGfYXCjYHXYntfi0hcEw/JEiKfS2?=
	=?utf-8?q?99DiNxOTvI1Y6sju4kkGMAba++qJ7+3V+Wc28VrUL0TXOZYE6aXkRmgmN5idQa418?=
	=?utf-8?q?nqjbfJAbnp90lfTLYDWcGosef/TqyZNKnvhcWyEcgY4FosHodu9Xm0d4XjRn0ncul?=
	=?utf-8?q?9gAD+vdH+0CKfR0Px1F1KgacttWMgJMlnXJBuUiDZW+QdVbc+nlJCShYNx7b1vuJS?=
	=?utf-8?q?FTQf0KIR4zl+pR7OPWEv5JT5P4GDO3vOZwlmlsj4ngD4MXwi+u5LjgOAVD+EN91ae?=
	=?utf-8?q?BgV5fG84cXjWhWpi5R8zYZ1pD0vJ5usQp2Agy4W1kfePWnzOmQVgJ1xYbBkPMyMNC?=
	=?utf-8?q?im51i+5RgPhr4bAziT5CrSAMKVnaXTITJ9Bnfc/M7kuMv50iy4XSyXgqvrSH6gHWb?=
	=?utf-8?q?Rn3rYE2iAC3QywBTFQpC8tdNcQ6o69wxbBO3Ms+opGnddAoWP+SMotCQGeijvOxFl?=
	=?utf-8?q?2OB45sV3ryVH3NqZAdpK5yh6EFU5DvZcsXk6iieKW5uY9cRJtnacRtNPqRi97Ggtb?=
	=?utf-8?q?JDPgRuigpYJvAtEeiYHgS0WowcXHzEJ6PdH11kWhrPxxOBuZzto+J+fTOxF+Otm6x?=
	=?utf-8?q?B/LpEk/8rVlchd?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 c876d590-53fe-4127-13e3-08d8eee41e39
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2021 16:44:40.2774
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 Nk9ms1w641ZWpzEr2SrztZgGQKNvaigXr81LEPncB9F04MCTtf8leMJBPcm5sP52utqz9PQZijSCXtQmhCK00g==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN1PR12MB2447
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

An SNP-active guest uses the PVALIDATE instruction to validate or
rescind the validation of a guest page’s RMP entry. Upon completion,
a return code is stored in EAX and rFLAGS bits are set based on the
return code. If the instruction completed successfully, the CF
indicates if the content of the RMP were changed or not.

See AMD APM Volume 3 for additional details.

Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Joerg Roedel <jroedel@suse.de>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Tony Luck <tony.luck@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Sean Christopherson <seanjc@google.com>
Cc: x86@kernel.org
Cc: kvm@vger.kernel.org
Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/sev-snp.h | 52 ++++++++++++++++++++++++++++++++++
 1 file changed, 52 insertions(+)
 create mode 100644 arch/x86/include/asm/sev-snp.h

diff --git a/arch/x86/include/asm/sev-snp.h b/arch/x86/include/asm/sev-snp.h
new file mode 100644
index 000000000000..5a6d1367cab7
--- /dev/null
+++ b/arch/x86/include/asm/sev-snp.h
@@ -0,0 +1,52 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * AMD SEV Secure Nested Paging Support
+ *
+ * Copyright (C) 2021 Advanced Micro Devices, Inc.
+ *
+ * Author: Brijesh Singh <brijesh.singh@amd.com>
+ */
+
+#ifndef __ASM_SECURE_NESTED_PAGING_H
+#define __ASM_SECURE_NESTED_PAGING_H
+
+#ifndef __ASSEMBLY__
+#include <asm/irqflags.h> /* native_save_fl() */
+
+/* Return code of __pvalidate */
+#define PVALIDATE_SUCCESS		0
+#define PVALIDATE_FAIL_INPUT		1
+#define PVALIDATE_FAIL_SIZEMISMATCH	6
+
+/* RMP page size */
+#define RMP_PG_SIZE_2M			1
+#define RMP_PG_SIZE_4K			0
+
+#ifdef CONFIG_AMD_MEM_ENCRYPT
+static inline int __pvalidate(unsigned long vaddr, int rmp_psize, int validate,
+			      unsigned long *rflags)
+{
+	unsigned long flags;
+	int rc;
+
+	asm volatile(".byte 0xF2, 0x0F, 0x01, 0xFF\n\t"
+		     "pushf; pop %0\n\t"
+		     : "=rm"(flags), "=a"(rc)
+		     : "a"(vaddr), "c"(rmp_psize), "d"(validate)
+		     : "memory", "cc");
+
+	*rflags = flags;
+	return rc;
+}
+
+#else	/* !CONFIG_AMD_MEM_ENCRYPT */
+
+static inline int __pvalidate(unsigned long vaddr, int psize, int validate, unsigned long *eflags)
+{
+	return 0;
+}
+
+#endif /* CONFIG_AMD_MEM_ENCRYPT */
+
+#endif	/* __ASSEMBLY__ */
+#endif  /* __ASM_SECURE_NESTED_PAGING_H */

From patchwork Wed Mar 24 16:44:15 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12161685
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id E2E33C433E9
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:29 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id CB2C261A20
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:29 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236691AbhCXQpC (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Wed, 24 Mar 2021 12:45:02 -0400
Received: from mail-bn8nam12on2043.outbound.protection.outlook.com
 ([40.107.237.43]:10848
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S236545AbhCXQoq (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 24 Mar 2021 12:44:46 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=ByuYCqNM8LgUmT3aDJ+GNH6yzLhxDJBjmc3oGz2mJ7WjG1f+Pc2euxnNsNQCCT//iTIzQuT002Ip9wKqEGcLK/2blKRrun733pAGK0SRvjwQ6vBxzfOAI94EYPPBM404CqFNXQca9qNRsM24YO/T27ihrk0qk9b4wX8c734XpnwWkqRB4hGpcV1RPZp98llhxTLcoHnTCbBcsSPiHeN6q7V+soV0PJymAB5WEP7Qhz5lCGvNX+b4XxxQ4Eg6PM9Dea/eY7auJf8zfbqtnvI22pXDbP16sWiSyEsYDtE+SimI3gZWf/eK97sU0Xt4f6xXaMA4YAZisUhQq7IMtaE39Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=ZHabqdghz3vzEVi6EqXAVLLM+JPON4DLXqK+6MGbnpY=;
 b=oJHBtz2cFeBT8dDrvX9xNbTLXP9mRQx7shtypi3QIzEyq5D2A1hcve/sd/R+D4/XDlfepPPKY9g7KJf51TdqjdIbwLcNpXQrF3L1hs2QRZ01QWsO/zhs/bEX1DJ/aRWZ3S5lEnA7VIP4iHP6io6WX42trlUgwZo+ovtNy2TgoLJpra0gOka5j/sSBosCQd9kK6Uyc1B1zNSH7X6qF9uGVxqCQRNvkqdmtOsaY5gcnUOSwOOrynIlMRpJ80D9W0Ovg+B9VCD/Y9VmyuGOiydUhdAZJgnEUa6fqJwH9XLuRy6ykckJryCtdG7WhgedND7Tiy/KoB/XSRoJT7HncmhGSA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=ZHabqdghz3vzEVi6EqXAVLLM+JPON4DLXqK+6MGbnpY=;
 b=LFCsRUbuX0ONaCg2i4z6ejO+V+4SOfcgvo/gsf5JHSJ0JQa+Vcr6D601PFMGe2YBGA/C+b1oKzGhbrTWMJ6ciwEVoEOptCntgLbsKQ7XoXohbV7S6qczO4X+Rs6EV6N1j7kwzkrmctuyaFffNNCvssOlN3DujF+YrmaCpLuiWVM=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN1PR12MB2447.namprd12.prod.outlook.com (2603:10b6:802:27::22) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3955.18; Wed, 24 Mar
 2021 16:44:41 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d%3]) with mapi id 15.20.3955.027; Wed, 24 Mar 2021
 16:44:41 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: linux-kernel@vger.kernel.org, x86@kernel.org, kvm@vger.kernel.org
Cc: ak@linux.intel.com, Brijesh Singh <brijesh.singh@amd.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        Joerg Roedel <jroedel@suse.de>,
        "H. Peter Anvin" <hpa@zytor.com>, Tony Luck <tony.luck@intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Tom Lendacky <thomas.lendacky@amd.com>,
        David Rientjes <rientjes@google.com>,
        Sean Christopherson <seanjc@google.com>
Subject: [RFC Part1 PATCH 04/13] x86/sev-snp: define page state change VMGEXIT
 structure
Date: Wed, 24 Mar 2021 11:44:15 -0500
Message-Id: <20210324164424.28124-5-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210324164424.28124-1-brijesh.singh@amd.com>
References: <20210324164424.28124-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SA0PR11CA0010.namprd11.prod.outlook.com
 (2603:10b6:806:d3::15) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SA0PR11CA0010.namprd11.prod.outlook.com (2603:10b6:806:d3::15) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.24 via Frontend
 Transport; Wed, 24 Mar 2021 16:44:40 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: c3e931ef-d455-49d7-615d-08d8eee41ebc
X-MS-TrafficTypeDiagnostic: SN1PR12MB2447:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN1PR12MB2447633F5AA8628406D9D18BE5639@SN1PR12MB2447.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:3631;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 KDzomUIfjSr4X/Ok9ujpml8tQankbpbZ8sLRmAoWPCJ+rNNlDupRxZRaZ6nANXdFrBVmwvp7RZaDohnFVNnBeB5Xa4qzVrs2V17SnXosn8NPjObfZ2Vv5oKtqZAS74CFhvxLYCGBvvjUH45DxGGYRx9YdiN/iLrYbas3KcUEDMjfTSigIDXYvfaE3VqKT0Bn08ED1aGMS5zDFH+diTIZjGbmQCyuP6SjolUoJx94uMLNSHYyUEHp5GYxTWAcB7Gbs8FZrmA18wLKG8zUeS23iTPTG2t5u1yMIid9KDZMBeY22ZxI7d6DoE0UveK+tyGg7gPoAzffHmzNb1kCHE28MSHUR0CcfQJstkktaPcYvV2kfOVH6ff11jbv4ZZgc+SAZ7KBOmRnivAfksilro4cWNtxNBhAf4NdtzMWbjEf74GWL4tmvhLBjzcL70uEAB4ahirgh8Pr8LJskd9lX7PWGayMsIGOpQzA8OwPJjAIXm55i1Ut8s3c9I3oyzUTmdyAKq7UYmHB0bo7Hau4mqCscDm6zxIdV13YQZ8y6MuqL+A9zuAolMDAf4aGJpLJ9IaVvqFU7Hs0XrgjO//TXYA9hO/GFr4fU9G2/n0mqj0s4naRdlcZCrWThcVsroI+wPpXjOIsLtBCATWDwdSF/Tb9BYgtRKuftg33UiLToQwZ4Kk=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(346002)(396003)(136003)(366004)(16526019)(38100700001)(5660300002)(26005)(44832011)(36756003)(1076003)(54906003)(8676002)(316002)(83380400001)(8936002)(4326008)(956004)(2906002)(186003)(6486002)(86362001)(7416002)(2616005)(66946007)(7696005)(478600001)(66556008)(66476007)(52116002)(6666004);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 k7hJMn30r06R+RCrlESqCBO6jwnn+ALYUsrYQSzbkQmMA6ZTxfHdbpHUHLUUjdXWMeZWhj9wHHDO0d6YF6rd0SEC58zXHZDEk00rqDc8NxaMRN7yh4ACrMuzb2+S7iYANqJahuE1+DTa2z6fkJd3GtF9/I7FoKpkCZRzDB0tRIV/hyKg7d8Jmfr29amPZuvRLvdDXggmnf6cDAXzbnUxsrDgevbJpEjyfSBr7oDpyPsipkf8jTf38VHNykq3pJStXcOgQa0Ms9F5ehQ/jyV3c7iPusiHkVEgmWaTKqx6CA+Rn+hPATwE2tKQ9f60QzFkT5GRcg146sSLd32icwHY4d3hvAIiIHDr33c9DpIbotHTJw+Dd/EngcJXV5A7pGAjb84GA8Fleos/QRWd/0qa72Enx38+rSHCzsY7hEPpTRAafGMRLjtKVexwmO9ee4WDgVuT6rn/ZJcMTRXsF/7Nisi9BjcrUSZZTXlvRmOENBJMWJdGPJYlEt5JPpOfUSYm7lmyuk3gTOlYskrQXkBh3uE0n2phPtpWPtc8fEbBy7Vzjycc1OrtJpEcp5FmpVUjHejrJhfSIOlvjSe+CSZDhmSqWQrOw6QaCrpszCSKAIXoQ0xjZ9+QpmNafv4cvMKMAuq3w3B+UTGXCAJpDnX1hJZ2PnAD3zXxkzjDkz4F7+PSY+9Fxipmteo0ntPAxsb7BApMdd52A8LQNXulhv0cSI2Wt0D0SL+DbIFn0YdIMbUcbYGMrJH6nBOVc6h7nwikjSD6z2aWOsqdfrpMqYuFEdh2Duc+NcfSZp5t8cTuL495eOYTJNtHw+Ttpv2swFG9CWePtBsZ4VGC7OiZ43ejVPrESLxmnquS+iN9AZ94Hj6IObHlmvdcdFcCGZ5ZzcB2rYScpaHN+riHtdN2y82S6d0+4utWY+5R78uvlGAcf6mCFEHjnPNqKrQqpdcA7O7suu4p3XFaCqzqrtLv1W7z41kNJ8TELOQZ5dQaMkMmXZbJzNs7rtS5zj2Nz9Oc6yaLnhf9RnPQRYU3v0GK/KKOb/AzaQy8hO8k3m4SCpgivsTqTpwI/D9JG7cjnr3ZEp10+T4rAp6eiAyL40+y4ZSrCutw1IwdJOLlVkIY9V7JRIyD+lATGaJzqMCA3udx1cMPVvw3lsFGjDoTNmA30OqcuM2yjaYumSQvXRl4W69TXihwsLJIY5Magz/fjcWnkv+w6pfsoUnCaEQL+ZbhAvDxni+5lfHcAELDGppaqnCLqE/dqNIAYYjD5Dz6E9Utg73veWd8Ba0K4o5OwWYyqDJn0nWDyzOD7fe/uSHEcu7/rl3+a9PNc9ZOp5Vvk9i/7RT+
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 c3e931ef-d455-49d7-615d-08d8eee41ebc
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2021 16:44:41.1190
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 DFlE2Vat6peC+SVWiALlG46253umEYAePrTHx6Vx/uGoW/xfpUG5vBXClWlU8bRVX9nsMl9KpVrt9DzWYak5lA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN1PR12MB2447
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

An SNP-active guest will use the page state change VNAE MGEXIT defined in
the GHCB specification section 4.1.6 to ask the hypervisor to make the
guest page private or shared in the RMP table. In addition to the
private/shared, the guest can also ask the hypervisor to split or
combine multiple 4K validated pages as a single 2M page or vice versa.

Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Joerg Roedel <jroedel@suse.de>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Tony Luck <tony.luck@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Sean Christopherson <seanjc@google.com>
Cc: x86@kernel.org
Cc: kvm@vger.kernel.org
Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/sev-snp.h  | 34 +++++++++++++++++++++++++++++++++
 arch/x86/include/uapi/asm/svm.h |  1 +
 2 files changed, 35 insertions(+)

diff --git a/arch/x86/include/asm/sev-snp.h b/arch/x86/include/asm/sev-snp.h
index 5a6d1367cab7..f514dad276f2 100644
--- a/arch/x86/include/asm/sev-snp.h
+++ b/arch/x86/include/asm/sev-snp.h
@@ -22,6 +22,40 @@
 #define RMP_PG_SIZE_2M			1
 #define RMP_PG_SIZE_4K			0
 
+/* Page State Change MSR Protocol */
+#define GHCB_SNP_PAGE_STATE_CHANGE_REQ	0x0014
+#define		GHCB_SNP_PAGE_STATE_REQ_GFN(v, o)	(GHCB_SNP_PAGE_STATE_CHANGE_REQ | \
+							 ((unsigned long)((o) & 0xf) << 52) | \
+							 (((v) << 12) & 0xffffffffffffff))
+#define	SNP_PAGE_STATE_PRIVATE		1
+#define	SNP_PAGE_STATE_SHARED		2
+#define	SNP_PAGE_STATE_PSMASH		3
+#define	SNP_PAGE_STATE_UNSMASH		4
+
+#define GHCB_SNP_PAGE_STATE_CHANGE_RESP	0x0015
+#define		GHCB_SNP_PAGE_STATE_RESP_VAL(val)	((val) >> 32)
+
+/* Page State Change NAE event */
+#define SNP_PAGE_STATE_CHANGE_MAX_ENTRY		253
+struct __packed snp_page_state_header {
+	uint16_t cur_entry;
+	uint16_t end_entry;
+	uint32_t reserved;
+};
+
+struct __packed snp_page_state_entry {
+	uint64_t cur_page:12;
+	uint64_t gfn:40;
+	uint64_t operation:4;
+	uint64_t pagesize:1;
+	uint64_t reserved:7;
+};
+
+struct __packed snp_page_state_change {
+	struct snp_page_state_header header;
+	struct snp_page_state_entry entry[SNP_PAGE_STATE_CHANGE_MAX_ENTRY];
+};
+
 #ifdef CONFIG_AMD_MEM_ENCRYPT
 static inline int __pvalidate(unsigned long vaddr, int rmp_psize, int validate,
 			      unsigned long *rflags)
diff --git a/arch/x86/include/uapi/asm/svm.h b/arch/x86/include/uapi/asm/svm.h
index 554f75fe013c..751867aa432f 100644
--- a/arch/x86/include/uapi/asm/svm.h
+++ b/arch/x86/include/uapi/asm/svm.h
@@ -108,6 +108,7 @@
 #define SVM_VMGEXIT_AP_JUMP_TABLE		0x80000005
 #define SVM_VMGEXIT_SET_AP_JUMP_TABLE		0
 #define SVM_VMGEXIT_GET_AP_JUMP_TABLE		1
+#define SVM_VMGEXIT_PAGE_STATE_CHANGE		0x80000010
 #define SVM_VMGEXIT_UNSUPPORTED_EVENT		0x8000ffff
 
 #define SVM_EXIT_ERR           -1

From patchwork Wed Mar 24 16:44:16 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12161683
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 13A4BC433EA
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:30 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id F29B561A06
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:29 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236732AbhCXQpE (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Wed, 24 Mar 2021 12:45:04 -0400
Received: from mail-bn8nam12on2043.outbound.protection.outlook.com
 ([40.107.237.43]:10848
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S236555AbhCXQor (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 24 Mar 2021 12:44:47 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=GFov8TEWhpDAG/4XrKHQjp1cB9FLPmQ3F30iDV9JX7HSUxFldTERDc/3jB1Th+YjAbed3zMUj0OgTBf907Jo748BdNzrs+aruJYTuAR7ZKQNEDbPDe64k6EWN6jzVlag1GI5/4IufVrAuPzC8RNxiWE9E3Jvz955I9eh2mPXjh4mv8s2OfHa0h7xIr1WnLs1lzl2KZeEKG+Ora6M0BH854Exe5e73ls1iysWdlBjatZtDE7UhxkzZVhI1LmrjF/cvrQSR+EagO2ncycnlQ9j6HULBZTgNgVEyia3UnsWMAJX4jBhiXp33lkEWr0nlhhPMKiqhMro0pHmBBGGUm20mA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=oxdg6sQwCLEMszWQZq/87qhz0edisEZsxdZhZhjDCs0=;
 b=CIXcvdTNbIL2hcqbw3h8l9/3YsAB5gNrGCFgSd07i3LrWln77WNsrub6LuVtoww6GLWvVE42xOGZ9A8EJ7odnCapwxl5nktcRDsVh1gCKDIi67aPF+Ow+BhI31A3QS9ZBGt/eQJgGUgSbGSHHHDLz6ifBbVRt8D/n+jadwl8YS4+QNoXzpdDp/vmiCETlSHgHow+dbCfLH76zhMu72oDdBfyy3z98tpGw7lO73M5417mKmDuQ9nwG1QYfCIRhQ0zoCgzIijbHknnRiRq8VJkuL+khwq5b8g0WLj1i3trHoXgzgPqOyiZSy1ZRCxhyUhMfMHEVVpspidETXTIo+APow==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=oxdg6sQwCLEMszWQZq/87qhz0edisEZsxdZhZhjDCs0=;
 b=DqcN8WKbpyOcepQYbXG97q6mjw7f0IxVr4szIgS7vUMQZv3ABPJ34kbJCnzEzJcclNhJBE+a02zcHkBon34JWDJH77ZZzuDc1Z6/5vvBtxCAECCeQnuc5dZ+fdgnmF9+hsnBjhyKUuTGkIpyiiwQKn78r2NstrRlW3DTdU5G7Jg=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN1PR12MB2447.namprd12.prod.outlook.com (2603:10b6:802:27::22) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3955.18; Wed, 24 Mar
 2021 16:44:42 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d%3]) with mapi id 15.20.3955.027; Wed, 24 Mar 2021
 16:44:42 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: linux-kernel@vger.kernel.org, x86@kernel.org, kvm@vger.kernel.org
Cc: ak@linux.intel.com, Brijesh Singh <brijesh.singh@amd.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        Joerg Roedel <jroedel@suse.de>,
        "H. Peter Anvin" <hpa@zytor.com>, Tony Luck <tony.luck@intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Tom Lendacky <thomas.lendacky@amd.com>,
        David Rientjes <rientjes@google.com>,
        Sean Christopherson <seanjc@google.com>
Subject: [RFC Part1 PATCH 05/13] X86/sev-es: move few helper functions in
 common file
Date: Wed, 24 Mar 2021 11:44:16 -0500
Message-Id: <20210324164424.28124-6-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210324164424.28124-1-brijesh.singh@amd.com>
References: <20210324164424.28124-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SA0PR11CA0010.namprd11.prod.outlook.com
 (2603:10b6:806:d3::15) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SA0PR11CA0010.namprd11.prod.outlook.com (2603:10b6:806:d3::15) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.24 via Frontend
 Transport; Wed, 24 Mar 2021 16:44:41 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 22b666db-bbb7-479b-53f7-08d8eee41f3c
X-MS-TrafficTypeDiagnostic: SN1PR12MB2447:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN1PR12MB2447EF4D1C00FEE461CCF296E5639@SN1PR12MB2447.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6430;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 48GBTuGth4uOviAvjRlh/ISogThwsd7X5awLtTdWR60e6Zr6ploq58GZl5MI/vub/PZvmaDazsyF8Ps2xl07Ip6AAUeOLTAO6UMSkHd2DcqKOBYnLgn1nokS6I4W6qkkrdriwBhgjpoIT/+FTsLPA3v7UHcTLwoNtSjhw5r49DFiLzh+TgBXzW4bM90MSOPGvNa/T3Z0ivgu3jDktdK+RTjS/I9XrWEEfboTkMfr1gJrnquGIxc8Ugxbgnp7huBnECfcfaOBQKBGGnPdzvp41CDdOoirFRNhlGAkkkoJwejUzjq4aWtwCXsdPIc7jzM5UU9lC5HIH1jR9wCohnN7Bl87IIbEGG0jNmKN9H3UzpwEz1EhqvVcTDoYukxNwxgQV5hhTzRoRWqv3Bgcdmic5tgm6bERa6plZyYoAPAc/InFRffiESB8OhNaXueQgfHjV/UnZHc+i+kutHVRc9SAPF++P8PSq0f2plVkY0sHVrTtqmEvKVkKIbxlTkFLB46kIV+faMWlqv/uuSSaBEO53mUg3ePsk+7+s2754Bildpi4PB/rUawml0PhvhQ2Rt3TAIdF6Zm2Up3Q9X3OxueuQ/+HZrSp1p6+5j2F6UfGhEqTGz9cHcn/QmtP4/IjfbQpynIK90jKlbmZdMb48EDaHaDBllB0lhwg8Q5a+3aqKYA=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(346002)(396003)(136003)(366004)(16526019)(38100700001)(5660300002)(26005)(44832011)(36756003)(1076003)(54906003)(8676002)(316002)(83380400001)(8936002)(4326008)(956004)(2906002)(186003)(6486002)(86362001)(7416002)(2616005)(66946007)(7696005)(478600001)(66556008)(66476007)(52116002)(6666004);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 nJ2EzbM/4jA+Z8CaQ6FJybT1OB0rUQ1EXVWg1RfsVXnAwEmz7DPLpGvbo4ViU0YIX0F4nJt3TnHnmQvfeZe/G3vYe/7AVVkDQYjvATidPI4rIbVH1Wll3cIrUJKXdvz/A54LI/s2ym54/1216djtSY9P9KV75VZnV7d/4cZuVWBUnEvGPtGQuxyAQPP1HPLrMSNNHS44Wup/+L3uan197q2bFsVeqGA5nFQIzMwGCnbsfogu+2Ju5NmoKasaksglCabU3ispN78KYfx5B7bIJ5rg3hLiAQfc1mE1Ef/Jdqb82nEFPy6KDorFuk/8fB4ttK7ch9RMGDGsUNQapZzOxKVCLaWOCivNwIzro7TeDiKBVCkB/jg97dBKYxuAfLMj64iFKKAKNX2g6u4TFkCLCVZezEkP11/IRA0UY9EiR/qXO6PQZPh1hfvkgiJ/YW0iG8logglgpOAPIXSlLr3C022YsjZoxNFxcoWbWWLBfKspaBvrHAbZ6Rcu/txhz01yCdCTa4q5bCTH9DDgew+lqph3brzrHiUeEF/YlM/BOK6EIqiHRmEogWKZm1UPl4WbI38zj7xAXxTig2d0hca5ZcRmPwi2aB7DhfkUlmJbw0SDXNknD5FxDPBw07Js6fZxDQ2B/LzhXqboovEoU1db+s0nzqCUcg+d7gPCPSmBiuwUwGTfT2iaYbw4xf8SZ2V0XXgeeaH+pVNSgigVdGvUEoo//2/FeJ4OFetvXaNc23YRtdWU0ncSTljoZH2FP4iGK25QRWUYgqL9U9mkdfn/qM5y2Lbs+hLJZZofly+Z/3wxc1DdOP5wLxv56H55mvnCicOb01tx8z7ysyYBnqFRsUyeauqJYk1/JKOm1FaRhCEMd0ZZivlK9cdUJhQyL15AGa1KdCviIeET1LlN85voPnhvNo4wyi2msSfqM/bql2V1DDllDUqe+b06jKCdl/W9NVF/r1OJEcSIlkFUAzVESljCicpzeL0Ejf9ndv1vq/GW/OdfN15COt4XOTF4KqQX7vpZaZxCWulq/uWo3Hljbr4oGtcAkrhKMFUvAvlK/xIzR6IL4BXrCs9qXgvWu96W06YOU9PsjStKQ+2GQ4mG3MzUyA2KTo6+OZAGDHeDBCLcCsiQoMcK2CtozbkLcasCqm9fuwLUaC5KVgx8urhu5ONNnVqyLN8wl/6bEYXK9vlUggO8oc4ir6ZXGQBLEuTAlGBbaJ4nk7z9mQDPSTALsi9F6jF2+ieS68XdMomayQkCC+1arnrRgpXq62ZzCg7AJTpH6bgsv6pBcoS0npIXo2Z2YatdvKl5HiRh/XbYmbnYoD+8EwaBBXLhSBWgE8Y/
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 22b666db-bbb7-479b-53f7-08d8eee41f3c
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2021 16:44:41.8505
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 KkQHfPiNEStRk3l6++oOySzvpQUkCSqNvaTtVYElY4r462hQLV7Is3pt3tmHyVCJoQHl6YPK+pSJaq187NZpVA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN1PR12MB2447
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The sev_es_terminate() and sev_es_{wr,rd}_ghcb_msr() helper functions
in a common file so that it can be used by both the SEV-ES and SEV-SNP.

Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Joerg Roedel <jroedel@suse.de>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Tony Luck <tony.luck@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Sean Christopherson <seanjc@google.com>
Cc: x86@kernel.org
Cc: kvm@vger.kernel.org
Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/boot/compressed/sev-common.c | 32 +++++++++++++++++++++++++++
 arch/x86/boot/compressed/sev-es.c     | 22 ++----------------
 arch/x86/kernel/sev-common-shared.c   | 31 ++++++++++++++++++++++++++
 arch/x86/kernel/sev-es-shared.c       | 21 +++---------------
 4 files changed, 68 insertions(+), 38 deletions(-)
 create mode 100644 arch/x86/boot/compressed/sev-common.c
 create mode 100644 arch/x86/kernel/sev-common-shared.c

diff --git a/arch/x86/boot/compressed/sev-common.c b/arch/x86/boot/compressed/sev-common.c
new file mode 100644
index 000000000000..d81ff7a3a67d
--- /dev/null
+++ b/arch/x86/boot/compressed/sev-common.c
@@ -0,0 +1,32 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * AMD Encrypted Register State Support
+ *
+ * Author: Brijesh Singh <brijesh.singh@amd.com>
+ *
+ * Copyright (C) 2021 Advanced Micro Devices, Inc.
+ *
+ * This file is not compiled stand-alone. It is includes directly in the
+ * sev-es.c and sev-snp.c.
+ */
+
+static inline u64 sev_es_rd_ghcb_msr(void)
+{
+	unsigned long low, high;
+
+	asm volatile("rdmsr" : "=a" (low), "=d" (high) :
+			"c" (MSR_AMD64_SEV_ES_GHCB));
+
+	return ((high << 32) | low);
+}
+
+static inline void sev_es_wr_ghcb_msr(u64 val)
+{
+	u32 low, high;
+
+	low  = val & 0xffffffffUL;
+	high = val >> 32;
+
+	asm volatile("wrmsr" : : "c" (MSR_AMD64_SEV_ES_GHCB),
+			"a"(low), "d" (high) : "memory");
+}
diff --git a/arch/x86/boot/compressed/sev-es.c b/arch/x86/boot/compressed/sev-es.c
index 27826c265aab..58b15b7c1aa7 100644
--- a/arch/x86/boot/compressed/sev-es.c
+++ b/arch/x86/boot/compressed/sev-es.c
@@ -54,26 +54,8 @@ static unsigned long insn_get_seg_base(struct pt_regs *regs, int seg_reg_idx)
 	return 0UL;
 }
 
-static inline u64 sev_es_rd_ghcb_msr(void)
-{
-	unsigned long low, high;
-
-	asm volatile("rdmsr" : "=a" (low), "=d" (high) :
-			"c" (MSR_AMD64_SEV_ES_GHCB));
-
-	return ((high << 32) | low);
-}
-
-static inline void sev_es_wr_ghcb_msr(u64 val)
-{
-	u32 low, high;
-
-	low  = val & 0xffffffffUL;
-	high = val >> 32;
-
-	asm volatile("wrmsr" : : "c" (MSR_AMD64_SEV_ES_GHCB),
-			"a"(low), "d" (high) : "memory");
-}
+/* Provides sev_es_{wr,rd}_ghcb_msr() */
+#include "sev-common.c"
 
 static enum es_result vc_decode_insn(struct es_em_ctxt *ctxt)
 {
diff --git a/arch/x86/kernel/sev-common-shared.c b/arch/x86/kernel/sev-common-shared.c
new file mode 100644
index 000000000000..6229566add6f
--- /dev/null
+++ b/arch/x86/kernel/sev-common-shared.c
@@ -0,0 +1,31 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * AMD Encrypted Register State Support
+ *
+ * Author: Brijesh Singh <brijesh.singh@amd.com>
+ *
+ * Copyright (C) 2021 Advanced Micro Devices, Inc.
+ *
+ * This file is not compiled stand-alone. It contains code shared
+ * between the pre-decompression boot code and the running Linux kernel
+ * and is included directly into both code-bases.
+ */
+
+static void sev_es_terminate(unsigned int reason)
+{
+	u64 val = GHCB_SEV_TERMINATE;
+
+	/*
+	 * Tell the hypervisor what went wrong - only reason-set 0 is
+	 * currently supported.
+	 */
+	val |= GHCB_SEV_TERMINATE_REASON(0, reason);
+
+	/* Request Guest Termination from Hypvervisor */
+	sev_es_wr_ghcb_msr(val);
+	VMGEXIT();
+
+	while (true)
+		asm volatile("hlt\n" : : : "memory");
+}
+
diff --git a/arch/x86/kernel/sev-es-shared.c b/arch/x86/kernel/sev-es-shared.c
index cdc04d091242..669e15678387 100644
--- a/arch/x86/kernel/sev-es-shared.c
+++ b/arch/x86/kernel/sev-es-shared.c
@@ -14,6 +14,9 @@
 #define has_cpuflag(f)	boot_cpu_has(f)
 #endif
 
+/* Provides sev_es_terminate() */
+#include "sev-common-shared.c"
+
 static bool __init sev_es_check_cpu_features(void)
 {
 	if (!has_cpuflag(X86_FEATURE_RDRAND)) {
@@ -24,24 +27,6 @@ static bool __init sev_es_check_cpu_features(void)
 	return true;
 }
 
-static void sev_es_terminate(unsigned int reason)
-{
-	u64 val = GHCB_SEV_TERMINATE;
-
-	/*
-	 * Tell the hypervisor what went wrong - only reason-set 0 is
-	 * currently supported.
-	 */
-	val |= GHCB_SEV_TERMINATE_REASON(0, reason);
-
-	/* Request Guest Termination from Hypvervisor */
-	sev_es_wr_ghcb_msr(val);
-	VMGEXIT();
-
-	while (true)
-		asm volatile("hlt\n" : : : "memory");
-}
-
 static bool sev_es_negotiate_protocol(void)
 {
 	u64 val;

From patchwork Wed Mar 24 16:44:17 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12161689
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 6753BC433ED
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:30 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 3C0FA61A15
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:30 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236763AbhCXQpG (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Wed, 24 Mar 2021 12:45:06 -0400
Received: from mail-bn8nam12on2043.outbound.protection.outlook.com
 ([40.107.237.43]:10848
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S236566AbhCXQot (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 24 Mar 2021 12:44:49 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=U/7HV0f9WHb7LQDj7s2V6axgLlFBVyDZaR2vly6OA1AN1sZ6xi+cOEcRnX/CmcKJDk/OxSRFxgGcp0Dx4joQV0XTc4ktkFGBB0q/qoZYpDn/URymvf57vWyk0Dh3mND1bfb1c3j9YzGSHXGq5gusWqMaJnAw3bEOY9xUaXyp5nvVM0Jyv6Y0dQLSQDOruSGIlozQxvv415BZMo0l9aoQlHApgGXIm2eLbyB6dgTKBZd2YW7zQ9Pi7hIJMUSimjmj5tBf9O7S/rBzAwHgTvucEJlwhDHlds6GYF2OA4x+BEmu4Bc8bQl9cNjyMEE2/FZcIURJB1zfLFjMJVE6SPq6EQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Mn0ry8FpjJChdaSX5BJFECjvARQCELK3H7wK6hvg9XU=;
 b=jwDPPKz/Jeb7lAwwHtGVpBwZ74cguh3nfdSt3oKDhFr1Cxc2u84HPfFziRZlXg3vrgRVCULiHf34Dp2zNLQCUndrHkBP3BSreOlcM8Qf8QK2WURy+d3egqWSSgGKxPQ4079T2HvENko0mH+yVBJBi52ATYPwAYZqElgCUIIint+BHzgvb+zmS/oza9MseLD+kRQw8nUOqpnSXZ45qzrVuGcOcFVXg9nj6mdSRFPnNLWTbZVYoLAJkw7E9D00n82CWCfPPgHWtPKn6UDeO/UDpeLnhKUgevfxhh7cXgfIUXanyhq/DTORimbCaumjup+Z6Jyjx4hlYs9HoMv84fPfAA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Mn0ry8FpjJChdaSX5BJFECjvARQCELK3H7wK6hvg9XU=;
 b=Z2iGkGpgPWbu+PS5rfyGQaOsDgSO6+1EsY5CP8+/KFayGnELN4TfHfhrICV/tjXiF6DUMXd7cZg7G82h6TD2jQNKGV5UHk9iGYNn7SuZqGmIGs0m+jcctuc8jl8AT1qSiOmxeIkzHIYQ9b2J6dU+/aE/KzBdYO88cTd7eCvhaxo=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN1PR12MB2447.namprd12.prod.outlook.com (2603:10b6:802:27::22) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3955.18; Wed, 24 Mar
 2021 16:44:42 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d%3]) with mapi id 15.20.3955.027; Wed, 24 Mar 2021
 16:44:42 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: linux-kernel@vger.kernel.org, x86@kernel.org, kvm@vger.kernel.org
Cc: ak@linux.intel.com, Brijesh Singh <brijesh.singh@amd.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        Joerg Roedel <jroedel@suse.de>,
        "H. Peter Anvin" <hpa@zytor.com>, Tony Luck <tony.luck@intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Tom Lendacky <thomas.lendacky@amd.com>,
        David Rientjes <rientjes@google.com>,
        Sean Christopherson <seanjc@google.com>
Subject: [RFC Part1 PATCH 06/13] x86/compressed: rescinds and validate the
 memory used for the GHCB
Date: Wed, 24 Mar 2021 11:44:17 -0500
Message-Id: <20210324164424.28124-7-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210324164424.28124-1-brijesh.singh@amd.com>
References: <20210324164424.28124-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SA0PR11CA0010.namprd11.prod.outlook.com
 (2603:10b6:806:d3::15) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SA0PR11CA0010.namprd11.prod.outlook.com (2603:10b6:806:d3::15) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.24 via Frontend
 Transport; Wed, 24 Mar 2021 16:44:42 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 6f76b8ec-9dbd-48dd-ab07-08d8eee41fb2
X-MS-TrafficTypeDiagnostic: SN1PR12MB2447:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN1PR12MB2447147B7EB6666675024E7FE5639@SN1PR12MB2447.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:9508;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 7dXy9MekrF0HlOIKE5JsLMLTPcYxecXBnO9nlvKen14nNbkdDPl2BSG/bR/A4LdXR5RsOjW3cdzxGArv1UwEOJc8JIlraSJi85vIW1T6RCAlxZbsvkntzE5ESJDwtu7zylgasPd0lmp90oS1hu9TyiLbVpVQ5YYkl424Bs9mOr4O2NCHFr8mn4rI3IJOEFRxVB1z+HX4LXJlNbPz3m7/HOrpLFkwgSdM03yMW/bDc6MLuFZyVqVZVakce0EWNoHc/ylrIxZlNLftG+acv8BDC0cglR021y/lmqU86572Qhn0sPBHrFrIrT3kise7Kz833wp7yWaMqR9z3ayEbS49ERAPE08BM0IIAm7g1rsKDuVnUkeqG92BwMpTMdwLO5cHYR4TGqnEGbvh0tUJynbAoe4/ms/0ysHRjUNtK154fQSit106pXJ59o2bRPFKAwqNAoPiQqzEDT6WwNhFKzQXrcXjHxSNoNsWiOCSPQwplTzJWqDQmBZPCsVOuIBuf7M6EjHGMjSH6clNkCvXml2DC9FRvHfFvQ5umSdVADKFqwXD7D0+Hir2Sp/9PPSY0oWT2KbLyDh5/GEc4SmB50CRKtmDwKVJMJYHxDaH5a0HqRqMryqX2RQUA4+8ltZqyGvs4AY0xtNDcEXahGP353Ns37i36QNaPRWIGZqhgYrk5kg=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(346002)(396003)(136003)(366004)(16526019)(38100700001)(5660300002)(26005)(44832011)(15650500001)(36756003)(1076003)(54906003)(8676002)(316002)(83380400001)(8936002)(4326008)(956004)(2906002)(186003)(6486002)(86362001)(7416002)(2616005)(66946007)(7696005)(478600001)(66556008)(66476007)(52116002)(6666004);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 QR5JzdSX0iDkPmgcY9nFCJ5p3iZlgrxrSU2VAtEtSK9+w0+7VBnJj3Hyza/mwEJkjQi//gQ5yS2dmun8GkHcnUwUMsse+N4mnzWCFLPljUdFn84OmYLIKAA3xLWKpqdiYEP9n6G1alpXX+HgJXyeZJ4fREJrf2TZFh2+UCgnNS2JA/DJE1cOTjUmD7ahgrukTh42vyrDqxW27xTXlyjdx+bGk58geQnpFxYhvdfKd7ruRJjqXIzrurrRH0ZTiwlu+sR71FXk2C2ManjoASC4wBgAggnbMvi0q/iSienqhHndUiDTHynrYe1cwppC6bzGxMwNRR+4y/+M3pNU/zfZ6ksUlbevxuZaiGXpLpAjzRvcH1IMKOBcCdG7rO26jaBUi8S99q1BiZGBhl2Vfwf7RFjKGqWtW9feB0p9d8+W+bRtmVhlzokEjsysA78c+nkLQRL2pVAWRHo++Drs23WgG6378jiOFeTsp6fsSPV2P9hKYGsUUJO8wEUJl3qmgIFkl9zAa3sVVO0bxVF3Sq/1NrzDlKP8zU72QBufRPfYLA77t6QW0BNwSc6U7TX23fVBDanyyLpg+2lLobtcWeD8hySU8rqJf8FreeRSKC7wLghYQiTtkkY1czXbfiXDZUGd7unZe9a10juGiDlGKRussRiGqmPn0VrVNdrmvfnKdCpWRZRrf+UxriMjdYG/vyJWBs2kGhRqX00FSkyI825A/JmkSSMuKaGMkt0kQnHrfSa8iEexUf80qPhwmJ3Hcel6c/4zQgmdmNNbeU6zGK5w+0qAMyjxnoOPxh0J/1IMy0aQ/TtCcLt2o8gQLeomaOSlaptm3Kq416eHDRF7Xo1ivN65UiHeURwE+zhQjxDvhwLwHI6Oe+YwLOBWhi9gDyssqfG5UjgoxvIFHj9z9IC78E/q5RR5DhhPY0qgeB+IdhMImf2+VxTW3pyQX3G3GXJMwNqpQZg3kVApbx/c+ArVciUtKCnQ9iNikvyF6q+mAE0jRyhEUr9Ctr0srqaMarYs9vtzvOvCDvl9joDtquV0LAWe/obBfzAXV/tIeDPc+8AfwCqzUZV5CYGBZx6oJ8QFzAEvyVq/Lc6YC1RUNtpE873ehRiSDLR/y55AVbzZnK6jzq9jN00ddr7SWpCqTb65rwVO7p9cbTChFKrAjRW3IKaN//ewuUZKKmcn4gAy0Ys/7BM7n5DUR81f/rjcd5zhS8Xpi9UrhTTBOYBOwtiqo55qY4+4PhsgDyKeZZ30+uJueWAzWQNUdslNJ6hoCfLiDF0QjApiSHwgfrSqQjTc0iL4OuW9geW3ZdQy8RpiecW1h66RXwjz5jkXvbx/dziJ
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 6f76b8ec-9dbd-48dd-ab07-08d8eee41fb2
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2021 16:44:42.6361
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 eXCEpo9dLisXPzf+J5ieAk7Zj5+AuXiI0uKJ1EDlJOPpDnpnzZunSIkSBAsF/230Qi05GZGQFmOQyVGHQiglxA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN1PR12MB2447
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Many of the integrity guarantees of SEV-SNP are enforced through the
Reverse Map Table (RMP). Each RMP entry contains the GPA at which a
particular page of DRAM should be mapped. The VMs can request the
hypervisor to add pages in the RMP table via the Page State Change VMGEXIT
defined in the GHCB specification section 2.5.1 and 4.1.6. Inside each RMP
entry is a Validated flag; this flag is automatically cleared to 0 by the
CPU hardware when a new RMP entry is created for a guest. Each VM page
can be either validated or invalidated, as indicated by the Validated
flag in the RMP entry. Memory access to a private page that is not
validated generates a #VC. A VM can use PVALIDATE instruction to validate
the private page before using it.

To maintain the security guarantee of SEV-SNP guests, when transitioning
a memory from private to shared, the guest must invalidate the memory range
before asking the hypervisor to change the page state to shared in the RMP
table.

After the page is mapped private in the page table, the guest must issue a
page state change VMGEXIT to make the memory private in the RMP table and
validate it. If the memory is not validated after its added in the RMP table
as private, then a VC exception (page-not-validated) will be raised. We do
not support the page-not-validated exception yet, so it will crash the guest.

On boot, BIOS should have validated the entire system memory. During
the kernel decompression stage, the VC handler uses the
set_memory_decrypted() to make the GHCB page shared (i.e clear encryption
attribute). And while exiting from the decompression, it calls the
set_memory_encyrpted() to make the page private.

Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Joerg Roedel <jroedel@suse.de>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Tony Luck <tony.luck@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Sean Christopherson <seanjc@google.com>
Cc: x86@kernel.org
Cc: kvm@vger.kernel.org
Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/boot/compressed/Makefile       |   1 +
 arch/x86/boot/compressed/ident_map_64.c |  18 ++++
 arch/x86/boot/compressed/sev-snp.c      | 115 ++++++++++++++++++++++++
 arch/x86/boot/compressed/sev-snp.h      |  25 ++++++
 4 files changed, 159 insertions(+)
 create mode 100644 arch/x86/boot/compressed/sev-snp.c
 create mode 100644 arch/x86/boot/compressed/sev-snp.h

diff --git a/arch/x86/boot/compressed/Makefile b/arch/x86/boot/compressed/Makefile
index e0bc3988c3fa..4d422aae8a86 100644
--- a/arch/x86/boot/compressed/Makefile
+++ b/arch/x86/boot/compressed/Makefile
@@ -93,6 +93,7 @@ ifdef CONFIG_X86_64
 	vmlinux-objs-y += $(obj)/mem_encrypt.o
 	vmlinux-objs-y += $(obj)/pgtable_64.o
 	vmlinux-objs-$(CONFIG_AMD_MEM_ENCRYPT) += $(obj)/sev-es.o
+	vmlinux-objs-$(CONFIG_AMD_MEM_ENCRYPT) += $(obj)/sev-snp.o
 endif
 
 vmlinux-objs-$(CONFIG_ACPI) += $(obj)/acpi.o
diff --git a/arch/x86/boot/compressed/ident_map_64.c b/arch/x86/boot/compressed/ident_map_64.c
index f7213d0943b8..0a420ce5550f 100644
--- a/arch/x86/boot/compressed/ident_map_64.c
+++ b/arch/x86/boot/compressed/ident_map_64.c
@@ -37,6 +37,8 @@
 #include <asm/setup.h>	/* For COMMAND_LINE_SIZE */
 #undef _SETUP
 
+#include "sev-snp.h"
+
 extern unsigned long get_cmd_line_ptr(void);
 
 /* Used by PAGE_KERN* macros: */
@@ -278,12 +280,28 @@ static int set_clr_page_flags(struct x86_mapping_info *info,
 	if ((set | clr) & _PAGE_ENC)
 		clflush_page(address);
 
+	/*
+	 * If the encryption attribute is being cleared, then change the page state to
+	 * shared in the RMP entry. Change of the page state must be done before the
+	 * PTE updates.
+	 */
+	if (clr & _PAGE_ENC)
+		sev_snp_set_page_shared(pte_pfn(*ptep) << PAGE_SHIFT);
+
 	/* Update PTE */
 	pte = *ptep;
 	pte = pte_set_flags(pte, set);
 	pte = pte_clear_flags(pte, clr);
 	set_pte(ptep, pte);
 
+	/*
+	 * If the encryption attribute is being set, then change the page state to
+	 * private in the RMP entry. The page state must be done after the PTE
+	 * is updated.
+	 */
+	if (set & _PAGE_ENC)
+		sev_snp_set_page_private(pte_pfn(*ptep) << PAGE_SHIFT);
+
 	/* Flush TLB after changing encryption attribute */
 	write_cr3(top_level_pgt);
 
diff --git a/arch/x86/boot/compressed/sev-snp.c b/arch/x86/boot/compressed/sev-snp.c
new file mode 100644
index 000000000000..5c25103b0df1
--- /dev/null
+++ b/arch/x86/boot/compressed/sev-snp.c
@@ -0,0 +1,115 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * AMD SEV SNP support
+ *
+ * Author: Brijesh Singh <brijesh.singh@amd.com>
+ *
+ */
+
+#include "misc.h"
+#include "error.h"
+
+#include <asm/msr-index.h>
+#include <asm/sev-snp.h>
+#include <asm/sev-es.h>
+
+#include "sev-snp.h"
+
+static bool sev_snp_enabled(void)
+{
+	unsigned long low, high;
+	u64 val;
+
+	asm volatile("rdmsr\n" : "=a" (low), "=d" (high) :
+			"c" (MSR_AMD64_SEV));
+
+	val = (high << 32) | low;
+
+	if (val & MSR_AMD64_SEV_SNP_ENABLED)
+		return true;
+
+	return false;
+}
+
+/* Provides sev_snp_{wr,rd}_ghcb_msr() */
+#include "sev-common.c"
+
+/* Provides sev_es_terminate() */
+#include "../../kernel/sev-common-shared.c"
+
+static void sev_snp_pages_state_change(unsigned long paddr, int op)
+{
+	u64 pfn = paddr >> PAGE_SHIFT;
+	u64 old, val;
+
+	/* save the old GHCB MSR */
+	old = sev_es_rd_ghcb_msr();
+
+	/* Issue VMGEXIT to change the page state */
+	sev_es_wr_ghcb_msr(GHCB_SNP_PAGE_STATE_REQ_GFN(pfn, op));
+	VMGEXIT();
+
+	/* Read the response of the VMGEXIT */
+	val = sev_es_rd_ghcb_msr();
+	if ((GHCB_SEV_GHCB_RESP_CODE(val) != GHCB_SNP_PAGE_STATE_CHANGE_RESP) ||
+	    (GHCB_SNP_PAGE_STATE_RESP_VAL(val) != 0))
+		sev_es_terminate(GHCB_SEV_ES_REASON_GENERAL_REQUEST);
+
+	/* Restore the GHCB MSR value */
+	sev_es_wr_ghcb_msr(old);
+}
+
+static void sev_snp_issue_pvalidate(unsigned long paddr, bool validate)
+{
+	unsigned long eflags;
+	int rc;
+
+	rc = __pvalidate(paddr, RMP_PG_SIZE_4K, validate, &eflags);
+	if (rc) {
+		error("Failed to validate address");
+		goto e_fail;
+	}
+
+	/* Check for the double validation and assert on failure */
+	if (eflags & X86_EFLAGS_CF) {
+		error("Double validation detected");
+		goto e_fail;
+	}
+
+	return;
+e_fail:
+	sev_es_terminate(GHCB_SEV_ES_REASON_GENERAL_REQUEST);
+}
+
+static void sev_snp_set_page_private_shared(unsigned long paddr, int op)
+{
+	if (!sev_snp_enabled())
+		return;
+
+	/*
+	 * We are change the page state from private to shared, invalidate the pages before
+	 * making the page state change in the RMP table.
+	 */
+	if (op == SNP_PAGE_STATE_SHARED)
+		sev_snp_issue_pvalidate(paddr, false);
+
+	/* Request the page state change in the RMP table. */
+	sev_snp_pages_state_change(paddr, op);
+
+	/*
+	 * Now that pages are added in the RMP table as a private memory, validate the
+	 * memory range so that it is consistent with the RMP entry.
+	 */
+	if (op == SNP_PAGE_STATE_PRIVATE)
+		sev_snp_issue_pvalidate(paddr, true);
+}
+
+void sev_snp_set_page_private(unsigned long paddr)
+{
+	sev_snp_set_page_private_shared(paddr, SNP_PAGE_STATE_PRIVATE);
+}
+
+void sev_snp_set_page_shared(unsigned long paddr)
+{
+	sev_snp_set_page_private_shared(paddr, SNP_PAGE_STATE_SHARED);
+}
diff --git a/arch/x86/boot/compressed/sev-snp.h b/arch/x86/boot/compressed/sev-snp.h
new file mode 100644
index 000000000000..12fe9581a255
--- /dev/null
+++ b/arch/x86/boot/compressed/sev-snp.h
@@ -0,0 +1,25 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * AMD SEV Secure Nested Paging Support
+ *
+ * Copyright (C) 2021 Advanced Micro Devices, Inc.
+ *
+ * Author: Brijesh Singh <brijesh.singh@amd.com>
+ */
+
+#ifndef __COMPRESSED_SECURE_NESTED_PAGING_H
+#define __COMPRESSED_SECURE_NESTED_PAGING_H
+
+#ifdef CONFIG_AMD_MEM_ENCRYPT
+
+void sev_snp_set_page_private(unsigned long paddr);
+void sev_snp_set_page_shared(unsigned long paddr);
+
+#else
+
+static inline void sev_snp_set_page_private(unsigned long paddr) { }
+static inline void sev_snp_set_page_shared(unsigned long paddr) { }
+
+#endif /* CONFIG_AMD_MEM_ENCRYPT */
+
+#endif /* __COMPRESSED_SECURE_NESTED_PAGING_H */

From patchwork Wed Mar 24 16:44:18 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12161695
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 9C8FEC433F4
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:30 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 8032361A1E
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:30 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236825AbhCXQpI (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Wed, 24 Mar 2021 12:45:08 -0400
Received: from mail-bn8nam12on2088.outbound.protection.outlook.com
 ([40.107.237.88]:56672
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S236582AbhCXQou (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 24 Mar 2021 12:44:50 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=OWsnadJ1e9i+yhmnLDSa3GaBX8+Fodkuj4F+9VN8bTr8+tEp2viMM9vRIO05lj/b7U602pR0HgRaT0xrfowx2hRWfbV0+iPAMWjWmGdx7awC1n5eAYdoVwOQVMeyv3lPXMMR6VxuvmtLDCyOGuh+9bC/A/lMRBxkFBm0QUrh1fzBjs6HgO2gU8GClhlZULoeQO2hD0SLst2H6zNjFWaMVxL8Zf+qJNOyEO/dcPRC/D4CQKeuIKi45yDmFWIHeATN8Tl4EY8VXQ9/MLfv+oXx4VllrZFYim+q8Jdw7NWgQVzI/yutdUnNSnWZT0pvCDH1cY8c8W7+fErzM5x97jykRg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=CKsje28WOguc3V1il1l3rLQjEAGQYr/n4Fs+RMK1ko4=;
 b=BSPfeaRi5D7qqYInZgr9EDIW4Esbo4j1kw2HOySxWNLZSDUatorpJmeLD1wvFUIb7VRX6wSclMA1ahSpVo4CETX0Z3dSey1v0kjJLdYN1kZYUqDFTNgTKGCnYa+/UmQCFA+QTxLrVPcNGRVX3xfroAhZIcNXJ5GUnlTtKPzkGENpOEgBDWSZA06EqW19pLErs5mKSsbuzRPBW1fQAHsIrvhWar94pkJ8UlANVVZSqWTBPEBKcY4QwIU+onQFKTGEUs61TViPIWbncH0YTG6JDQWoBKSTgEg/pcBI5e9ZdR6kEANqWetQH/FCsYGVje4dLVDapx9p5BSR1fdsSNHYrw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=CKsje28WOguc3V1il1l3rLQjEAGQYr/n4Fs+RMK1ko4=;
 b=yRnMaolMgp/+WNBOu2cx8xffaDjI4Iaw1t+X+nDVsy8d/a/19sxUeZR+0Ba5x0N3Eq83KJYL/qB2vDDdzlCtvQx5A1wnfUYONj8puCgE7io85K2o7RW1kAlT9Exw7c6j4nwIm5/Qd7kPVQgci/hAkf2f4oScRIlBbIzO5vsXUHw=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN1PR12MB2447.namprd12.prod.outlook.com (2603:10b6:802:27::22) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3955.18; Wed, 24 Mar
 2021 16:44:43 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d%3]) with mapi id 15.20.3955.027; Wed, 24 Mar 2021
 16:44:43 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: linux-kernel@vger.kernel.org, x86@kernel.org, kvm@vger.kernel.org
Cc: ak@linux.intel.com, Brijesh Singh <brijesh.singh@amd.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        Joerg Roedel <jroedel@suse.de>,
        "H. Peter Anvin" <hpa@zytor.com>, Tony Luck <tony.luck@intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Tom Lendacky <thomas.lendacky@amd.com>,
        David Rientjes <rientjes@google.com>,
        Sean Christopherson <seanjc@google.com>
Subject: [RFC Part1 PATCH 07/13] x86/compressed: register GHCB memory when SNP
 is active
Date: Wed, 24 Mar 2021 11:44:18 -0500
Message-Id: <20210324164424.28124-8-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210324164424.28124-1-brijesh.singh@amd.com>
References: <20210324164424.28124-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SA0PR11CA0010.namprd11.prod.outlook.com
 (2603:10b6:806:d3::15) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SA0PR11CA0010.namprd11.prod.outlook.com (2603:10b6:806:d3::15) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.24 via Frontend
 Transport; Wed, 24 Mar 2021 16:44:42 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 28f0e37f-ff5f-4803-af8b-08d8eee4202a
X-MS-TrafficTypeDiagnostic: SN1PR12MB2447:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN1PR12MB2447F905ED0CF0E4035C5867E5639@SN1PR12MB2447.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6790;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 R1xDn2amfCI3E5B3lpTQHQK4eqfLDRfevCiyQd6a04YxX5udBgqObA8XWvv8SMGkRLRfC4JGc7l/MSa3vask4vu5QYcU9xzluBHozt7KrcleAyb3MUvqmHUrLaiw2/MeihY7GPSEsh3z+/CiZhTU0j0gmMPQk4vo6Wu62OtHrEScYzaFJxnH+XsH/yiLzhGJg9/8pn8p2ke/82ywnwkiDHvW1ItDGDoEUFiVK4Y7xCmFcjMBAWqRf4TyuQx+8orrfA9E2JRqrPBMBKXX6zGrJXYUNnABxAZFRMXAGVODvjSrjMuI22LusT8aHaxg3Pd5NEgmewYPSpSLmuXy+Ehl2DBTqRRnX0AmI30daA1dnAR4dy0mBTj4CLmgODx4eXEkwBcCyYhPxkpkPYdTDvLKuPuNhT6LfW7Lq+NYKfyJmbc1gGHyfGd5bhYZ3AbvvuUZsdWpXdqhw5+1bAbc0VB8ClUJegjOOLxhnBmEbzOJBfw5QQligzHURNtGn8jX+3ruXjRgLDIho1VVhECannup/S3AF+n1io4TuytHyPot6OS8pegbx6DQXU/3ZV4rZfI+NccSsDZX1CC1COxdwjA9U+2Sh7bAXNIARwt2DKzIaWp0itE9V5Ah41qgILDrygmt2Sv3Z2vcHPzla2AFatYfKbOewX6gYIWRtMdhayAykTU=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(346002)(396003)(136003)(366004)(16526019)(38100700001)(5660300002)(26005)(44832011)(36756003)(1076003)(54906003)(8676002)(316002)(83380400001)(8936002)(4326008)(956004)(2906002)(186003)(6486002)(86362001)(7416002)(2616005)(66946007)(7696005)(478600001)(66556008)(66476007)(52116002)(6666004);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 3wnh69DwpugyEDFpgY//Ks/E2+olcuFxRE6rtV1tQddkTvmoXy8jVxrzthNzGlIFBGPES+vyArrXcAeluHH8pAvPlqivEtga5uJ8NMJBs6cv9Rk1OXDjxpRqQuqzX6US1ZXoijBhbfsUwa0Oq7GpmtQZKuasRjkpZ0HPoCXoec6NjHbRaeaaElw650OILPRzN3JUokJY2gCNj8L2dZFG9DOcvM9e3Ujo8kOf+WqToMDNndXTwmcYKC1y+9e25ON4U9Ex6UU3206V45vz0SOGCLoL+PVIiIdkeBx6C1y8meHN1qXdTH73ZrEPwmi0/UAeE5n0RCqQf6dK8IShl/YC9NUe3M/Yt34tMlk25++1ffUwyHGSnrH8cVJn3SYSWjWQmOvzHHXOZgss9dCaNkMwD31uM8p3jb1rTTrwKJXuLwkofanQThVEH4tqE9ySLu7FiFWb4sB1UT2re5qcDANxWIhpnO5zlOChzIxtoCUUyTGjxiTlGFyHHR6IXNFM3idJrd6saZ8pIzGCRgp3DdjSwWiBmFNAMBFpwrtSH7y3YZavVb2609GZsYoZv1IzWR8J8pGBNn0J8W3RtzxU3XHZ0rsv/xWrpYM6MKLV2GYWkzPJotivq2LPIP3/wNK8rtrr0Q1ueEy8lWSyuiFKQbLo2sXqJ4gC9RlxEVZbfXRxysVH/94nxLujvD2vh1aWCk531R6aztWE8ME0DbNxnuwdQGclN4mNX2YpYZow6ORqmALLMvpIMXmBRMcvJt3uHGzeORSecj+IRpW7AzfT60N+6+0qI1xV6S97Wt9iyjMtH+0ivzuvK09bgc7G1UOss3yAiSQf1eDdsjCeZd8BKD/3rbTwFu+qpyv1T131j59ft+bJkabDG3GO76vHxlTiiROsd+T8nLOZm/uM4niWvClY99HvIMy2pNhcyRvYIB9eMC0usFVzuDdRhp6g0a/v2BiC7WISm7XXGkxISL+60BxsRolUS34OUFfK7r+PLl5odPvBilG1RMcgRdOp6jnX018dmhcyTE0rkI5gdeK5juNyOXBE1iS9YCeaxUuRoC+OltTsfucoaRDPcxDqMxp1Crv9a60LeKahlECFubrH+j7hXYvANUkLiayY+kPA33A8atZlXK+zthwGwtsPJKh9NIWA0hkSzDMPvR2BlsQE4qDStZt1AqDN4sFk7lW8fAR40//WbR+e9zFfiYQvURPnJxOU4O9Aqa1AM9Px9h9K5n0RcFgwnOeDHlMgFO4+EFdKUyu5D6Bqhtas7e9GoA863tQvUiimKuYLgVMyvBRtcsVk/gYFACTCD5jPyXx9s2hmvjnfofcGw3CetqzwOvO7EMd7
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 28f0e37f-ff5f-4803-af8b-08d8eee4202a
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2021 16:44:43.3886
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 6JYnK/yHBFY0MkB/QmElTrpldJ5pg3t0QSaKzmihaxGQ3b50/x56ClG1JEM7aNn64nnSXUFEKaSnEUiASRzq3g==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN1PR12MB2447
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The SEV-SNP guest is required to perform GHCB GPA registration. This is
because the hypervisor may prefer that a guest use a consistent and/or
specific GPA for the GHCB associated with a vCPU. For more information,
see the GHCB specification section 2.5.2.

Currently, we do not support working with hypervisor preferred GPA, If
the hypervisor can not work with our provided GPA then we will terminate
the boot.

Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Joerg Roedel <jroedel@suse.de>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Tony Luck <tony.luck@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Sean Christopherson <seanjc@google.com>
Cc: x86@kernel.org
Cc: kvm@vger.kernel.org
Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/boot/compressed/sev-es.c  |  4 ++++
 arch/x86/boot/compressed/sev-snp.c | 26 ++++++++++++++++++++++++++
 arch/x86/include/asm/sev-snp.h     | 11 +++++++++++
 3 files changed, 41 insertions(+)

diff --git a/arch/x86/boot/compressed/sev-es.c b/arch/x86/boot/compressed/sev-es.c
index 58b15b7c1aa7..c85d3d9ec57a 100644
--- a/arch/x86/boot/compressed/sev-es.c
+++ b/arch/x86/boot/compressed/sev-es.c
@@ -20,6 +20,7 @@
 #include <asm/fpu/xcr.h>
 #include <asm/ptrace.h>
 #include <asm/svm.h>
+#include <asm/sev-snp.h>
 
 #include "error.h"
 
@@ -118,6 +119,9 @@ static bool early_setup_sev_es(void)
 	/* Initialize lookup tables for the instruction decoder */
 	inat_init_tables();
 
+	/* SEV-SNP guest requires the GHCB GPA must be registered */
+	sev_snp_register_ghcb(__pa(&boot_ghcb_page));
+
 	return true;
 }
 
diff --git a/arch/x86/boot/compressed/sev-snp.c b/arch/x86/boot/compressed/sev-snp.c
index 5c25103b0df1..a4c5e85699a7 100644
--- a/arch/x86/boot/compressed/sev-snp.c
+++ b/arch/x86/boot/compressed/sev-snp.c
@@ -113,3 +113,29 @@ void sev_snp_set_page_shared(unsigned long paddr)
 {
 	sev_snp_set_page_private_shared(paddr, SNP_PAGE_STATE_SHARED);
 }
+
+void sev_snp_register_ghcb(unsigned long paddr)
+{
+	u64 pfn = paddr >> PAGE_SHIFT;
+	u64 old, val;
+
+	if (!sev_snp_enabled())
+		return;
+
+	/* save the old GHCB MSR */
+	old = sev_es_rd_ghcb_msr();
+
+	/* Issue VMGEXIT */
+	sev_es_wr_ghcb_msr(GHCB_REGISTER_GPA_REQ_VAL(pfn));
+	VMGEXIT();
+
+	val = sev_es_rd_ghcb_msr();
+
+	/* If the response GPA is not ours then abort the guest */
+	if ((GHCB_SEV_GHCB_RESP_CODE(val) != GHCB_REGISTER_GPA_RESP) ||
+	    (GHCB_REGISTER_GPA_RESP_VAL(val) != pfn))
+		sev_es_terminate(GHCB_SEV_ES_REASON_GENERAL_REQUEST);
+
+	/* Restore the GHCB MSR value */
+	sev_es_wr_ghcb_msr(old);
+}
diff --git a/arch/x86/include/asm/sev-snp.h b/arch/x86/include/asm/sev-snp.h
index f514dad276f2..0523eb21abd7 100644
--- a/arch/x86/include/asm/sev-snp.h
+++ b/arch/x86/include/asm/sev-snp.h
@@ -56,6 +56,13 @@ struct __packed snp_page_state_change {
 	struct snp_page_state_entry entry[SNP_PAGE_STATE_CHANGE_MAX_ENTRY];
 };
 
+/* GHCB GPA register */
+#define GHCB_REGISTER_GPA_REQ	0x012UL
+#define		GHCB_REGISTER_GPA_REQ_VAL(v)		(GHCB_REGISTER_GPA_REQ | ((v) << 12))
+
+#define GHCB_REGISTER_GPA_RESP	0x013UL
+#define		GHCB_REGISTER_GPA_RESP_VAL(val)		((val) >> 12)
+
 #ifdef CONFIG_AMD_MEM_ENCRYPT
 static inline int __pvalidate(unsigned long vaddr, int rmp_psize, int validate,
 			      unsigned long *rflags)
@@ -73,6 +80,8 @@ static inline int __pvalidate(unsigned long vaddr, int rmp_psize, int validate,
 	return rc;
 }
 
+void sev_snp_register_ghcb(unsigned long paddr);
+
 #else	/* !CONFIG_AMD_MEM_ENCRYPT */
 
 static inline int __pvalidate(unsigned long vaddr, int psize, int validate, unsigned long *eflags)
@@ -80,6 +89,8 @@ static inline int __pvalidate(unsigned long vaddr, int psize, int validate, unsi
 	return 0;
 }
 
+static inline void sev_snp_register_ghcb(unsigned long paddr) { }
+
 #endif /* CONFIG_AMD_MEM_ENCRYPT */
 
 #endif	/* __ASSEMBLY__ */

From patchwork Wed Mar 24 16:44:19 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12161677
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id D03C2C433E6
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:29 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id AA61361A29
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:29 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236656AbhCXQpB (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Wed, 24 Mar 2021 12:45:01 -0400
Received: from mail-dm6nam12on2040.outbound.protection.outlook.com
 ([40.107.243.40]:48321
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S236548AbhCXQoq (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 24 Mar 2021 12:44:46 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=eE5Fe96Ma67qnkBEB91tF0KbLXhTJEL07zJNxoEPdbSKXbE2p/nZPEBoqaKQwPmWc4eKEj2B7vT1Fp8qnjjsXkJ0nwJnDhucabs2ZW9h/uMDF7AyMAG40l0StYfB7MKk9CiQ1jtDqIqswpf3eaWz4bQEtHkzydYcLwOhH1/SF7Li+BOb1kCc/XQ6+QJthkzlGz+DBhhSueo7VI4H01P/Q3k60bu+hdZKwdevghlfiW+J1sL8hau/X0TKLXQXgviajb4GVwEoKm5jMkdhO6DUoHZPsGRQJPsaRuNXyraZ79/cOwVuT89WtuGA65Zjb6IfyT0aPbWbm4Nq3MvLQlX+qQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=pQub3ZjNV1rXAhZ8usgjtNMDaDa4+HS+MfE2Iv1RLhs=;
 b=PwSkVd7fcwNjVEuK6H+a5wqN4OhBkvp8KsddYnDam8VF1k2AGuGsTL9Y+Mg4SMG39e7bf7fM4sgULYoMJR9ZC2IScLlG/CYy+f7NfwUSPS3TzzF9BvYHBh2ir3DGGmuPoEA2e6upd5eZgRV6faIoL0FTXsquNTMW/czGa7TsKJmBhvT/u9bQMG2u7xFgy4xcJwLE89/THUQF8rGuCtHKqxFugJUaUxidsezowa2QIu3frXQtjIkzHF8uEdNQSEdHjDYFrh2rBnmcpVLQ4xo14lybiASpq6ZC88ptNpE6hZ76ReBgNswvlAaBTtf9qdwkGSKCRxkVcAqLzTHDjVLpdQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=pQub3ZjNV1rXAhZ8usgjtNMDaDa4+HS+MfE2Iv1RLhs=;
 b=hv/S7Ohw06jCY0897o5M7MgFFVyY9l/wLfMkm99lYN/OFx528yC7sBded7INTzoX8NFI1WD/Ui31VlSmirb0qcCi8tavYRdtOrHavJ0XV2E2ot88ixEpFuU6ix0Ywoyoa5Z1KlDNahi1eG74x6GO1B4tzitfkcPSDYv/1g+hY8s=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4446.namprd12.prod.outlook.com (2603:10b6:806:71::18) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.25; Wed, 24 Mar
 2021 16:44:44 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d%3]) with mapi id 15.20.3955.027; Wed, 24 Mar 2021
 16:44:44 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: linux-kernel@vger.kernel.org, x86@kernel.org, kvm@vger.kernel.org
Cc: ak@linux.intel.com, Brijesh Singh <brijesh.singh@amd.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        Joerg Roedel <jroedel@suse.de>,
        "H. Peter Anvin" <hpa@zytor.com>, Tony Luck <tony.luck@intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Tom Lendacky <thomas.lendacky@amd.com>,
        David Rientjes <rientjes@google.com>,
        Sean Christopherson <seanjc@google.com>
Subject: [RFC Part1 PATCH 08/13] x86/sev-es: register GHCB memory when SEV-SNP
 is active
Date: Wed, 24 Mar 2021 11:44:19 -0500
Message-Id: <20210324164424.28124-9-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210324164424.28124-1-brijesh.singh@amd.com>
References: <20210324164424.28124-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SA0PR11CA0010.namprd11.prod.outlook.com
 (2603:10b6:806:d3::15) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SA0PR11CA0010.namprd11.prod.outlook.com (2603:10b6:806:d3::15) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.24 via Frontend
 Transport; Wed, 24 Mar 2021 16:44:43 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: dbc41287-d453-489a-4c62-08d8eee4209c
X-MS-TrafficTypeDiagnostic: SA0PR12MB4446:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB4446F44D2A6E6AA58C3EDC85E5639@SA0PR12MB4446.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:4714;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 c7zBRYksxHNE3qcnjQZ3EHhiETM3pgeKlrjiPbwdnRAeN1ysHdVFNuVNdcMTdNk9F7xTK3eYIlvAM7+UUP1+wu/P/OMwMWYRgfWCX9G0VBe/guwVxyi3dXvlydqSAF6WXmb3oN03GnRi5rhi3+vqy5wN96h+PutpI/stiE3ZswDppo2T4PCJrS9d2Sr+AP1Q8Ur4SFC5vH2nIZk6QieOirVezUD4azeqpRNXUr433wlp4vj5QENCjogXneE1AOXrsjEYlCAVvAD+Mn/M4eZLTMKDHOB9vExADCf4cvPHmImUZp4Ve7NmwPtOvRvAFjHutiLINB4MtQC+QVHZKEGnE/7Lsdwqlmt5ExKUdtgA+mBLIetLVhCu3D7WVvzsfKpbZrWhPrIZcg1G4kTDjAJdfkpqbHOhat4+4Qw6h83h+6kLGT7Q45c88bQlE0fUjhUOQkLFnSH6/RBgFbxrB5pisvb3Go4NMDsfcK87Zxle16uj4bIJzhmNqc5O0WxJZIR/WzZUurFhZj8QudQNbsM/k57cZBLKaH48e9BS7mIE7GQKevlX71sbQD8H7mDKrZbZe6cG44N4Lc0GNuZOYFoOiJeZXmLmIEbqbP2qh2OoR0kWCZVyJIXMWcUMcLmpGzdQCbwnAnY8qHwXS133MTkHBlyN4xys6cWl53aRUV9G/+g=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(366004)(136003)(396003)(376002)(8676002)(1076003)(4326008)(6666004)(38100700001)(8936002)(956004)(2616005)(5660300002)(186003)(66946007)(86362001)(44832011)(36756003)(7696005)(6486002)(7416002)(478600001)(66476007)(66556008)(52116002)(316002)(83380400001)(16526019)(2906002)(26005)(54906003);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 Jc2yIsXqQHz/ltyFqfCHQxgNOzwNyksIloBeDG8AtN2MXaaVd6qcbepQ/xzGRxqUz4UA+lO8TcXaf/SaX3YApw19Djga3EGhnJy4oO9JRwWGd2DUOO9Xif7zHgVAjRzGB7bo8ZcK+NhkHUzG6z8VKfCh9zdfqqDc18ebHv797azh+P4VQWeGgmtZGAwqBe1v0dQanMfkTO3GIfw7f+JwYcdDj7y0Iz9QbLM3QL1meBKwoZ4urOCSwDpN4M44wtT7w+bf93SYIhgpgxh3RgVL9VBS/Fl6GZULUsCSLd/V1emz00KbTmM8VzaqaCHAEO931osD2GpSwkFH7ynEJCOwNd+jhsmJ70UJtt6rVPyW9P5hLw+EuwjTrHUwbWMS8pYHNgoM2IxmJJmuPx5a+6LKLCk0oKxny5X26CrSfR0Cgz3ed6xcUzrhVgmFDWXPeq5vfOExPbjbsK0iXv5qzVkPY5RMZW8Dm+vPJRvm+6FKaPl7Ts1epxhQbrdl8QoiOAraOFKABfDqee8Hdkuvl2qet13pL0jW9xCo/YEAjPo6Ro4Fw9FLjwyWtaBAcdviZHUtZgFpk0Fuqp9wypkf2AlOvvGjXskMnJYCOzPvsROYBu5iSTFeL3uFBODBo4nZlmybu+Xf2q06iXGvNdlBHfHD1cjyygn9ma7p4/W3ZC9COZhhGXYMeuceivbJOxnFmyXIROj6/3yikTd7dE5Caz/0MnsZri0IYFuNQhFXjofG2DJZ2iLY1yeaYCgo4bf6DJ5ANKEWfJIp1tUXn1kA+1GBHsw4SaLm5k16rqUQc57QYtW/o/v00k6NkjOHsdDNeUwz/OBUvxdq3/jgSm9FD1d7xjUopZZyo/vEC4x21ryz6xf3Hi3953tUMB9FdH6myAZSVKgXJuY5baBXBfp1Mn/adlGP+Q00rQCQQDuUr1H4pJrqWhVH+F7ayORhOo1pDbvk2gqDKjkRzKAgnr5utRS9wId5Gff1+yUtO2RFLNObbqc6YAbt8HMWSgh4CzvKPAt7tmwt54ddSN8FIPkmib7Gm2mXIlPg6gVDxO3sGy+ssBBjyoioK2oryDubIwmacreAZ+V2aObwOHnPc1HldCKcBYZFJCELFlApWtDsQ7cnCnkbPL17QcofpvJieWed4Z/oJusJu1BS8G/IHP4kIhA6qrJ/RYhcM9uE0DDHWv6MGTCbiZPUzckGESg5QKeeBm/DvxGwuTv4ghQuG5yofgwpnrEpCUZCE6cT0WlSw0Q/ieLC4uQ1onqHxjvQuIptz+zPzMR90higzT2PK/8LI5IPxi3EH/n16LnwTBzxz25+5zhb10V/D0kFigbRK9UBFZnj
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 dbc41287-d453-489a-4c62-08d8eee4209c
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2021 16:44:44.1382
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 AxX1UYehe7/a8MVwiL/k41aFRx8H719gdpd1kEudoOnaHSEHR8Aw5+jtJtSmZ9/xhtEuN78nvvIjs7kW0uSOhw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4446
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The SEV-SNP guest is required to perform GHCB GPA registration. This is
because the hypervisor may prefer that a guest use a consistent and/or
specific GPA for the GHCB associated with a vCPU. For more information,
see the GHCB specification section 2.5.2.

During the boot, init_ghcb() allocates a per-cpu GHCB page. On very first
VC exception, the exception handler switch to using the per-cpu GHCB page
allocated during the init_ghcb(). The GHCB page must be registered in
the current vcpu context.

Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Joerg Roedel <jroedel@suse.de>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Tony Luck <tony.luck@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Sean Christopherson <seanjc@google.com>
Cc: x86@kernel.org
Cc: kvm@vger.kernel.org
Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kernel/Makefile  |  3 ++
 arch/x86/kernel/sev-es.c  | 19 +++++++++++++
 arch/x86/kernel/sev-snp.c | 58 +++++++++++++++++++++++++++++++++++++++
 3 files changed, 80 insertions(+)
 create mode 100644 arch/x86/kernel/sev-snp.c

diff --git a/arch/x86/kernel/Makefile b/arch/x86/kernel/Makefile
index 5eeb808eb024..2fb24c49d2e3 100644
--- a/arch/x86/kernel/Makefile
+++ b/arch/x86/kernel/Makefile
@@ -21,6 +21,7 @@ CFLAGS_REMOVE_ftrace.o = -pg
 CFLAGS_REMOVE_early_printk.o = -pg
 CFLAGS_REMOVE_head64.o = -pg
 CFLAGS_REMOVE_sev-es.o = -pg
+CFLAGS_REMOVE_sev-snp.o = -pg
 endif
 
 KASAN_SANITIZE_head$(BITS).o				:= n
@@ -29,6 +30,7 @@ KASAN_SANITIZE_dumpstack_$(BITS).o			:= n
 KASAN_SANITIZE_stacktrace.o				:= n
 KASAN_SANITIZE_paravirt.o				:= n
 KASAN_SANITIZE_sev-es.o					:= n
+KASAN_SANITIZE_sev-snp.o				:= n
 
 # With some compiler versions the generated code results in boot hangs, caused
 # by several compilation units. To be safe, disable all instrumentation.
@@ -151,6 +153,7 @@ obj-$(CONFIG_UNWINDER_FRAME_POINTER)	+= unwind_frame.o
 obj-$(CONFIG_UNWINDER_GUESS)		+= unwind_guess.o
 
 obj-$(CONFIG_AMD_MEM_ENCRYPT)		+= sev-es.o
+obj-$(CONFIG_AMD_MEM_ENCRYPT)		+= sev-snp.o
 ###
 # 64 bit specific files
 ifeq ($(CONFIG_X86_64),y)
diff --git a/arch/x86/kernel/sev-es.c b/arch/x86/kernel/sev-es.c
index 0bd1a0fc587e..004bf1102dc1 100644
--- a/arch/x86/kernel/sev-es.c
+++ b/arch/x86/kernel/sev-es.c
@@ -23,6 +23,7 @@
 #include <asm/cpu_entry_area.h>
 #include <asm/stacktrace.h>
 #include <asm/sev-es.h>
+#include <asm/sev-snp.h>
 #include <asm/insn-eval.h>
 #include <asm/fpu/internal.h>
 #include <asm/processor.h>
@@ -88,6 +89,13 @@ struct sev_es_runtime_data {
 	 * is currently unsupported in SEV-ES guests.
 	 */
 	unsigned long dr7;
+
+	/*
+	 * SEV-SNP requires that the GHCB must be registered before using it.
+	 * The flag below will indicate whether the GHCB is registered, if its
+	 * not registered then sev_es_get_ghcb() will perform the registration.
+	 */
+	bool ghcb_registered;
 };
 
 struct ghcb_state {
@@ -196,6 +204,12 @@ static __always_inline struct ghcb *sev_es_get_ghcb(struct ghcb_state *state)
 		data->ghcb_active = true;
 	}
 
+	/* SEV-SNP guest requires that GHCB must be registered before using it. */
+	if (sev_snp_active() && !data->ghcb_registered) {
+		sev_snp_register_ghcb(__pa(ghcb));
+		data->ghcb_registered = true;
+	}
+
 	return ghcb;
 }
 
@@ -569,6 +583,10 @@ static bool __init sev_es_setup_ghcb(void)
 	/* Alright - Make the boot-ghcb public */
 	boot_ghcb = &boot_ghcb_page;
 
+	/* SEV-SNP guest requires that GHCB GPA must be registered */
+	if (sev_snp_active())
+		sev_snp_register_ghcb(__pa(&boot_ghcb_page));
+
 	return true;
 }
 
@@ -658,6 +676,7 @@ static void __init init_ghcb(int cpu)
 
 	data->ghcb_active = false;
 	data->backup_ghcb_active = false;
+	data->ghcb_registered = false;
 }
 
 void __init sev_es_init_vc_handling(void)
diff --git a/arch/x86/kernel/sev-snp.c b/arch/x86/kernel/sev-snp.c
new file mode 100644
index 000000000000..d32225c2b653
--- /dev/null
+++ b/arch/x86/kernel/sev-snp.c
@@ -0,0 +1,58 @@
+// SPDX-License-Identifier: GPL-2.0-only
+/*
+ * AMD Memory Encryption Support
+ *
+ * Copyright (C) 2021 Advanced Micro Devices
+ *
+ * Author: Brijesh Singh <brijesh.singh@amd.com>
+ */
+
+#define pr_fmt(fmt)	"SEV-SNP: " fmt
+
+#include <linux/mem_encrypt.h>
+#include <linux/kernel.h>
+#include <linux/mm.h>
+
+#include <asm/sev-es.h>
+#include <asm/sev-snp.h>
+
+static inline u64 sev_es_rd_ghcb_msr(void)
+{
+	return __rdmsr(MSR_AMD64_SEV_ES_GHCB);
+}
+
+static inline void sev_es_wr_ghcb_msr(u64 val)
+{
+	u32 low, high;
+
+	low  = (u32)(val);
+	high = (u32)(val >> 32);
+
+	native_wrmsr(MSR_AMD64_SEV_ES_GHCB, low, high);
+}
+
+/* Provides sev_es_terminate() */
+#include "sev-common-shared.c"
+
+void sev_snp_register_ghcb(unsigned long paddr)
+{
+	u64 pfn = paddr >> PAGE_SHIFT;
+	u64 old, val;
+
+	/* save the old GHCB MSR */
+	old = sev_es_rd_ghcb_msr();
+
+	/* Issue VMGEXIT */
+	sev_es_wr_ghcb_msr(GHCB_REGISTER_GPA_REQ_VAL(pfn));
+	VMGEXIT();
+
+	val = sev_es_rd_ghcb_msr();
+
+	/* If the response GPA is not ours then abort the guest */
+	if ((GHCB_SEV_GHCB_RESP_CODE(val) != GHCB_REGISTER_GPA_RESP) ||
+	    (GHCB_REGISTER_GPA_RESP_VAL(val) != pfn))
+		sev_es_terminate(GHCB_SEV_ES_REASON_GENERAL_REQUEST);
+
+	/* Restore the GHCB MSR value */
+	sev_es_wr_ghcb_msr(old);
+}

From patchwork Wed Mar 24 16:44:20 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12161681
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id F35EBC433E8
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:29 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id E224861A34
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:29 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236702AbhCXQpD (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Wed, 24 Mar 2021 12:45:03 -0400
Received: from mail-dm6nam12on2040.outbound.protection.outlook.com
 ([40.107.243.40]:48321
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S236553AbhCXQor (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 24 Mar 2021 12:44:47 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=VwZQWtJiLVnuY7WJEHkBhvzvSCJobITSD/zDOXjFSFvnVOXAjAM51tUCwVJwrplimPsY6sMjMJiPacMDoYmG3e6nIZA+Fu1k5R3qbf6TalyH+ou7VmkzkBX6YJZgeWsVDG/HveWSgmQGl30YmbiimDqyMlchuWu9eM6O0oVko0V1ERFbAitwcOwLljg6vU1uuh66rwi2HBQ9/ZRv+Yhhf0JeVOE0T/LbuNxpyeRaUUBSL7d1DAW6rs0Z81QoicpBDmqZ0/9wXJv/YEputfV3ZeFeovI/89hgRO8ccneTrkR2+guM8+SRIr7DWkQ3ryroI6x6KlZjue9qDCYapYXeIA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=EnP60fE2gy7y2piz8SX2c7qivOiO3fgPtq1TQh2z2tQ=;
 b=g2j69NX6WpCkZtV50J4+A1EGhzqHj1ePjEvZvqLlQFiaWVUu8lUFVT1R0FOLYX8Po91dfBIzBnlsU9Nm5XyjS+lDV5ksB6B1PE8TPXX29N3wm5PSVA5X89puDp/TJ5CcT4Jn85PZ8944evfuWBBPBoybv74uhXuLvJiCtSm1Rwl7q5qqTsFofBUFltz1hQunM624wjVEUadvQDXEmLXume2uFo8+EiMj+yU84eiKinsV4TzgfmntqHVwZBWWhTsNZl92x+/HIIR5+cepKd8CfY+fGOn4Rnx2S8WaHfEYlfmMa+EPwQ9jq/6PxfFgSjnA3dDguaZ03KHy42RCW4JuWg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=EnP60fE2gy7y2piz8SX2c7qivOiO3fgPtq1TQh2z2tQ=;
 b=CMlih/hKluY1TEg5sB9qtNtXC2U8p/+2g7Ug/sXa0+tE+miri7n15nM/wQhAgTljfaFaidhSEg5MJd/dI8WE9N7PPHP+K+4ln7xxlIq0JJaIk+4fyG2XMzLt0cBk6M/2RgUtaod/Q3o7/QSM1CI18u79/ElSJ74/exFoofj8jZ4=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4446.namprd12.prod.outlook.com (2603:10b6:806:71::18) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.25; Wed, 24 Mar
 2021 16:44:45 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d%3]) with mapi id 15.20.3955.027; Wed, 24 Mar 2021
 16:44:45 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: linux-kernel@vger.kernel.org, x86@kernel.org, kvm@vger.kernel.org
Cc: ak@linux.intel.com, Brijesh Singh <brijesh.singh@amd.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        Joerg Roedel <jroedel@suse.de>,
        "H. Peter Anvin" <hpa@zytor.com>, Tony Luck <tony.luck@intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Tom Lendacky <thomas.lendacky@amd.com>,
        David Rientjes <rientjes@google.com>,
        Sean Christopherson <seanjc@google.com>
Subject: [RFC Part1 PATCH 09/13] x86/kernel: add support to validate memory in
 early enc attribute change
Date: Wed, 24 Mar 2021 11:44:20 -0500
Message-Id: <20210324164424.28124-10-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210324164424.28124-1-brijesh.singh@amd.com>
References: <20210324164424.28124-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SA0PR11CA0010.namprd11.prod.outlook.com
 (2603:10b6:806:d3::15) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SA0PR11CA0010.namprd11.prod.outlook.com (2603:10b6:806:d3::15) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.24 via Frontend
 Transport; Wed, 24 Mar 2021 16:44:44 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 3ebc63b1-5c3e-4bf4-7415-08d8eee4210d
X-MS-TrafficTypeDiagnostic: SA0PR12MB4446:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB44463A752C111B198FCDE584E5639@SA0PR12MB4446.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:3044;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 6VnGAP/Mv6dgzE3cB6R5VnpN6sOOwuU6uHf43OaA3eyrH/wVEL4+geOkn6iu2LyXV/PfdDvuWirXu0fujsPaxdOFLPI0S8pPoggqWJil3oOYthzvuANFxwH83i/HncXRoZwcNvwkrBnAVSiqKGO5Zd0OMCRYdV/4kpmz5FrtbmXImxXngGan/AtNh/CF9iu0pzJeeUANw5GndTWjK1yCob9n/x2bRiMxGYISRC5HSLnenpkUL42bjsMhlJPoNdqybQiT9SIBGnOM+P/DpRiWj1DJJXtBEV7Xnuxrl44Z/M+FgASvGcoqctI6wVNZ8VYDmZikTsKM5ZjiYTxdsyNS/O7qufw7jNQlaL4+zP/3H07N4TGf4SKFMl9f/X/m+qvqfjj4tdXt0XsWnl/hNzrkHvYN5croGiBF93GpJZksoUdhThwF88B+1bPugkGrhRuu0elth6/5ochqroQjrOaVEJudLtsKNojDDmlyhOQu/4wx2MTzC+JakOigKHeIAlBkOu89q0EicBFPUL7fVgxbVgZOg7cZ1DIFw2AlGDuBm86J3buHaNuKNE4iMbZGuo/IcQjvJkzvm7VOHtcAGMzAgQtlhDM0jtLUqBOa1XMoqiT42uQ+3phdlt9MRzgTvz7xIeieRZ+4WeM9JLhSVa7/yADLF50ilGqeM3dBZmfPTGA=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(366004)(136003)(396003)(376002)(8676002)(1076003)(4326008)(6666004)(38100700001)(8936002)(956004)(2616005)(5660300002)(186003)(66946007)(86362001)(44832011)(36756003)(15650500001)(7696005)(6486002)(7416002)(478600001)(66476007)(66556008)(52116002)(316002)(83380400001)(16526019)(2906002)(26005)(54906003);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 wyvjI4tvQrnfcVoBpix7Rp+U3g+24F/n7cm5myU9Yq65t4zEB1bV1CeU/eh8TWBYVIaisaQxiBswmfKwCimRYqNJFBmTm8x/P0HIIl0ZqBY3OHgrHgppsJhRm1yjBSw7mhGpYEYzyctpzkvsgfTAGz8TN7mW1CSbHIapQO1uHKm7QPmAOOyI+pWcJD3akcPqPIyxWfDn7ZEXmvYj5CmriMWo9A9eCjKaKBGAMWGcJM9zW14ziPl7gvNT3Pn4mc5pgpN6B0sbHHeNUyxHBPyfsnrRWONiKAP0epu0q056kHQQE4J+UbXVLUjG/SRRwIVse8KZ5eEy+LJPSA0+5QTh+JQiT0Qkuv/HjnYnVfPE5moZbL+mypMbCUz1TWY+5gZiSSGylCP4tWvG3hJ4Ima/+LGCZ02h3mQkMAIEJrXgLdwKxO9u1ESnRXJ2DnkQwNjG7n9HFHT2wCNVaEOT5+QId8xB5R00EiUEHYIlLor4ABEkYacAyg/VhyT+/yap3l+WM4qZepzipQyZSDxDhDvSfe92EJNZAvXBL+/kReJ4zWuNRdPfkdD8pevvvPw72+RwRr3PR9yY2zdMSiSME9bAuHrQ6PDqgfbRx0oTKh/Ng2GlTVkGDSLHClTFaCmrnl0yGJIJjhqygKaKZyeW7vVl+YSqXNTZ4D1S8R0Y/5FE0QIfyjmQrPv6jYHCNxYyP7mnovkIQnEekJGSBNNC84PmEkxLIJSX+IUPevBV1oMyFgDVjEbni3k7May5Cmn+6GvsmAZxGrcxfaMLBWgIOVbg25hRH+b8R1dKtZ5XPjPDPKOynwnU2kMAnVDEzbVUERruXk9jGlqQL+qMlVUkEpvGBb6C3PjaUrVzRyOgUCAku1sNslpk81TK5ZinjEdRxbtWb0tAQZrgpgCBrZLJrnmPtc3OLatQ7eJhe2cfiohPRWloL2YV8BK7+m7JtWwLan1SzUo5mL5w2W2MJE/4bPDMyoUMIFcOfPCYLLifEMfmbOZ2ynjagPYy2Fkfm0cXIjHlTDt0ukKk3WYyM6oUhFTqT3bDLWrpTfXX28rCgV1p1ERXV89fPwW3wJ7eVyLjKrK0WBkwUZSKuc47j3dSIVbqhzAx2iVlIHo1IhuXbUavWTerGCHD/ipixJQh3QaFSiqPD7K0gei2KasVroZDTXqg22nWK35IWeCSAcwSXTCTN4wVqj9t4vIudSfTeZtmkcwVlWLm4LJ5GxpswjGL8DyJmahl/2XFjdPtmVMX56oWAoPyy06hg0XYzB09OeT5LpSCqMY5HilMwCDKw1Qovlat2WAXGtseRNKrdX9wfU0UKxBmFCz7X9+OBydeYRAClGMb
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 3ebc63b1-5c3e-4bf4-7415-08d8eee4210d
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2021 16:44:44.8898
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 Tjxc9px0Ll1kBGB2oXXc1kBKbTfUD6Pv4POE8b/hiyzwZ654bg7j5eGPq2LDpbmitNq8Dsti/OScJxjfz081gw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4446
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The early_set_memory_{encrypt,decrypt}() are used for changing the
page from decrypted (shared) to encrypted (private) and vice versa.
When SEV-SNP is active, the page state transition needs to go through
additional steps.

If the page is transitioned from shared to private, then perform the
following after the encryption attribute is set in the page table:

1. Issue the page state change VMGEXIT to add the page as a private
   in the RMP table.
2. Validate the page after its successfully added in the RMP table.

To maintain the security guarantees, if the page is transitioned from
private to shared, then perform the following before clearing the
encryption attribute from the page table.

1. Invalidate the page.
2. Issue the page state change VMGEXIT to make the page shared in the
   RMP table.

The early_set_memory_{encryot,decrypt} can be called before the full GHCB
is setup, use the SNP page state MSR protocol VMGEXIT defined in the GHCB
section 2.3.1 to request the page state change in the RMP table.

Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Joerg Roedel <jroedel@suse.de>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Tony Luck <tony.luck@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Sean Christopherson <seanjc@google.com>
Cc: x86@kernel.org
Cc: kvm@vger.kernel.org
Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/sev-snp.h |  20 +++++++
 arch/x86/kernel/sev-snp.c      | 105 +++++++++++++++++++++++++++++++++
 arch/x86/mm/mem_encrypt.c      |  40 ++++++++++++-
 3 files changed, 163 insertions(+), 2 deletions(-)

diff --git a/arch/x86/include/asm/sev-snp.h b/arch/x86/include/asm/sev-snp.h
index 0523eb21abd7..c4b096206062 100644
--- a/arch/x86/include/asm/sev-snp.h
+++ b/arch/x86/include/asm/sev-snp.h
@@ -63,6 +63,10 @@ struct __packed snp_page_state_change {
 #define GHCB_REGISTER_GPA_RESP	0x013UL
 #define		GHCB_REGISTER_GPA_RESP_VAL(val)		((val) >> 12)
 
+/* Macro to convert the x86 page level to the RMP level and vice versa */
+#define X86_RMP_PG_LEVEL(level)	(((level) == PG_LEVEL_4K) ? RMP_PG_SIZE_4K : RMP_PG_SIZE_2M)
+#define RMP_X86_PG_LEVEL(level)	(((level) == RMP_PG_SIZE_4K) ? PG_LEVEL_4K : PG_LEVEL_2M)
+
 #ifdef CONFIG_AMD_MEM_ENCRYPT
 static inline int __pvalidate(unsigned long vaddr, int rmp_psize, int validate,
 			      unsigned long *rflags)
@@ -82,6 +86,11 @@ static inline int __pvalidate(unsigned long vaddr, int rmp_psize, int validate,
 
 void sev_snp_register_ghcb(unsigned long paddr);
 
+void __init early_snp_set_memory_private(unsigned long vaddr, unsigned long paddr,
+		unsigned int npages);
+void __init early_snp_set_memory_shared(unsigned long vaddr, unsigned long paddr,
+		unsigned int npages);
+
 #else	/* !CONFIG_AMD_MEM_ENCRYPT */
 
 static inline int __pvalidate(unsigned long vaddr, int psize, int validate, unsigned long *eflags)
@@ -91,6 +100,17 @@ static inline int __pvalidate(unsigned long vaddr, int psize, int validate, unsi
 
 static inline void sev_snp_register_ghcb(unsigned long paddr) { }
 
+static inline void __init
+early_snp_set_memory_private(unsigned long vaddr, unsigned long paddr, unsigned int npages)
+{
+	return 0;
+}
+static inline void __init
+early_snp_set_memory_shared(unsigned long vaddr, unsigned long paddr, unsigned int npages)
+{
+	return 0;
+}
+
 #endif /* CONFIG_AMD_MEM_ENCRYPT */
 
 #endif	/* __ASSEMBLY__ */
diff --git a/arch/x86/kernel/sev-snp.c b/arch/x86/kernel/sev-snp.c
index d32225c2b653..ff9b35bfb05c 100644
--- a/arch/x86/kernel/sev-snp.c
+++ b/arch/x86/kernel/sev-snp.c
@@ -56,3 +56,108 @@ void sev_snp_register_ghcb(unsigned long paddr)
 	/* Restore the GHCB MSR value */
 	sev_es_wr_ghcb_msr(old);
 }
+
+static void sev_snp_issue_pvalidate(unsigned long vaddr, unsigned int npages, bool validate)
+{
+	unsigned long eflags, vaddr_end, vaddr_next;
+	int rc;
+
+	vaddr = vaddr & PAGE_MASK;
+	vaddr_end = vaddr + (npages << PAGE_SHIFT);
+
+	for (; vaddr < vaddr_end; vaddr = vaddr_next) {
+		rc = __pvalidate(vaddr, RMP_PG_SIZE_4K, validate, &eflags);
+
+		if (rc) {
+			pr_err("Failed to validate address 0x%lx ret %d\n", vaddr, rc);
+			goto e_fail;
+		}
+
+		/* Check for the double validation condition */
+		if (eflags & X86_EFLAGS_CF) {
+			pr_err("Double %salidation detected (address 0x%lx)\n",
+					validate ? "v" : "inv", vaddr);
+			goto e_fail;
+		}
+
+		vaddr_next = vaddr + PAGE_SIZE;
+	}
+
+	return;
+
+e_fail:
+	/* Dump stack for the debugging purpose */
+	dump_stack();
+
+	/* Ask to terminate the guest */
+	sev_es_terminate(GHCB_SEV_ES_REASON_GENERAL_REQUEST);
+}
+
+static void __init early_snp_set_page_state(unsigned long paddr, unsigned int npages, int op)
+{
+	unsigned long paddr_end, paddr_next;
+	u64 old, val;
+
+	paddr = paddr & PAGE_MASK;
+	paddr_end = paddr + (npages << PAGE_SHIFT);
+
+	/* save the old GHCB MSR */
+	old = sev_es_rd_ghcb_msr();
+
+	for (; paddr < paddr_end; paddr = paddr_next) {
+
+		/*
+		 * Use the MSR protocol VMGEXIT to request the page state change. We use the MSR
+		 * protocol VMGEXIT because in early boot we may not have the full GHCB setup
+		 * yet.
+		 */
+		sev_es_wr_ghcb_msr(GHCB_SNP_PAGE_STATE_REQ_GFN(paddr >> PAGE_SHIFT, op));
+		VMGEXIT();
+
+		val = sev_es_rd_ghcb_msr();
+
+		/* Read the response, if the page state change failed then terminate the guest. */
+		if (GHCB_SEV_GHCB_RESP_CODE(val) != GHCB_SNP_PAGE_STATE_CHANGE_RESP)
+			sev_es_terminate(GHCB_SEV_ES_REASON_GENERAL_REQUEST);
+
+		if (GHCB_SNP_PAGE_STATE_RESP_VAL(val) != 0) {
+			pr_err("Failed to change page state to '%s' paddr 0x%lx error 0x%llx\n",
+					op == SNP_PAGE_STATE_PRIVATE ? "private" : "shared",
+					paddr, GHCB_SNP_PAGE_STATE_RESP_VAL(val));
+
+			/* Dump stack for the debugging purpose */
+			dump_stack();
+
+			/* Ask to terminate the guest */
+			sev_es_terminate(GHCB_SEV_ES_REASON_GENERAL_REQUEST);
+		}
+
+		paddr_next = paddr + PAGE_SIZE;
+	}
+
+	/* Restore the GHCB MSR value */
+	sev_es_wr_ghcb_msr(old);
+}
+
+void __init early_snp_set_memory_private(unsigned long vaddr, unsigned long paddr,
+					 unsigned int npages)
+{
+	 /* Ask hypervisor to add the memory in RMP table as a 'private'. */
+	early_snp_set_page_state(paddr, npages, SNP_PAGE_STATE_PRIVATE);
+
+	/* Validate the memory region after its added in the RMP table. */
+	sev_snp_issue_pvalidate(vaddr, npages, true);
+}
+
+void __init early_snp_set_memory_shared(unsigned long vaddr, unsigned long paddr,
+					unsigned int npages)
+{
+	/*
+	 * We are chaning the memory from private to shared, invalidate the memory region
+	 * before making it shared in the RMP table.
+	 */
+	sev_snp_issue_pvalidate(vaddr, npages, false);
+
+	 /* Ask hypervisor to make the memory shared in the RMP table. */
+	early_snp_set_page_state(paddr, npages, SNP_PAGE_STATE_SHARED);
+}
diff --git a/arch/x86/mm/mem_encrypt.c b/arch/x86/mm/mem_encrypt.c
index 5bd50008fc9a..35af2f21b8f1 100644
--- a/arch/x86/mm/mem_encrypt.c
+++ b/arch/x86/mm/mem_encrypt.c
@@ -29,6 +29,7 @@
 #include <asm/processor-flags.h>
 #include <asm/msr.h>
 #include <asm/cmdline.h>
+#include <asm/sev-snp.h>
 
 #include "mm_internal.h"
 
@@ -49,6 +50,27 @@ bool sev_enabled __section(".data");
 /* Buffer used for early in-place encryption by BSP, no locking needed */
 static char sme_early_buffer[PAGE_SIZE] __initdata __aligned(PAGE_SIZE);
 
+/*
+ * When SNP is active, this routine changes the page state from private to shared before
+ * copying the data from the source to destination and restore after the copy. This is required
+ * because the source address is mapped as decrypted by the caller of the routine.
+ */
+static inline void __init snp_aware_memcpy(void *dst, void *src, size_t sz,
+					   unsigned long paddr, bool dec)
+{
+	unsigned long npages = PAGE_ALIGN(sz) >> PAGE_SHIFT;
+
+	/* If the paddr need to accessed decrypted, make the page shared before memcpy. */
+	if (sev_snp_active() && dec)
+		early_snp_set_memory_shared((unsigned long)__va(paddr), paddr, npages);
+
+	memcpy(dst, src, sz);
+
+	/* Restore the page state after the memcpy. */
+	if (sev_snp_active() && dec)
+		early_snp_set_memory_private((unsigned long)__va(paddr), paddr, npages);
+}
+
 /*
  * This routine does not change the underlying encryption setting of the
  * page(s) that map this memory. It assumes that eventually the memory is
@@ -97,8 +119,8 @@ static void __init __sme_early_enc_dec(resource_size_t paddr,
 		 * Use a temporary buffer, of cache-line multiple size, to
 		 * avoid data corruption as documented in the APM.
 		 */
-		memcpy(sme_early_buffer, src, len);
-		memcpy(dst, sme_early_buffer, len);
+		snp_aware_memcpy(sme_early_buffer, src, len, paddr, enc);
+		snp_aware_memcpy(dst, sme_early_buffer, len, paddr, !enc);
 
 		early_memunmap(dst, len);
 		early_memunmap(src, len);
@@ -278,9 +300,23 @@ static void __init __set_clr_pte_enc(pte_t *kpte, int level, bool enc)
 	else
 		sme_early_decrypt(pa, size);
 
+	/*
+	 * If SEV-SNP is active, rescind validation of the page in the RMP entry before encryption
+	 * attribute is changed from C=1 to C=0.
+	 */
+	if (sev_snp_active() && !enc)
+		early_snp_set_memory_shared((unsigned long)__va(pa), pa, 1);
+
 	/* Change the page encryption mask. */
 	new_pte = pfn_pte(pfn, new_prot);
 	set_pte_atomic(kpte, new_pte);
+
+	/*
+	 * If SEV-SNP is active, validate the page in the RMP entry after encryption attribute is
+	 * changed from C=0 to C=1.
+	 */
+	if (sev_snp_active() && enc)
+		early_snp_set_memory_private((unsigned long)__va(pa), pa, 1);
 }
 
 static int __init early_set_memory_enc_dec(unsigned long vaddr,

From patchwork Wed Mar 24 16:44:21 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12161693
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 80D5EC433F1
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:30 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 5500361A19
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:30 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236815AbhCXQpH (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Wed, 24 Mar 2021 12:45:07 -0400
Received: from mail-dm6nam12on2040.outbound.protection.outlook.com
 ([40.107.243.40]:48321
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S236560AbhCXQot (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 24 Mar 2021 12:44:49 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=fRJzWC+w9xuXWdv+o8spWmM+GBwtmOlh3XLBc24FjfTpZ9XH//jsxNmnvnyAbsdv+hYIwmAd5hB70uTorbx2jT5TxmUy0q/2UaJhuTclC1uSI0JL03uGEXtfHxKhbGndvnlrpyAdQNUMy2HePJqoDgVQyudqMvdfeEAqc6JeiE6IDvL4uLf/eWTDtVsT7dl92htabrCCrcqcs2M1HtHVo8S5TdVELDfWRaMzqyjZIBsukJTJi/7YopoEQ5nmEyNWb3j1xmqTRM09DuNYwm/Ig0nZ/t9SnS7Q10CvqmUab1qBb5u4ECoZudkhgvDg5sZNiDRCxbY2Oa7qZKesKN+gKQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Kk7YGh1gNz++rpOVyhPm3IGG/wga63VPTqGGNnLuMXQ=;
 b=iRd6OAy5F2eldw8jd7UDqwVJCqNZ0K+bWDx2pssAjYk2YiFdyf2qhECH9ITl2zqHJ6ZjFoztFHav34nIMP1l8+AQ9edJ37MGEg/mNVyRz92BuMiJr3zcW1/qtTDc14FMyJHZpfIcoQXt7RXVvgCQpfIP0zQxktAMHrHRWeI4fkZTBS3xSlK/1oP7btvDtB7FeSHwyxWOPITfNSQy1sxpLrtyi6aTx9kMbXrctPhiv/pqcszrH9mt4nepCXSc3dgnWr3V55qy3pxK+2/DzG0MP9ulQIK85RdrB2QgLAJMIkXAf2WDwKvxbVWwjf88t345utOQXm+N+hmI98sC566WwQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Kk7YGh1gNz++rpOVyhPm3IGG/wga63VPTqGGNnLuMXQ=;
 b=sqNodnwtFJQ9ueUlv8TYQZwn/9B8dcuQLbZpNUbadawG9GldtPEyPUKosRkh1PyvD34GqZDVC/fWmSB1AJeLfFGuawqGiK26vrUSRGBG7kpIi4s2vCvO2Q1ZINUOWysNJtKtd1FLqIDxSWs/7Vd7Bj23ejtSm7Wr550hEO/XA5A=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4446.namprd12.prod.outlook.com (2603:10b6:806:71::18) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.25; Wed, 24 Mar
 2021 16:44:45 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d%3]) with mapi id 15.20.3955.027; Wed, 24 Mar 2021
 16:44:45 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: linux-kernel@vger.kernel.org, x86@kernel.org, kvm@vger.kernel.org
Cc: ak@linux.intel.com, Brijesh Singh <brijesh.singh@amd.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        Joerg Roedel <jroedel@suse.de>,
        "H. Peter Anvin" <hpa@zytor.com>, Tony Luck <tony.luck@intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Tom Lendacky <thomas.lendacky@amd.com>,
        David Rientjes <rientjes@google.com>,
        Sean Christopherson <seanjc@google.com>
Subject: [RFC Part1 PATCH 10/13] X86: kernel: make the bss.decrypted section
 shared in RMP table
Date: Wed, 24 Mar 2021 11:44:21 -0500
Message-Id: <20210324164424.28124-11-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210324164424.28124-1-brijesh.singh@amd.com>
References: <20210324164424.28124-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SA0PR11CA0010.namprd11.prod.outlook.com
 (2603:10b6:806:d3::15) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SA0PR11CA0010.namprd11.prod.outlook.com (2603:10b6:806:d3::15) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.24 via Frontend
 Transport; Wed, 24 Mar 2021 16:44:45 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: fed62fe7-75a8-436b-37f7-08d8eee4217f
X-MS-TrafficTypeDiagnostic: SA0PR12MB4446:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB4446D3D06F760AC15E3213FEE5639@SA0PR12MB4446.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:3276;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 SDGUdJP0FfOsps35D1aVeqoanuPUQ+9Xxdurja8LxG0YoaR7bYm9VA58kPGx3rDKoDLeqVnUSwCzE0NP+9b6Wmq6wueUnzNp/sYUZd5ZPwh5+uRxSR6ynKsUk0ENQ/CPQGZYrUwSBjgfPA7NvfCL9FoUfe6OUlTq4zkjTgnSfum2MV9RYrgoU8CQaCcoYd5hDiMmV+aIWdGZyAqWpxCV6WlHwljdNueo+IeXvds1m5cEZjK9EmMINxx7YBxL4x9BG7Xu/2nAcxRuNfV0UJm9b0FKjrFTO/ltX+qHnSeQTYawZjQ86hjRnk2C+y//zDvT73otkxjTJUvIo9xtGh8DKrvLV1VsbUUXbTFYoZuk7fia+2zxPesCVvZPuRWqnQqKsfxusc3/fJW6rAnaY4zedMIUDSMl5hn9+C0fOcxUikczZNMWYOr/K2uMzgrjezHx6rmuKfLv6UfQbexTuMmpZgF0rQvTa7bDcasYH9q44LDpWDL8NebcqMx6yIyyFEouYOyAms88eMlTfPfPzT48V/uGAihaodj27iAUpqnMxJjyNCHwUTFNDD8Zle7CdZYu5JtmPjajWG44unu3xOP8QEZMAdXHUb1KnmH92mATwBGPx9eepnCY2sHvoif2gvRUnD/Jb3mOGjJJdQQZ1Xg48wKStpdN3kcKs+trppnV9xc=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(366004)(136003)(396003)(376002)(8676002)(1076003)(4326008)(6666004)(38100700001)(8936002)(956004)(2616005)(5660300002)(186003)(66946007)(86362001)(44832011)(36756003)(7696005)(6486002)(7416002)(478600001)(66476007)(66556008)(52116002)(316002)(16526019)(2906002)(26005)(54906003);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 MI4cBYFwRdtsOvBjanKVDcCx4D6fZoA2Op7Lvk8IwWMPS3S24R/bJDHW6Jevef3Qk9/H+hbKRlgXUtU1Gvb8p2jUfde/ZaTux3t8vrsT2J7Q42vHWk0dj0FhZJ5sGMvaJB8TTDjgogqg1Yjb/SwCytmbyoC2xWmOw0Dv7QwdPfntpf1d0jefadG2BaSiaqZIYlow5gMaA4KO/xdp3G6RqTYql798f2BRybnIbw/e2tw1T1nZ4fcGLtVtmpwlErapanPE9x4nmbXw0tjRsWebB2akIq6qSk8nMfcHR7Y/gcxYWiE2FbEbrBOp0mKkptCOSGCaxtPIekONPq4kWp2Sg5Qi+oPgH3UwFSJ6AV4nMMAoxxpbmoH8JmnNEm+5lgUitlF5+DyTPCmBPl5TUfYQa0qukTkrECYW2Ow6O6BXfBno5LJvCwWO6vy+rj7qbr41j9ZRHjaIyMi06u4SFJLFLdQYe3ZGcFPexa+XleRkqmZydKs9SVcywsGwu1LShFFQZyAUXmxf3H+AhbR2Ue8pb8U5SSLFSZUcEmh13g1Q0wmkFEhbY1tJiTfiaQXo1JqlEzTWzPBOi77oE3Kschq2+6yUzCbi/BRMKPkdGdWNtjcocH8p5AXO8oXZOW4C7eeYdJ5PdfV8neNu4ICKg65IN6H2ac+C93kCz5hB2n4XN+HJNwbOufiMAXdJ33YnNHFIjnlBYlgNuQ12o4Zc1PU3TK64MR5cH389+bSSgXom2dHsvRoDZxTA8q4Q5GFIQWJ/6YdzTKc8ShUBPzeupk+d+vm4gC6WMJM2b1Ewq7CVTpZaXjKY8bQQIMdKJt1K5QCUraAE4bYywBjXw6AYRb19D7SVut49hYP96UIbOrLRyoieln1B7bwKqdZ11Tqw3vhILsxK2jlmxiUHyjQPGwwHmEbxS52LuP3mAE3vSbcgiu+1HeU2bfuV8Z6OctXduyJyQsEqIaLxrHBNmqYlN2P8ym+hdrERFZFBYZ1TWzTTP30vSF0Jd5knpKhjavMWs7EAywLTcNOA01M5L1i/KfvEubCREqchzlgSjcDBAzXHzraVFRahurYKq74BKdzGazkRD6ftw4t11t+78If1T8M+65daTY+GTC53+nwL5Ruo/u6gtEVdAiuhGv64+2ijlhXXkOvf9l5Xu2j2WlPhCKt9EcuZ+vTiTjzygm/GafqFPMUoqR/TEzsMP73G5pDIkz1FOr611DMCEjS2p3hQkUDCos4PkcgFe+TFO04L8SF0vLItGJmAlkrEobVHrFL/YkIRs8fJJtNZWYubwd0drBXJDJrfZ4q9ineQHnXLSD+s2bRUsBSeGh7TW9mMyBIFo4an
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 fed62fe7-75a8-436b-37f7-08d8eee4217f
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2021 16:44:45.6194
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 GDyuhT8psoVP1am/plLuJy2KaBgefvLNb+vZXdiLaWlK1xDc7ZwiEj8/jIp0TrLJLewgScltI0felDmKYdvBmg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4446
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The encryption attribute for the bss.decrypted region is cleared in the
initial page table build. This is because the section contains the data
that need to be shared between the guest and the hypervisor.

When SEV-SNP is active, just clearing the encryption attribute in the
page table is not enough. We also need to make the page shared in the
RMP table.

Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Joerg Roedel <jroedel@suse.de>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Tony Luck <tony.luck@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Sean Christopherson <seanjc@google.com>
Cc: x86@kernel.org
Cc: kvm@vger.kernel.org
Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kernel/head64.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/arch/x86/kernel/head64.c b/arch/x86/kernel/head64.c
index 5e9beb77cafd..1bf005d38ebc 100644
--- a/arch/x86/kernel/head64.c
+++ b/arch/x86/kernel/head64.c
@@ -40,6 +40,7 @@
 #include <asm/extable.h>
 #include <asm/trapnr.h>
 #include <asm/sev-es.h>
+#include <asm/sev-snp.h>
 
 /*
  * Manage page tables very early on.
@@ -288,6 +289,19 @@ unsigned long __head __startup_64(unsigned long physaddr,
 	if (mem_encrypt_active()) {
 		vaddr = (unsigned long)__start_bss_decrypted;
 		vaddr_end = (unsigned long)__end_bss_decrypted;
+
+		/*
+		 * The bss.decrypted region is mapped decrypted in the initial page table.
+		 * If SEV-SNP is active then transition the page to shared in the RMP table
+		 * so that it is consistent with the page table attribute change below.
+		 */
+		if (sev_snp_active()) {
+			unsigned long npages;
+
+			npages = PAGE_ALIGN(vaddr_end - vaddr) >> PAGE_SHIFT;
+			early_snp_set_memory_shared(__pa(vaddr), __pa(vaddr), npages);
+		}
+
 		for (; vaddr < vaddr_end; vaddr += PMD_SIZE) {
 			i = pmd_index(vaddr);
 			pmd[i] -= sme_get_me_mask();

From patchwork Wed Mar 24 16:44:22 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12161679
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 2585DC433EC
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:30 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 0D84A61A1A
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:30 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236750AbhCXQpF (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Wed, 24 Mar 2021 12:45:05 -0400
Received: from mail-dm6nam12on2040.outbound.protection.outlook.com
 ([40.107.243.40]:48321
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S236578AbhCXQot (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 24 Mar 2021 12:44:49 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=K7c6T++51IzeXtfFCPf9Kp6OscytAjK+P21+rDHh166A80i93T9MKEdVE02N0QcNH4rYm7RL6Xd+1o56Ft9qThiQFPIs8NsgjI2ciY4xbluyFwBdRTw8YfFgKzgrldX48t5lEkA00mKHRzUqy4BZpytVCZStbJUXn5/VE/qbBAb1EXoBfqz1+Ye/zuJY2hIWBqQdSFMWTiRgU2vI2UertFWSws0bdALswxZYRbIWsi1naHGC8HjvlLfaVy4MMjbhVqTlJdsoMeuDcA0pWnJbL4xH0hJyBuhidw65kaFIetTjlcwTri2j8NhWlrnzhwgopPIofEz7jkeMss6WOI8OZQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=e566HnZdyqwgQx1ZTgwNyzGqJzwbMBkOq+Xny+ol1mg=;
 b=O7APUVL3DunFbdHywpbMcWxQMbAm2s+vo5mlFiiMr7XUbBHYxp/MfJhBGoabttbe2mJ+Gyc6sQWcRCOYocZYEfmopcDjE8iHU4HGlHi54mWJeHlIhId02dzzIdMfosNv68r7czrVT9tGl327gkD1UJgBro+J2SBIxhM4nN8ssMDypY4r/YTv89m/Mq3IQ4QWl6f+Ro/CM4et8zeFuoC/u+0xtIfMW9sLCGGlZBhDX+cE5qTmbGogpc+Ets+gmxJS6CbK0MzFS2JB8uH9dKTvIqEZ+q/3+DFE/6e5559yk5mUf2+O64NSl6t1PhhUx4cYzWigNyZGhUF3222aveJ2Nw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=e566HnZdyqwgQx1ZTgwNyzGqJzwbMBkOq+Xny+ol1mg=;
 b=M/pRmcHw/nKvdz2l0n0Af5dmviTYIW1Nn1sjADAOUCyvMPgSq3spPkSIE8+nAsGEoMyjdwc2ms4de8vi8PmhBH1HZNEFd8Lw6Rh7RcMTw+9pSac3A2ZJaOIqAalvPbRWbcZvlVd873I4m2/PGallXfc3Xii9svID7xwOwSAGW4w=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4446.namprd12.prod.outlook.com (2603:10b6:806:71::18) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.25; Wed, 24 Mar
 2021 16:44:46 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d%3]) with mapi id 15.20.3955.027; Wed, 24 Mar 2021
 16:44:46 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: linux-kernel@vger.kernel.org, x86@kernel.org, kvm@vger.kernel.org
Cc: ak@linux.intel.com, Brijesh Singh <brijesh.singh@amd.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        Joerg Roedel <jroedel@suse.de>,
        "H. Peter Anvin" <hpa@zytor.com>, Tony Luck <tony.luck@intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Tom Lendacky <thomas.lendacky@amd.com>,
        David Rientjes <rientjes@google.com>,
        Sean Christopherson <seanjc@google.com>
Subject: [RFC Part1 PATCH 11/13] x86/kernel: validate rom memory before
 accessing when SEV-SNP is active
Date: Wed, 24 Mar 2021 11:44:22 -0500
Message-Id: <20210324164424.28124-12-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210324164424.28124-1-brijesh.singh@amd.com>
References: <20210324164424.28124-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SA0PR11CA0010.namprd11.prod.outlook.com
 (2603:10b6:806:d3::15) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SA0PR11CA0010.namprd11.prod.outlook.com (2603:10b6:806:d3::15) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.24 via Frontend
 Transport; Wed, 24 Mar 2021 16:44:45 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: f2be7a25-868d-41b4-8fb0-08d8eee421ec
X-MS-TrafficTypeDiagnostic: SA0PR12MB4446:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB4446FE9898A56CF3E248BB54E5639@SA0PR12MB4446.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:7219;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 +R6sUKtHFC9b3YiE133dmtjamRL5eCe9N/T4L+PHLd8qkn5rhh+pTB80nC5NvMiS7CLw+ywLOp6fU84andBzBko7KgaUwIZv2E0dbwmak12y8QWn7P6Fs+OEe1wkupmYI56G7X/nvnc4E5pCkVI9PKWlPFmhbmrc6VYX+PwTkS05I0Kknz8Tdj0RQ1BuoF74IyapZCcsbuIIvvkLA55SpVs9WbAMgWgReCkwNwgarF/vGx9phIUit833IwPqjnxRxThFYMAYZf+6SXmil21FNnmvao4N+h8O5t9wCH/GMVf703NzR9+19vzrBTth2HstcvTDzBNgXr8lggIUyowBEfcFqPlnDLm07ilo1IHrQR/yY2pH54RGpSnfRtqrM0abYtix4I3p2HN+XUvGiFQw0hrUsbmUgbzL6+s6DghRa3KLZPsxTBIvRcZS+8GjB2rs0Ovdql6UMCLsPdc8ceoAHSvPoU92If0Zjuosd8MooxLWJYr5fVmCAsplkINz6Pl5fij98qv1p9nsjvIJesr/bMQR0veXLPJWJTvfQPCnpvJeVn2n4R8BbNgtl2M4KhDNS5v+w2D4VKteDCRYC7GXNatlww2wb4Zxs2UAyFDNuEHwVgtdRPQXQNcSwJa/5UOuo5pOUKpXzH65jn3r06AeIN+8ii6/PLTuFqtKqzvVLnQ=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(366004)(136003)(396003)(376002)(8676002)(1076003)(4326008)(6666004)(38100700001)(8936002)(956004)(2616005)(5660300002)(186003)(66946007)(86362001)(44832011)(36756003)(15650500001)(7696005)(6486002)(7416002)(478600001)(66476007)(66556008)(52116002)(316002)(83380400001)(16526019)(2906002)(26005)(54906003);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 fLYkr7ovBU3Ber/o43b+6uM2ADvTvGQBlXGEg19Ifqz91KvZbgJTlNDj6lNRcrOyBh+dr69uDK2bjod7yVbr6/2w+ay3hs6A+4HS729B/FBi3DOwT4CN07+pO7+NEdJsXEZSVBfQa+TnkoF2Kke64NBPRRyHmeZsiwNhVXMB3QnlPXRH1JkUHtkD0mRfTUMe10WE5w33RYR1pklOHcVT2Z5UAMAmwJKH2RKkqWT0JzAqvGfZ8sd13uELXKTI79t+KFe1vXhVCckVO+gcpicu6/mArIG2/m4F8BlpmwJDbRw0WJFRmtQxgDiFmotuPTP5Zl0mApuv7RCwC1tqmRhAqMQO+KSNL5vJATjqysbZeFUHmHjg9wqWeNg+X36X1YKSTmDSq+/S8rEfJ32pbIwgsch+y+x06oMCotSMnpRYm2+oRvjgXFHOXJSNYtyml4XQ+meuZu/2pFcgPR6pFznv7AOsl6ZiXrFel5rl4aE6lZdAPdX4OGpWWkkPj5KiokHAVTNyAZrzdknkrWd+FsHT1M7RsMMo5VNcyJmkYXviYc4CQytCJzay+SG5ucMrLyFBQKNYrrG4M8XqQGcSm+HNlqEMXYNwLzLLSszBftcBvmAqkHrvRe5fJ8g0ASkc9eNfu/q94U3ZxuT699reu/A2N4ptLyps7GRCNs97zSl3vHYWRBON39J9cB8xLSR1AGmf0ld3Wz8OPofiVOT4tETK0CNqEZgUjz9mDec8HnOomvSFIlyb1cKENPH1X+qbZtOWSkgPjOv66f5LSNq7LZ18dkK1ofXkihpu/Xejxn/u9ZsRKS0Y3oXPLHCPzi7O8FbwIYECKqi+1tqAoZt04sbJmImPNNFjunaxcacrMpjB7LjBw/jnFpcENvsp7FJtQ7t1ktABZRV16whA79iZyCu5WeCGkxStbYfTpLizBz94UtErwHcwoTAT7GIKOZgHkikemwxHqybHLqvEMpw2czi6hbJxTY0T1ototB49ohFuGKes9wwph0p7R/n0engughBmOUUxRu3QS2XgOusY+bh9FpKU5yc2n66JKA2isN4T7hLy7nZUbWYJ8m7YDoNpHjsL55jJr4pSNA7B8xq1qVksFM9Ri/G8Ih68xXgrA7XmdhxJCny7XY5migMIfY0gTgOusrSHWkT+KLmhvWPrftw/USzYqp93lm5u2GvL7iI5EotjrXAM3q3V6+When3HHiy+UJyNX8ito5x2PlFnyOKBoTtr8gBCuqq9zYVhejQlB0YwXm14zhSiL/7nqNx1CEmP3OVcfvN+vSletPNMUsMd+GZ0r7MOyFBAe/+k+OUPBrveD7bn4IacXChtWbrfZOvz
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 f2be7a25-868d-41b4-8fb0-08d8eee421ec
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2021 16:44:46.3499
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 brEqRRUhlbrcjtJkUmGeRm/2ebEwqYOe1g3J1+3Es2bLtXxYI+KnUWVauuaVWOL2U8zBgm/rfMdmZtMY2S90Yg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4446
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The probe_roms() access the memory range (0xc0000 - 0x10000) to probe
various ROMs. The memory range is not part of the E820 system RAM
range. The memory range is mapped as private (i.e encrypted) in page
table.

When SEV-SNP is active, all the private memory must be validated before
the access. The ROM range was not part of E820 map, so the guest BIOS
did not validate it. An access to invalidated memory will cause a VC
exception. We don't have VC exception handler ready to validate the
memory on-demand. Lets validate the ROM memory region before it is
assessed.

Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Joerg Roedel <jroedel@suse.de>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Tony Luck <tony.luck@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Sean Christopherson <seanjc@google.com>
Cc: x86@kernel.org
Cc: kvm@vger.kernel.org
Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kernel/probe_roms.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/arch/x86/kernel/probe_roms.c b/arch/x86/kernel/probe_roms.c
index 9e1def3744f2..65640b401b9c 100644
--- a/arch/x86/kernel/probe_roms.c
+++ b/arch/x86/kernel/probe_roms.c
@@ -21,6 +21,8 @@
 #include <asm/sections.h>
 #include <asm/io.h>
 #include <asm/setup_arch.h>
+#include <asm/mem_encrypt.h>
+#include <asm/sev-snp.h>
 
 static struct resource system_rom_resource = {
 	.name	= "System ROM",
@@ -202,6 +204,19 @@ void __init probe_roms(void)
 	unsigned char c;
 	int i;
 
+	/*
+	 * The ROM memory is not part of the E820 system RAM and is not prevalidated by the BIOS.
+	 * The kernel page table maps the ROM region as encrypted memory, the SEV-SNP requires
+	 * the all the encrypted memory must be validated before the access.
+	 */
+	if (sev_snp_active()) {
+		unsigned long n, paddr;
+
+		n = ((system_rom_resource.end + 1) - video_rom_resource.start) >> PAGE_SHIFT;
+		paddr = video_rom_resource.start;
+		early_snp_set_memory_private((unsigned long)__va(paddr), paddr, n);
+	}
+
 	/* video rom */
 	upper = adapter_rom_resources[0].start;
 	for (start = video_rom_resource.start; start < upper; start += 2048) {

From patchwork Wed Mar 24 16:44:23 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12161697
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id B785EC433F7
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:30 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id A5E8861A14
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:30 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236846AbhCXQpK (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Wed, 24 Mar 2021 12:45:10 -0400
Received: from mail-dm6nam12on2040.outbound.protection.outlook.com
 ([40.107.243.40]:48321
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S236580AbhCXQou (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 24 Mar 2021 12:44:50 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=AYnif2mb+NCyB7NfFyT+1D9Y4tDK1AuxQ7/Yqwt3ixVTt+3lQgtNL1YWoVNzMQFjBbj1RqfpvoYvriZSRz5vrmUUqV9s9irDNq0qSDrm5uSkfzTH2DN88CX/nSMtWwAv18y4DTiaFYGzYP2C4LVROoH9KNpFKSAdpczOsIMb7zil8hrmbhMxySB3XcnSFnjqNjcHF+YtECk84huDCsmlnH3ULEY4pSOrn09JOebcp/OHK3kwF06awcpXMVyGGNkEe13YSvlI8nv0kiJcr98pok00iYYj79drm4Ogi4Yuhi0RdjTImj04GQGe+giryd1AB+5V7hwVpYQsbwWF4cz95A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=UGRspJr8QjsByc2IlG+O6P638AIgKqnJz9n01zB7Wuc=;
 b=RDRMsD7v9Il+PU2nZ4TRvypvfGPfVqCb6DuW1zwASGot+e4njqmKBay1wD5Svh24sAsEysQ7LCRg1Hn15lc9bD6vivixkHKlPxORdELJr02KxMS5LVgsnHmTIE9faezCb5ypHfzVIhYH4/0CIYXX+b8tSrwiBlff1NLaSg7iwUimGSiywSo/Ywxgp+l2+Gn1FdWNbZ7lAeX7t30gU7iYTjhivQVC75JE8Yw6zgwROcqZmvlDmxM78s9eSkLsHkeSWnWyyoFmdC7IlvS2bc4n05ysI3RjT6yE0WN2tZyvgi8z9Qaa0w9jmvFOikKWE5yGU7TICpZIMwtQLMWwWYbYqw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=UGRspJr8QjsByc2IlG+O6P638AIgKqnJz9n01zB7Wuc=;
 b=fgjNRfeNhyD9/t0bj44FnoUjIfUisYeLnWc40rTWuvzfGwiEhBfWBUFY+unIjQPE8SS/GWcVXTIYPouYN2SC8emV70U5xT6z7dLHlCm6jShrFBWkipfpNMwtHEF+8ABr+P1quTGsG6PUs7fi4DvdTmfnBPpt99S8AsGj17g4RsA=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4446.namprd12.prod.outlook.com (2603:10b6:806:71::18) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.25; Wed, 24 Mar
 2021 16:44:47 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d%3]) with mapi id 15.20.3955.027; Wed, 24 Mar 2021
 16:44:47 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: linux-kernel@vger.kernel.org, x86@kernel.org, kvm@vger.kernel.org
Cc: ak@linux.intel.com, Brijesh Singh <brijesh.singh@amd.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        Joerg Roedel <jroedel@suse.de>,
        "H. Peter Anvin" <hpa@zytor.com>, Tony Luck <tony.luck@intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Tom Lendacky <thomas.lendacky@amd.com>,
        David Rientjes <rientjes@google.com>,
        Sean Christopherson <seanjc@google.com>
Subject: [RFC Part1 PATCH 12/13] x86/sev-es: make GHCB get and put helper
 accessible outside
Date: Wed, 24 Mar 2021 11:44:23 -0500
Message-Id: <20210324164424.28124-13-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210324164424.28124-1-brijesh.singh@amd.com>
References: <20210324164424.28124-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SA0PR11CA0010.namprd11.prod.outlook.com
 (2603:10b6:806:d3::15) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SA0PR11CA0010.namprd11.prod.outlook.com (2603:10b6:806:d3::15) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.24 via Frontend
 Transport; Wed, 24 Mar 2021 16:44:46 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 79b74ff0-9e16-47de-e2ea-08d8eee4225b
X-MS-TrafficTypeDiagnostic: SA0PR12MB4446:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB444612E216B61598FB05DDC2E5639@SA0PR12MB4446.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:4714;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 haIJP+KHpLLQUghzP9gfLI6P0n3PrMaVbMksJfLcFeG67PjrbbXhEpOiAVG8xKD7BnuBXg9uc4i5iZaVoSS7tVSMZYpRY6e3IxC3H+vi8IA2scEkwviinIrBpv2XTAZBYBYTEtJ9hl6fSq8dodDOq7NFgngpRmGVshQHyLfIIGIrPQoqLjz20YuWtXAONu0BYjCl5M3YFyusnD/4RGb3CDxwKz03f6m0Al2R7EAbec1pgleZ+5zgPMRW/OHImKvVw0QW4lBi30TVeDLEwHVAHs7clHO3ZI1LbJgifijJUHpiri1D+SiOHEHeBLn8sT/8ng/Pr0qje+diuoHc9qH5k4eV6GEPbzywGXLBe4b2sFdw1Kxd0Mf1zwbcKMAZ3RuPdI9gP6u13rFARYpcahbot+NRnx+mCALYzFCGnpjPhhAL7CVakmygbbjx7QZiTGyi/SrBQUeBng1xZLYzLqdoSSwMRr1TEma0Whpkl6U+tQoVCMtE0t5dyq7r0pM0qJrFeLDqynfrabhGehqilyfMbJn/MeNatPUNGMcpHQ+kn+EQX4iaPpl0uyJaprGQw0powk41qw3yMJ94eAI/8ZpiZvOeTxiezk+3Y4wFE38U8PtonZzbO83l3le6aJIILwh5pXma7bksL20cDzTUqIkKSi/ZMR7eXPMKVEWgKN5uvVw=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(366004)(136003)(396003)(376002)(8676002)(1076003)(4326008)(6666004)(38100700001)(8936002)(956004)(2616005)(5660300002)(186003)(66946007)(86362001)(44832011)(36756003)(7696005)(6486002)(7416002)(478600001)(66476007)(66556008)(52116002)(316002)(83380400001)(16526019)(2906002)(26005)(54906003);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 Ozt0Pahxbe/Jy0knm8i92oTB8mqjEz0IQwgExkyODMqne5MWKEkJB2HFOr0euymqnAO0ZQ5h0/xiZl1qcTCwTbaaHl8pmEMJF4ViwyL7Xgea4ECe1VeRcWBdbIC4J2vH5xSONVr28NWgvI4I1zhrSDM6XgdWgnPvpSgDR7Lk8oqddGQdotOwV1VJcStLnk+AoQnhZwgPhe7G25pgN9ngqSA9PpcRlLPPmqG8QHiYedazmaSydJBQGsCq7pU2v1tW7q7r84mBK2xKoisc68r9vLbsp+sUtnaevr0kwDvqCm57YlNABGrEpeAU5KmD36+hhwxGwfz3OAttFfytMq0H/43Bdtwif083YkAIyIBXMMnuiZ6jT1UMb8d5G3je+D/f+ZZPyDN8sCWRXREtI2VEDLrDTwg1xOd5O4lz7CuuMFxq1UMxdH2qNjADBWRvPppWj9FhnegMSO0STtZ0voSooUDNaK4p4RWXQvJHcH6pKh+aL/MzeAsBiwv0q+bzvIj5GfS6hmuiGT6kb52ZRU5MFfIsVQ/hVAg2v3XOWC8a8xtZ1Vd2ezvZhKgEpodAOnK/n1ZFPgrPSS73I+Xjp+1U4LYCRVmZonyIBnene5gCMqs59f5zMWK6gF0Pei5O8AM+hAfcF1gtCzIwpEKaqcFZnd3g7dgEfD7WFAfPXUi5UTFMDAfzTloPau2kYhLxjOmscRYixcWtvfBigFhPU8x9YJV46RupBz94OuqOo4ps8IdHbcmMktiGWEjszYyQsmepSVCUMk//H4kpeBcE173633BoQPybgMMAW7EF76YcSEy/9F9k8BH2w4Uw/gqXIZ0UJI5t+vRpCpkWdhKzySLULD2BAOfPowiDzX22SlEt2fhLdR7E2WavhCJLCSHlQ3RVWeN9ItuInVXXkaFeS4E3K0gnzVbcjHRoEi3SvsZIubjF0zIKyWpzi72E+1JGxU/QTwlCwZv+RdKIXmuuY81cMR/mkgPf8kDEioR4u7og0ca7aSfGE4BViu34ODwfc/DHMze7LHDtHUR+3w4fycrq5To+aUtM4vOe6rU3L5OZNg7L46OKkEu/D9EQ95PVyigS9BBpg2gef8dEcUv/8Q2Q0J2pLnv1wa8GBTZSmHLLE7jmeYaD4VjHma/9qk8ry6lXmafebbSnMW8GEZvKvdb1ynv8Ou3NbzHBRKHNhGxYogTadq1sZ8f+WAX49RbjgKlGYCDvgGY/v/rQkwXfcTVipYGyGZoSQAppaObNuq0czBGU8+P4w3zG6lVKa58AV/yKrx6PGh4k0+N5EK6eN4wqc1oJhbd18lru5NR5l9qN+Rs3i4mmVZiCGsXz0v3HYeFO
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 79b74ff0-9e16-47de-e2ea-08d8eee4225b
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2021 16:44:47.0715
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 Ay3vy5RAU5NvJkKGBACOrjE7tMRa61CMhnC84OzbGhySW3JpgnC8TbR4mD+4QbD80f/qMuKprSJUZqLQSp5mwg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4446
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The SEV-SNP support extended the GHCB specification with few SNP-specific
VMGEXITs. Those VMGEXITs will be implemented in sev-snp.c. Make the GHCB
get/put helper available outside the sev-es.c so that SNP VMGEXIT can
avoid duplicating the GHCB get/put logic..

Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Joerg Roedel <jroedel@suse.de>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Tony Luck <tony.luck@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Sean Christopherson <seanjc@google.com>
Cc: x86@kernel.org
Cc: kvm@vger.kernel.org
Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/sev-es.h | 9 +++++++++
 arch/x86/kernel/sev-es.c      | 8 ++------
 2 files changed, 11 insertions(+), 6 deletions(-)

diff --git a/arch/x86/include/asm/sev-es.h b/arch/x86/include/asm/sev-es.h
index cf1d957c7091..33838a8f8495 100644
--- a/arch/x86/include/asm/sev-es.h
+++ b/arch/x86/include/asm/sev-es.h
@@ -81,6 +81,10 @@ extern void vc_no_ghcb(void);
 extern void vc_boot_ghcb(void);
 extern bool handle_vc_boot_ghcb(struct pt_regs *regs);
 
+struct ghcb_state {
+	struct ghcb *ghcb;
+};
+
 #ifdef CONFIG_AMD_MEM_ENCRYPT
 extern struct static_key_false sev_es_enable_key;
 extern void __sev_es_ist_enter(struct pt_regs *regs);
@@ -103,12 +107,17 @@ static __always_inline void sev_es_nmi_complete(void)
 		__sev_es_nmi_complete();
 }
 extern int __init sev_es_efi_map_ghcbs(pgd_t *pgd);
+extern struct ghcb *sev_es_get_ghcb(struct ghcb_state *state);
+extern void sev_es_put_ghcb(struct ghcb_state *state);
+
 #else
 static inline void sev_es_ist_enter(struct pt_regs *regs) { }
 static inline void sev_es_ist_exit(void) { }
 static inline int sev_es_setup_ap_jump_table(struct real_mode_header *rmh) { return 0; }
 static inline void sev_es_nmi_complete(void) { }
 static inline int sev_es_efi_map_ghcbs(pgd_t *pgd) { return 0; }
+static inline struct ghcb *sev_es_get_ghcb(struct ghcb_state *state) { return NULL; }
+static inline void sev_es_put_ghcb(struct ghcb_state *state) { }
 #endif
 
 #endif
diff --git a/arch/x86/kernel/sev-es.c b/arch/x86/kernel/sev-es.c
index 004bf1102dc1..d4957b3fc43f 100644
--- a/arch/x86/kernel/sev-es.c
+++ b/arch/x86/kernel/sev-es.c
@@ -98,10 +98,6 @@ struct sev_es_runtime_data {
 	bool ghcb_registered;
 };
 
-struct ghcb_state {
-	struct ghcb *ghcb;
-};
-
 static DEFINE_PER_CPU(struct sev_es_runtime_data*, runtime_data);
 DEFINE_STATIC_KEY_FALSE(sev_es_enable_key);
 
@@ -178,7 +174,7 @@ void noinstr __sev_es_ist_exit(void)
 	this_cpu_write(cpu_tss_rw.x86_tss.ist[IST_INDEX_VC], *(unsigned long *)ist);
 }
 
-static __always_inline struct ghcb *sev_es_get_ghcb(struct ghcb_state *state)
+struct ghcb *sev_es_get_ghcb(struct ghcb_state *state)
 {
 	struct sev_es_runtime_data *data;
 	struct ghcb *ghcb;
@@ -213,7 +209,7 @@ static __always_inline struct ghcb *sev_es_get_ghcb(struct ghcb_state *state)
 	return ghcb;
 }
 
-static __always_inline void sev_es_put_ghcb(struct ghcb_state *state)
+void sev_es_put_ghcb(struct ghcb_state *state)
 {
 	struct sev_es_runtime_data *data;
 	struct ghcb *ghcb;

From patchwork Wed Mar 24 16:44:24 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12161691
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id CEB77C433FB
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:30 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id B7ACF61A0E
	for <kvm@archiver.kernel.org>; Wed, 24 Mar 2021 16:45:30 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236548AbhCXQpL (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Wed, 24 Mar 2021 12:45:11 -0400
Received: from mail-dm6nam12on2040.outbound.protection.outlook.com
 ([40.107.243.40]:48321
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S236294AbhCXQou (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 24 Mar 2021 12:44:50 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=jXArRgn1pdUVW0sRPWoBo6PrSmtuP+EfPUOU86ZuagOSwLD99sYE1BkzOhL1OaKQodJZ6sbh6s5b3x5ch0vF3be1xV/qTMR7lFgqQGi138LkAZ5L4J2n1gTyC+ZrAxD0V6BEP4FdXmqyAXgl+/4yOhgWEk6qKihyy8ZXMhiqhHKVSKDr6gn4UStks7f1z3z8MnZu4B7Mtn66s9DdKf9cJ8pMHD0ck4ncQHHndRj4tHuzG2YQzHawyJ4X5zPn8GOiqXNj/6ai9lyNAuMjJC/wDkR+e8pLjAB6N5yECV/Np65luYcsMpnIIMiZWraHiLf6FyuY1lBROiD68R3qDmXUxg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Sfy/Z3yb2E4+ZL1lv2LxIA2msu72HSeqEratNEjoluc=;
 b=Djn0uiwmdYBMcRQf1XnM7Rd0dr8uAINCqn1YvifRS4MJb8+QJHtXjevocH/F0hwKFOtkJZRsPd6iA3lfYnN5B5ItkQrOCTcmbKODCaZ2usPX3DBlZym+lBG3w0SghpSgQqp0mWz4tgWxuqmnoUh4AGhkf20XXaz31Jr2xK/rV8wOZd5nKqF33zIBePUsAgWaI0jorAhZ6ixXDe74h3qInECEF0fKVDiEn//jkavZNSr/KN/I+IBA8Fx86ShUj/vlUIOwxKAIy9+fTvzQlDgkqmOaKiXtZChkfuq/+dVu82GIFXLKiv5qoDTRuwSg2SS84wrR1LZSchONSeO+fZqEtg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Sfy/Z3yb2E4+ZL1lv2LxIA2msu72HSeqEratNEjoluc=;
 b=HA0KPRkY9ATnD8/cyJkZpjU9nHyOCPTB5BbMq6N11DvsyadCdQzsSpbOXAYVRpEbZhxXyfsQpGR9dj7k5YHBS/QKEYVskWXkIC+IqPj4dz1Rq/uJDM4rUb9w3QNCtWP+EQfSqzCLyCE5BtFkFeM6pT7Dyyusp5P6+nXuFo/SdFk=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4446.namprd12.prod.outlook.com (2603:10b6:806:71::18) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.25; Wed, 24 Mar
 2021 16:44:48 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::30fb:2d6c:a0bf:2f1d%3]) with mapi id 15.20.3955.027; Wed, 24 Mar 2021
 16:44:48 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: linux-kernel@vger.kernel.org, x86@kernel.org, kvm@vger.kernel.org
Cc: ak@linux.intel.com, Brijesh Singh <brijesh.singh@amd.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        Joerg Roedel <jroedel@suse.de>,
        "H. Peter Anvin" <hpa@zytor.com>, Tony Luck <tony.luck@intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Tom Lendacky <thomas.lendacky@amd.com>,
        David Rientjes <rientjes@google.com>,
        Sean Christopherson <seanjc@google.com>
Subject: [RFC Part1 PATCH 13/13] x86/kernel: add support to validate memory
 when changing C-bit
Date: Wed, 24 Mar 2021 11:44:24 -0500
Message-Id: <20210324164424.28124-14-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210324164424.28124-1-brijesh.singh@amd.com>
References: <20210324164424.28124-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SA0PR11CA0010.namprd11.prod.outlook.com
 (2603:10b6:806:d3::15) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SA0PR11CA0010.namprd11.prod.outlook.com (2603:10b6:806:d3::15) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3977.24 via Frontend
 Transport; Wed, 24 Mar 2021 16:44:47 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 1cf0731e-bf6b-436f-3de1-08d8eee42316
X-MS-TrafficTypeDiagnostic: SA0PR12MB4446:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB4446307D5D5342A136AB2E1FE5639@SA0PR12MB4446.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:8882;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 kiAaIFzvjdfeW1YIs37SVKNa8db5eTk44LAq2hLOgWzHdyYX76FD5G86+VxTrqhiyu/rbnscMrbCcqk/aOZ8DCN6ewSNzgcz2539ljxeksiTXUowyXNydFNscrw/JFhxcX8AkpLo6uc3jcSksR/sHoDGi7e8nGJetYw2vphJbL5ULiJR2RGFci+c2sPHfPS8ROGd/zICaDTm0VBAH2gzh1ahBrpXFoD6PPXdCXVlhKpoR7XCJWxhsnbqqC4zEOrFzYG6Kss6CIF0IfXNCWzaD5ssEHEBPNJ5HUwtPpCQpp023EnDeLXOHT4zyGnphmbjpHpOmsY8nBootds0Y+k+sRz+fOYTQfu639FT4HxvbPuSkQ2Wn7zzx0/ohqTPjvb1jVvfycG0S2zX1GmzwP+X/dyV1+e9QyC4egltiBwfa3SBpbq40a9zg4GjDbUNqsYV6S6B9rFvEB57Jy6q5SsP6T5Hy8UGVnSdXJ0DEr0PCe/xEaGEsGDHG+/5RX6ZKbTBRPAgpLPEgNNCqVNN+UFw/1FI3bXbvBXTtgjRyjRIXY2kay/S2RZoUjRVpClpZIst/gqMff9q3xd6UczuWkpID2KOWTP1drTeUVAvMMuIoAl+KZDmh4+RCdsfmu2SGTqS/6WEAgaqHd9le8ac7tELE3kwgUo+7fZoXQOHA15kr9A=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(366004)(136003)(396003)(376002)(8676002)(1076003)(4326008)(6666004)(38100700001)(8936002)(956004)(2616005)(5660300002)(186003)(66946007)(86362001)(44832011)(36756003)(15650500001)(7696005)(6486002)(7416002)(478600001)(66476007)(66556008)(52116002)(316002)(83380400001)(16526019)(2906002)(26005)(54906003);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 ziEuDUKI5g6YVEAkPk06lcan7+sorLkofFxFxqJ9Mmizp3M1LaRF1+rAGeDM/kbg5BA2KPkwKPjdJ/rjns4tSWKtkdY5dLFRd/A54Vz0qtRsQywxW4r9PFlpeoG1PfQ7ZDPk5VNngZc4O4gKghjwJehxwAmp8zTmt2IfXpMyulQgfBFhi0zIP5Po6C2MGPi0eziqA9+t3HlcFoirNZoGLgpK67n46Ul4Qfe8XFDk3pMRYkDD6TwujSHtjMFwGukFkpVMjznFnau+vGF3EoUVRRHgcSU2gEUuzN21uM2V7TgpEWfk8Iw9v10SDWW23YCa81FGYClzigXsazlqv+8Fl2BBw2sDzXa7nO72eGf4MD5qYKdbF00lxaBE+0QvTOI6CN1ccevPXYQb5o3/r5wNCus22oBiUMataeWK+yTLcfXIj8ANfzN5DjRyRsnfoFqQ6wp9vVovb9jtePXs1Y+hKyZAosOEtNTH4C4PLLEcO5C9JXzJWVqDtJk6eGMDB9uXNqFvLV3kcEw3KS4L6eAMmkdv8ornlA0Fdfotwphc10XJzRdXntqh3cMg5WVgdUWUcRPPkJF17VwYT+okm1Q1SLfLJV31P+KRToCIJJqDZm396Vchkk/0imHQGgh7KjG+006xCc4EcyCI9fy/GANiQAewjzJ7fQ/zWsKQToFpmBK7o/wdjl+0qHS6npHwNzic+A/sNhAc5i6BfVCoWfcKQHOEPF/Q2/Rxd0z8hvevXeux/221BNRSW3lEQj7TW1JY+sU1qBMWsgvwT7fPjjXZNEhTIGrmLzFJ2ukRBxf4W8vBJ33ilmn2nv34rCBhJuqXdwZ+ionJtCf6pfz51HBInqVgD2VCWnnOGmbzxX+uDJlKGAYdSZzIC6s4WfdC+mMJZPci4SlN1gTp+XVxjKomc9+Efg4pPVxZVcT7mmLJra6qpjVgwkQ4hOnq0mCd8kFpX4ydktYVNAQnN6x0Cj49dtSek/UJWwtLqfVRNjWzVHwzGXi4y0jgMpnL70wIuITD3vPw07O+GPUYP0o7z8NBCf25NoeWV30EaC+Yz2DkC1dqXLG2d1lzvMc4kOOkRvQLx4dnXosfuXdnY/zwE9ZtpnCKgahOL5BC7btTNfuFZ6J4QR97E2vV21QrN+9Q+Tpa/EYPrrfOhIHfaacC4fMXm1hH1bKdilLs49bPvJVse8MXYfQBbVPwrZu/jf7Wj0QWsSDwGt6pex7m0V1BP/Nd6nfYUe7qid69w56dx4VvJddPFN9EXsPXVofFgQVysHcdP2GC9p/UGkSW0GsPDJ/CaLhveDGApunapErFxknfQ3HiPJ/do5YL6SoJkWBrujTa
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 1cf0731e-bf6b-436f-3de1-08d8eee42316
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2021 16:44:48.3038
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 qvWdixe2H+07vIKUIYTAnuX/W+AUpsJ+D6z8ZrWwsyXGqkU0XfbUxmzkkuH7Sa9UPbjGaDFr8ZpUOjSulJKU5g==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4446
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The set_memory_{encrypt,decrypt}() are used for changing the pages
from decrypted (shared) to encrypted (private) and vice versa.
When SEV-SNP is active, the page state transition needs to go through
additional steps.

If the page is transitioned from shared to private, then perform the
following after the encryption attribute is set in the page table:

1. Issue the page state change VMGEXIT to add the memory region in
   the RMP table.
2. Validate the memory region after the RMP entry is added.

To maintain the security guarantees, if the page is transitioned from
private to shared, then perform the following before encryption attribute
is removed from the page table:

1. Invalidate the page.
2. Issue the page state change VMGEXIT to remove the page from RMP table.

To change the page state in the RMP table, use the Page State Change
VMGEXIT defined in the GHCB spec section 4.1.6.

Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Joerg Roedel <jroedel@suse.de>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Tony Luck <tony.luck@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Sean Christopherson <seanjc@google.com>
Cc: x86@kernel.org
Cc: kvm@vger.kernel.org
Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/sev-es.h  |   2 +
 arch/x86/include/asm/sev-snp.h |   4 ++
 arch/x86/kernel/sev-es.c       |   7 +++
 arch/x86/kernel/sev-snp.c      | 106 +++++++++++++++++++++++++++++++++
 arch/x86/mm/pat/set_memory.c   |  19 ++++++
 5 files changed, 138 insertions(+)

diff --git a/arch/x86/include/asm/sev-es.h b/arch/x86/include/asm/sev-es.h
index 33838a8f8495..8715e41e2c8f 100644
--- a/arch/x86/include/asm/sev-es.h
+++ b/arch/x86/include/asm/sev-es.h
@@ -109,6 +109,7 @@ static __always_inline void sev_es_nmi_complete(void)
 extern int __init sev_es_efi_map_ghcbs(pgd_t *pgd);
 extern struct ghcb *sev_es_get_ghcb(struct ghcb_state *state);
 extern void sev_es_put_ghcb(struct ghcb_state *state);
+extern int vmgexit_page_state_change(struct ghcb *ghcb, void *data);
 
 #else
 static inline void sev_es_ist_enter(struct pt_regs *regs) { }
@@ -118,6 +119,7 @@ static inline void sev_es_nmi_complete(void) { }
 static inline int sev_es_efi_map_ghcbs(pgd_t *pgd) { return 0; }
 static inline struct ghcb *sev_es_get_ghcb(struct ghcb_state *state) { return NULL; }
 static inline void sev_es_put_ghcb(struct ghcb_state *state) { }
+static inline int vmgexit_page_state_change(struct ghcb *ghcb, void *data) { return 0; }
 #endif
 
 #endif
diff --git a/arch/x86/include/asm/sev-snp.h b/arch/x86/include/asm/sev-snp.h
index c4b096206062..59b57a5f6524 100644
--- a/arch/x86/include/asm/sev-snp.h
+++ b/arch/x86/include/asm/sev-snp.h
@@ -90,6 +90,8 @@ void __init early_snp_set_memory_private(unsigned long vaddr, unsigned long padd
 		unsigned int npages);
 void __init early_snp_set_memory_shared(unsigned long vaddr, unsigned long paddr,
 		unsigned int npages);
+int snp_set_memory_shared(unsigned long vaddr, unsigned int npages);
+int snp_set_memory_private(unsigned long vaddr, unsigned int npages);
 
 #else	/* !CONFIG_AMD_MEM_ENCRYPT */
 
@@ -110,6 +112,8 @@ early_snp_set_memory_shared(unsigned long vaddr, unsigned long paddr, unsigned i
 {
 	return 0;
 }
+static inline int snp_set_memory_shared(unsigned long vaddr, unsigned int npages) { return 0; }
+static inline int snp_set_memory_private(unsigned long vaddr, unsigned int npages) { return 0; }
 
 #endif /* CONFIG_AMD_MEM_ENCRYPT */
 
diff --git a/arch/x86/kernel/sev-es.c b/arch/x86/kernel/sev-es.c
index d4957b3fc43f..7309be685440 100644
--- a/arch/x86/kernel/sev-es.c
+++ b/arch/x86/kernel/sev-es.c
@@ -586,6 +586,13 @@ static bool __init sev_es_setup_ghcb(void)
 	return true;
 }
 
+int vmgexit_page_state_change(struct ghcb *ghcb, void *data)
+{
+	ghcb_set_sw_scratch(ghcb, (u64)__pa(data));
+
+	return sev_es_ghcb_hv_call(ghcb, NULL, SVM_VMGEXIT_PAGE_STATE_CHANGE, 0, 0);
+}
+
 #ifdef CONFIG_HOTPLUG_CPU
 static void sev_es_ap_hlt_loop(void)
 {
diff --git a/arch/x86/kernel/sev-snp.c b/arch/x86/kernel/sev-snp.c
index ff9b35bfb05c..d236089c0739 100644
--- a/arch/x86/kernel/sev-snp.c
+++ b/arch/x86/kernel/sev-snp.c
@@ -15,6 +15,7 @@
 
 #include <asm/sev-es.h>
 #include <asm/sev-snp.h>
+#include <asm/svm.h>
 
 static inline u64 sev_es_rd_ghcb_msr(void)
 {
@@ -161,3 +162,108 @@ void __init early_snp_set_memory_shared(unsigned long vaddr, unsigned long paddr
 	 /* Ask hypervisor to make the memory shared in the RMP table. */
 	early_snp_set_page_state(paddr, npages, SNP_PAGE_STATE_SHARED);
 }
+
+static int snp_page_state_vmgexit(struct ghcb *ghcb, struct snp_page_state_change *data)
+{
+	struct snp_page_state_header *hdr;
+	int ret = 0;
+
+	hdr = &data->header;
+
+	/*
+	 * The hypervisor can return before processing all the entries, the loop below retries
+	 * until all the entries are processed.
+	 */
+	while (hdr->cur_entry <= hdr->end_entry) {
+		ghcb_set_sw_scratch(ghcb, (u64)__pa(data));
+		ret = vmgexit_page_state_change(ghcb, data);
+		/* Page State Change VMGEXIT can pass error code through exit_info_2. */
+		if (ret || ghcb->save.sw_exit_info_2)
+			break;
+	}
+
+	return ret;
+}
+
+static void snp_set_page_state(unsigned long paddr, unsigned int npages, int op)
+{
+	unsigned long paddr_end, paddr_next;
+	struct snp_page_state_change *data;
+	struct snp_page_state_header *hdr;
+	struct snp_page_state_entry *e;
+	struct ghcb_state state;
+	struct ghcb *ghcb;
+	int ret, idx;
+
+	paddr = paddr & PAGE_MASK;
+	paddr_end = paddr + (npages << PAGE_SHIFT);
+
+	ghcb = sev_es_get_ghcb(&state);
+
+	data = (struct snp_page_state_change *)ghcb->shared_buffer;
+	hdr = &data->header;
+	e = &(data->entry[0]);
+	memset(data, 0, sizeof (*data));
+
+	for (idx = 0; paddr < paddr_end; paddr = paddr_next) {
+		int level = PG_LEVEL_4K;
+
+		/* If we cannot fit more request then issue VMGEXIT before going further.  */
+		if (hdr->end_entry == (SNP_PAGE_STATE_CHANGE_MAX_ENTRY - 1)) {
+			ret = snp_page_state_vmgexit(ghcb, data);
+			if (ret)
+				goto e_fail;
+
+			idx = 0;
+			memset(data, 0, sizeof (*data));
+			e = &(data->entry[0]);
+		}
+
+		hdr->end_entry = idx;
+		e->gfn = paddr >> PAGE_SHIFT;
+		e->operation = op;
+		e->pagesize = X86_RMP_PG_LEVEL(level);
+		e++;
+		idx++;
+		paddr_next = paddr + page_level_size(level);
+	}
+
+	/*
+	 * We can exit the above loop before issuing the VMGEXIT, if we exited before calling the
+	 * the VMGEXIT, then issue the VMGEXIT now.
+	 */
+	if (idx)
+		ret = snp_page_state_vmgexit(ghcb, data);
+
+	sev_es_put_ghcb(&state);
+	return;
+
+e_fail:
+	/* Dump stack for the debugging purpose */
+	dump_stack();
+
+	/* Ask to terminate the guest */
+	sev_es_terminate(GHCB_SEV_ES_REASON_GENERAL_REQUEST);
+}
+
+int snp_set_memory_shared(unsigned long vaddr, unsigned int npages)
+{
+	/* Invalidate the memory before changing the page state in the RMP table. */
+	sev_snp_issue_pvalidate(vaddr, npages, false);
+
+	/* Change the page state in the RMP table. */
+	snp_set_page_state(__pa(vaddr), npages, SNP_PAGE_STATE_SHARED);
+
+	return 0;
+}
+
+int snp_set_memory_private(unsigned long vaddr, unsigned int npages)
+{
+	/* Change the page state in the RMP table. */
+	snp_set_page_state(__pa(vaddr), npages, SNP_PAGE_STATE_PRIVATE);
+
+	/* Validate the memory after the memory is made private in the RMP table. */
+	sev_snp_issue_pvalidate(vaddr, npages, true);
+
+	return 0;
+}
diff --git a/arch/x86/mm/pat/set_memory.c b/arch/x86/mm/pat/set_memory.c
index 16f878c26667..19ee18ddbc37 100644
--- a/arch/x86/mm/pat/set_memory.c
+++ b/arch/x86/mm/pat/set_memory.c
@@ -27,6 +27,8 @@
 #include <asm/proto.h>
 #include <asm/memtype.h>
 #include <asm/set_memory.h>
+#include <asm/mem_encrypt.h>
+#include <asm/sev-snp.h>
 
 #include "../mm_internal.h"
 
@@ -2001,8 +2003,25 @@ static int __set_memory_enc_dec(unsigned long addr, int numpages, bool enc)
 	 */
 	cpa_flush(&cpa, !this_cpu_has(X86_FEATURE_SME_COHERENT));
 
+	/*
+	 * To maintain the security gurantees of SEV-SNP guest invalidate the memory before
+	 * clearing the encryption attribute.
+	 */
+	if (sev_snp_active() && !enc) {
+		ret = snp_set_memory_shared(addr, numpages);
+		if (ret)
+			return ret;
+	}
+
 	ret = __change_page_attr_set_clr(&cpa, 1);
 
+	/*
+	 * Now that memory is mapped encrypted in the page table, validate the memory range before
+	 * we return from here.
+	 */
+	if (!ret && sev_snp_active() && enc)
+		ret = snp_set_memory_private(addr, numpages);
+
 	/*
 	 * After changing the encryption attribute, we need to flush TLBs again
 	 * in case any speculative TLB caching occurred (but no need to flush
