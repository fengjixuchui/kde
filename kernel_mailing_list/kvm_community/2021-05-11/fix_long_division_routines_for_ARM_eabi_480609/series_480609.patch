From patchwork Tue May 11 17:41:05 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Paolo Bonzini <pbonzini@redhat.com>
X-Patchwork-Id: 12251593
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-16.8 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT
	autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 66B05C433B4
	for <kvm@archiver.kernel.org>; Tue, 11 May 2021 17:41:12 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 22B7461378
	for <kvm@archiver.kernel.org>; Tue, 11 May 2021 17:41:12 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231587AbhEKRmR (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Tue, 11 May 2021 13:42:17 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:36112 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231454AbhEKRmR (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 11 May 2021 13:42:17 -0400
Received: from mail-ej1-x630.google.com (mail-ej1-x630.google.com
 [IPv6:2a00:1450:4864:20::630])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 7C416C06174A
        for <kvm@vger.kernel.org>; Tue, 11 May 2021 10:41:09 -0700 (PDT)
Received: by mail-ej1-x630.google.com with SMTP id b25so30948502eju.5
        for <kvm@vger.kernel.org>; Tue, 11 May 2021 10:41:09 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=QcFKWwsZQjmPduID1brcOmkZRMBIxn7KkXSMhmWfN84=;
        b=bnraoL6UQxTGs4ccEMEF6UJp8+3or2YhhuY9sJ66zaHkd+NSFHpVnfIm+YKpgHYp47
         3bRuYeZqAo4y6moDMtHfbd4voPJE0BgJlZmV6qxjEkBeT2gsw0EUCTixHOobrkIAcJdH
         beuoI1/oneZB8ZNK6w2wGnkDbrMTeJj0oBWDabaQ3JjH55ZkTRy35cq4tMEftXcicJ/A
         W2Xuuzj/lSJ+Usst8riFY4snpfv+rdpamWKfnQsJ9XkUtyPRVDymjp1ws7Y4HIt+fkAz
         YXwFrGM4GtWNUXE7fRq8GQrXzLtt/tAv22E0vDz26eBJB7P5xno79MHxejqfGms73+Cm
         bC7w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:from:to:cc:subject:date:message-id
         :in-reply-to:references:mime-version:content-transfer-encoding;
        bh=QcFKWwsZQjmPduID1brcOmkZRMBIxn7KkXSMhmWfN84=;
        b=bNIx6QIb1fc24xWv12n5Nlj18RlsouC9JpKrywUCYl2FE6l57Uzf0PtYijpePUqR2f
         HIhQ5KJ/kKGPlV2MMgvhNLFQQyeb/MStBkYxYCEk9WAf3Jjz7VHSo7kY/DX4vlnAU5Yg
         lP3Xryo/cr9AO0LRqDvI5Pf6QVXR3crWN/7jMGSxiMMHagGCk7GU2VwzvKD5OOG7j9Un
         DyGSWBvX7/ezuH2h8UsbiwPL3ilm2ge4GJ6UYLC3NLDtbr3pwEAoF1pxBltldQbtZyuM
         oN40Kc0f9KRIFCf6AY85RSWzDYnYQdydf7skdTMULahQyrWH/Ro3Z1xDoBnfGBQVH5RL
         skUw==
X-Gm-Message-State: AOAM533e3EHnTH3x19gpusfMvH+IupYTbcjPhWwTKp1vdueAcyf/9H76
        txe6QsoySOSlimZs6JGKowJbyfOsoPI=
X-Google-Smtp-Source: 
 ABdhPJyov//rnOwePuVhx2EJdtjgAHk2hf/dp+DSDTXoeSvudhZW0deiDLdm45SWhAeQSowrdo2WWA==
X-Received: by 2002:a17:906:3544:: with SMTP id
 s4mr33548521eja.73.1620754868231;
        Tue, 11 May 2021 10:41:08 -0700 (PDT)
Received: from avogadro.redhat.com ([2001:b07:6468:f312:c8dd:75d4:99ab:290a])
        by smtp.gmail.com with ESMTPSA id
 v23sm15239073eda.8.2021.05.11.10.41.07
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Tue, 11 May 2021 10:41:07 -0700 (PDT)
Sender: Paolo Bonzini <paolo.bonzini@gmail.com>
From: Paolo Bonzini <pbonzini@redhat.com>
To: kvm@vger.kernel.org
Cc: Alexandru Elisei <alexandru.elisei@arm.com>
Subject: [PATCH kvm-unit-tests 1/2] libcflat: clean up and complete long
 division routines
Date: Tue, 11 May 2021 19:41:05 +0200
Message-Id: <20210511174106.703235-2-pbonzini@redhat.com>
X-Mailer: git-send-email 2.31.1
In-Reply-To: <20210511174106.703235-1-pbonzini@redhat.com>
References: <20210511174106.703235-1-pbonzini@redhat.com>
MIME-Version: 1.0
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Avoid possible uninitialized variables on machines where
division by zero does not trap.  Add __divmoddi4, and
do not use 64-bit math unnecessarily in __moddi3 and __divdi3.

Reported-by: Alexandru Elisei <alexandru.elisei@arm.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
---
 lib/ldiv32.c | 28 +++++++++++++++++++++++++---
 1 file changed, 25 insertions(+), 3 deletions(-)

diff --git a/lib/ldiv32.c b/lib/ldiv32.c
index 96f4b35..c39fccd 100644
--- a/lib/ldiv32.c
+++ b/lib/ldiv32.c
@@ -1,6 +1,7 @@
 #include <stdint.h>
 
 extern uint64_t __udivmoddi4(uint64_t num, uint64_t den, uint64_t *p_rem);
+extern int64_t __divmoddi4(int64_t num, int64_t den, int64_t *p_rem);
 extern int64_t __moddi3(int64_t num, int64_t den);
 extern int64_t __divdi3(int64_t num, int64_t den);
 extern uint64_t __udivdi3(uint64_t num, uint64_t den);
@@ -11,8 +12,11 @@ uint64_t __udivmoddi4(uint64_t num, uint64_t den, uint64_t *p_rem)
 	uint64_t quot = 0;
 
 	/* Trigger a division by zero at run time (trick taken from iPXE).  */
-	if (den == 0)
+	if (den == 0) {
+		if (p_rem)
+			*p_rem = 0;
 		return 1/((unsigned)den);
+	}
 
 	if (num >= den) {
 		/* Align den to num to avoid wasting time on leftmost zero bits.  */
@@ -35,9 +39,27 @@ uint64_t __udivmoddi4(uint64_t num, uint64_t den, uint64_t *p_rem)
 	return quot;
 }
 
+int64_t __divmoddi4(int64_t num, int64_t den, int64_t *p_rem)
+{
+	int32_t nmask = num < 0 ? -1 : 0;
+	int32_t qmask = (num ^ den) < 0 ? -1 : 0;
+	uint64_t quot;
+
+	/* Compute absolute values and do an unsigned division.  */
+	num = (num + nmask) ^ nmask;
+	if (den < 0)
+		den = -den;
+
+	/* Copy sign of num^den into quotient, sign of num into remainder.  */
+	quot = (__divmoddi4(num, den, p_rem) + qmask) ^ qmask;
+	if (p_rem)
+		*p_rem = (*p_rem + nmask) ^ nmask;
+	return quot;
+}
+
 int64_t __moddi3(int64_t num, int64_t den)
 {
-	uint64_t mask = num < 0 ? -1 : 0;
+	int32_t mask = num < 0 ? -1 : 0;
 
 	/* Compute absolute values and do an unsigned division.  */
 	num = (num + mask) ^ mask;
@@ -50,7 +72,7 @@ int64_t __moddi3(int64_t num, int64_t den)
 
 int64_t __divdi3(int64_t num, int64_t den)
 {
-	uint64_t mask = (num ^ den) < 0 ? -1 : 0;
+	int32_t mask = (num ^ den) < 0 ? -1 : 0;
 
 	/* Compute absolute values and do an unsigned division.  */
 	if (num < 0)

From patchwork Tue May 11 17:41:06 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Paolo Bonzini <pbonzini@redhat.com>
X-Patchwork-Id: 12251595
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-16.8 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT
	autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 16D60C433ED
	for <kvm@archiver.kernel.org>; Tue, 11 May 2021 17:41:20 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id C141E611BD
	for <kvm@archiver.kernel.org>; Tue, 11 May 2021 17:41:19 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231793AbhEKRmZ (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Tue, 11 May 2021 13:42:25 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:36122 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231645AbhEKRmU (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 11 May 2021 13:42:20 -0400
Received: from mail-ed1-x529.google.com (mail-ed1-x529.google.com
 [IPv6:2a00:1450:4864:20::529])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id A8066C061574
        for <kvm@vger.kernel.org>; Tue, 11 May 2021 10:41:10 -0700 (PDT)
Received: by mail-ed1-x529.google.com with SMTP id g14so23891373edy.6
        for <kvm@vger.kernel.org>; Tue, 11 May 2021 10:41:10 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=pc/L6ED7H2RwZMgS4Vq0ULfZJt+L6YaroAbjkFRFCkM=;
        b=U8qWcXXyPWqKrOvUNouADqOJ4zKDm/LkesdC6hSrMVUslzi6hyeKiL1FR3grirLe65
         x4WFnBPt4FiGWjGuoVLL+W8LU17/ns4WjCWy4fGv7pyl+N1AdvnW8UtlTCZ0ca5b87DV
         fzhgTUBdZI141YjqfAyZtJZFmHQ0/+uwQo68XymtgUAKFN7iBS67jarxHPVOf7awlC42
         ovD3MM+ZrE85GWfvLazBNPFGiOX7qGS/J48CNqkYia/IxAKsAMNOzz/S2cIL+YQuMqPa
         rf55O4198Q+o/qe6VhGHtVQYEgyhyDlQW6+G0aj6W4haGP/ouHZMIcxBLKRz0KUmiExb
         VXMA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:from:to:cc:subject:date:message-id
         :in-reply-to:references:mime-version:content-transfer-encoding;
        bh=pc/L6ED7H2RwZMgS4Vq0ULfZJt+L6YaroAbjkFRFCkM=;
        b=GkY1UI1qjoY/7iJS5W3fZZyR2aRfFLUspdFZFYENUkjTiSbGvvs/CFWiek5lCsnh5r
         6hjYHOewaSBvOgmUxDa7Y97Ez5w8b4k+SQyZGCyohOzwNPQy+3Nq5h6+FKLh0t8QhPr2
         1lT3SGzIlUuncWSJwvC9TjVDzeqtcRIY23myjYC5SuY372lNBgWvEt0BgfzmkHN1Mswn
         k94IRvDdFkgsY+IRBqzvh2uSnqwAYgtGhnkPmUAqrQC7PleQfXi1v9/OI88uwsy0mbu0
         /uSq20/d55Ov2AgmGpaNe9e0EKsswshIHlxo5wYGzhXWI1RV3T3XR2COJirWTstbzPml
         /chg==
X-Gm-Message-State: AOAM533hv+Z08tvkivWGrixd0Nvpad+2Lr988xyHkGKsOA+eVIcqyQft
        x+f0DDPKfcaBLFedVGfFLvIjub+oVu4=
X-Google-Smtp-Source: 
 ABdhPJxTsOCwcOqmkJUmlqKUC7+s0dEFqtklNzfXJYZCTQkGKs2Vt1Svz4KdhgivbfZIJb/3v1G8gA==
X-Received: by 2002:aa7:c789:: with SMTP id n9mr38495966eds.352.1620754868887;
        Tue, 11 May 2021 10:41:08 -0700 (PDT)
Received: from avogadro.redhat.com ([2001:b07:6468:f312:c8dd:75d4:99ab:290a])
        by smtp.gmail.com with ESMTPSA id
 v23sm15239073eda.8.2021.05.11.10.41.08
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Tue, 11 May 2021 10:41:08 -0700 (PDT)
Sender: Paolo Bonzini <paolo.bonzini@gmail.com>
From: Paolo Bonzini <pbonzini@redhat.com>
To: kvm@vger.kernel.org
Cc: Alexandru Elisei <alexandru.elisei@arm.com>
Subject: [PATCH kvm-unit-tests 2/2] arm: add eabi version of 64-bit division
 functions
Date: Tue, 11 May 2021 19:41:06 +0200
Message-Id: <20210511174106.703235-3-pbonzini@redhat.com>
X-Mailer: git-send-email 2.31.1
In-Reply-To: <20210511174106.703235-1-pbonzini@redhat.com>
References: <20210511174106.703235-1-pbonzini@redhat.com>
MIME-Version: 1.0
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

eabi prescribes different entry points for 64-bit division on
32-bit platforms.  Implement a wrapper for the GCC-style __divmoddi4
and __udivmoddi4 functions.

Reported-by: Alexandru Elisei <alexandru.elisei@arm.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
---
 arm/Makefile.arm  |  1 +
 lib/arm/ldivmod.S | 32 ++++++++++++++++++++++++++++++++
 2 files changed, 33 insertions(+)
 create mode 100644 lib/arm/ldivmod.S

diff --git a/arm/Makefile.arm b/arm/Makefile.arm
index 687a8ed..3a4cc6b 100644
--- a/arm/Makefile.arm
+++ b/arm/Makefile.arm
@@ -24,6 +24,7 @@ cflatobjs += lib/arm/spinlock.o
 cflatobjs += lib/arm/processor.o
 cflatobjs += lib/arm/stack.o
 cflatobjs += lib/ldiv32.o
+cflatobjs += lib/arm/ldivmod.o
 
 # arm specific tests
 tests =
diff --git a/lib/arm/ldivmod.S b/lib/arm/ldivmod.S
new file mode 100644
index 0000000..de11ac9
--- /dev/null
+++ b/lib/arm/ldivmod.S
@@ -0,0 +1,32 @@
+// EABI ldivmod and uldivmod implementation based on libcompiler-rt
+//
+// This file is dual licensed under the MIT and the University of Illinois Open
+// Source Licenses.
+
+	.syntax unified
+	.align 2
+	.globl __aeabi_uldivmod
+	.type __aeabi_uldivmod, %function
+__aeabi_uldivmod:
+	push	{r11, lr}
+	sub	sp, sp, #16
+	add	r12, sp, #8
+	str	r12, [sp]                // third argument to __udivmoddi4
+	bl	__udivmoddi4
+	ldr	r2, [sp, #8]             // remainder returned in r2-r3
+	ldr	r3, [sp, #12]
+	add	sp, sp, #16
+	pop	{r11, pc}
+
+	.globl __aeabi_ldivmod
+	.type __aeabi_ldivmod, %function
+__aeabi_ldivmod:
+	push	{r11, lr}
+	sub	sp, sp, #16
+	add	r12, sp, #8
+	str	r12, [sp]                // third argument to __divmoddi4
+	bl	__divmoddi4
+	ldr	r2, [sp, #8]             // remainder returned in r2-r3
+	ldr	r3, [sp, #12]
+	add	sp, sp, #16
+	pop	{r11, pc}
