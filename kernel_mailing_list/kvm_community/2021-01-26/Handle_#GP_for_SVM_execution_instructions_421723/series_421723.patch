From patchwork Tue Jan 26 08:18:28 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Wei Huang <wei.huang2@amd.com>
X-Patchwork-Id: 12045829
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 4E19AC433DB
	for <kvm@archiver.kernel.org>; Tue, 26 Jan 2021 08:21:12 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id EF12922B3B
	for <kvm@archiver.kernel.org>; Tue, 26 Jan 2021 08:21:11 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389814AbhAZIU7 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Tue, 26 Jan 2021 03:20:59 -0500
Received: from mail-bn8nam08on2064.outbound.protection.outlook.com
 ([40.107.100.64]:61696
        "EHLO NAM04-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S2389802AbhAZIUe (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 26 Jan 2021 03:20:34 -0500
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=VpSHifjG8KnY5fK3Hkuw3w2y/HqJXqGKMjLaj4n5CeY/Qa0e283prfE5gn+HxDcRMNDoug2a6LPkPl8Jr7iJJjqFJPuiW8AZg8XH0/j1wul9tz2SaUJ58jE24UypTEk/Bklp7yDofrBeNwzYHryVX4YycdLshoJ5Ht1y7Xmc1g4+UUNxD8ANgQVZS/dWG7c65OvBiJTzVXZtInJbR7vTi16TNRNoup8lr5HgrHRVtusSkLikJw+sKYT8N9MF+BH9UA2lqUxbnBmn3jWJMjAP2GgCLUOOm1yl1EWfBAM5YhWLQTbTfJvjKu/UAVtyK8SR5RYOp+qbukgknEQQfcvouA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=zrh/yP3QuebLz4N2MRDY6SWrEwvZslYWV2sm2NvlQM4=;
 b=NE6FvyoKHvxlYwwx4Q5Br2uGXUXoIvxZ4S8Fe2rkTAuEDlqpeqqAHIFeDfOF8clEF2lXNo7hzJSIbNbLvTGy+f4PcKv/zj8L8i6Z9WbnJXsViOx/MPKibk7rOcEajAX6Smn+wHhlbqstpvGx/Vh80R+siee/Aol9Pto6SjNDARqr79rZy3VTTVgNTWXbJ5u0Qkm9DHt3zprkqyp04SbPD+JJG8TIEYx2wNiKSq1VQhPfANgH2BEwY7sN6WWhNx510wC0z/w713Z2OiRTS7okVT0eqi30znhHWKzIlAEVcJR6ZEBaLfVbSAY/J2h42hINBgumV0bs2+K3KlQZsmulhA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=zrh/yP3QuebLz4N2MRDY6SWrEwvZslYWV2sm2NvlQM4=;
 b=OP+zlrZ+fnHRXNc1Ux4Pi4EozldcImXBy9+Pf1wgLV6d5B9BMsBXrj3CUIZ7/ush5sdhZwb67OCHAK5H/I6js9rFSA71UZHdCx5sR37vjxg9YzwdEJ5lpT9tFASiPFVfFpC4V3MkGYznicfTwcSRaGkmAshIZtmrSoMWNaBMInE=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from CY4PR12MB1494.namprd12.prod.outlook.com (2603:10b6:910:f::22)
 by CY4PR1201MB0214.namprd12.prod.outlook.com (2603:10b6:910:25::13) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3763.10; Tue, 26 Jan
 2021 08:19:05 +0000
Received: from CY4PR12MB1494.namprd12.prod.outlook.com
 ([fe80::25d2:a078:e7b:a819]) by CY4PR12MB1494.namprd12.prod.outlook.com
 ([fe80::25d2:a078:e7b:a819%11]) with mapi id 15.20.3784.017; Tue, 26 Jan 2021
 08:19:05 +0000
From: Wei Huang <wei.huang2@amd.com>
To: kvm@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, pbonzini@redhat.com,
        vkuznets@redhat.com, mlevitsk@redhat.com, seanjc@google.com,
        joro@8bytes.org, bp@alien8.de, tglx@linutronix.de,
        mingo@redhat.com, x86@kernel.org, jmattson@google.com,
        wanpengli@tencent.com, bsd@redhat.com, dgilbert@redhat.com,
        luto@amacapital.net, wei.huang2@amd.com
Subject: [PATCH v3 1/4] KVM: x86: Factor out x86 instruction emulation with
 decoding
Date: Tue, 26 Jan 2021 03:18:28 -0500
Message-Id: <20210126081831.570253-2-wei.huang2@amd.com>
X-Mailer: git-send-email 2.27.0
In-Reply-To: <20210126081831.570253-1-wei.huang2@amd.com>
References: <20210126081831.570253-1-wei.huang2@amd.com>
X-Originating-IP: [66.187.233.206]
X-ClientProxiedBy: AM8P192CA0010.EURP192.PROD.OUTLOOK.COM
 (2603:10a6:20b:21b::15) To CY4PR12MB1494.namprd12.prod.outlook.com
 (2603:10b6:910:f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from amd-daytona-06.khw1.lab.eng.bos.redhat.com (66.187.233.206) by
 AM8P192CA0010.EURP192.PROD.OUTLOOK.COM (2603:10a6:20b:21b::15) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3784.12 via Frontend
 Transport; Tue, 26 Jan 2021 08:19:00 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 0dbbbf28-39ce-4de4-090c-08d8c1d30b8d
X-MS-TrafficTypeDiagnostic: CY4PR1201MB0214:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <CY4PR1201MB02141FD4E4ACE00FFF6BAF14CFBC0@CY4PR1201MB0214.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:8882;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 QQPHmmp2Bq/+9+uPalZ+6VnYFcXSlcbCPUkUR7L7HfNZke0HCDV1irPHD7mDTyjc9ENTiwHrOxjgWlygFPDjyOu/anmjABSk2L6xvOO4Nr0f3JVelCZ3uly2metiwQ8DX349lom12dJXr0TQof3YtHQ/lhpJSaiS5kVXm0Mmolw3RADYEXgyiYtwVUXePvwLAiYVd4KKf3FC30ZBk7Lf8PYEXCeVaGzv4eGyBi1GN8UgsTaw4ROcVpe+awXEIN2IJR96HTDFO3NVJV1acXql2CClcae/IkKYZO+yAiZhGVX5kOVKVmrFEoi9zDOu2pxybisRxc39XXpL1bS/AejoRUt8rwf+Ne+yJ7hZK6kEqpxIV+mELUkJ1sUHCziDdwbgDMMYoYT95McLyX2uOlhYJQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:CY4PR12MB1494.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(346002)(376002)(396003)(136003)(36756003)(66556008)(6486002)(8676002)(66476007)(66946007)(52116002)(86362001)(5660300002)(6512007)(2906002)(956004)(186003)(26005)(16526019)(478600001)(6666004)(83380400001)(8936002)(4326008)(6916009)(316002)(6506007)(7416002)(1076003)(2616005);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 mxhWXDMXaMtscx1caINMsTj3kusyIt+FWM1bkm8hqja8MGNXZDa5H/0JUgLfgkRiltrRW5A6UVOoqy9QSf4Nc10h8FPeQoNG2c32zieuU+vn+AgUt/roqXb3t3tULhS/L3gOqEyQJd41t3Aej2pl2k0izE/9AKL644bVcLl8XW4SzFv1Kn0C3p7KQW+3i26HxSgaQmusv4+hKHw1PFQwa1YBOHQNFYCwPd46GCeMcVnlmNkroFw7ADxuwc+MIj+f8rFjGB0PjFVU582zEZ+QD4HjI2sWYdWqIoeFP5yTypyGM7L9IHJ4f92coCHPJaiu2+RGoBv9aAc8x0mjKC9mnBtYWR0oNlI9szkaCaCFQrWGxcLbpMXB7Mw/VXlsC4v1sjlQG/J2OXWwfeU535hskt8W04w07IZ1UltsKrWeEtDm3e7tPXSVnAPrI1qIlGjSOQTgMJGXa1Y2hDXzlOV7MiQ/+TDO/1lOfNKhkkBBbLWnZvFeEferknv2J+UtaSluKLaKtBpRki4aHWSluKg3S1CJkO/AnNZ7mGD/zE+IqzZP8FyK63T1URQk3qWv38boXh3nDtuyMpp71t3vj2v5Amagb9T1yNjFpWvFCAVjpdqZP5AwoyrvXt3mu6+SxmPDq9TL8T7WQOxbOMVOywroxlnLx7W9nE+MWtjovbky63jcG2lmnVkPkvYNKMDSC+n+XowYtqc3r126EmwadPHX+XQHAiispwzWJIkO2Y7T2WnjyjEZAeOKjz7yKmnqh0lEMJAJVhyLbqWDi9cyJStzjU+ulB+ZU/PYvMIz34Hu/NGjDd4RiwruX3rD4F6DqpEl+m94B894U4c1W6HmfcmTfoOhoa+u5kFH7/4I8t9B+Jq8OeIVR2lqt5tTBExSXbYGpXKuOevOq5eCrRwlvXbj/GT85BlVn8+8vlmcHSSw+FTPHOoOqxwZ6zuRmdFI4kG8JMrBh2N6hLFHCNoBOr2As4WEPEnLTfNXb02VdBkRVcPtj65rKYuq7SOYAGIHyjMLzkRNJJKYQRA2iGvfv4PcJA0XrEf7TrkPOocREqJgLfUPRVzC/WuSieOyA1QzZcNO
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 0dbbbf28-39ce-4de4-090c-08d8c1d30b8d
X-MS-Exchange-CrossTenant-AuthSource: CY4PR12MB1494.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 26 Jan 2021 08:19:05.1746
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 X/qaKaTcCnzwui7LgSvxhq/jc9hWOMMqZNYrhwKG0aAzdtTx7Zm64evYe4SDnhR1
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY4PR1201MB0214
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Move the instruction decode part out of x86_emulate_instruction() for it
to be used in other places. Also kvm_clear_exception_queue() is moved
inside the if-statement as it doesn't apply when KVM are coming back from
userspace.

Co-developed-by: Bandan Das <bsd@redhat.com>
Signed-off-by: Bandan Das <bsd@redhat.com>
Signed-off-by: Wei Huang <wei.huang2@amd.com>
---
 arch/x86/kvm/x86.c | 62 +++++++++++++++++++++++++++++-----------------
 arch/x86/kvm/x86.h |  2 ++
 2 files changed, 41 insertions(+), 23 deletions(-)

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 9a8969a6dd06..a1c83cd43c1a 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -7298,6 +7298,42 @@ static bool is_vmware_backdoor_opcode(struct x86_emulate_ctxt *ctxt)
 	return false;
 }
 
+/*
+ * Decode to be emulated instruction. Return EMULATION_OK if success.
+ */
+int x86_decode_emulated_instruction(struct kvm_vcpu *vcpu, int emulation_type,
+				    void *insn, int insn_len)
+{
+	int r = EMULATION_OK;
+	struct x86_emulate_ctxt *ctxt = vcpu->arch.emulate_ctxt;
+
+	init_emulate_ctxt(vcpu);
+
+	/*
+	 * We will reenter on the same instruction since we do not set
+	 * complete_userspace_io. This does not handle watchpoints yet,
+	 * those would be handled in the emulate_ops.
+	 */
+	if (!(emulation_type & EMULTYPE_SKIP) &&
+	    kvm_vcpu_check_breakpoint(vcpu, &r))
+		return r;
+
+	ctxt->interruptibility = 0;
+	ctxt->have_exception = false;
+	ctxt->exception.vector = -1;
+	ctxt->perm_ok = false;
+
+	ctxt->ud = emulation_type & EMULTYPE_TRAP_UD;
+
+	r = x86_decode_insn(ctxt, insn, insn_len);
+
+	trace_kvm_emulate_insn_start(vcpu);
+	++vcpu->stat.insn_emulation;
+
+	return r;
+}
+EXPORT_SYMBOL_GPL(x86_decode_emulated_instruction);
+
 int x86_emulate_instruction(struct kvm_vcpu *vcpu, gpa_t cr2_or_gpa,
 			    int emulation_type, void *insn, int insn_len)
 {
@@ -7317,32 +7353,12 @@ int x86_emulate_instruction(struct kvm_vcpu *vcpu, gpa_t cr2_or_gpa,
 	 */
 	write_fault_to_spt = vcpu->arch.write_fault_to_shadow_pgtable;
 	vcpu->arch.write_fault_to_shadow_pgtable = false;
-	kvm_clear_exception_queue(vcpu);
 
 	if (!(emulation_type & EMULTYPE_NO_DECODE)) {
-		init_emulate_ctxt(vcpu);
-
-		/*
-		 * We will reenter on the same instruction since
-		 * we do not set complete_userspace_io.  This does not
-		 * handle watchpoints yet, those would be handled in
-		 * the emulate_ops.
-		 */
-		if (!(emulation_type & EMULTYPE_SKIP) &&
-		    kvm_vcpu_check_breakpoint(vcpu, &r))
-			return r;
-
-		ctxt->interruptibility = 0;
-		ctxt->have_exception = false;
-		ctxt->exception.vector = -1;
-		ctxt->perm_ok = false;
-
-		ctxt->ud = emulation_type & EMULTYPE_TRAP_UD;
-
-		r = x86_decode_insn(ctxt, insn, insn_len);
+		kvm_clear_exception_queue(vcpu);
 
-		trace_kvm_emulate_insn_start(vcpu);
-		++vcpu->stat.insn_emulation;
+		r = x86_decode_emulated_instruction(vcpu, emulation_type,
+						    insn, insn_len);
 		if (r != EMULATION_OK)  {
 			if ((emulation_type & EMULTYPE_TRAP_UD) ||
 			    (emulation_type & EMULTYPE_TRAP_UD_FORCED)) {
diff --git a/arch/x86/kvm/x86.h b/arch/x86/kvm/x86.h
index c5ee0f5ce0f1..482e7f24801e 100644
--- a/arch/x86/kvm/x86.h
+++ b/arch/x86/kvm/x86.h
@@ -273,6 +273,8 @@ bool kvm_mtrr_check_gfn_range_consistency(struct kvm_vcpu *vcpu, gfn_t gfn,
 					  int page_num);
 bool kvm_vector_hashing_enabled(void);
 void kvm_fixup_and_inject_pf_error(struct kvm_vcpu *vcpu, gva_t gva, u16 error_code);
+int x86_decode_emulated_instruction(struct kvm_vcpu *vcpu, int emulation_type,
+				    void *insn, int insn_len);
 int x86_emulate_instruction(struct kvm_vcpu *vcpu, gpa_t cr2_or_gpa,
 			    int emulation_type, void *insn, int insn_len);
 fastpath_t handle_fastpath_set_msr_irqoff(struct kvm_vcpu *vcpu);

From patchwork Tue Jan 26 08:18:29 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Wei Huang <wei.huang2@amd.com>
X-Patchwork-Id: 12047373
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=unavailable
	autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 6D38EC433DB
	for <kvm@archiver.kernel.org>; Tue, 26 Jan 2021 16:39:20 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 3E98E230FE
	for <kvm@archiver.kernel.org>; Tue, 26 Jan 2021 16:39:20 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389808AbhAZIUy (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Tue, 26 Jan 2021 03:20:54 -0500
Received: from mail-bn8nam11on2050.outbound.protection.outlook.com
 ([40.107.236.50]:25316
        "EHLO NAM11-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S2389801AbhAZIUd (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 26 Jan 2021 03:20:33 -0500
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Deoxl0JwdIlTG5ZtphPdbZ3xwceAhswmryq1rBBHiQsOLsQay8L7Xz8A6MPe+/KOO7tt+tbddAvuFHoS0LaRThRBJI1bZ0G6//nXv1wLc2T6nZTQ/CifuN8cPrOQKYfxfFk+XxMEo4Qek0kyp/JtXGzxpflySzO3ZjG867dutavOTDXnX8E8RQHaL5KwQj912vaDEPesLomo2/zEF/32jRiMRG0l2cHMVMRjcMEsGZNsP3dE0ufDqlV3PxGcx8/tlGZPZHwovfoVRMAPW4POyzkEYYO47CNkmSGUQd1diFE1w36sSJxp+avoCR0S515U7yaBugsSdTlkd0ZUPS7I/g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=+Pgn5UNdvAPrDKA99TEBy7v0D5r818gcqKfPK27X6QM=;
 b=gxvIE19OPx7kGg69TjyqZK+nYd3NH0gj2CAdq+fsToOlnJDezFRses6qxvSyh+B/MU/bnJ8WE1om4prq6ZbtnEZh+zOvnnrF8u74emn9n4wZD+Rpfk4TgKWlMEhd+ALJfAhKfxn4ikIpnHR1WlCwqi5vt7jyjV32VjTf9UPqtuiEW6cBqjA0/nAZsxvNCb61i6s4XFphg/JQwXYRImH+Fn4Kdn8LVV+rZpNRIfUGCDIkUM7FrhRZKcgyqzGBzFsXaSQqbYEvXmRL48XoK6gx/LgRgke7I6Eo2Zs4slYyqDRJXyISEVjBf3ahbBOLCP1BbZuf87xx38dlWegMv9FrNQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=+Pgn5UNdvAPrDKA99TEBy7v0D5r818gcqKfPK27X6QM=;
 b=YQx6dl1nq3+RXRDkOONcJG4OoIoy1ivoWwnjWP9SQZRfjRP4nPWIX/MJzZoeLaa+Ame5KOnFHrdHRPpYaahjqCi0PKsvQ2JIDYH8v++ZbAuNLWtoEoK8eFiot122G4vdbLYwogWNGIcInyQnoOHSf3lmegqivPcCGmIMS6niyZI=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from CY4PR12MB1494.namprd12.prod.outlook.com (2603:10b6:910:f::22)
 by CY4PR1201MB0214.namprd12.prod.outlook.com (2603:10b6:910:25::13) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3763.10; Tue, 26 Jan
 2021 08:19:26 +0000
Received: from CY4PR12MB1494.namprd12.prod.outlook.com
 ([fe80::25d2:a078:e7b:a819]) by CY4PR12MB1494.namprd12.prod.outlook.com
 ([fe80::25d2:a078:e7b:a819%11]) with mapi id 15.20.3784.017; Tue, 26 Jan 2021
 08:19:26 +0000
From: Wei Huang <wei.huang2@amd.com>
To: kvm@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, pbonzini@redhat.com,
        vkuznets@redhat.com, mlevitsk@redhat.com, seanjc@google.com,
        joro@8bytes.org, bp@alien8.de, tglx@linutronix.de,
        mingo@redhat.com, x86@kernel.org, jmattson@google.com,
        wanpengli@tencent.com, bsd@redhat.com, dgilbert@redhat.com,
        luto@amacapital.net, wei.huang2@amd.com
Subject: [PATCH v3 2/4] KVM: SVM: Add emulation support for #GP triggered by
 SVM instructions
Date: Tue, 26 Jan 2021 03:18:29 -0500
Message-Id: <20210126081831.570253-3-wei.huang2@amd.com>
X-Mailer: git-send-email 2.27.0
In-Reply-To: <20210126081831.570253-1-wei.huang2@amd.com>
References: <20210126081831.570253-1-wei.huang2@amd.com>
X-Originating-IP: [66.187.233.206]
X-ClientProxiedBy: AM4P190CA0010.EURP190.PROD.OUTLOOK.COM
 (2603:10a6:200:56::20) To CY4PR12MB1494.namprd12.prod.outlook.com
 (2603:10b6:910:f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from amd-daytona-06.khw1.lab.eng.bos.redhat.com (66.187.233.206) by
 AM4P190CA0010.EURP190.PROD.OUTLOOK.COM (2603:10a6:200:56::20) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3784.14 via Frontend
 Transport; Tue, 26 Jan 2021 08:19:21 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: f00ee8e8-8bf6-4b77-d3cd-08d8c1d3180f
X-MS-TrafficTypeDiagnostic: CY4PR1201MB0214:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <CY4PR1201MB021422A02485B3B42832AEE5CFBC0@CY4PR1201MB0214.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:4502;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 WYiLdz9fgDeJWSrVYHyzkP+r/7Kyb04IoMVJrIqdds3jU1B5B1TlYZLnwye0y7FmsHl1TNVZWoWhtPt61h6kBJ+nLSM4LneT9gAeTN3yWaqwJYpLWfc+r2VfeftkwM5JxD/rX4EIGmCMAAxem35eZDEcFOaG4yRGxsyKd30Vea0UTWopAuVKHrasXzJNKw6ygq/rUD+ORiJbBn7ONqtvHhmcTNSDiztNoG4b9YndspgLHyJgpdClqtMB6B2y5RsbLwmwLw3u7Ji6aIqvWQtDbnFNLreOyNsizZkUcC6RJPc6yO4hy7m3eRxu99Dz1z2iANWiPugbl+b9TiQb2VnDdSl+gwPnsRFUqIRJ+tJODXH2j2+zKEP3Z1Awfrss42Wv
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:CY4PR12MB1494.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(346002)(376002)(396003)(136003)(36756003)(66556008)(6486002)(8676002)(66476007)(66946007)(52116002)(86362001)(5660300002)(6512007)(2906002)(956004)(186003)(26005)(16526019)(478600001)(83380400001)(8936002)(4326008)(6916009)(316002)(6506007)(7416002)(1076003)(2616005);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 ibsYtXjuFRKqqttI0nHDfree0VWwrz2V6yrNvaijugYv9pc7k2dp8rCt0jdAFExT1Jxs/jiNtWJ8ak8SxlJifMjhnLnuiQRt0Ia1Gqi9cyS5Bq1H5rCr2dtydkpAvCPVtmR73LZcPLoHa0L6/kt1h/Jhm1MsXDrhGrfYGExe1Y+tV7klQcnNBA7ml9ZJMncO+m/HO5+ViDSNbhJJAp9ssIZlpgr0aZaakBjkF7P9wguGaeptgTmO7485tfhpdBfkEU1IB8N7odoQfMTbronxJqyRbuMMlhhpj1JCC5FT0H0zBuvwnStc9GADE4+z4NhKRTt5qAehYareCkLiRBpgKg5Ywp2wyd3UvRikpeslKuw0BayrulDZ6Mm96Nr2IEoJBMqW4X5j6yeZ4lD395vKYVhlDIUgE8DmvVSKjZJSkAe/VvlHFSXXl5LM+gID6s0c+KR6lOUFEthcakGEXQsdtJO8WuAAoD7bvTg522N+hvOJumModS6nlyEinM183wgQcSBlz1AwV813BfxzqYyn96C/afJKbPTktwMePxhL8s5O59Ot8xo1ILIGQx08DcXpAyzqeKkfScVFrCLvZLZKlli/xyl2I3DN2j3xLg4vAdfRNaquC6Bc7Kpc4uKbFiMgIZ7CommPwLxCYama+ren9IDaoa4pUIgrl6FDhat77A/vIK5hGlbbnIaFpORBSnPDn/qf8cbd5oqPQX9CkSiDULmCMsFACqXLHAZ5PkOfN11YF8VeU1b+YmsjabhKw+V+sO8N3yQ+LfompMV8vSkRbdjhV7pLauOT+/sp41VV0IOLhqI6E21vVQi2qTztmJu28nvEBgOWgcCr8A2wOrYyJVEjRTtLaHJIsepraDlryVvCfw/NVklrYVISsRyJIi3KZgAc92bpoZqLWsWBXSExD0PlS48BQt+TpUc9ovd3pEg1nhN3zxxdF6ACya5kp4vc9aLya/GtB1iH2+84gx9GhdBc6eiDg1D1IvurCRux9Jmih7o2qNdmzGWvgVjIM3MIG4NGYa+4jI4D5APZYcKx0bDPFoiOWievXwnuHSVoVpjqIo0sKPwfr4H9j99ydPW2
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 f00ee8e8-8bf6-4b77-d3cd-08d8c1d3180f
X-MS-Exchange-CrossTenant-AuthSource: CY4PR12MB1494.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 26 Jan 2021 08:19:26.1204
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 G1dbCZj2Qq9Rq/RQ+TZeMtLQCGYargZX6k89oEBN85xSZNitdaaxWQSAgenizEnm
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY4PR1201MB0214
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Bandan Das <bsd@redhat.com>

While running SVM related instructions (VMRUN/VMSAVE/VMLOAD), some AMD
CPUs check EAX against reserved memory regions (e.g. SMM memory on host)
before checking VMCB's instruction intercept. If EAX falls into such
memory areas, #GP is triggered before VMEXIT. This causes problem under
nested virtualization. To solve this problem, KVM needs to trap #GP and
check the instructions triggering #GP. For VM execution instructions,
KVM emulates these instructions.

Co-developed-by: Wei Huang <wei.huang2@amd.com>
Signed-off-by: Wei Huang <wei.huang2@amd.com>
Signed-off-by: Bandan Das <bsd@redhat.com>
---
 arch/x86/kvm/svm/svm.c | 109 ++++++++++++++++++++++++++++++++++-------
 1 file changed, 91 insertions(+), 18 deletions(-)

diff --git a/arch/x86/kvm/svm/svm.c b/arch/x86/kvm/svm/svm.c
index 7ef171790d02..e5ca01e25e89 100644
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@ -200,6 +200,8 @@ module_param(sev_es, int, 0444);
 bool __read_mostly dump_invalid_vmcb;
 module_param(dump_invalid_vmcb, bool, 0644);
 
+bool svm_gp_erratum_intercept = true;
+
 static u8 rsm_ins_bytes[] = "\x0f\xaa";
 
 static void svm_complete_interrupts(struct vcpu_svm *svm);
@@ -288,6 +290,9 @@ int svm_set_efer(struct kvm_vcpu *vcpu, u64 efer)
 		if (!(efer & EFER_SVME)) {
 			svm_leave_nested(svm);
 			svm_set_gif(svm, true);
+			/* #GP intercept is still needed in vmware_backdoor */
+			if (!enable_vmware_backdoor)
+				clr_exception_intercept(svm, GP_VECTOR);
 
 			/*
 			 * Free the nested guest state, unless we are in SMM.
@@ -309,6 +314,10 @@ int svm_set_efer(struct kvm_vcpu *vcpu, u64 efer)
 
 	svm->vmcb->save.efer = efer | EFER_SVME;
 	vmcb_mark_dirty(svm->vmcb, VMCB_CR);
+	/* Enable #GP interception for SVM instructions */
+	if (svm_gp_erratum_intercept)
+		set_exception_intercept(svm, GP_VECTOR);
+
 	return 0;
 }
 
@@ -1957,24 +1966,6 @@ static int ac_interception(struct vcpu_svm *svm)
 	return 1;
 }
 
-static int gp_interception(struct vcpu_svm *svm)
-{
-	struct kvm_vcpu *vcpu = &svm->vcpu;
-	u32 error_code = svm->vmcb->control.exit_info_1;
-
-	WARN_ON_ONCE(!enable_vmware_backdoor);
-
-	/*
-	 * VMware backdoor emulation on #GP interception only handles IN{S},
-	 * OUT{S}, and RDPMC, none of which generate a non-zero error code.
-	 */
-	if (error_code) {
-		kvm_queue_exception_e(vcpu, GP_VECTOR, error_code);
-		return 1;
-	}
-	return kvm_emulate_instruction(vcpu, EMULTYPE_VMWARE_GP);
-}
-
 static bool is_erratum_383(void)
 {
 	int err, i;
@@ -2173,6 +2164,88 @@ static int vmrun_interception(struct vcpu_svm *svm)
 	return nested_svm_vmrun(svm);
 }
 
+enum {
+	NONE_SVM_INSTR,
+	SVM_INSTR_VMRUN,
+	SVM_INSTR_VMLOAD,
+	SVM_INSTR_VMSAVE,
+};
+
+/* Return NONE_SVM_INSTR if not SVM instrs, otherwise return decode result */
+static int svm_instr_opcode(struct kvm_vcpu *vcpu)
+{
+	struct x86_emulate_ctxt *ctxt = vcpu->arch.emulate_ctxt;
+
+	if (ctxt->b != 0x1 || ctxt->opcode_len != 2)
+		return NONE_SVM_INSTR;
+
+	switch (ctxt->modrm) {
+	case 0xd8: /* VMRUN */
+		return SVM_INSTR_VMRUN;
+	case 0xda: /* VMLOAD */
+		return SVM_INSTR_VMLOAD;
+	case 0xdb: /* VMSAVE */
+		return SVM_INSTR_VMSAVE;
+	default:
+		break;
+	}
+
+	return NONE_SVM_INSTR;
+}
+
+static int emulate_svm_instr(struct kvm_vcpu *vcpu, int opcode)
+{
+	int (*const svm_instr_handlers[])(struct vcpu_svm *svm) = {
+		[SVM_INSTR_VMRUN] = vmrun_interception,
+		[SVM_INSTR_VMLOAD] = vmload_interception,
+		[SVM_INSTR_VMSAVE] = vmsave_interception,
+	};
+	struct vcpu_svm *svm = to_svm(vcpu);
+
+	return svm_instr_handlers[opcode](svm);
+}
+
+/*
+ * #GP handling code. Note that #GP can be triggered under the following two
+ * cases:
+ *   1) SVM VM-related instructions (VMRUN/VMSAVE/VMLOAD) that trigger #GP on
+ *      some AMD CPUs when EAX of these instructions are in the reserved memory
+ *      regions (e.g. SMM memory on host).
+ *   2) VMware backdoor
+ */
+static int gp_interception(struct vcpu_svm *svm)
+{
+	struct kvm_vcpu *vcpu = &svm->vcpu;
+	u32 error_code = svm->vmcb->control.exit_info_1;
+	int opcode;
+
+	/* Both #GP cases have zero error_code */
+	if (error_code)
+		goto reinject;
+
+	/* Decode the instruction for usage later */
+	if (x86_decode_emulated_instruction(vcpu, 0, NULL, 0) != EMULATION_OK)
+		goto reinject;
+
+	opcode = svm_instr_opcode(vcpu);
+
+	if (opcode == NONE_SVM_INSTR) {
+		WARN_ON_ONCE(!enable_vmware_backdoor);
+
+		/*
+		 * VMware backdoor emulation on #GP interception only handles
+		 * IN{S}, OUT{S}, and RDPMC.
+		 */
+		return kvm_emulate_instruction(vcpu,
+				EMULTYPE_VMWARE_GP | EMULTYPE_NO_DECODE);
+	} else
+		return emulate_svm_instr(vcpu, opcode);
+
+reinject:
+	kvm_queue_exception_e(vcpu, GP_VECTOR, error_code);
+	return 1;
+}
+
 void svm_set_gif(struct vcpu_svm *svm, bool value)
 {
 	if (value) {

From patchwork Tue Jan 26 08:18:30 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Wei Huang <wei.huang2@amd.com>
X-Patchwork-Id: 12045835
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 50BCDC433E0
	for <kvm@archiver.kernel.org>; Tue, 26 Jan 2021 08:24:51 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id F336221BE5
	for <kvm@archiver.kernel.org>; Tue, 26 Jan 2021 08:24:50 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389908AbhAZIYB (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Tue, 26 Jan 2021 03:24:01 -0500
Received: from mail-bn8nam11on2058.outbound.protection.outlook.com
 ([40.107.236.58]:20448
        "EHLO NAM11-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S2389832AbhAZIVe (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 26 Jan 2021 03:21:34 -0500
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=ABediNFkobGMG05Mn5lPt49uOlW5V2/KRukDA+++PWqvT4Dq9MGnM4lkTOVyR1Da1gkamgdnNYsSWnN30BrKGapswKNHRh7O8nlaiN+wnxyuUEIe/NabzxBf+CvCWBf/aiGCQB8nQrNrH7isa/xvV/Hf+3aaSS3MIiD+hd4kZLNUp37SDdZmS6CmNZJNUOtUvgy5Zq2e1kg7ImaL+DwyPs0m5M9lBQJT3+bQawaVIIqnVCQRkk0VhUGxDFUXyqmEEv1t11UNuROdkMa6koEk3FEAvB8cJQIjVxo/ZJ+UTaKTcpJhGV9kDYX3Fqf2ItCvSi9IGUVbXplq+hOduk6ylA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=bv67/yfTw2Ixk6BCV4HFulzmxhv1b8TWBI1koiSFFhc=;
 b=OqaRqavqaFyCpazSjBpIxON0FcgYBJD2OAWEFXM77spftBUom4+1OGDFh2K6DIgOKn1OwNxDuC5VbXnHz9ea02AA9z6ItzX+vpR4ChJ1y9i/PReoYHYHZp4rg9YblD/zs+PF4nwUaYo3LJQlLBk5fxNPh73CdOwdo1bMgXGM42rH3N/2fTQv2KPHKgv1tO/9Nbdiv4jJ4BniRquAv6zPyISv83k8mBO0plj0A5dRw6/ZUkptJZGt/nY+bp0ux1tXAzuMLDphRGeImiyA/90oPmjcpglh4pBEC6w8mPsOrQGDybVW3t8OVmwd92ze4wLcBDKuLdcBYTsHIiyjto/6UQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=bv67/yfTw2Ixk6BCV4HFulzmxhv1b8TWBI1koiSFFhc=;
 b=hDWTdD3NGCvZToAaxRzkJ3cSrfsRScRuI0jBvEOz8KHkoD4IoArWlyUkxvSAB6JYuWjSQIBFkX4PrJJeQKHkwALQQefd8zpqlAahsNdFX5eqI8cJOofmZZOGQoyHUsOJB6XMPecQeXRtsq+8hVQyqJ1jEB6OrQ0auV9rP+tr/hs=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from CY4PR12MB1494.namprd12.prod.outlook.com (2603:10b6:910:f::22)
 by CY4PR1201MB0214.namprd12.prod.outlook.com (2603:10b6:910:25::13) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3763.10; Tue, 26 Jan
 2021 08:19:47 +0000
Received: from CY4PR12MB1494.namprd12.prod.outlook.com
 ([fe80::25d2:a078:e7b:a819]) by CY4PR12MB1494.namprd12.prod.outlook.com
 ([fe80::25d2:a078:e7b:a819%11]) with mapi id 15.20.3784.017; Tue, 26 Jan 2021
 08:19:47 +0000
From: Wei Huang <wei.huang2@amd.com>
To: kvm@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, pbonzini@redhat.com,
        vkuznets@redhat.com, mlevitsk@redhat.com, seanjc@google.com,
        joro@8bytes.org, bp@alien8.de, tglx@linutronix.de,
        mingo@redhat.com, x86@kernel.org, jmattson@google.com,
        wanpengli@tencent.com, bsd@redhat.com, dgilbert@redhat.com,
        luto@amacapital.net, wei.huang2@amd.com
Subject: [PATCH v3 3/4] KVM: SVM: Add support for SVM instruction address
 check change
Date: Tue, 26 Jan 2021 03:18:30 -0500
Message-Id: <20210126081831.570253-4-wei.huang2@amd.com>
X-Mailer: git-send-email 2.27.0
In-Reply-To: <20210126081831.570253-1-wei.huang2@amd.com>
References: <20210126081831.570253-1-wei.huang2@amd.com>
X-Originating-IP: [66.187.233.206]
X-ClientProxiedBy: AM0PR10CA0054.EURPRD10.PROD.OUTLOOK.COM
 (2603:10a6:20b:150::34) To CY4PR12MB1494.namprd12.prod.outlook.com
 (2603:10b6:910:f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from amd-daytona-06.khw1.lab.eng.bos.redhat.com (66.187.233.206) by
 AM0PR10CA0054.EURPRD10.PROD.OUTLOOK.COM (2603:10a6:20b:150::34) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3784.12 via Frontend
 Transport; Tue, 26 Jan 2021 08:19:42 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: d45d31f2-c3b2-4189-7e5f-08d8c1d324c4
X-MS-TrafficTypeDiagnostic: CY4PR1201MB0214:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <CY4PR1201MB02143C8782E5EE712393C5B7CFBC0@CY4PR1201MB0214.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:1775;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 MIdqLZikKyXX+cr6Y7nYA5JPdq4ItNIJJk7yw23sRDA3efg8wcsnFCc9jMJaFu/BGpkui7gR3fOhB2Nc4kl/pFGfZku115FX1urq0ad5E17LtuWCmUmjKdgzKqfm7nCfbtvV77T/nUTIy0ECVif9geTVLxIfmvTut2tCr6B+htVyFwJzPpEB2vfBU4I6KmoO7OBIcX/gUs/UKRnNVH1NKxskOQK998nXx0ruXmlENMmltZewlDCL8WjrxjdZJetxgDj4IWJg9lBygPbFsBNqJVmeAhmvivLXHuQ3tvPdWHRI3ar6Pfch4cG+/iFL2oxcz/zzDr/CDDYS4auSIeu0WClH5IJA6wWtq+cArEorkJC9miOlExC1WWp23d0axLgeviPwF+tHhx98BAOclEf3sA==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:CY4PR12MB1494.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(346002)(376002)(396003)(136003)(36756003)(66556008)(6486002)(8676002)(66476007)(66946007)(52116002)(86362001)(5660300002)(6512007)(2906002)(956004)(186003)(26005)(16526019)(478600001)(6666004)(8936002)(4326008)(6916009)(316002)(6506007)(7416002)(1076003)(2616005);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 2PH2Gz/PVk5+EFJEez464usCaaSUrO8VsWNCPdDDq6lQ9/VQrYBlYBBGsfmJq3SdFDhTIBs7UJrNygiArr07U8yq65nELoSZxHU1DgHNKwM3sDXcP26R6Hx6mMGhfuzzrSBxfm7znEER0O+SBxFl6QbqjKUcJPuM3Ymcisj/2O1vkfEJ2RLdr6VYmw4VGWldP36TPHnN5futIL0VqyNFnuWCT5zjgzZTaFCahxAhd5AFiyTwfigHE77yU+EOrYmUbWg71wCdOHwXIyAvSt5MhOM3oEabmR/1xsphLYBFHmZmfXRjNwDFegJkH7D+c6PKOYojX7ujx4i/H+iVZ1XVGdolzSJE1bCt0ZLqVY6XDR38tDi8kIQvHwjofkpB8rTwPRoVCvT0fkYUoxL9wd+FKrfTYgSEfzj7w1D6nSSKlpmBG8VDjZG/AeyFzdsDh130YfNoFuzHHSTB01hyl7Pnl4a5/OFlFcOdfsO4tzZIVqkNwctwd2zaTbdyXs3VWR1Bo+WFQQ0hQmwtYmKKSoGEWl2X0WU4KUxF5dNVK2NiL0Bf4jLC2E2+rqU8E3zed6ivGW17ShffvJrLX16O1DqvM+MLoxk2hmjojCtlh6ykABU7+XeqgsdPE52wPBm0Deagv7go0l7edJos1LmsP3o77k/3NsBIllSyWu5ddsUqwjq9fQXJXfJHblyU+Ra75X2oC6PUuSHuJfd9f1aPcb6+c8TARj2xCyY5ky4tcJu0/KS7XBw5i7MVelLq5J9EiL51x+4UEirj7aMaUWFk5OB4mZCp2cgl/bwx+Vs459pqCkWiyI6e2IUlkIFahdx28bzhXpj11RIcbUyNA3sSt8BZBNBCpveJDQ2N1HVtdGuR4A9ifBwcEOnzI4HXGAlpUngdfqae7dy5YDTeF0i9T66lBDR4tlRqEFq49dwDd/K1PtgWxvUEWqXq+xvfY/WPw5l1iA6p5gtpfjl+ZD1ISFIFurPbJXyZK3kz5oHc2CzHCuxOyMqfDuFESCegTkYvLPkuQvEAxdDsk5/cquUin6GNj2DJtlMDCqjpqbP5eG6AjkG0drV56wSpbqegGnrDDNWk
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 d45d31f2-c3b2-4189-7e5f-08d8c1d324c4
X-MS-Exchange-CrossTenant-AuthSource: CY4PR12MB1494.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 26 Jan 2021 08:19:47.4921
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 Fui9mW2AHYBhm3Y3GHV8jQpWUftukr3bplitCHjnqNDln9C5oD9fV+Yfv/+S3zHY
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY4PR1201MB0214
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

New AMD CPUs have a change that checks #VMEXIT intercept on special SVM
instructions before checking their EAX against reserved memory region.
This change is indicated by CPUID_0x8000000A_EDX[28]. If it is 1, #VMEXIT
is triggered before #GP. KVM doesn't need to intercept and emulate #GP
faults as #GP is supposed to be triggered.

Co-developed-by: Bandan Das <bsd@redhat.com>
Signed-off-by: Bandan Das <bsd@redhat.com>
Signed-off-by: Wei Huang <wei.huang2@amd.com>
Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
---
 arch/x86/include/asm/cpufeatures.h | 1 +
 arch/x86/kvm/svm/svm.c             | 3 +++
 2 files changed, 4 insertions(+)

diff --git a/arch/x86/include/asm/cpufeatures.h b/arch/x86/include/asm/cpufeatures.h
index 84b887825f12..ea89d6fdd79a 100644
--- a/arch/x86/include/asm/cpufeatures.h
+++ b/arch/x86/include/asm/cpufeatures.h
@@ -337,6 +337,7 @@
 #define X86_FEATURE_AVIC		(15*32+13) /* Virtual Interrupt Controller */
 #define X86_FEATURE_V_VMSAVE_VMLOAD	(15*32+15) /* Virtual VMSAVE VMLOAD */
 #define X86_FEATURE_VGIF		(15*32+16) /* Virtual GIF */
+#define X86_FEATURE_SVME_ADDR_CHK	(15*32+28) /* "" SVME addr check */
 
 /* Intel-defined CPU features, CPUID level 0x00000007:0 (ECX), word 16 */
 #define X86_FEATURE_AVX512VBMI		(16*32+ 1) /* AVX512 Vector Bit Manipulation instructions*/
diff --git a/arch/x86/kvm/svm/svm.c b/arch/x86/kvm/svm/svm.c
index e5ca01e25e89..f9233c79265b 100644
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@ -1036,6 +1036,9 @@ static __init int svm_hardware_setup(void)
 		}
 	}
 
+	if (boot_cpu_has(X86_FEATURE_SVME_ADDR_CHK))
+		svm_gp_erratum_intercept = false;
+
 	if (vgif) {
 		if (!boot_cpu_has(X86_FEATURE_VGIF))
 			vgif = false;

From patchwork Tue Jan 26 08:18:31 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Wei Huang <wei.huang2@amd.com>
X-Patchwork-Id: 12045833
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 38B84C433E0
	for <kvm@archiver.kernel.org>; Tue, 26 Jan 2021 08:22:58 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id B1E6822DFB
	for <kvm@archiver.kernel.org>; Tue, 26 Jan 2021 08:22:57 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389866AbhAZIWd (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Tue, 26 Jan 2021 03:22:33 -0500
Received: from mail-bn8nam11on2050.outbound.protection.outlook.com
 ([40.107.236.50]:25316
        "EHLO NAM11-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S2389821AbhAZIVH (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 26 Jan 2021 03:21:07 -0500
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=GNm33xQn4+1Gl/skC+PHJy67fhPiOAUTPMWapRS5leYBzHROgdmvfrkaxbjcpqVoXlx3pnVUifqmhamuBlIPaAPOZzsAzFD6IuD9roE4RWe8pLepgICabAcvjTdwzyHoT3ueJWhfP7I85UbdzaQsc8Pqc5aM0aBo3bxjMwOJi+LEoPriYgdtmuS/x6TtmUl5Z8XZy2sPik33ElhA4xWAW/bI4wxTHWSyvBJND/nvAZX+xLt4reWugcsGhpxa4YsCV+QB0Wv+oLjAgqX7OeVpPZMXeHzdr0KWweqFqtNsVIAtyD/QVt/XdBf+0+o8AMNYLyR8fo90sNgOJc+9k6BPTw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=m+EfyfvbBbxfG5O7WsbON2wDUb1GxprlsMrDPCdarHw=;
 b=lMIPwKP4AFXXtqOH0lz6HRoAaPkR5o6iAaZnMkrBw41h40m//IxDcpQje+tVSr6RSEpYdi69YE03RqYQQlZkpgLwFkKV0hoXeZxhSzV0ZiVLuVThlHEmVsjC9Vt2Sf/rFgM0j6n8XoZfdrzFrpcWk9MN7vBnMNDi2hwIBk4pB+Z6WDn1VXu25I1+g6dMie4ogMl1RXjDTQivEsIzhSoEft8dmwsscZg4DbUIxrXBqoE55RRqevTNmsjGcpUFrRnQQFVOdYUPI1qqWf10aZSMuJ42H38n5nQBl7B6aLnxnk61GTava1KylMT3X5rzdVnOb1gg4QImO6I00AqZlpGV6Q==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=m+EfyfvbBbxfG5O7WsbON2wDUb1GxprlsMrDPCdarHw=;
 b=KbZSc0hx+u5+Ag9D4lkddTHhc32rqKsXTwCgcCfef8UpU6jHb6CeMBXDkWqEbJyqS8/TB0LiD0+o8UcVJFJ/z33KiVBcrapB17IfyJDVMs1Qb0jl3RuA9QJgFh2nLpFForvG5aA8VeACANgTd3jHjPezxJq1X1HIdrJgmfikRes=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from CY4PR12MB1494.namprd12.prod.outlook.com (2603:10b6:910:f::22)
 by CY4PR1201MB0214.namprd12.prod.outlook.com (2603:10b6:910:25::13) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3763.10; Tue, 26 Jan
 2021 08:20:09 +0000
Received: from CY4PR12MB1494.namprd12.prod.outlook.com
 ([fe80::25d2:a078:e7b:a819]) by CY4PR12MB1494.namprd12.prod.outlook.com
 ([fe80::25d2:a078:e7b:a819%11]) with mapi id 15.20.3784.017; Tue, 26 Jan 2021
 08:20:09 +0000
From: Wei Huang <wei.huang2@amd.com>
To: kvm@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, pbonzini@redhat.com,
        vkuznets@redhat.com, mlevitsk@redhat.com, seanjc@google.com,
        joro@8bytes.org, bp@alien8.de, tglx@linutronix.de,
        mingo@redhat.com, x86@kernel.org, jmattson@google.com,
        wanpengli@tencent.com, bsd@redhat.com, dgilbert@redhat.com,
        luto@amacapital.net, wei.huang2@amd.com
Subject: [PATCH v3 4/4] KVM: SVM: Support #GP handling for the case of nested
 on nested
Date: Tue, 26 Jan 2021 03:18:31 -0500
Message-Id: <20210126081831.570253-5-wei.huang2@amd.com>
X-Mailer: git-send-email 2.27.0
In-Reply-To: <20210126081831.570253-1-wei.huang2@amd.com>
References: <20210126081831.570253-1-wei.huang2@amd.com>
X-Originating-IP: [66.187.233.206]
X-ClientProxiedBy: AM3PR07CA0103.eurprd07.prod.outlook.com
 (2603:10a6:207:7::13) To CY4PR12MB1494.namprd12.prod.outlook.com
 (2603:10b6:910:f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from amd-daytona-06.khw1.lab.eng.bos.redhat.com (66.187.233.206) by
 AM3PR07CA0103.eurprd07.prod.outlook.com (2603:10a6:207:7::13) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3805.5 via Frontend
 Transport; Tue, 26 Jan 2021 08:20:04 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 94d8a1dc-8700-486f-141e-08d8c1d331db
X-MS-TrafficTypeDiagnostic: CY4PR1201MB0214:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <CY4PR1201MB0214900B016AA27422269819CFBC0@CY4PR1201MB0214.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:8273;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 swZVtBPytWuUnFcn/hyQz2SnnWmVhJGtkWknPnZiKlwgkeg7nfgq6pSsx5UI8iaV57pbsyNxgXp1ou5JL7f0/8cpmoFeBYyRjc7Rg8Xi1Wvszuq6vLs9kzamI7IpNrzACMNzMpjw7Hojfupo+c+tOKPkBPqIk17vT9vQEYWzqD7DpoBin0g9g8k4d+NNDOCjhzz3pCeR8Tjgn7i99DWZ7XznylaHVkIIQyGK4icw5fHbhMzuQW9c8h9iWZPIhw1fvqkYr+WeJHThWVodfMIdebSdE7LNDIzbO9Ab5IPjrZdg+yFltrLiVyGopOrdiuE0T4+28eo7weY3g9Aw8z7UBaTnttzo6tVw6SSUTH85a84bijTVoGIK2FFFZB4XMWfkYCytobwsgi9ajk3zGUo2vg==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:CY4PR12MB1494.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(346002)(376002)(396003)(136003)(36756003)(66556008)(6486002)(8676002)(66476007)(66946007)(52116002)(86362001)(5660300002)(6512007)(2906002)(956004)(186003)(26005)(16526019)(478600001)(6666004)(83380400001)(8936002)(4326008)(6916009)(316002)(6506007)(7416002)(1076003)(2616005);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 IZOTI3kJ9g80AbBeF5NGtwyPkoAtxc5e7id5gezxvl9KtPyMaCIhJhX3njO1u3dQh2IA1X4OE5Ij59k1t8fyxdL2QgwIMatir7/4AuOuYpF7am2HzyQ4NsgBsnpiBrccjozUIpUx2qVtHc0dNb63tnit2INJf6rzyKVrA1JTIoTOfyW01vSt++Kc2niF6fOjtU7PeKSi1HSfWqXJlu4WrSVtHHF1QvTQJLKFSvDn1APKiSnFuv/8d7xDm1K7X7Rg2t96Jh0tpY45pY3/AWiBYrYTHBXYXdRrjHsvv692bwOoByMGMkYI4yY4xFxw0bAH3d/heMGk5EwdjfQW1tirY2QRmh6ifVP2ljUNhPRuNQAbQC7bl35FAes6oRIlm1oYkW/Lv+m5AS2RABe5ANZa2LnZr/rc+A2umt9VB9GXfGDdqEx+Hyg/36qVGXDdeM3D0DHeSIkRDo/rqGTxJpnaF+KYqg2aMbuOl0dZym71KAZCIz9hWeOIDguC4Hje8MYQOSVzsx4fQXYLG3srgh6uHhNdJYGzlo/tjq++IQEb5NiqkT5DPxF5Bt2aUk11yfTXpolLUR7tlmHMf6kGeaST/JSa7oONS/VwGCpBlO/qR9FX39fnygbDwxwrSQUd+7EHiUlZLYTXblBUylwSdOo91CehKZ0Jw1ZGM+w6uzFVgPcMWTAShMirdX371s8DocpE4M7+Y8TnwR0HD3WB2Tz2LYqjnSDiLjN0ijLaeFZzY46JXaHmAszw9IogHAwj4LTBjnWbPRvrv/V3TbACYSr0h561KGUPmL2ROtiilNnWwjCURjb/XkGz8NBElp2FskPd6qLa49DwuH+BE6nPcahnVvbds7gK+1rcjY47jKzYQ9N4G+T3oJN8K6TStEJ9ErVWIW1Mer2vFA1GD0IKMW8TMNM3jZ24qbqnCMlgoR6zhBv6jxsDFNsWPMs9qeTnkcLVDwGsdpNpzfICKYD0Kz8WRhDfdyvrjBhIxJu1+AV8GXfMtBDTMEqUvhKIWOyJ2s8/vwbnerTbhGTPydcH26XxOTi2jBCnEnVvX5Y/HYRUkgcuBpnPJIWUIjvaUiX9u1u2
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 94d8a1dc-8700-486f-141e-08d8c1d331db
X-MS-Exchange-CrossTenant-AuthSource: CY4PR12MB1494.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 26 Jan 2021 08:20:09.4355
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 xq9xUEKYuotiS4rF/dfEv3jJbCNi/ocejCwuv+8vlhb+ybKVkaswXXyrxq5w4OjU
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY4PR1201MB0214
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Under the case of nested on nested (L0->L1->L2->L3), #GP triggered by
SVM instructions can be hided from L1. Instead the hypervisor can
inject the proper #VMEXIT to inform L1 of what is happening. Thus L1
can avoid invoking the #GP workaround. For this reason we turns on
guest VM's X86_FEATURE_SVME_ADDR_CHK bit for KVM running inside VM to
receive the notification and change behavior.

Similarly we check if vcpu is under guest mode before emulating the
vmware-backdoor instructions. For the case of nested on nested, we
let the guest handle it.

Co-developed-by: Bandan Das <bsd@redhat.com>
Signed-off-by: Bandan Das <bsd@redhat.com>
Signed-off-by: Wei Huang <wei.huang2@amd.com>
Tested-by: Maxim Levitsky <mlevitsk@redhat.com>
Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
---
 arch/x86/kvm/svm/svm.c | 20 ++++++++++++++++++--
 1 file changed, 18 insertions(+), 2 deletions(-)

diff --git a/arch/x86/kvm/svm/svm.c b/arch/x86/kvm/svm/svm.c
index f9233c79265b..83c401d2709f 100644
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@ -929,6 +929,9 @@ static __init void svm_set_cpu_caps(void)
 
 		if (npt_enabled)
 			kvm_cpu_cap_set(X86_FEATURE_NPT);
+
+		/* Nested VM can receive #VMEXIT instead of triggering #GP */
+		kvm_cpu_cap_set(X86_FEATURE_SVME_ADDR_CHK);
 	}
 
 	/* CPUID 0x80000008 */
@@ -2198,6 +2201,11 @@ static int svm_instr_opcode(struct kvm_vcpu *vcpu)
 
 static int emulate_svm_instr(struct kvm_vcpu *vcpu, int opcode)
 {
+	const int guest_mode_exit_codes[] = {
+		[SVM_INSTR_VMRUN] = SVM_EXIT_VMRUN,
+		[SVM_INSTR_VMLOAD] = SVM_EXIT_VMLOAD,
+		[SVM_INSTR_VMSAVE] = SVM_EXIT_VMSAVE,
+	};
 	int (*const svm_instr_handlers[])(struct vcpu_svm *svm) = {
 		[SVM_INSTR_VMRUN] = vmrun_interception,
 		[SVM_INSTR_VMLOAD] = vmload_interception,
@@ -2205,7 +2213,14 @@ static int emulate_svm_instr(struct kvm_vcpu *vcpu, int opcode)
 	};
 	struct vcpu_svm *svm = to_svm(vcpu);
 
-	return svm_instr_handlers[opcode](svm);
+	if (is_guest_mode(vcpu)) {
+		svm->vmcb->control.exit_code = guest_mode_exit_codes[opcode];
+		svm->vmcb->control.exit_info_1 = 0;
+		svm->vmcb->control.exit_info_2 = 0;
+
+		return nested_svm_vmexit(svm);
+	} else
+		return svm_instr_handlers[opcode](svm);
 }
 
 /*
@@ -2239,7 +2254,8 @@ static int gp_interception(struct vcpu_svm *svm)
 		 * VMware backdoor emulation on #GP interception only handles
 		 * IN{S}, OUT{S}, and RDPMC.
 		 */
-		return kvm_emulate_instruction(vcpu,
+		if (!is_guest_mode(vcpu))
+			return kvm_emulate_instruction(vcpu,
 				EMULTYPE_VMWARE_GP | EMULTYPE_NO_DECODE);
 	} else
 		return emulate_svm_instr(vcpu, opcode);
