From patchwork Tue Mar 17 20:05:35 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Krish Sadhukhan <krish.sadhukhan@oracle.com>
X-Patchwork-Id: 11443947
Return-Path: <SRS0=C8aH=5C=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 6C9191820
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 17 Mar 2020 20:44:35 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 416E220738
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 17 Mar 2020 20:44:35 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (2048-bit key) header.d=oracle.com header.i=@oracle.com
 header.b="hg87H2yX"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726840AbgCQUoe (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Tue, 17 Mar 2020 16:44:34 -0400
Received: from userp2120.oracle.com ([156.151.31.85]:43226 "EHLO
        userp2120.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726756AbgCQUoe (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 17 Mar 2020 16:44:34 -0400
Received: from pps.filterd (userp2120.oracle.com [127.0.0.1])
        by userp2120.oracle.com (8.16.0.42/8.16.0.42) with SMTP id
 02HKi1w1096892;
        Tue, 17 Mar 2020 20:44:31 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com;
 h=mime-version :
 message-id : date : from : to : cc : subject : references : in-reply-to :
 content-type : content-transfer-encoding; s=corp-2020-01-29;
 bh=YaEWJRYmTz3xvGH/0lUtNUZOBaSClgLzgeRw5k7RCSc=;
 b=hg87H2yXn+pp8f++mJfwFXPXek/nbAdPqOianarkt7I7Z9WWydJYk5CMJYvR0mOmyvE4
 AFiiI2RrgktVehxejH2ToDNL43J9G+inove+NuwfyeJg3ohLun65Z8+zHiDC5JrzDDUz
 5p155XD5+M/AjKJu5MzZAzQUzNdnHiHZSHW7fiEg3TbBJ7mD9FpzmknLxmT1SD1U1QYc
 Qu7VAUQi1Wz07dJogd99dR6PFY4uoeyp20NJ6oHf26UaLEkNPhVgfztBGc7nRbtTYyvn
 x4jQD7cbslb+LofHK1xjzr/r8Z91bDdStt9Scpx+V2Yoznyl0i0ZDXQeQuJ6TImRfhHa Vw==
Received: from aserp3020.oracle.com (aserp3020.oracle.com [141.146.126.70])
        by userp2120.oracle.com with ESMTP id 2yrqwn73ga-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
 verify=OK);
        Tue, 17 Mar 2020 20:44:31 +0000
Received: from pps.filterd (aserp3020.oracle.com [127.0.0.1])
        by aserp3020.oracle.com (8.16.0.42/8.16.0.42) with SMTP id
 02HKbZSd005211;
        Tue, 17 Mar 2020 20:44:30 GMT
Received: from userv0121.oracle.com (userv0121.oracle.com [156.151.31.72])
        by aserp3020.oracle.com with ESMTP id 2ys92e3244-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
 verify=OK);
        Tue, 17 Mar 2020 20:44:30 +0000
Received: from abhmp0010.oracle.com (abhmp0010.oracle.com [141.146.116.16])
        by userv0121.oracle.com (8.14.4/8.13.8) with ESMTP id 02HKiTZX030758;
        Tue, 17 Mar 2020 20:44:29 GMT
Received: from ban25x6uut29.us.oracle.com (/10.153.73.29) by default (Oracle
 Beehive Gateway v4.0) with ESMTP ; Tue, 17 Mar 2020 13:43:16 -0700
MIME-Version: 1.0
Message-ID: <20200317200537.21593-2-krish.sadhukhan@oracle.com>
Date: Tue, 17 Mar 2020 13:05:35 -0700 (PDT)
From: Krish Sadhukhan <krish.sadhukhan@oracle.com>
To: kvm@vger.kernel.org
Cc: pbonzini@redhat.com
Subject: [PATCH 1/3] kvm-unit-test: nSVM: Add alternative (v2) test format for
 nested guests
References: <20200317200537.21593-1-krish.sadhukhan@oracle.com>
In-Reply-To: <20200317200537.21593-1-krish.sadhukhan@oracle.com>
X-Mailer: git-send-email 2.20.1
X-Proofpoint-Virus-Version: vendor=nai engine=6000 definitions=9563
 signatures=668685
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 malwarescore=0
 mlxlogscore=999
 mlxscore=0 spamscore=0 bulkscore=0 adultscore=0 suspectscore=15
 phishscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.12.0-2003020000 definitions=main-2003170077
X-Proofpoint-Virus-Version: vendor=nai engine=6000 definitions=9563
 signatures=668685
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0
 lowpriorityscore=0 mlxlogscore=999
 mlxscore=0 bulkscore=0 phishscore=0 spamscore=0 suspectscore=15
 malwarescore=0 priorityscore=1501 clxscore=1015 adultscore=0
 impostorscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.12.0-2003020000 definitions=main-2003170077
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

..so that we can add tests such as VMCB consistency tests, that require
  the tests to only proceed up to the execution of the first guest (nested)
  instruction and do not require us to define all the functions that the
  current format dictates.

Signed-off-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
---
 x86/svm.c       | 75 ++++++++++++++++++++++++++++++++++++++++++---------------
 x86/svm.h       |  6 +++++
 x86/svm_tests.c |  2 ++
 3 files changed, 63 insertions(+), 20 deletions(-)

diff --git a/x86/svm.c b/x86/svm.c
index 07571e9..7ce33a6 100644
--- a/x86/svm.c
+++ b/x86/svm.c
@@ -110,9 +110,16 @@ inline void vmmcall(void)
 	asm volatile ("vmmcall" : : : "memory");
 }
 
+static test_guest_func guest_main;
+
+void test_set_guest(test_guest_func func)
+{
+	guest_main = func;
+}
+
 static void test_thunk(struct svm_test *test)
 {
-	test->guest_func(test);
+	guest_main(test);
 	vmmcall();
 }
 
@@ -191,14 +198,49 @@ struct regs get_regs(void)
 
 #define LOAD_GPR_C      SAVE_GPR_C
 
-static void test_run(struct svm_test *test, struct vmcb *vmcb)
+struct svm_test *v2_test;
+struct vmcb *vmcb;
+
+#define ASM_VMRUN_CMD                           \
+                "vmload %%rax\n\t"              \
+                "mov regs+0x80, %%r15\n\t"      \
+                "mov %%r15, 0x170(%%rax)\n\t"   \
+                "mov regs, %%r15\n\t"           \
+                "mov %%r15, 0x1f8(%%rax)\n\t"   \
+                LOAD_GPR_C                      \
+                "vmrun %%rax\n\t"               \
+                SAVE_GPR_C                      \
+                "mov 0x170(%%rax), %%r15\n\t"   \
+                "mov %%r15, regs+0x80\n\t"      \
+                "mov 0x1f8(%%rax), %%r15\n\t"   \
+                "mov %%r15, regs\n\t"           \
+                "vmsave %%rax\n\t"              \
+
+u64 guest_stack[10000];
+
+int svm_vmrun(void)
+{
+	vmcb->save.rip = (ulong)test_thunk;
+	vmcb->save.rsp = (ulong)(guest_stack + ARRAY_SIZE(guest_stack));
+	regs.rdi = (ulong)v2_test;
+
+	asm volatile (
+		ASM_VMRUN_CMD
+		:
+		: "a" (virt_to_phys(vmcb))
+		: "memory");
+
+	return (vmcb->control.exit_code);
+}
+
+static void test_run(struct svm_test *test)
 {
 	u64 vmcb_phys = virt_to_phys(vmcb);
-	u64 guest_stack[10000];
 
 	irq_disable();
 	test->vmcb = vmcb;
 	test->prepare(test);
+	guest_main = test->guest_func;
 	vmcb->save.rip = (ulong)test_thunk;
 	vmcb->save.rsp = (ulong)(guest_stack + ARRAY_SIZE(guest_stack));
 	regs.rdi = (ulong)test;
@@ -210,19 +252,7 @@ static void test_run(struct svm_test *test, struct vmcb *vmcb)
 			"sti \n\t"
 			"call *%c[PREPARE_GIF_CLEAR](%[test]) \n \t"
 			"mov %[vmcb_phys], %%rax \n\t"
-			"vmload %%rax\n\t"
-			"mov regs+0x80, %%r15\n\t"  // rflags
-			"mov %%r15, 0x170(%%rax)\n\t"
-			"mov regs, %%r15\n\t"       // rax
-			"mov %%r15, 0x1f8(%%rax)\n\t"
-			LOAD_GPR_C
-			"vmrun %%rax\n\t"
-			SAVE_GPR_C
-			"mov 0x170(%%rax), %%r15\n\t"  // rflags
-			"mov %%r15, regs+0x80\n\t"
-			"mov 0x1f8(%%rax), %%r15\n\t"  // rax
-			"mov %%r15, regs\n\t"
-			"vmsave %%rax\n\t"
+			ASM_VMRUN_CMD
 			"cli \n\t"
 			"stgi"
 			: // inputs clobbered by the guest:
@@ -303,7 +333,6 @@ extern struct svm_test svm_tests[];
 int main(int ac, char **av)
 {
 	int i = 0;
-	struct vmcb *vmcb;
 
 	setup_vm();
 	smp_init();
@@ -318,9 +347,15 @@ int main(int ac, char **av)
 	vmcb = alloc_page();
 
 	for (; svm_tests[i].name != NULL; i++) {
-		if (!svm_tests[i].supported())
-			continue;
-		test_run(&svm_tests[i], vmcb);
+		if (svm_tests[i].v2 == NULL) {
+			if (!svm_tests[i].supported())
+				continue;
+			test_run(&svm_tests[i]);
+		} else {
+			vmcb_ident(vmcb);
+			v2_test = &(svm_tests[i]);
+			svm_tests[i].v2();
+		}
 	}
 
 	return report_summary();
diff --git a/x86/svm.h b/x86/svm.h
index ccc5172..25514de 100644
--- a/x86/svm.h
+++ b/x86/svm.h
@@ -337,6 +337,8 @@ struct svm_test {
 	struct vmcb *vmcb;
 	int exits;
 	ulong scratch;
+	/* Alternative test interface. */
+	void (*v2)(void);
 };
 
 struct regs {
@@ -359,6 +361,8 @@ struct regs {
 	u64 rflags;
 };
 
+typedef void (*test_guest_func)(struct svm_test *);
+
 u64 *npt_get_pte(u64 address);
 u64 *npt_get_pde(u64 address);
 u64 *npt_get_pdpe(void);
@@ -374,5 +378,7 @@ void inc_test_stage(struct svm_test *test);
 void vmcb_ident(struct vmcb *vmcb);
 struct regs get_regs(void);
 void vmmcall(void);
+int svm_vmrun(void);
+void test_set_guest(test_guest_func func);
 
 #endif
diff --git a/x86/svm_tests.c b/x86/svm_tests.c
index 264f8de..580bce6 100644
--- a/x86/svm_tests.c
+++ b/x86/svm_tests.c
@@ -1195,6 +1195,8 @@ static bool pending_event_check_vmask(struct svm_test *test)
     return get_test_stage(test) == 2;
 }
 
+#define TEST(name) { #name, .v2 = name }
+
 struct svm_test svm_tests[] = {
     { "null", default_supported, default_prepare,
       default_prepare_gif_clear, null_test,

From patchwork Tue Mar 17 20:05:36 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Krish Sadhukhan <krish.sadhukhan@oracle.com>
X-Patchwork-Id: 11443949
Return-Path: <SRS0=C8aH=5C=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 109CD90
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 17 Mar 2020 20:44:36 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id E3CE32073E
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 17 Mar 2020 20:44:35 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (2048-bit key) header.d=oracle.com header.i=@oracle.com
 header.b="iEVjvYfM"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726814AbgCQUoe (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Tue, 17 Mar 2020 16:44:34 -0400
Received: from userp2130.oracle.com ([156.151.31.86]:39268 "EHLO
        userp2130.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726549AbgCQUod (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 17 Mar 2020 16:44:33 -0400
Received: from pps.filterd (userp2130.oracle.com [127.0.0.1])
        by userp2130.oracle.com (8.16.0.42/8.16.0.42) with SMTP id
 02HKhXul045454;
        Tue, 17 Mar 2020 20:44:30 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com;
 h=mime-version :
 message-id : date : from : to : cc : subject : references : in-reply-to :
 content-type : content-transfer-encoding; s=corp-2020-01-29;
 bh=Or6ulmNBLB/TI5MLSJANmm+PoQlvOs0NJ4zozZd8QoM=;
 b=iEVjvYfMh/9a8s7CMS/IeTvWS+55bHv4xYQEn9r2CbvQDPKJJSVJaVeE1IvCiKitY7Fr
 2cIVUasJ/tjZwI5la0xPUfHRMiLvCrUxW75fJfaaAmOriSydQ5MqT/Q1sbIeiJBgouCq
 ywSsXEVtSilAG6R4J+6mothn19ER5oQyxJWXwIY+zXQIF1tci+ooCGvqVnEyVa7WnIvL
 7/M9ZxFO383zDi0qvQj79LD9UMJz1T8qxLDjMV43rRi9J7mtrxe2++dPH1CDqDqrZ4WB
 kZJCod0WjXNMlAuZFq2pf+u7rWMG5L/D9AcDl1zqq4/aotV5Vn8XDShCeZRvTgQJ6WhL uA==
Received: from userp3020.oracle.com (userp3020.oracle.com [156.151.31.79])
        by userp2130.oracle.com with ESMTP id 2yrppr79n2-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
 verify=OK);
        Tue, 17 Mar 2020 20:44:30 +0000
Received: from pps.filterd (userp3020.oracle.com [127.0.0.1])
        by userp3020.oracle.com (8.16.0.42/8.16.0.42) with SMTP id
 02HKcQ5C148739;
        Tue, 17 Mar 2020 20:44:30 GMT
Received: from userv0122.oracle.com (userv0122.oracle.com [156.151.31.75])
        by userp3020.oracle.com with ESMTP id 2ys8yyx3b8-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
 verify=OK);
        Tue, 17 Mar 2020 20:44:29 +0000
Received: from abhmp0002.oracle.com (abhmp0002.oracle.com [141.146.116.8])
        by userv0122.oracle.com (8.14.4/8.14.4) with ESMTP id 02HKiTjq010736;
        Tue, 17 Mar 2020 20:44:29 GMT
Received: from ban25x6uut29.us.oracle.com (/10.153.73.29) by default (Oracle
 Beehive Gateway v4.0) with ESMTP ; Tue, 17 Mar 2020 13:43:17 -0700
MIME-Version: 1.0
Message-ID: <20200317200537.21593-3-krish.sadhukhan@oracle.com>
Date: Tue, 17 Mar 2020 13:05:36 -0700 (PDT)
From: Krish Sadhukhan <krish.sadhukhan@oracle.com>
To: kvm@vger.kernel.org
Cc: pbonzini@redhat.com
Subject: [PATCH 2/3] kvm-unit-test: nSVM: Add helper functions to write and
 read vmcb fields
References: <20200317200537.21593-1-krish.sadhukhan@oracle.com>
In-Reply-To: <20200317200537.21593-1-krish.sadhukhan@oracle.com>
X-Mailer: git-send-email 2.20.1
X-Proofpoint-Virus-Version: vendor=nai engine=6000 definitions=9563
 signatures=668685
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 phishscore=0
 mlxlogscore=999 mlxscore=0
 adultscore=0 bulkscore=0 malwarescore=0 spamscore=0 suspectscore=13
 classifier=spam adjust=0 reason=mlx scancount=1 engine=8.12.0-2003020000
 definitions=main-2003170077
X-Proofpoint-Virus-Version: vendor=nai engine=6000 definitions=9563
 signatures=668685
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 malwarescore=0
 bulkscore=0
 suspectscore=13 lowpriorityscore=0 phishscore=0 adultscore=0 clxscore=1015
 impostorscore=0 priorityscore=1501 spamscore=0 mlxlogscore=999 mlxscore=0
 classifier=spam adjust=0 reason=mlx scancount=1 engine=8.12.0-2003020000
 definitions=main-2003170077
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Signed-off-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
---
 x86/svm.c | 16 ++++++++++++++++
 x86/svm.h |  2 ++
 2 files changed, 18 insertions(+)

diff --git a/x86/svm.c b/x86/svm.c
index 7ce33a6..3803032 100644
--- a/x86/svm.c
+++ b/x86/svm.c
@@ -233,6 +233,22 @@ int svm_vmrun(void)
 	return (vmcb->control.exit_code);
 }
 
+u64 vmcb_save_read64(size_t offset)
+{
+	u64 *ptr = (u64 *) ((char *) vmcb + offsetof(struct vmcb, save) +
+	    offset);
+
+       return (*ptr);
+}
+
+void vmcb_save_write64(size_t offset, u64 value)
+{
+	u64 *ptr = (u64 *) ((char *) vmcb + offsetof(struct vmcb, save) +
+	    offset);
+
+       *ptr = value;
+}
+
 static void test_run(struct svm_test *test)
 {
 	u64 vmcb_phys = virt_to_phys(vmcb);
diff --git a/x86/svm.h b/x86/svm.h
index 25514de..3a6af6e 100644
--- a/x86/svm.h
+++ b/x86/svm.h
@@ -380,5 +380,7 @@ struct regs get_regs(void);
 void vmmcall(void);
 int svm_vmrun(void);
 void test_set_guest(test_guest_func func);
+u64 vmcb_save_read64(size_t offset);
+void vmcb_save_write64(size_t offset, u64 value);
 
 #endif

From patchwork Tue Mar 17 20:05:37 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Krish Sadhukhan <krish.sadhukhan@oracle.com>
X-Patchwork-Id: 11443951
Return-Path: <SRS0=C8aH=5C=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id C4E6A90
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 17 Mar 2020 20:46:35 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id A3B0E20738
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 17 Mar 2020 20:46:35 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (2048-bit key) header.d=oracle.com header.i=@oracle.com
 header.b="MoiKVGen"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726781AbgCQUqe (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Tue, 17 Mar 2020 16:46:34 -0400
Received: from aserp2120.oracle.com ([141.146.126.78]:49042 "EHLO
        aserp2120.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726733AbgCQUqe (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 17 Mar 2020 16:46:34 -0400
Received: from pps.filterd (aserp2120.oracle.com [127.0.0.1])
        by aserp2120.oracle.com (8.16.0.42/8.16.0.42) with SMTP id
 02HKivao090208;
        Tue, 17 Mar 2020 20:46:31 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com;
 h=mime-version :
 message-id : date : from : to : cc : subject : references : in-reply-to :
 content-type : content-transfer-encoding; s=corp-2020-01-29;
 bh=wgypym40+ycNzjy5zt9w0vtraCjiXfZMokD9sMd7Q/M=;
 b=MoiKVGenUj75vQMaUXudTV5qtqUdCAIauoRLsaaQzqveNDiWrqKSRafb8oVluPLx6vXf
 atV0A5GrS01cmBtiwB5d7B2kKVVXO6i1yx9KM+b1eCpNqncGTzHs35xNkxCqxf66FdnQ
 8sgzUXKyvvQJqN17DIJAlw9xUN/GAmqnBM39joBp/h2ex5h2F/RxB0u0zSdzHoZq96EE
 o0+Ll1b44y36VaRFDvprCNou8tsrcpDC+GB3ejrCilbu/9346kSie95S1cN/XFeL8Ign
 dw/WWAiBBnCXvXQv4LVNrM59AHwypfHyyh/Ke7l7MGC+18mbjW1n4Q/8pw7vXfUehsHv UA==
Received: from aserp3020.oracle.com (aserp3020.oracle.com [141.146.126.70])
        by aserp2120.oracle.com with ESMTP id 2yrq7ky6n9-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
 verify=OK);
        Tue, 17 Mar 2020 20:46:31 +0000
Received: from pps.filterd (aserp3020.oracle.com [127.0.0.1])
        by aserp3020.oracle.com (8.16.0.42/8.16.0.42) with SMTP id
 02HKbXxS004907;
        Tue, 17 Mar 2020 20:44:31 GMT
Received: from userv0121.oracle.com (userv0121.oracle.com [156.151.31.72])
        by aserp3020.oracle.com with ESMTP id 2ys92e325d-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
 verify=OK);
        Tue, 17 Mar 2020 20:44:31 +0000
Received: from abhmp0002.oracle.com (abhmp0002.oracle.com [141.146.116.8])
        by userv0121.oracle.com (8.14.4/8.13.8) with ESMTP id 02HKiUij030767;
        Tue, 17 Mar 2020 20:44:30 GMT
Received: from ban25x6uut29.us.oracle.com (/10.153.73.29) by default (Oracle
 Beehive Gateway v4.0) with ESMTP ; Tue, 17 Mar 2020 13:43:17 -0700
MIME-Version: 1.0
Message-ID: <20200317200537.21593-4-krish.sadhukhan@oracle.com>
Date: Tue, 17 Mar 2020 13:05:37 -0700 (PDT)
From: Krish Sadhukhan <krish.sadhukhan@oracle.com>
To: kvm@vger.kernel.org
Cc: pbonzini@redhat.com
Subject: [PATCH 3/3] kvm-unit-test: nSVM: Test SVME.EFER on VMRUN of nested
 guests
References: <20200317200537.21593-1-krish.sadhukhan@oracle.com>
In-Reply-To: <20200317200537.21593-1-krish.sadhukhan@oracle.com>
X-Mailer: git-send-email 2.20.1
X-Proofpoint-Virus-Version: vendor=nai engine=6000 definitions=9563
 signatures=668685
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 malwarescore=0
 mlxlogscore=996
 mlxscore=0 spamscore=0 bulkscore=0 adultscore=0 suspectscore=13
 phishscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.12.0-2003020000 definitions=main-2003170077
X-Proofpoint-Virus-Version: vendor=nai engine=6000 definitions=9563
 signatures=668685
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0
 lowpriorityscore=0 suspectscore=13
 adultscore=0 bulkscore=0 mlxlogscore=999 priorityscore=1501 clxscore=1015
 malwarescore=0 mlxscore=0 phishscore=0 impostorscore=0 spamscore=0
 classifier=spam adjust=0 reason=mlx scancount=1 engine=8.12.0-2003020000
 definitions=main-2003170077
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

According to the section "Canonicalization and Consistency Checks" in 15.5.1
in APM vol 2, setting EFER.SVME to zero is an illegal guest state and will
cause the nested guest to VMEXIT to the guest with an exit code of
VMEXIT_INVALID.

Signed-off-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
---
 x86/svm_tests.c | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/x86/svm_tests.c b/x86/svm_tests.c
index 580bce6..8de4b8e 100644
--- a/x86/svm_tests.c
+++ b/x86/svm_tests.c
@@ -1197,6 +1197,28 @@ static bool pending_event_check_vmask(struct svm_test *test)
 
 #define TEST(name) { #name, .v2 = name }
 
+/*
+ * v2 tests
+ */
+
+static void basic_guest_main(struct svm_test *test)
+{
+}
+
+static void svm_guest_state_test(void)
+{
+	size_t offset = offsetof(struct vmcb_save_area, efer);
+	u64 efer_saved = vmcb_save_read64(offset);
+	u64 efer = efer_saved;
+
+	test_set_guest(basic_guest_main);
+	report (svm_vmrun() == SVM_EXIT_VMMCALL, "EFER.SVME: %lx", efer);
+	efer &= ~EFER_SVME;
+	vmcb_save_write64(offset, efer);
+	report (svm_vmrun() == SVM_EXIT_ERR, "EFER.SVME: %lx", efer);
+	vmcb_save_write64(offset, efer_saved);
+}
+
 struct svm_test svm_tests[] = {
     { "null", default_supported, default_prepare,
       default_prepare_gif_clear, null_test,
@@ -1277,5 +1299,6 @@ struct svm_test svm_tests[] = {
       pending_event_prepare_gif_clear_vmask,
       pending_event_test_vmask, pending_event_finished_vmask,
       pending_event_check_vmask },
+    TEST(svm_guest_state_test),
     { NULL, NULL, NULL, NULL, NULL, NULL, NULL }
 };
