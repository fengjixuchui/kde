From patchwork Fri Dec  4 05:44:02 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: David Gibson <david@gibson.dropbear.id.au>
X-Patchwork-Id: 11950621
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-13.8 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,USER_AGENT_GIT autolearn=ham
	autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id D954EC433FE
	for <kvm@archiver.kernel.org>; Fri,  4 Dec 2020 05:45:35 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 7F94822581
	for <kvm@archiver.kernel.org>; Fri,  4 Dec 2020 05:45:35 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728126AbgLDFpB (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 4 Dec 2020 00:45:01 -0500
Received: from bilbo.ozlabs.org ([203.11.71.1]:37939 "EHLO ozlabs.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728066AbgLDFpA (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 4 Dec 2020 00:45:00 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
        id 4CnM8f5b6bz9sT5; Fri,  4 Dec 2020 16:44:18 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
        d=gibson.dropbear.id.au; s=201602; t=1607060658;
        bh=mxWjWsAC0dVXxgKbwgpPWZDm0iZBSpsgilWWeTLy1wA=;
        h=From:To:Cc:Subject:Date:From;
        b=VvdNlqruhi8QpiSlhHbtiZmcLN+T/iqxrEaYWyAPqXmFUKeQj43iZdpFnJU378aJq
         AjsaiHVW2SGmCfXMTOKRxdvm7exQZ1idr85upuRz1XjerQecmgliAPzW6dk5zJeTR/
         d/0Gq7iSG0cFDUmkMNUyMSgSdsgWxSXB75PuKVag=
From: David Gibson <david@gibson.dropbear.id.au>
To: pair@us.ibm.com, pbonzini@redhat.com, frankja@linux.ibm.com,
        brijesh.singh@amd.com, dgilbert@redhat.com, qemu-devel@nongnu.org
Cc: Eduardo Habkost <ehabkost@redhat.com>, qemu-ppc@nongnu.org,
        rth@twiddle.net, thuth@redhat.com, berrange@redhat.com,
        mdroth@linux.vnet.ibm.com, Marcelo Tosatti <mtosatti@redhat.com>,
        "Michael S. Tsirkin" <mst@redhat.com>,
        Marcel Apfelbaum <marcel.apfelbaum@gmail.com>,
        david@redhat.com, Richard Henderson <richard.henderson@linaro.org>,
        borntraeger@de.ibm.com, David Gibson <david@gibson.dropbear.id.au>,
        cohuck@redhat.com, kvm@vger.kernel.org, qemu-s390x@nongnu.org,
        pasic@linux.ibm.com
Subject: [for-6.0 v5 00/13] Generalize memory encryption models
Date: Fri,  4 Dec 2020 16:44:02 +1100
Message-Id: <20201204054415.579042-1-david@gibson.dropbear.id.au>
X-Mailer: git-send-email 2.28.0
MIME-Version: 1.0
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

A number of hardware platforms are implementing mechanisms whereby the
hypervisor does not have unfettered access to guest memory, in order
to mitigate the security impact of a compromised hypervisor.

AMD's SEV implements this with in-cpu memory encryption, and Intel has
its own memory encryption mechanism.  POWER has an upcoming mechanism
to accomplish this in a different way, using a new memory protection
level plus a small trusted ultravisor.  s390 also has a protected
execution environment.

The current code (committed or draft) for these features has each
platform's version configured entirely differently.  That doesn't seem
ideal for users, or particularly for management layers.

AMD SEV introduces a notionally generic machine option
"machine-encryption", but it doesn't actually cover any cases other
than SEV.

This series is a proposal to at least partially unify configuration
for these mechanisms, by renaming and generalizing AMD's
"memory-encryption" property.  It is replaced by a
"securable-guest-memory" property pointing to a platform specific
object which configures and manages the specific details.

Changes since v4:
 * Renamed from "host trust limitation" to "securable guest memory",
   which I think is marginally more descriptive
 * Re-organized initialization, because the previous model called at
   kvm_init didn't work for s390
* Assorted fixes to the s390 implementation; rudimentary testing
  (gitlab CI) only
Changes since v3:
 * Rebased
 * Added first cut at handling of s390 protected virtualization
Changes since RFCv2:
 * Rebased
 * Removed preliminary SEV cleanups (they've been merged)
 * Changed name to "host trust limitation"
 * Added migration blocker to the PEF code (based on SEV's version)
Changes since RFCv1:
 * Rebased
 * Fixed some errors pointed out by Dave Gilbert

David Gibson (12):
  securable guest memory: Introduce new securable guest memory base
    class
  securable guest memory: Handle memory encryption via interface
  securable guest memory: Move side effect out of
    machine_set_memory_encryption()
  securable guest memory: Rework the "memory-encryption" property
  securable guest memory: Decouple kvm_memcrypt_*() helpers from KVM
  sev: Add Error ** to sev_kvm_init()
  securable guest memory: Introduce sgm "ready" flag
  securable guest memory: Move SEV initialization into arch specific
    code
  spapr: Add PEF based securable guest memory
  spapr: PEF: prevent migration
  securable guest memory: Alter virtio default properties for protected
    guests
  s390: Recognize securable-guest-memory option

Greg Kurz (1):
  qom: Allow optional sugar props

 accel/kvm/kvm-all.c                   |  39 +------
 accel/kvm/sev-stub.c                  |  10 +-
 accel/stubs/kvm-stub.c                |  10 --
 backends/meson.build                  |   1 +
 backends/securable-guest-memory.c     |  30 +++++
 hw/core/machine.c                     |  71 ++++++++++--
 hw/i386/pc_sysfw.c                    |   6 +-
 hw/ppc/meson.build                    |   1 +
 hw/ppc/pef.c                          | 124 +++++++++++++++++++++
 hw/ppc/spapr.c                        |  10 ++
 hw/s390x/pv.c                         |  58 ++++++++++
 include/exec/securable-guest-memory.h |  86 +++++++++++++++
 include/hw/boards.h                   |   2 +-
 include/hw/ppc/pef.h                  |  26 +++++
 include/hw/s390x/pv.h                 |   1 +
 include/qemu/typedefs.h               |   1 +
 include/qom/object.h                  |   3 +-
 include/sysemu/kvm.h                  |  17 ---
 include/sysemu/sev.h                  |   5 +-
 qom/object.c                          |   4 +-
 softmmu/vl.c                          |  16 ++-
 target/i386/kvm.c                     |  12 ++
 target/i386/monitor.c                 |   1 -
 target/i386/sev.c                     | 153 ++++++++++++--------------
 target/ppc/kvm.c                      |  18 ---
 target/ppc/kvm_ppc.h                  |   6 -
 target/s390x/kvm.c                    |   3 +
 27 files changed, 510 insertions(+), 204 deletions(-)
 create mode 100644 backends/securable-guest-memory.c
 create mode 100644 hw/ppc/pef.c
 create mode 100644 include/exec/securable-guest-memory.h
 create mode 100644 include/hw/ppc/pef.h
