From patchwork Mon Apr 12 22:20:48 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sean Christopherson <seanjc@google.com>
X-Patchwork-Id: 12198889
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-26.3 required=3.0 tests=BAYES_00,DKIMWL_WL_MED,
	DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,
	INCLUDES_CR_TRAILER,INCLUDES_PATCH,MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,
	USER_AGENT_GIT,USER_IN_DEF_DKIM_WL autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id D36D3C433ED
	for <kvm@archiver.kernel.org>; Mon, 12 Apr 2021 22:20:58 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id B179E6128E
	for <kvm@archiver.kernel.org>; Mon, 12 Apr 2021 22:20:58 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1343685AbhDLWVQ (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Mon, 12 Apr 2021 18:21:16 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:45630 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1343666AbhDLWVP (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 12 Apr 2021 18:21:15 -0400
Received: from mail-yb1-xb49.google.com (mail-yb1-xb49.google.com
 [IPv6:2607:f8b0:4864:20::b49])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id EE2C0C061574
        for <kvm@vger.kernel.org>; Mon, 12 Apr 2021 15:20:56 -0700 (PDT)
Received: by mail-yb1-xb49.google.com with SMTP id v6so14111079ybk.9
        for <kvm@vger.kernel.org>; Mon, 12 Apr 2021 15:20:56 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=reply-to:date:in-reply-to:message-id:mime-version:references
         :subject:from:to:cc;
        bh=CWYLK1Nq956lXK6/CZyqJrTCFyW3FBgUwDisoyLnoZE=;
        b=JAJOXTeFhWLgvXICg+LDvObGR5FL/FNB/jnOfdao44BEDtwrf2fTtD5Z/B54TyJuvX
         f1m6IQUxQ2aKUsN94lnQWCqu0sUeG96gXdlcegV5bn/XXC3dw3nDZfING2MtRD75cZ3w
         qYyHV/nZZ03WqXdRKUz6oVzcUTiXUdZck/6yTI+lOjFyA00EjBqJqZSY4p5I8IxXTRnU
         45PFjbzpcYriIeK1vtUmjM0IR6Rl2fGlxE4tJGMzBCLeyTQZldelPq1wlsGTwXtlLl8w
         Yc6sEDtkNLqS+krwgsLIh3nByT9Vv94t8B64o/uyFxDIA2+o2QRMV1rHA/NbJH8WY/7E
         MlvQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:reply-to:date:in-reply-to:message-id
         :mime-version:references:subject:from:to:cc;
        bh=CWYLK1Nq956lXK6/CZyqJrTCFyW3FBgUwDisoyLnoZE=;
        b=LL67C6brFJVCh6AxVHkPF60t/qYE+VC7vKQmoIq7/yjsbTAVMr6CnDgn8lD1Qw2+Ce
         340OnpNSSmDXLLLfZrAYp9QPV+i4VoArvzJcW0iabmBXPioXxE8R0WzfS4Un1+qws4oS
         Z6+R1PI0d/YZOUb/47//iTkZYm0zuvwqDlZNbHImgUBuunu535pxCnCYMvJ3NDqXCpA1
         clMTtJV7u8iwrLbIhYQBuDJL4Allevt7qQJ+rmbTedWua0CktLBC9q9G0a5PAUVihDv+
         lsk0WvZExFfOIVQ7vnOSZUBhibG0dq3JHYTawcyRwFocg8hhGCVi3peEJadZytRHgZwc
         SIrA==
X-Gm-Message-State: AOAM533xQAU3W5o7UhxpAwS4YoyKQN9RV8r+YFvT/Vbbkzi8A9/DafVr
        6QI2V7w1ewC31h36/2rPNJW4GuGQY4g=
X-Google-Smtp-Source: 
 ABdhPJwIxmb+XLWgx2RW89d77jd3AkTM4I4lGPEqIzhsdt9VwOq9Ll4tWQyfrDSEqTTpMdlUCP0VUNzutpU=
X-Received: from seanjc798194.pdx.corp.google.com
 ([2620:15c:f:10:f031:9c1c:56c7:c3bf])
 (user=seanjc job=sendgmr) by 2002:a25:cc3:: with SMTP id
 186mr40287194ybm.178.1618266056256;
 Mon, 12 Apr 2021 15:20:56 -0700 (PDT)
Reply-To: Sean Christopherson <seanjc@google.com>
Date: Mon, 12 Apr 2021 15:20:48 -0700
In-Reply-To: <20210412222050.876100-1-seanjc@google.com>
Message-Id: <20210412222050.876100-2-seanjc@google.com>
Mime-Version: 1.0
References: <20210412222050.876100-1-seanjc@google.com>
X-Mailer: git-send-email 2.31.1.295.g9ea45b61b8-goog
Subject: [PATCH 1/3] KVM: Destroy I/O bus devices on unregister failure
 _after_ sync'ing SRCU
From: Sean Christopherson <seanjc@google.com>
To: Paolo Bonzini <pbonzini@redhat.com>
Cc: kvm@vger.kernel.org, linux-kernel@vger.kernel.org,
        Sean Christopherson <seanjc@google.com>,
        Hao Sun <sunhao.th@gmail.com>
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

If allocating a new instance of an I/O bus fails when unregistering a
device, wait to destroy the device until after all readers are guaranteed
to see the new null bus.  Destroying devices before the bus is nullified
could lead to use-after-free since readers expect the devices on their
reference of the bus to remain valid.

Fixes: f65886606c2d ("KVM: fix memory leak in kvm_io_bus_unregister_dev()")
Cc: stable@vger.kernel.org
Signed-off-by: Sean Christopherson <seanjc@google.com>
---
 virt/kvm/kvm_main.c | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index 383df23514b9..d6e2b570e430 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -4511,7 +4511,13 @@ void kvm_io_bus_unregister_dev(struct kvm *kvm, enum kvm_bus bus_idx,
 		new_bus->dev_count--;
 		memcpy(new_bus->range + i, bus->range + i + 1,
 				flex_array_size(new_bus, range, new_bus->dev_count - i));
-	} else {
+	}
+
+	rcu_assign_pointer(kvm->buses[bus_idx], new_bus);
+	synchronize_srcu_expedited(&kvm->srcu);
+
+	/* Destroy the old bus _after_ installing the (null) bus. */
+	if (!new_bus) {
 		pr_err("kvm: failed to shrink bus, removing it completely\n");
 		for (j = 0; j < bus->dev_count; j++) {
 			if (j == i)
@@ -4520,8 +4526,6 @@ void kvm_io_bus_unregister_dev(struct kvm *kvm, enum kvm_bus bus_idx,
 		}
 	}
 
-	rcu_assign_pointer(kvm->buses[bus_idx], new_bus);
-	synchronize_srcu_expedited(&kvm->srcu);
 	kfree(bus);
 	return;
 }

From patchwork Mon Apr 12 22:20:49 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sean Christopherson <seanjc@google.com>
X-Patchwork-Id: 12198891
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-26.3 required=3.0 tests=BAYES_00,DKIMWL_WL_MED,
	DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,
	INCLUDES_CR_TRAILER,INCLUDES_PATCH,MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,
	USER_AGENT_GIT,USER_IN_DEF_DKIM_WL autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 15255C43460
	for <kvm@archiver.kernel.org>; Mon, 12 Apr 2021 22:21:01 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id EDC49613AA
	for <kvm@archiver.kernel.org>; Mon, 12 Apr 2021 22:21:00 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1343698AbhDLWVS (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Mon, 12 Apr 2021 18:21:18 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:45644 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1343679AbhDLWVR (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 12 Apr 2021 18:21:17 -0400
Received: from mail-qv1-xf4a.google.com (mail-qv1-xf4a.google.com
 [IPv6:2607:f8b0:4864:20::f4a])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 64FB6C061574
        for <kvm@vger.kernel.org>; Mon, 12 Apr 2021 15:20:59 -0700 (PDT)
Received: by mail-qv1-xf4a.google.com with SMTP id p5so8900607qvr.4
        for <kvm@vger.kernel.org>; Mon, 12 Apr 2021 15:20:59 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=reply-to:date:in-reply-to:message-id:mime-version:references
         :subject:from:to:cc;
        bh=AiiJgkOyq0rWpmswuec6JylDPoH1QjeGXsG4T5RZ06k=;
        b=uszHBCBaNHKQP1m7HiJLFD+M4wLkbuFcN+V2jwDIwZ0mf4GCldT0h15Eeg49qi+EYm
         8ntYGr+G1VBZUnuioRQqsH3QZGHHW6qo5fjyEST1bxDMO5dIYe5JOFV+EN6TqZRTRW1X
         NDfAjH6lNpKE73C/Q+vxZUAMjTgIQQmx5wHz7vAb97lPssVQ+hGC7DmatcUZFl9Vm8Mq
         31x2jxE3nvkMb7FbNYkQT4h92ApQ2+56XkNMk9V3EnL058CCIfabZBS3ZEaLUgN0+HI4
         YRNteG5zWfNQy08jlwDLNcCmMKcCcV6tOLd1G5thZye92Uyvh0wIG7MvqlHrr8cFQM/p
         oAQA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:reply-to:date:in-reply-to:message-id
         :mime-version:references:subject:from:to:cc;
        bh=AiiJgkOyq0rWpmswuec6JylDPoH1QjeGXsG4T5RZ06k=;
        b=dQZb3nSqn+rOmgd8Xkyoq7JmBVWq/KUp1dsQ98N2jAaZte0crxVj0VhzR1G5JpC3xz
         mYVlepr2OChfOSRZrT+w92cLvmvW8a1y5HvSVjvJt1mg4XX3F9A+2XFqjnXCFHr92N2s
         esG7WNnPe9d/kwmwG638y6fqonmJZRSR0y7Uxi9YCyYhGZMvkjBslzoBljwFbcdO3JIN
         P9mfK+Y5Ol6P/rLDrp6VbWyX8xx8mU7lDbugnWuuV36yCRh4KWTKic0+BPv3f7OOblCB
         gancS5H141tnevpHtIwC+2bWYHV4io1Dp3LLGBtRLjky1AfUdIgfFb4OdYKcL3AhhLhI
         aQaQ==
X-Gm-Message-State: AOAM531lzlEM5elys/LHXrOfWNjn0rEovMSxm4gG9QjjjTNcsjskDkFl
        1KYr2wJm39aHtVW9hfcdZWYEsNirT58=
X-Google-Smtp-Source: 
 ABdhPJy6M0pK2CZO3TBQvo0iOU9v0K7uinLll0rrP/TGV+6xSj/uck/oQM941PvaLNuNP+/ZmswYP/1PxXU=
X-Received: from seanjc798194.pdx.corp.google.com
 ([2620:15c:f:10:f031:9c1c:56c7:c3bf])
 (user=seanjc job=sendgmr) by 2002:a0c:9b82:: with SMTP id
 o2mr30338012qve.47.1618266058587;
 Mon, 12 Apr 2021 15:20:58 -0700 (PDT)
Reply-To: Sean Christopherson <seanjc@google.com>
Date: Mon, 12 Apr 2021 15:20:49 -0700
In-Reply-To: <20210412222050.876100-1-seanjc@google.com>
Message-Id: <20210412222050.876100-3-seanjc@google.com>
Mime-Version: 1.0
References: <20210412222050.876100-1-seanjc@google.com>
X-Mailer: git-send-email 2.31.1.295.g9ea45b61b8-goog
Subject: [PATCH 2/3] KVM: Stop looking for coalesced MMIO zones if the bus is
 destroyed
From: Sean Christopherson <seanjc@google.com>
To: Paolo Bonzini <pbonzini@redhat.com>
Cc: kvm@vger.kernel.org, linux-kernel@vger.kernel.org,
        Sean Christopherson <seanjc@google.com>,
        Hao Sun <sunhao.th@gmail.com>
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Abort the walk of coalesced MMIO zones if kvm_io_bus_unregister_dev()
fails to allocate memory for the new instance of the bus.  If it can't
instantiate a new bus, unregister_dev() destroys all devices _except_ the
target device.   But, it doesn't tell the caller that it obliterated the
bus and invoked the destructor for all devices that were on the bus.  In
the coalesced MMIO case, this can result in a deleted list entry
dereference due to attempting to continue iterating on coalesced_zones
after future entries (in the walk) have been deleted.

Opportunistically add curly braces to the for-loop, which encompasses
many lines but sneaks by without braces due to the guts being a single
if statement.

Fixes: f65886606c2d ("KVM: fix memory leak in kvm_io_bus_unregister_dev()")
Cc: stable@vger.kernel.org
Reported-by: Hao Sun <sunhao.th@gmail.com>
Signed-off-by: Sean Christopherson <seanjc@google.com>
---
 include/linux/kvm_host.h  |  4 ++--
 virt/kvm/coalesced_mmio.c | 19 +++++++++++++++++--
 virt/kvm/kvm_main.c       | 10 +++++-----
 3 files changed, 24 insertions(+), 9 deletions(-)

diff --git a/include/linux/kvm_host.h b/include/linux/kvm_host.h
index 1b65e7204344..99dccea4293c 100644
--- a/include/linux/kvm_host.h
+++ b/include/linux/kvm_host.h
@@ -192,8 +192,8 @@ int kvm_io_bus_read(struct kvm_vcpu *vcpu, enum kvm_bus bus_idx, gpa_t addr,
 		    int len, void *val);
 int kvm_io_bus_register_dev(struct kvm *kvm, enum kvm_bus bus_idx, gpa_t addr,
 			    int len, struct kvm_io_device *dev);
-void kvm_io_bus_unregister_dev(struct kvm *kvm, enum kvm_bus bus_idx,
-			       struct kvm_io_device *dev);
+int kvm_io_bus_unregister_dev(struct kvm *kvm, enum kvm_bus bus_idx,
+			      struct kvm_io_device *dev);
 struct kvm_io_device *kvm_io_bus_get_dev(struct kvm *kvm, enum kvm_bus bus_idx,
 					 gpa_t addr);
 
diff --git a/virt/kvm/coalesced_mmio.c b/virt/kvm/coalesced_mmio.c
index 62bd908ecd58..f08f5e82460b 100644
--- a/virt/kvm/coalesced_mmio.c
+++ b/virt/kvm/coalesced_mmio.c
@@ -174,21 +174,36 @@ int kvm_vm_ioctl_unregister_coalesced_mmio(struct kvm *kvm,
 					   struct kvm_coalesced_mmio_zone *zone)
 {
 	struct kvm_coalesced_mmio_dev *dev, *tmp;
+	int r;
 
 	if (zone->pio != 1 && zone->pio != 0)
 		return -EINVAL;
 
 	mutex_lock(&kvm->slots_lock);
 
-	list_for_each_entry_safe(dev, tmp, &kvm->coalesced_zones, list)
+	list_for_each_entry_safe(dev, tmp, &kvm->coalesced_zones, list) {
 		if (zone->pio == dev->zone.pio &&
 		    coalesced_mmio_in_range(dev, zone->addr, zone->size)) {
-			kvm_io_bus_unregister_dev(kvm,
+			r = kvm_io_bus_unregister_dev(kvm,
 				zone->pio ? KVM_PIO_BUS : KVM_MMIO_BUS, &dev->dev);
 			kvm_iodevice_destructor(&dev->dev);
+
+			/*
+			 * On failure, unregister destroys all devices on the
+			 * bus _except_ the target device, i.e. coalesced_zones
+			 * has been modified.  No need to restart the walk as
+			 * there aren't any zones left.
+			 */
+			if (r)
+				break;
 		}
+	}
 
 	mutex_unlock(&kvm->slots_lock);
 
+	/*
+	 * Ignore the result of kvm_io_bus_unregister_dev(), from userspace's
+	 * perspective, the coalesced MMIO is most definitely unregistered.
+	 */
 	return 0;
 }
diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index d6e2b570e430..ab1fa6f92c82 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -4486,15 +4486,15 @@ int kvm_io_bus_register_dev(struct kvm *kvm, enum kvm_bus bus_idx, gpa_t addr,
 }
 
 /* Caller must hold slots_lock. */
-void kvm_io_bus_unregister_dev(struct kvm *kvm, enum kvm_bus bus_idx,
-			       struct kvm_io_device *dev)
+int kvm_io_bus_unregister_dev(struct kvm *kvm, enum kvm_bus bus_idx,
+			      struct kvm_io_device *dev)
 {
 	int i, j;
 	struct kvm_io_bus *new_bus, *bus;
 
 	bus = kvm_get_bus(kvm, bus_idx);
 	if (!bus)
-		return;
+		return 0;
 
 	for (i = 0; i < bus->dev_count; i++)
 		if (bus->range[i].dev == dev) {
@@ -4502,7 +4502,7 @@ void kvm_io_bus_unregister_dev(struct kvm *kvm, enum kvm_bus bus_idx,
 		}
 
 	if (i == bus->dev_count)
-		return;
+		return 0;
 
 	new_bus = kmalloc(struct_size(bus, range, bus->dev_count - 1),
 			  GFP_KERNEL_ACCOUNT);
@@ -4527,7 +4527,7 @@ void kvm_io_bus_unregister_dev(struct kvm *kvm, enum kvm_bus bus_idx,
 	}
 
 	kfree(bus);
-	return;
+	return new_bus ? 0 : -ENOMEM;
 }
 
 struct kvm_io_device *kvm_io_bus_get_dev(struct kvm *kvm, enum kvm_bus bus_idx,

From patchwork Mon Apr 12 22:20:50 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sean Christopherson <seanjc@google.com>
X-Patchwork-Id: 12198893
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-26.3 required=3.0 tests=BAYES_00,DKIMWL_WL_MED,
	DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,
	INCLUDES_CR_TRAILER,INCLUDES_PATCH,MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,
	USER_AGENT_GIT,USER_IN_DEF_DKIM_WL autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id B993AC433B4
	for <kvm@archiver.kernel.org>; Mon, 12 Apr 2021 22:21:05 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 9E9C76128E
	for <kvm@archiver.kernel.org>; Mon, 12 Apr 2021 22:21:05 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1343710AbhDLWVW (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Mon, 12 Apr 2021 18:21:22 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:45658 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1343692AbhDLWVU (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 12 Apr 2021 18:21:20 -0400
Received: from mail-yb1-xb4a.google.com (mail-yb1-xb4a.google.com
 [IPv6:2607:f8b0:4864:20::b4a])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id A0C0CC061756
        for <kvm@vger.kernel.org>; Mon, 12 Apr 2021 15:21:01 -0700 (PDT)
Received: by mail-yb1-xb4a.google.com with SMTP id d1so14056429ybj.15
        for <kvm@vger.kernel.org>; Mon, 12 Apr 2021 15:21:01 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=reply-to:date:in-reply-to:message-id:mime-version:references
         :subject:from:to:cc;
        bh=ESswuqujHLR9RwIvnBx5XZH5Vn+MJ5i3MkDtDukO9o0=;
        b=D1tTFUeCdmwluFUVTzpGwF3ju7lYDhrtdS9PuO6ZgTVDdac6bd3h6POmsudUhkQ09r
         eX+aoQ0wza9Jf/Pn0Qb/hFavoSCKVNrq4aaMzxcLGdzslfWx7cTII/CCjZTQEbztPi8o
         qPG9pePkOtNftszj1a3Jb1eTu++jck2aBPxIK0Yi8q5Zj9VXSKOd9ICfJSQ/1BOvycRW
         OFPRE7Mrwf0PrU5bTE3FjsCPN7UpcZmtvnzRraAgf+vjEanLqGBDlMdlPsTouuJ8T4Bc
         qngB/tersKAYsRm6t35MX9LJ21hhzAGHqjLVM5pFzdUA9sO8J5bOF8QFYg54izbwh1Wf
         9l8g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:reply-to:date:in-reply-to:message-id
         :mime-version:references:subject:from:to:cc;
        bh=ESswuqujHLR9RwIvnBx5XZH5Vn+MJ5i3MkDtDukO9o0=;
        b=N4W5BeuCkX/MKSeHlcYyJHU9e+VPrIPxw/SREcWOtMP0VBRkC1XyeYxILsD+ccPNVy
         D1E68vhudvIidXp710x4/mjMYvS3wLgpi8n+E+qkq7gnA6CgCjkrVVu6cg9ntUeXGzhd
         nxJvOhCI5i7gZfHFqxmk1bQ3XrR6PYYtNWZnPHmPtBDl6DyFDA20bhgEFUDtQ4BOi3T7
         cM1n6PCTWeqKPXFCjtEh7LE64kop6LXnUX9bZmaZlHTGsfPX9Ai8Mx91bRQ8fayH1YfW
         F+Q2WjcYKlyXWUEk0AIe+3FpfLJMQzv+m3lrZ9agAG/K+hEokX8iITLHNtMNz1urgyLu
         1KiA==
X-Gm-Message-State: AOAM533Fva4+xyNxrAazu3vKECRvPVPAiLPmsKSFNIUoJyhM/zN07XWa
        /IW43IBV7LgsLe4qONRRR8ALVT67s/A=
X-Google-Smtp-Source: 
 ABdhPJy/vKp9lF3Y26AoMcKefOoc3C9FcpTbnn6rqDLQhJGEO8gZT+3DXRr2wOaM7WtseZ7zIBoiBj9XETU=
X-Received: from seanjc798194.pdx.corp.google.com
 ([2620:15c:f:10:f031:9c1c:56c7:c3bf])
 (user=seanjc job=sendgmr) by 2002:a25:4154:: with SMTP id
 o81mr12685872yba.69.1618266060926;
 Mon, 12 Apr 2021 15:21:00 -0700 (PDT)
Reply-To: Sean Christopherson <seanjc@google.com>
Date: Mon, 12 Apr 2021 15:20:50 -0700
In-Reply-To: <20210412222050.876100-1-seanjc@google.com>
Message-Id: <20210412222050.876100-4-seanjc@google.com>
Mime-Version: 1.0
References: <20210412222050.876100-1-seanjc@google.com>
X-Mailer: git-send-email 2.31.1.295.g9ea45b61b8-goog
Subject: [PATCH 3/3] KVM: Add proper lockdep assertion in I/O bus unregister
From: Sean Christopherson <seanjc@google.com>
To: Paolo Bonzini <pbonzini@redhat.com>
Cc: kvm@vger.kernel.org, linux-kernel@vger.kernel.org,
        Sean Christopherson <seanjc@google.com>,
        Hao Sun <sunhao.th@gmail.com>
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Convert a comment above kvm_io_bus_unregister_dev() into an actual
lockdep assertion, and opportunistically add curly braces to a multi-line
for-loop.

Signed-off-by: Sean Christopherson <seanjc@google.com>
---
 virt/kvm/kvm_main.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index ab1fa6f92c82..ccc2ef1dbdda 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -4485,21 +4485,23 @@ int kvm_io_bus_register_dev(struct kvm *kvm, enum kvm_bus bus_idx, gpa_t addr,
 	return 0;
 }
 
-/* Caller must hold slots_lock. */
 int kvm_io_bus_unregister_dev(struct kvm *kvm, enum kvm_bus bus_idx,
 			      struct kvm_io_device *dev)
 {
 	int i, j;
 	struct kvm_io_bus *new_bus, *bus;
 
+	lockdep_assert_held(&kvm->slots_lock);
+
 	bus = kvm_get_bus(kvm, bus_idx);
 	if (!bus)
 		return 0;
 
-	for (i = 0; i < bus->dev_count; i++)
+	for (i = 0; i < bus->dev_count; i++) {
 		if (bus->range[i].dev == dev) {
 			break;
 		}
+	}
 
 	if (i == bus->dev_count)
 		return 0;
