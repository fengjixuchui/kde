From patchwork Fri Apr 30 12:15:57 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233169
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 81560C433B4
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:16:58 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 2A04B61405
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:16:58 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232034AbhD3MRo (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:17:44 -0400
Received: from mail-dm6nam12on2089.outbound.protection.outlook.com
 ([40.107.243.89]:57920
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S231766AbhD3MRn (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:17:43 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=f1Rzn9WahEob3qGaCdHcXyNd4Y+jd2dIDUxf4U6Di5RYHFCjrybS+hLksd3aaFxMoTyoJxcYSVXfOdoEHneKBli8cZnWTc5285z+3gNZ8FopTPxhVWAw9dRKBgAWHp0v/t9BKISBVjP8sUPSLakK8gxR3uGNODLEHhsg3Et5Nqv9HT1lXimfCgEyfHKOF6zFxUeDAvtK62Los1Swy/q5EQX0HjWRyoLgNdLmGlqUjziZjO8RqXKqMOB835o8ki3X5tOiXl9/ESMWvmnga1/45NeacWMGnzP2nKzCK+DTdEI0xwuy9jKn+Zm1WBgbuLoWe1vRfiEelzjYMR9vqA8k/w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=FSqjj79y9azdiLTw3J18Jb92HW5TNRtkirg8lS4kcv4=;
 b=nJTUtxS3+aT7KI6HxHXpdEPgGB3uj9LP+wV9VIGN+wz0fNaVl1s8+v0AEImcTTA6rWJ530rta/rXGhASWo6iO7CDFh8+QfaieQgzdBv3JULcgEzvKjs/XRoJp8m7C4OhtlM7vvwruTlihaJQ7JM1Nm5dOi0TOw9/qllyhSyuzPsz9ppRkCzu53pSQrAk6axF5GyoNy0rYAwlF8SQe7dFbhQUCPWVrtwujho5KuTnRAdbV3x2u3E30QePbPVDR9epu894kC/iw3SgCYSoIta7BkC+dA9VyFl7WAWYMvEsIfAMdla1mvWJ5dBWBSVA3pRlW48tB8t6/hf5ILsK+wJeFg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=FSqjj79y9azdiLTw3J18Jb92HW5TNRtkirg8lS4kcv4=;
 b=fN2yiPAZegR1bAjJqv0bu8eHFjk1eRgbuEXsgn63BeliKGsp1jyEyqJdZmITXNh9XxajWkZOEXELWHkHn/RyTsxPfjrQObr8ISkLg3aYm0HBB0Q28PyIwHxFUc7mlT33uH+5G1zrgDmnkpLL/I16bYnzEm5hWAl6kclzNlowai8=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4431.namprd12.prod.outlook.com (2603:10b6:806:95::11) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:16:48 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:16:48 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 01/20] x86/sev: Define the GHCB MSR protocol for
 AP reset hold
Date: Fri, 30 Apr 2021 07:15:57 -0500
Message-Id: <20210430121616.2295-2-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:47 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 9c779ec0-efc2-4536-4761-08d90bd1d405
X-MS-TrafficTypeDiagnostic: SA0PR12MB4431:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB443140CB2B8B87242B6EEB41E55E9@SA0PR12MB4431.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:3383;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 a4IXNfZ2kJrjBLR+hgx9Wse5C1E2io/tOoqsAm1AsYNwWvdNDEgGAPUdHtno1nF9hIRfrI6dAYewrDeml8DK25oDQEauRU0DH+exmoHSE+6LTM9yPOWr0DmVOS0tmtcquWCSVsRZmX4D2mB2z4TKHvmgyTDx40QhRlCSJH8AGHKUtQe4iuB2eKOpzZzzvRJasZ2AlETsQaIfxNaYImjHNtbQPWZJvwX59mwDwbD6wxfhoV+V6iHqHN2ZNv76/1sI/Y5CLZq65ekGZ3JKRFx0JrkvvjnckZJLs15Nk4BAq3/byfXLKK35GHlVJTtje2vna7ePIj0Xqt3dm5/oS6MhIR0f8DduI8nT3KnPUazvakWzsJ/tBs/f/afvZ3pvf8xD8/e60dUETxkLlnx8dZccPGLbluFQhQMSABG2zo99qop1A1Hk5Jgu5z0gbv2RB4jtnT6I5dyY4WHlkcht2QPVkHCYQyeauCuQpMMYpRrKijiDt227uQYVFuODRluzpw2XDm2qnkITZ3zykmoEbB0sD2bEAJd5hOthQxn/rxnOGqsmygIipd/bh0Bdo1X2j6ZKnnyEkIybISOuT6AErxJqgsmUP+WwObk9Jb9esxQ0sLbGzuVsClvtLGXu/SDcR77VMrwYHk5dJqLQHxAfdBHzhQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(136003)(376002)(346002)(366004)(39860400002)(396003)(6666004)(2906002)(38100700002)(8936002)(4744005)(316002)(5660300002)(38350700002)(478600001)(1076003)(16526019)(26005)(7696005)(7416002)(186003)(8676002)(52116002)(4326008)(36756003)(956004)(6486002)(2616005)(66946007)(66476007)(66556008)(86362001)(44832011);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 +IW/lbas180EnTIhXa3Gf1CTBIVtXI1gZXAolSreE3DVSNbO/c7U4RD69HQx0W9yhPyPbSZSBj4qHg8fwNnA0i5ZvNEyBmEplnV20+oE9UAucCu6R87sLpHugWTXDF2m+3Fgt+UDaay+RwcacFKn9uYZvrXVxYvNIu2SEuQkFB62rrqP6mwQFyVm4U/nYJGzIGHNj04fO69rsXb+3eEVABuvnMnnc2R6QqkzvPdkg8n5nlKv4F9c/xBWYz/ZLpT3SXkByjsNBd5vChi4y6BJ+MebPKHEBTqfS1ZX5IDfaY8TvAbVExHh+c6lFn98Hinvuhtzpr95YaQjditYhG5y6ySprTMfpGh08gfLrveGI77yvYSwFuZ6W/diabrSgk0H9Z4AkPD2CAiS4WfsboU9pi4+wkRynlHJG8vYqA4lI9SFUOFfQPkQ64Ht93+TWdFIu7gU4eVXMcpY36kn2u60FicxelyA8u6yTdpYE+ox7mKModjCZWmPBTbpisgV1oHwNjELbugSvzXz8+eJeN1j3lH5BDImwhdKq78UrT9o/37+BRe13DJ2euktJ2xZ3pVrLoxD08oOhha6vhjnoqvgwt8UJeFsJzHaRgeVtVlarwEGLBj2GMrY2+sT0dQ3ojVAqLXi8UUSDVI9o0YVPaeFj6UhuTO3Eham8LVyAaAa6FfFdCu2UyW6WHIkOh1lQzVh5c62cifuNdkb/rvVKQq5disoFrBMUL9kqkLVTVvW4dLUitMBp/BhEqyPXZA6E/oZ5OsTZYCLzp0o59qWA0ssiYUCPBogOt7qUfAob3oYJ9sdDW+JAnjVXCVOKyYihAoG4Q21NyT1OL2ijP8KukglP1uhF4O0c7onFwiktDn5GkO+vroKpGtMolimSkoR3EjaTAEXKkxcvLvBWB8KdAbbCCYEY3ZHo01PBAIOgQVYeirxPb4O8ZQYhHX9LRad5N6CfcbEzmLVM3gGYXLGeIWEoez8pwRIGkmT6b1RbYhbLEXeMT5tqtgWyop2oDrS4FuQWH71tqo3cR6lccLbzPytwOK3Krb9Q0uHzOl6K7t+hNOybZYt17A/hFMsphPuYSjLBrRE30RgAwQ++A/YAPbLV/d3xHlEPWwkJh/khobxreHgxBazQCfCxB9t22o0E5k0S138567+tpD7AQfbFClEdwLaZLvffXnWD2H+aSa1vj+Aitbr3458U7Da0aS6I50PjRtzFdW/tTw+o2gDRZo5jHGZrNhebHbl/gt3q0/347/Gq3eTQMmMdxb24geND2vLIHApjo6CG1delEmSShCqTM0eTERYF4SW2u4gabvb9EH+BoV+QQvnxRWeQbXdreit
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 9c779ec0-efc2-4536-4761-08d90bd1d405
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:48.5010
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 FJ4sPVsIK147fIfxXnkYHBN2kk+qOU989EbT4ZjuaO6VwJUbDEJtNomkvItbp5leortLNoGPCHlRI0nvSzKwAQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4431
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Version 2 of the GHCB specification added the MSR protocol support for
the AP reset hold. See the GHCB specification for further details.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/sev-common.h | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/arch/x86/include/asm/sev-common.h b/arch/x86/include/asm/sev-common.h
index 629c3df243f0..9f1b66090a4c 100644
--- a/arch/x86/include/asm/sev-common.h
+++ b/arch/x86/include/asm/sev-common.h
@@ -45,6 +45,12 @@
 		(((unsigned long)reg & GHCB_MSR_CPUID_REG_MASK) << GHCB_MSR_CPUID_REG_POS) | \
 		(((unsigned long)fn) << GHCB_MSR_CPUID_FUNC_POS))
 
+/* AP Reset Hold */
+#define GHCB_MSR_AP_RESET_HOLD_REQ		0x006
+#define GHCB_MSR_AP_RESET_HOLD_RESP		0x007
+#define GHCB_MSR_AP_RESET_HOLD_RESULT_POS	12
+#define GHCB_MSR_AP_RESET_HOLD_RESULT_MASK	0xfffffffffffff
+
 #define GHCB_MSR_TERM_REQ		0x100
 #define GHCB_MSR_TERM_REASON_SET_POS	12
 #define GHCB_MSR_TERM_REASON_SET_MASK	0xf

From patchwork Fri Apr 30 12:15:58 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233171
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 1257DC43460
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:00 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id CEFD461405
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:16:59 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231766AbhD3MRq (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:17:46 -0400
Received: from mail-dm6nam12on2089.outbound.protection.outlook.com
 ([40.107.243.89]:57920
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S229911AbhD3MRp (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:17:45 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=hCabVYrfn+hs3ijvn0By5ILuKftxKcAOQaFZY2xt6ALqpiporcVM7OmcatZQYjXofJqLhTXyGK3160YcRbpvY2l78XUSMCG+axtWy5SpTjG+eDa7Jj3A7s+dCTSUFX+uET8lib7CO+TO3Xb6Z6JYWqnmX9O9UljlCR8S2FYCFLQJ/Gefo8tl5h55HvGH8p1LBKAengABMsu2110i/fnXXhaXbhE/j2T9wGZRiyOd+w9m1ObcznCAQTinyj4Y01/RMx+azhs7utqjkJwZHd0YcGlELZO+8VVjdjNgU4OBM8OlvsOwZR8t8icuOH6D6ncYGsXy8CaTl7VvUaExOnr18g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=zRVYhLZBqj1xKwl38ZnDywFRFMEAhqjsIGNTZYQHLWc=;
 b=SfgNeChpu0KalKC160/E1Jeh5TJsEPxN2rUWQLKVi/yx3TadpYA7YT7nEOX515c2v2+KmLYtqAXlh7eKQtRL66k++An5CGhG02pEkgb8CASxx/tPiemylpEFQG+c+QVtQXydQxTOi7zhWIYzyBMeeYlJI7Q44BX12+sKyc3/cG7BBdbQmVIU7xpBtQUpZ8CKJ5ztXaKdNHamWOXnKBcefarT+ARmsY1gHCABsi/ldXOT3JCLj6F7614jRP3Akax6mZUlaXzJi1IyFLx1OwNm4MU1C916Ns+ioOCiAkKOqoQvCsCiZFujB37NPdR2aqfT5oA/3tHQi7OneAMcMBB2tA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=zRVYhLZBqj1xKwl38ZnDywFRFMEAhqjsIGNTZYQHLWc=;
 b=yOrM4ZXeCvzbchZajeKrzh6IxeLlBsiHemxMdc82ek5hWoUJFyFty+H48kjB8plErUE+7MVbKEDimTxGF4MgKBM6zE1gofPMxWbKw1YXaMgF557Fr9I7mCmehLqpFtFRMIVK9dLwXLRE70BLZN03HLzCWJswy2IVbC8vY7rPvac=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4431.namprd12.prod.outlook.com (2603:10b6:806:95::11) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:16:50 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:16:49 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 02/20] x86/sev: Save the negotiated GHCB version
Date: Fri, 30 Apr 2021 07:15:58 -0500
Message-Id: <20210430121616.2295-3-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:48 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 06b90175-7336-4106-ce73-08d90bd1d477
X-MS-TrafficTypeDiagnostic: SA0PR12MB4431:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB4431F3EE5CEC2924D5EC6A28E55E9@SA0PR12MB4431.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:9508;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 zYL85bEBVyi1u07nzQrSGwUBQ/1tJhd48lXyDGbOnsTkZpbyj5h/EwQ1vBG06TnDptzuXPZ+ZD9wNVw0VOJCrQdbhQhgDHiViJrbFdKsvEk8rXB+F7WodYKId4vXpjmYcfW4FpEyCg6KUePpi9Wk/wlYtOGAKlUU0PqEZSQzXKclud3klAgmzCxftGTiH0pbLC4V4hSPdJG8d/yeFP/PYKYjI/bT65L/avQy1auMcFWV0GvycxHse2eCBtgkSfauoO7P0fMyAygbPp6XsUrhCCavlqUywwHZOv5Zfra6NRopD10Fci/VROGBahaQz6sn1w+4OT45OdAI4gWGhDe6NITdh4RcV/tzq2rvyG7pwZdfhwkHQfqSosmZed0944AxKgOC3WybRcUXRUar+YMApOJsVli3H7kPYIYyVcuDuW93xRn2wTehqg/rBZeiv550uj5ukd0fK3qoyGjfMmS5YED9fDIgsIz1Gs1vB1R1NRyJbpPHlq3ei+tD2uxIXlZSCi5OfAJqEfTW0k7uKqq/BRZiAJtz/8UP9s/LWRz/rUARmhJP+HrijhpSfRDR58+2i3zn8VTEMrAF9Vb61Bn2lo25tdlsc83+/GktFxmvztiyhG+rqLu1RznT8QZkUUHEXTn0dhUHHkUuWek0fIygBA==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(136003)(376002)(346002)(366004)(39860400002)(396003)(6666004)(2906002)(38100700002)(8936002)(316002)(5660300002)(38350700002)(478600001)(1076003)(16526019)(26005)(7696005)(7416002)(186003)(8676002)(52116002)(4326008)(36756003)(956004)(6486002)(2616005)(66946007)(66476007)(66556008)(86362001)(83380400001)(44832011);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 BvpYWQ3X5kJt9Q0HF05F3gnXVjuSn8GvWyQXW6/JUfgOdt402OeWRONMi+Cnkhi+M2YnV5urTcALsUnWbkoo4H6tuIBWdr9MeMX/+VALeX9PhdCxtxQx8VbEG46w45xwM6YD8BzrPa692pzsAXpNLMbrnoLwkE/o0QYHDqE52Hdy+n0TV4pngZMilrMQypEJ9Se2vE8MIfC3xb64zqPUgoSI4HM+faopToCoP0uNXcA/GjLBIG4TGiGuo+czwzDr+GqjPOdd/Rj9XoJzK/AI9G5PRjJA4FGnmmv0BXdVA0DjMu9G3//yHkYkHPdCZc7unVmB5caO+BUORBrktSu+8G3f5/S0POwi4dARxbspIkM3cUqrzLLGyQQVQmTcwNHLpuFLDL5Cr95pvQu7JP26/h8O/l7zJE9fhQj2p32kAjufbve8CXzR9PYeSfMpQB78iiATEHePS/JXYd4e2sJiPvfVG2/xysGRaDDi3npev6JYxBxYwZk5wvdzrEJrzVPKrvs6pzMBm8lWdoihEWWN55zZ7GfwjWmYP40cTmCgK1nYRbkuuQ0snLubuRdN3Aw+4OrUux3IqWwnfEteQ2sOXFCngUCOc7oCe5Sgn2uF8kZINfB8nyU6YPt2YFMvsDaiqcrfwTo7P1KARKvUJpvHjbyV+5OnaHmHFk9/pn4BkwrLJwfaXkws5aDM8zy31IyuwFF7c2xySrKihMMaPb849jQM2Zr7Dd8eBZu4IBbh5SVbz0DG/mSK2Vl2RCkUz2p3jzDcPAwL/55FECPMnpSaBpo8iyxdIyR7VWhP+89KXUTC/BYweR5xKC8lkPoJbZjCZa2oyu8TPn8afZoPE3YXyUg0P1asyA28Abjvh1HdlL9ZHNUxyhqKMD0vMPKQbjaXQbFgI4zFIakMPqykDmxuLFnsR+jbglshd7kXOc05rG3Sp/mwiBRpVnAjamkaWkleApD5AtF77jVh0dsEMppMQqyYqKNFZLodQ5JiPQMFxG34/C9Qrpm8pAjLGKaEvwBuEiFjxKBqFVleQCDiMZ1b6vjy9+ngOBUqbt7RanpLKYQbXVJOh++yGO1PFz+M24axAMowc+RPsQ3HQ1ju05qemp6eupdHEKApUW4F1thz2u4z2ECH/BLUdWD/jRFnZp5QdNvtrPFXb+EeaM6RKY7r7GDZ+gZfY5RQw0JK+yA9l+72G6OoohVAY/GWR+mBqqAfMtL+c+me+qqXiqDvONvMIfwELt1AS173Met2Z3lz9XB4J6KlUg0DMwivZn72YgToaqYCKPic4/vPVvNpOGX0KRep+gPmNGqPuPFydKgmxhVq6Qa9Q+BbyezM6vfcKifN
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 06b90175-7336-4106-ce73-08d90bd1d477
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:49.1546
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 j3xpKmv14Z9KjXKGl6sZb/bL7knAr/qdmo5+6xVd7RUI2jXo0wIK9NEOuptNQW5CRVDlZ74i8ren4JVLQ7lUvA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4431
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The SEV-ES guest calls the sev_es_negotiate_protocol() to negotiate the
GHCB protocol version before establishing the GHCB. Cache the negotiated
GHCB version so that it can be used later.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/sev.h   |  2 +-
 arch/x86/kernel/sev-shared.c | 15 ++++++++++++---
 2 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/arch/x86/include/asm/sev.h b/arch/x86/include/asm/sev.h
index fa5cd05d3b5b..7ec91b1359df 100644
--- a/arch/x86/include/asm/sev.h
+++ b/arch/x86/include/asm/sev.h
@@ -12,7 +12,7 @@
 #include <asm/insn.h>
 #include <asm/sev-common.h>
 
-#define GHCB_PROTO_OUR		0x0001UL
+#define GHCB_PROTOCOL_MIN	1ULL
 #define GHCB_PROTOCOL_MAX	1ULL
 #define GHCB_DEFAULT_USAGE	0ULL
 
diff --git a/arch/x86/kernel/sev-shared.c b/arch/x86/kernel/sev-shared.c
index 6ec8b3bfd76e..48a47540b85f 100644
--- a/arch/x86/kernel/sev-shared.c
+++ b/arch/x86/kernel/sev-shared.c
@@ -14,6 +14,13 @@
 #define has_cpuflag(f)	boot_cpu_has(f)
 #endif
 
+/*
+ * Since feature negotitation related variables are set early in the boot
+ * process they must reside in the .data section so as not to be zeroed
+ * out when the .bss section is later cleared.
+ */
+static u16 ghcb_version __section(".data") = 0;
+
 static bool __init sev_es_check_cpu_features(void)
 {
 	if (!has_cpuflag(X86_FEATURE_RDRAND)) {
@@ -54,10 +61,12 @@ static bool sev_es_negotiate_protocol(void)
 	if (GHCB_MSR_INFO(val) != GHCB_MSR_SEV_INFO_RESP)
 		return false;
 
-	if (GHCB_MSR_PROTO_MAX(val) < GHCB_PROTO_OUR ||
-	    GHCB_MSR_PROTO_MIN(val) > GHCB_PROTO_OUR)
+	if (GHCB_MSR_PROTO_MAX(val) < GHCB_PROTOCOL_MIN ||
+	    GHCB_MSR_PROTO_MIN(val) > GHCB_PROTOCOL_MAX)
 		return false;
 
+	ghcb_version = min_t(size_t, GHCB_MSR_PROTO_MAX(val), GHCB_PROTOCOL_MAX);
+
 	return true;
 }
 
@@ -101,7 +110,7 @@ static enum es_result sev_es_ghcb_hv_call(struct ghcb *ghcb,
 	enum es_result ret;
 
 	/* Fill in protocol and format specifiers */
-	ghcb->protocol_version = GHCB_PROTOCOL_MAX;
+	ghcb->protocol_version = ghcb_version;
 	ghcb->ghcb_usage       = GHCB_DEFAULT_USAGE;
 
 	ghcb_set_sw_exit_code(ghcb, exit_code);

From patchwork Fri Apr 30 12:15:59 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233173
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 26417C433B4
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:02 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id E5C4760249
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:01 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232100AbhD3MRs (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:17:48 -0400
Received: from mail-dm6nam12on2089.outbound.protection.outlook.com
 ([40.107.243.89]:57920
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232064AbhD3MRr (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:17:47 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=dkZOmO2XKBK8BMlwz+YG5a1AWWxwUf4+O+MbLHschalQnRLLqm+YP70bmA2hBrLrHY9BjXcneQYKIo9g+k7GLNbdWaK8H32lXt7zfUqyMZMgsqoW4Qra4jhmQobyrV+o62wqDOfmZMYs+gdQvRhUbuDFy1pTJkNrrZgWO0VpVZyUiUaGvag4LaolRBQc9NeoboF6Siyewb3tn5mSqu9FB8G6CzJzwyKosuzogCRWgLfmHex8vtZSBSRhlIQ7O9/38Kj6DQRE1gdllXBzDH9C9/oidn4ZTxBEBD5QWicpAH20HvZgthmCbixDjHh+fonrJEcRBrAFnX/xttD3i2Asig==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=3xEWNKriK6GthtqYpbXD74e5dLEin+bVpa5qOxZeKuE=;
 b=KmF1SrNr8dqaL5ASwbVWbt1uS17RhsR6JBGWBQQNx7AbOJA87vJs77Fk3xkjk2e8i3Xts4NqYJLRRYBBuELGKOvI6l6Pmca8TruhUH8Oh31WP9k7fZVp+Lw7hd+lADPZdP7vBD7bV+hKfYvdlTeWTQMCBeYCPSIyKsHkE3LRhNrtcR48gTlnJXLpsWY2kjEbb5TYDolj+84D2eNP98iGApATN7h8J9BflFf8GBBNSCKy+A9py7Otm/+QkbaxEe4ZYo3IqCZeI0UdFYYoskei/0NF03qxiJVp4erQzL9OIPxvIb+rU32dxiBVK/ahOFb0y1ZRy8YzQnnXwm6t3cS7iQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=3xEWNKriK6GthtqYpbXD74e5dLEin+bVpa5qOxZeKuE=;
 b=VqZToiQYXi/TSPjDGySAVqc15dHVbtmn5rcvMc5QAELDHYefweQQkSAzp6ib/b77CuSkpM0ymM+gv25zSokQWSCkT/CryfhmVDCZcyh5g+e6WgEZ6IT52LqhCVQNXH7fQ1KHJ0SKl8uVjSVvz4SLtmV2CiDsfaJ45G+8gWbWfJo=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4431.namprd12.prod.outlook.com (2603:10b6:806:95::11) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:16:50 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:16:50 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 03/20] x86/sev: Add support for hypervisor
 feature VMGEXIT
Date: Fri, 30 Apr 2021 07:15:59 -0500
Message-Id: <20210430121616.2295-4-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:49 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 964d61e5-2ee0-4d48-ffc5-08d90bd1d4db
X-MS-TrafficTypeDiagnostic: SA0PR12MB4431:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB4431F009269E949260A6D164E55E9@SA0PR12MB4431.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6790;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 zhj224HhQhHvCD0/5UkFZlXf0xYgd6V+7uswIcLZ7jiXxyKR7xrM3RXbe7/oBHCBwr/3VqknSlH3IdQO9PehjuGcQd+aPnwIc0PCKP4aogXA2rbpQC8BLGTIjdDpB4qU4JpXjsua7AjJJh9QRIHLbRcDspaRbkGA67OmOAxqO5+i+VzRRKkYbgyYiaOmb3WpqZbz6ZbmE/W1YkamHdeuDmc02nf3zCAFlZO8mHTa7cOJiIeGLgIjLXa88OXapAm7e05pCyUFlIBRm4VbLL2tvU1U2yJAtetc2CeCyCQq5o+9AKVyx6zLDliszOCq1/h7BPCeS374vCKVXj+sIkfPf+nxHPAuHHJutZQxU31y27DYmyoEoC2PFBKZVZai+KVWjwlvd72PqB+CY0bn3D3lyHEA7eB7SV6zmjLTvFmKYF9IvkgjkaQLo2oFQZY6BgmdycPs1HwvGQqa2e6Rym+shdHVwjqeG+VuSrWF2uCt/F8cegZ/fteiKUPBlPvHb6385bzBKC3H/ymNsdZSP0OrQYZznfqDEvhvykzH06l+6XCuPxurq7c9txy0RAahUzJSGMzSF2AjpPKINxViXq+1hHOkAZVzXbM2/PJ4I0RcY4G2jdfQw9A/wOLccWIjANay+yQxC6bqR58zEyLbCvCX7A==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(136003)(376002)(346002)(366004)(39860400002)(396003)(6666004)(2906002)(38100700002)(8936002)(316002)(5660300002)(38350700002)(478600001)(1076003)(16526019)(26005)(7696005)(7416002)(186003)(8676002)(52116002)(4326008)(36756003)(956004)(6486002)(2616005)(66946007)(66476007)(66556008)(86362001)(83380400001)(44832011);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 FYBqoBRALVULEu9MivBtSM0yZzBPtTCogzCod/t0F+Mvqqg0WFFCYWev/OKcytJe5ZTSXcewSKE5U7qSqiX0tNR/kXrhSut+YqeWxvXK2EFqUVzsGWtLas8f+JM4PAFcfthtDAPldRD6+vZLt2ohjHAyHSrkx9FgoiHaWyyj0LpNIFjAsB0BQcX9rol7e+ITbb09Sfs39twnRYs1v4jMWk3Ij0iWmvRAVizyRsH36tTkuBjwF6XQMmNDi9Np9MzH704MySZ3BgjU2IE/GyjEpoxPgOeDMdtzTpms5PVHLSgYxB29Ky8xY5joIcB7/goA8AUsb8Y9m6Dyi58znJojz5rlYIguaOvgeYXvDA9sNkmIqUqLYgh0xNu3fz9Pa+OAKT6Z7ZBvTejl2sUBGAfnuuCB4s1Pf+3IMnXjC+qvNSe83haMQ0cyLq4D67Jf2olRckfWECACjbXhO309ndFo4h0z7HPPtZwh4lax7c99oFSI6oSftLmitJmhYzwHngPd7lSFFMRqx6U2222/2zI0htrf4gSPbbq9iapjPRfxCxFegpS4TLwT4wrN6N/ySDvjDkLahJVIk8N0Kib8ybQ9W52HWztp9RdVAdyM8RetRYsUpGCHrw+bnQDKiLCL40Atw6QR3CjNU18J/7ROErIvzNxENhTjvp6eTR/AE1i3iYQIHX4j/yw5fqLESteznfvotFCi6VgGpsIVg2RH5bmPKrGGtHM3gBDrQC1ZQxnNKhMlM9+ywy//I8EJgJJC7r020yHVy42dAJNuPpVSQ1HYGYbdTf6CNCS544XI4VGqyr7Ri3YEDDo7F4HCdlJ7x3XD0NJ9D73l3y0FMD/nuF9/7EfH1KPZBlyeAO+RBoxD15hCsJi4fvASkEXdqT0hxguJNEOv4X8/0uRzJyoyemt/tCb7aKVsgbYktwDyWlxGovH6reQYtQ9BfW641MCODE6IBTcvJHoLO9ahCkqLQplClA7UXewTujXZGZLs0Fmgfh0eHdJSqk+hyLgns8bUUGsiCjLjqr9p7Pn6z+fjeUpH8kYFuy6ExSslllcctgSZjN5n211zTdsohSjP2h0vECDVKwzewvOZCkrZmvd+Qv7NnYi1mXTnu3eTpUpG/2L+Dtmzc5OW8/maJ12lDqq+sPl0mtA6x4y41Rn1G7fb83DCb4NyJhte2qvBst8UImAW4p1amy75VvTRfOLOec2bHRo7/KpWgombmExx3IdlTEqvUPtA4Xrv8QVi7oD2L4cmG0rFTnZ0W3mOtHH9+komL/sgjaLmUY5lSUPsxS2AtPmqmSmzVe8C7Xp/3uIF6pTQyotd1A6Vjbz0uWA9Sp5o/s+T
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 964d61e5-2ee0-4d48-ffc5-08d90bd1d4db
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:49.8213
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 jMNCtDA00uYED2j6RkxUAH09Gn/sVX0oJfFyT0N5l3GP9v+bVY4f5xAB2crSmK45mEaaQyQvMTjBU3ys+439ow==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4431
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Version 2 of GHCB specification introduced advertisement of a features
that are supported by the hypervisor. Define the GHCB MSR protocol and NAE
for the hypervisor feature request and query the feature during the GHCB
protocol negotitation. See the GHCB specification for more details.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/sev-common.h | 17 +++++++++++++++++
 arch/x86/include/uapi/asm/svm.h   |  2 ++
 arch/x86/kernel/sev-shared.c      | 24 ++++++++++++++++++++++++
 3 files changed, 43 insertions(+)

diff --git a/arch/x86/include/asm/sev-common.h b/arch/x86/include/asm/sev-common.h
index 9f1b66090a4c..8142e247d8da 100644
--- a/arch/x86/include/asm/sev-common.h
+++ b/arch/x86/include/asm/sev-common.h
@@ -51,6 +51,22 @@
 #define GHCB_MSR_AP_RESET_HOLD_RESULT_POS	12
 #define GHCB_MSR_AP_RESET_HOLD_RESULT_MASK	0xfffffffffffff
 
+/* GHCB Hypervisor Feature Request */
+#define GHCB_MSR_HV_FEATURES_REQ	0x080
+#define GHCB_MSR_HV_FEATURES_RESP	0x081
+#define GHCB_MSR_HV_FEATURES_POS	12
+#define GHCB_MSR_HV_FEATURES_MASK	0xfffffffffffffUL
+#define GHCB_MSR_HV_FEATURES_RESP_VAL(v)	\
+	(((v) >> GHCB_MSR_HV_FEATURES_POS) & GHCB_MSR_HV_FEATURES_MASK)
+
+#define GHCB_HV_FEATURES_SNP		BIT_ULL(0)
+#define GHCB_HV_FEATURES_SNP_AP_CREATION			\
+		(BIT_ULL(1) | GHCB_HV_FEATURES_SNP)
+#define GHCB_HV_FEATURES_SNP_RESTRICTED_INJECTION		\
+		(BIT_ULL(2) | GHCB_HV_FEATURES_SNP_AP_CREATION)
+#define GHCB_HV_FEATURES_SNP_RESTRICTED_INJECTION_TIMER		\
+		(BIT_ULL(3) | GHCB_HV_FEATURES_SNP_RESTRICTED_INJECTION)
+
 #define GHCB_MSR_TERM_REQ		0x100
 #define GHCB_MSR_TERM_REASON_SET_POS	12
 #define GHCB_MSR_TERM_REASON_SET_MASK	0xf
@@ -62,6 +78,7 @@
 
 #define GHCB_SEV_ES_REASON_GENERAL_REQUEST	0
 #define GHCB_SEV_ES_REASON_PROTOCOL_UNSUPPORTED	1
+#define GHCB_SEV_ES_REASON_SNP_UNSUPPORTED	2
 
 #define GHCB_RESP_CODE(v)		((v) & GHCB_MSR_INFO_MASK)
 
diff --git a/arch/x86/include/uapi/asm/svm.h b/arch/x86/include/uapi/asm/svm.h
index 554f75fe013c..7fbc311e2de1 100644
--- a/arch/x86/include/uapi/asm/svm.h
+++ b/arch/x86/include/uapi/asm/svm.h
@@ -108,6 +108,7 @@
 #define SVM_VMGEXIT_AP_JUMP_TABLE		0x80000005
 #define SVM_VMGEXIT_SET_AP_JUMP_TABLE		0
 #define SVM_VMGEXIT_GET_AP_JUMP_TABLE		1
+#define SVM_VMGEXIT_HYPERVISOR_FEATURES		0x8000fffd
 #define SVM_VMGEXIT_UNSUPPORTED_EVENT		0x8000ffff
 
 #define SVM_EXIT_ERR           -1
@@ -215,6 +216,7 @@
 	{ SVM_VMGEXIT_NMI_COMPLETE,	"vmgexit_nmi_complete" }, \
 	{ SVM_VMGEXIT_AP_HLT_LOOP,	"vmgexit_ap_hlt_loop" }, \
 	{ SVM_VMGEXIT_AP_JUMP_TABLE,	"vmgexit_ap_jump_table" }, \
+	{ SVM_VMGEXIT_HYPERVISOR_FEATURES,	"vmgexit_hypervisor_feature" }, \
 	{ SVM_EXIT_ERR,         "invalid_guest_state" }
 
 
diff --git a/arch/x86/kernel/sev-shared.c b/arch/x86/kernel/sev-shared.c
index 48a47540b85f..874f911837db 100644
--- a/arch/x86/kernel/sev-shared.c
+++ b/arch/x86/kernel/sev-shared.c
@@ -20,6 +20,7 @@
  * out when the .bss section is later cleared.
  */
 static u16 ghcb_version __section(".data") = 0;
+static u64 hv_features __section(".data") = 0;
 
 static bool __init sev_es_check_cpu_features(void)
 {
@@ -49,6 +50,26 @@ static void __noreturn sev_es_terminate(unsigned int reason)
 		asm volatile("hlt\n" : : : "memory");
 }
 
+static bool ghcb_get_hv_features(void)
+{
+	u64 val;
+
+	/* The hypervisor features are available from version 2 onward. */
+	if (ghcb_version < 2)
+		return true;
+
+	sev_es_wr_ghcb_msr(GHCB_MSR_HV_FEATURES_REQ);
+	VMGEXIT();
+
+	val = sev_es_rd_ghcb_msr();
+	if (GHCB_RESP_CODE(val) != GHCB_MSR_HV_FEATURES_RESP)
+		return false;
+
+	hv_features = GHCB_MSR_HV_FEATURES_RESP_VAL(val);
+
+	return true;
+}
+
 static bool sev_es_negotiate_protocol(void)
 {
 	u64 val;
@@ -67,6 +88,9 @@ static bool sev_es_negotiate_protocol(void)
 
 	ghcb_version = min_t(size_t, GHCB_MSR_PROTO_MAX(val), GHCB_PROTOCOL_MAX);
 
+	if (!ghcb_get_hv_features())
+		return false;
+
 	return true;
 }
 

From patchwork Fri Apr 30 12:16:00 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233175
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 8AF85C433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:05 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 5131F613EF
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:05 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232170AbhD3MRv (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:17:51 -0400
Received: from mail-dm6nam12on2089.outbound.protection.outlook.com
 ([40.107.243.89]:57920
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232113AbhD3MRt (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:17:49 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=nmg+F/Sc26KEiC1lbd/Htsb+WYNSSHyWEM0bCQMl5WnJfixpYY7GSZ18u8O3R14o+qyjltDqAIjBH0Y5KkwpCoJBxzOAk+zGZAsE7ATVt82Udlu6R5NnYvoegVYPxno4Gy5sb16qCUpH2nSx0ASwjq2cGQtjFxWvfVbZK7kdvGPb4R7a1NVd31vKIHdBr1X/Zdh9oxUkFfm6gO0bTrJ5vQCp6AwSd3pp+awH8gOdn8ESvP09Gywsw7ACqqsyaKED+8OnyB/Thr9QsKavzBC32qXJA+l7Emn6pMn4QbR19fl69sdmtG2GlAYPh30cZ36psFLzrcWUxtVRdpDaAOHWDA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=x4F9SFG9MOaqc/XYqz2nbXNALvxyqVxTzn0jQk0bLwc=;
 b=NKmU5aq8HR+T3WPZWMWD+GpGzf6XjmtAbWuSkgQ1kPoe8iLTOXrZ+hxHV+TxNMNHTzy0dpQ61j1tDiuffxhAo1ry/HR5oskXtrGy14ZB4dOGL9y4UhckQ1H8J6Yukm/0pBLE7aRfia1fGlAz9njmmEWEnw4NS8KmKhtBrXimJ9DYWEH48O3/fXIZDrtlNG4O1JSyOayw1//nJ2QBZlKtBKWEgkvhu5ToZM2Eazjg/G5AUCl4fOze9ilVuaVGM+2efg/J+vXmsiSL1A0gjUecLUZThcvFA3Pvkraww7rphOuxW+uEI0zKckomYaI5L1D/OO2LF3m7aqgMs5TshMbDaw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=x4F9SFG9MOaqc/XYqz2nbXNALvxyqVxTzn0jQk0bLwc=;
 b=Fss1IQG1oOvxabWcJXnjMSNLUXk1omFtu9rhwX4egj3GGNSfNNRnSNjJ/rXPhMu3kjRNvjwDAVu+70U2EWX3fBGQo7URLGvH4eDDnQEjNV6LYOKyjLss6237YLY6mbmCSpzmVi5HDUhp18hEduK27iUFZ8hqZ6LLdqqNQiM/QFQ=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4431.namprd12.prod.outlook.com (2603:10b6:806:95::11) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:16:52 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:16:50 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 04/20] x86/sev: Increase the GHCB protocol
 version
Date: Fri, 30 Apr 2021 07:16:00 -0500
Message-Id: <20210430121616.2295-5-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:49 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 74acd16f-7069-4aa1-4270-08d90bd1d541
X-MS-TrafficTypeDiagnostic: SA0PR12MB4431:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB4431235AD5D7192F59F34B0DE55E9@SA0PR12MB4431.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:1060;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 tkrsEhDlDhpEaZq4NDMxmusSAKFcjPyWDYPdMF2SdpxjVG2ZwFfk8xcldCHi5sb2mE4NgOjJVuTBhA3ea5nwK46hxVmbT3CMiXWtAk8wZXe1NGbK0FYN3iETOuCewHFc2ZcEvCdINALwFiOUcU6YW09u+Tt3SP+2vQsUlJm7d9QSMLXlmod7vYRbgKVfddK1RnKVlUfd+PMxidzAwN73fek6aCp1qrYb01L74qqSW6ulcVq3EuND283v/rOaS0V0lR+VpYdOKz42QChMlKe9TO1QYlyhyetldT6Ev3JuHN4r+RPisGh9hFuPwq7enOiOh8L3fNTUH7A/hmnHOLTHnhAqwgfC9S9K3NcYw/wGXBWzFBpabtn41CE0C5KmDtc6/WD3z3+bP3p0FxKmIhUBYpI4hRXbqzOVkyt2M0HXTNDYapuV74pmpsMn3ystyBrCcEgkuqrMUGCV00XSZXWal9qfGV55rsHiGybquAm0NJxA4EZzPlGAg+Unagsut6ZQDuzF8bj8XN/awba7M5tKd4ebLIrVPwtbq+DayHdzqSAWPqI+0cK7LkEGf3J6d32aS0tMsIvbfc26dFlhwz2rVAepisw3sQZKeo5hl5yxpwDLMEHAMiLSjSGFI7GgqkSHzdAEW6sM2eN/q8kaCbl57w==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(136003)(376002)(346002)(366004)(39860400002)(396003)(6666004)(2906002)(38100700002)(8936002)(4744005)(316002)(5660300002)(38350700002)(478600001)(1076003)(16526019)(26005)(7696005)(7416002)(186003)(8676002)(52116002)(4326008)(36756003)(956004)(6486002)(2616005)(66946007)(66476007)(66556008)(86362001)(83380400001)(44832011);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 W3WptkEctgs5ANWDQ8DQEjsx3Ea54xhjBghCQHzsXXcyJsgTBAbdUTjbu72febgikEHmJbazontjgILCG0YLWEoPo5KAPRO/jOGGfiebasFFYJVVCmCWwZlJDIjb23Hyn5uz3cRuK78kIgr1nb6NOxWk7Tke2mk4s2tEm2kdWz2xK6gzP/sz1eA4WC1Z0cvUjjxMhAVzH8qCNEXQlsrMuusLu1V4h0LMVi0UC6TO3nq7ckF/Z20+tlVh5rt2q+rHD/N9xJXgWtYpoC+PNDzSVLq1tSAe/HMzzI3nPbaaBYOCUtU/e9Ucf3HBSbpYRXFwaBIWLBN3S7d3XTDYSzmShFLTeJBhBnSrcNiqBCblggPuRt3sy6LaSy8NB2rMnT+6JuDXUwxz6xWAJ42JyCdcg7ttPNkhgjFXzu7al+XkzW0E3QyIKdwRcKIfnRbQ/xmmBq7iTcsz95MeFBWLmwufQD2YcFHlJzrr0vO/xsZeqI3+7Eukf6dpCnbfnbywm3zO+Q41QUu76lBsf0TYh7W6iZRwfDStZLyCrUvQ7wdpEdXXXOJtBe2WCkqADfRXMMN9L7tpM3jMmklWJMB6liJYwWiNI9lhj5zfkkNGWA3DcEmtURJ8LAEl5ELqY1lSGQrReqTpgGMp0Y2m12+xV2JdqiR3o1nVqTc6eyKGmbjZIPdMIqjzyU31L0teGAgUwWz2I4cn6xt9yfj70BN5kz4L+0KnYRiwHVVJ9fV/OQbQateMGqOlYtd73ig/s4yIM5Wq8Rfhke68SoWRCyWUtHIGdT43BkjdoaoirhHw92j5WsTRxa1c906NewBQCt/hGeGyiPnXBTZ2VqIk6rDRRPQToczYhJPODp0RM1DuA9oyCfWh7ELRUfm/iILX9/dzFth9rNxKJ1PS/RovzNxgCeswxJpzg8JeyH/QCuX+rJMPWgwNm75XysOmLreRkX+ndS1fddJyArt613rshUToopKMfhMuTvLyL545wcaEs7S5IucbsgbGNBQwRjcU+CNeGDU2jR1weq2FaVMP7yYympqXmNPD6vqhTnwMjGmXiyTCna4bc+AO44bclaZcdr+XV61tf8NwX3GAIXj3GZs2jFosIDSSH9/evqwjeS1wOAgvXj53B5AQ3ToXuldODUzhMJYZdMIxiRYZCElour/zpqI1alOMhJ41EEbILbshTpEm7D7cIdsY44nddZQRpWnWC3byKX7DdBUsqD/XA8NqU5RlcI+vtz78W5JsgJtbTmFG13UP2+3mMzcg5Yv9BU+4AWNaeaTzDM35iqUCNX1ivJrgUA8yKeeuuBz2M9a7iF3zeXh4xv9FpV7renAe0khdECeC
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 74acd16f-7069-4aa1-4270-08d90bd1d541
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:50.5468
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 HqMzC2/Uc3wELd4mazorRxs53HnOYJyByrnziTH4VPxPMX6VHxXJJm4DhUjwiITDuXBORwKquY5AXjJZvaQ/mw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4431
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Now that the Linux guest supports version 2 of the GHCB specification,
bump the maximum supported GHCB protocol version.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/sev.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/x86/include/asm/sev.h b/arch/x86/include/asm/sev.h
index 7ec91b1359df..134a7c9d91b6 100644
--- a/arch/x86/include/asm/sev.h
+++ b/arch/x86/include/asm/sev.h
@@ -13,7 +13,7 @@
 #include <asm/sev-common.h>
 
 #define GHCB_PROTOCOL_MIN	1ULL
-#define GHCB_PROTOCOL_MAX	1ULL
+#define GHCB_PROTOCOL_MAX	2ULL
 #define GHCB_DEFAULT_USAGE	0ULL
 
 #define	VMGEXIT()			{ asm volatile("rep; vmmcall\n\r"); }

From patchwork Fri Apr 30 12:16:01 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233177
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id BB457C43461
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:06 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 8C63961554
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:06 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232202AbhD3MRx (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:17:53 -0400
Received: from mail-dm6nam12on2089.outbound.protection.outlook.com
 ([40.107.243.89]:57920
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232064AbhD3MRu (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:17:50 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=k4G/5p42BgsRK17F6NhkAdwRH+fGMFmdc5xZhD4mgHZgNzx/u4wO/ljtKA5rXj8JS1Qr+J1KgRsCV5voHGKjWI+a9lNWqAjuUST6PZXZkQXHgNnQ7kcAOs2jQHPymVBPOCaOIaksl/1vsTjyyf4C4jgN7ea+YaAwQY5RkZZPRAJvXKL+rsEtoJpVQC/LDOpNbvZ1StdcaibXMnLgjpcA8VAeDdpu+FYAMC5T2gqhazw4tKrp+u6Bk2e9bFlx4ylmpWqy6JY0S3Xv1qRPzzGIhvglkTq16rPX2/2GHyWnY0wAExCUvo0rLnwDtpgweeNphPAV9wdROG1Piwif+QD04A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=OmfjwVMLeR65cgmjDS1noCicu5Ts3m77stPDdhBDwFM=;
 b=fNZT5n8zs8nzzbe0XPnXV+4EB9ruu0g3OjhrMWuO0kit0b6vcgYBC1Hkf6mTkijg9mHzYm0knglbOhzflhMx8EReT1phizbPVzo1PnI0x4hQ2UobzY6FxtJl23ZzGBrSkkEq3neBBaLimlCj5PK7Yccswk1zjGr3LSGVn09MiGAyittr3HZuNy+7OadwelG7Bhz0t50/LeFCjUW5t6cdrBpv4rYiDQsnmjEimgG/tu6JEz9ttWT5bA1vUqxZ+NZu+B0hqpAsKntf4oS+49lTGMlhbL1vV88KUDiD8c1BnMGQgaiI4AWKiPNm+tq1kyDWUBpBAdSWBI5barqe9o5FAw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=OmfjwVMLeR65cgmjDS1noCicu5Ts3m77stPDdhBDwFM=;
 b=XBYtPE0V9GTFphqTsbab6U01pksSYlb1UJ518Yi7+dpzxNRKMxibuO8t75W2k6fbThEXDTR2pRmRZhk+fozkX1zdxDXF/gJunpKKCR52od8m5NffHCsymnvMge8GyZ99ecjcd83SoBw16SjSFGkYoYpHI8sx5lhhx3NovpY0+c0=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4431.namprd12.prod.outlook.com (2603:10b6:806:95::11) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:16:53 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:16:52 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 05/20] x86/sev: Define SNP Page State Change
 VMGEXIT structure
Date: Fri, 30 Apr 2021 07:16:01 -0500
Message-Id: <20210430121616.2295-6-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:50 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: ff48fc70-000f-469c-0f37-08d90bd1d5af
X-MS-TrafficTypeDiagnostic: SA0PR12MB4431:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB4431F6BD3E0FB9F9C3608940E55E9@SA0PR12MB4431.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:3826;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 oNd4u5pKkwNJUswgNgMB2yrRH/Ke+BPYcE+hSXYwZOIS4TPm1rBMn9ig/lAHbZh6E3mE3jQlFYkOofAXuky6NQUEdE5HXlsHvRiYlN504unwxQY87sjHW8FcdcsTpy8BynRbrHaaCErbk84XnAJ6leIaLprGraKtt0NArOxqQJLO8qGpiV74diuGnTn6GcmRoF+PnWUBoSjkpGzO/pYFmRP3TaUZ6fy50DUn6tU3q15hb1KgG6m+qYwax4JrWeSJ0VeTaDwqyVXTPpBvSpKXrZsjgiwrXZVKkGIwwZ7wP/IQT8A1WLsBUIj41QfsEFJfvPF+Yaldm9szSilTvyZbx2N2Ozu4lyQ6eHqI1V4Inw2JjZ1j09R+pmaojasYwV7Eq2wCz5uikDNtXq+CTghdDZgymQGOpbAUq0/7i6v5xlTAz3OAZQa3I/5TG+1/IcooqO8+0oQAHXSs/JaWAwM+ipCJSzblRTRpP05cONIbkmNryeXpzSh07YRoZ6vMTKuB0YfPOmEvIqpheevbRsoYTozersDc3zTC0VIm83G8U4TPgYu5lNrwzWG/kAxiyoMi03LA2QLzZWP5EjcXTOLKCu27TvwL90fTxo3rQNTQorH+9qlYF6PopLiblFZr0ZhaXi3ryZR7/5R+RRgP9rF6Zw==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(136003)(376002)(346002)(366004)(39860400002)(396003)(6666004)(2906002)(38100700002)(8936002)(316002)(5660300002)(38350700002)(478600001)(1076003)(16526019)(26005)(7696005)(7416002)(186003)(8676002)(52116002)(4326008)(36756003)(956004)(6486002)(2616005)(66946007)(66476007)(66556008)(86362001)(83380400001)(44832011);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 LbaoRTx6y1X3p53uJohRTsroFrnwCXn3zr1ShhwOHrsXLJw6zsFDk+ADLJfp3E8MHJxWcgxzdjqcGlE9BE7olfhNwinINWKdOGbT/09ZtvKF+MI8Lfw+D5gpvw7+8JNh4VfDC8nQdHEHcybtBT0kzB2H2pLbf63+MVf8ctwGLQ/wJU0VlEVOkGddv39/KjXDqk5zbhPLPxmb8mf/bNb+NHpMYOcERzkz8w3rZUJ01JQhoUvQm6qvPue1hhPRCKTni99D05zEVm/MI/LpUtjXHITWZO7g5fg5g+7vAoNxtRqqi/gA3mIfnjwunm4QN9XbKt3KmPb+YtWsC54eeiKXocdquJmvUvt6zgtxbIz1rORVLta7n5sbF7XwgBm02Z5yZv8xlW268d1V04w4oe2GJw+cXS9CBab7MOCfKKOJrJnE2ynz42kQT0iwND3N4xgUUaY9lKkwV4+D8FaDUeNKuCVW9j+YP8+7+1KgbI5zvKYSjoHQjUhJ0DAw/kPwqCRtExU11CvWRP8aYZGPJc5AlgcbB0kdOVw9g3BEpSFUfPOs3JcXqcIyez6Lu/qL2tI6dEAXgevN6olzW0Vlihh+OTPJVG6F/d4wanSNZGMxNju4G+tLChW7DtjPkqiiKeE7B88rDdLVBy3qYxOsDYmZqBEJA3G4SU22+87IutHG80w/p7r803hRy3vS4jQlaj/0HCJiScn8caYaY3fKmStgmDjtK2GOqMhjumVXp5uJdvNg0xKLpnteswFXuB6nmBbgGxIKOMDPxz6Vhw0tZvSySk2ncLR+GKoiOLYs1dwa2vVRx6o91e4j0lJViC6IjVenTGW2K4GBRelejtugTQ5zbTwCrDw2+lik65W/CBrTZK+rsXgcCk/YNI26fUGeq/EZFCb1gx6d8ueisVVfZXcRgWAERLBf3UtN9ybCdiTPgrF6W13A+CmPkS/QBEg2bUTWP5rP5TfNxhOvK0Dd/bC2KlYhlXX9G0lFRV56bGhLv1xbQG55gvfGCnIgwzhLXjtFqTIZ0DkwLTIbyrv+TXDVDmHThnzv90Bi59pg5zIE1OoAs7ieYFMykyQmio6UMNvuHhaBiRca2ewWIhw5qymS2hCmg9f7jOwlXJRVCCBMAQN5f+Z6iJogZBFYKFJ2lclJDVWqGE6LaLsFwF3AOwc6U9BdMzBd8qfdwUMIpoWkPLQt6sjKRrCCxFHvup9sbRSP9ks7B161git8DM96SeqWaH+kOJyoobVCC+YuUxkE369XJG2qAMYTbuS2+EdtCoWiXKcHghulYTsIwQRqg0QcX32I3gTGyKVv17f7/DSpyZEByPvrmUkaVNsVfWcLH5e8
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 ff48fc70-000f-469c-0f37-08d90bd1d5af
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:51.2025
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 YYAzUulY8SHDILUtURjM458Bc2LszF0/S6j06gCOMgDEbnABkbDLTpY2L3PDWnwM1kWZm6Jp8TX2RVRG1JuvWQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4431
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

An SNP-active guest will use the page state change NAE VMGEXIT defined in
the GHCB specification to ask the hypervisor to make the guest page
private or shared in the RMP table. In addition to the private/shared,
the guest can also ask the hypervisor to split or combine multiple 4K
validated pages as a single 2M page or vice versa.

See GHCB specification section Page State Change for additional
information.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/sev-common.h | 46 +++++++++++++++++++++++++++++++
 arch/x86/include/uapi/asm/svm.h   |  2 ++
 2 files changed, 48 insertions(+)

diff --git a/arch/x86/include/asm/sev-common.h b/arch/x86/include/asm/sev-common.h
index 8142e247d8da..07b8612bf182 100644
--- a/arch/x86/include/asm/sev-common.h
+++ b/arch/x86/include/asm/sev-common.h
@@ -67,6 +67,52 @@
 #define GHCB_HV_FEATURES_SNP_RESTRICTED_INJECTION_TIMER		\
 		(BIT_ULL(3) | GHCB_HV_FEATURES_SNP_RESTRICTED_INJECTION)
 
+/* SNP Page State Change */
+#define GHCB_MSR_PSC_REQ		0x014
+#define SNP_PAGE_STATE_PRIVATE		1
+#define SNP_PAGE_STATE_SHARED		2
+#define SNP_PAGE_STATE_PSMASH		3
+#define SNP_PAGE_STATE_UNSMASH		4
+#define GHCB_MSR_PSC_GFN_POS		12
+#define GHCB_MSR_PSC_GFN_MASK		0xffffffffffULL
+#define GHCB_MSR_PSC_OP_POS		52
+#define GHCB_MSR_PSC_OP_MASK		0xf
+#define GHCB_MSR_PSC_REQ_GFN(gfn, op) 	\
+	(((unsigned long)((op) & GHCB_MSR_PSC_OP_MASK) << GHCB_MSR_PSC_OP_POS) | \
+	(((gfn) << GHCB_MSR_PSC_GFN_POS) & GHCB_MSR_PSC_GFN_MASK) | GHCB_MSR_PSC_REQ)
+
+#define GHCB_MSR_PSC_RESP		0x015
+#define GHCB_MSR_PSC_ERROR_POS		32
+#define GHCB_MSR_PSC_ERROR_MASK		0xffffffffULL
+#define GHCB_MSR_PSC_RSVD_POS		12
+#define GHCB_MSR_PSC_RSVD_MASK		0xfffffULL
+#define GHCB_MSR_PSC_RESP_VAL(val)	((val) >> GHCB_MSR_PSC_ERROR_POS)
+
+/* SNP Page State Change NAE event */
+#define VMGEXIT_PSC_MAX_ENTRY		253
+#define VMGEXIT_PSC_INVALID_HEADER	0x100000001
+#define VMGEXIT_PSC_INVALID_ENTRY	0x100000002
+#define VMGEXIT_PSC_FIRMWARE_ERROR(x)	((x & 0xffffffffULL) | 0x200000000)
+
+struct __packed snp_page_state_header {
+	u16 cur_entry;
+	u16 end_entry;
+	u32 reserved;
+};
+
+struct __packed snp_page_state_entry {
+	u64 cur_page:12;
+	u64 gfn:40;
+	u64 operation:4;
+	u64 pagesize:1;
+	u64 reserved:7;
+};
+
+struct __packed snp_page_state_change {
+	struct snp_page_state_header header;
+	struct snp_page_state_entry entry[VMGEXIT_PSC_MAX_ENTRY];
+};
+
 #define GHCB_MSR_TERM_REQ		0x100
 #define GHCB_MSR_TERM_REASON_SET_POS	12
 #define GHCB_MSR_TERM_REASON_SET_MASK	0xf
diff --git a/arch/x86/include/uapi/asm/svm.h b/arch/x86/include/uapi/asm/svm.h
index 7fbc311e2de1..f7bf12cad58c 100644
--- a/arch/x86/include/uapi/asm/svm.h
+++ b/arch/x86/include/uapi/asm/svm.h
@@ -108,6 +108,7 @@
 #define SVM_VMGEXIT_AP_JUMP_TABLE		0x80000005
 #define SVM_VMGEXIT_SET_AP_JUMP_TABLE		0
 #define SVM_VMGEXIT_GET_AP_JUMP_TABLE		1
+#define SVM_VMGEXIT_SNP_PAGE_STATE_CHANGE	0x80000010
 #define SVM_VMGEXIT_HYPERVISOR_FEATURES		0x8000fffd
 #define SVM_VMGEXIT_UNSUPPORTED_EVENT		0x8000ffff
 
@@ -216,6 +217,7 @@
 	{ SVM_VMGEXIT_NMI_COMPLETE,	"vmgexit_nmi_complete" }, \
 	{ SVM_VMGEXIT_AP_HLT_LOOP,	"vmgexit_ap_hlt_loop" }, \
 	{ SVM_VMGEXIT_AP_JUMP_TABLE,	"vmgexit_ap_jump_table" }, \
+	{ SVM_VMGEXIT_SNP_PAGE_STATE_CHANGE,	"vmgexit_page_state_change" }, \
 	{ SVM_VMGEXIT_HYPERVISOR_FEATURES,	"vmgexit_hypervisor_feature" }, \
 	{ SVM_EXIT_ERR,         "invalid_guest_state" }
 

From patchwork Fri Apr 30 12:16:02 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233179
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id BE7D0C433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:08 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 8DB5F61476
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:08 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232222AbhD3MRy (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:17:54 -0400
Received: from mail-dm6nam12on2089.outbound.protection.outlook.com
 ([40.107.243.89]:57920
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232141AbhD3MRu (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:17:50 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=bUnpm5sck6/jOg743OyBlIMm1gcH3A9gdj8NXe+ui/IRHWGfB7MxV56O7eTdpt6zks4kX3Lf943nP6XtP0wNzjwryQPUKdhMekLscid5RPa75O048HkwUWc/wUPd6pcN5nOZxbPve+EuMo6HUBSXqYsKlz+cycC2HMXHvuNayprZAhCMP66UA1pFUMuaG2EbAzxk5lfoOdAxSn0txE4uQ1bXoMlONnCUw+gh5IFnkPcsXFUtjXlC3+pWoDuQRW10yEwfftBomWHjjE1HjjIidXNoy77rPXdWmSx4tM0rH+i+EtA5NXNx8Vut1gU3ZUjMCykzUtOalusVjQ+6FMg5cA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=hb80lXVxe3WcFs9UKnvmP2LSK+BHwPu4y1P48oZIlV4=;
 b=E7DdiJ3Hp7EyhN4BPgpmjIjRIW0qOfNPxht5u/L7g7trv7me8K+4DN8L4Y6PoQVTrUPUX2ReyYLHIpVnehhTHXNMLyzc/yDmEwzBeHG/MZlGwSAUDX/pe2r7DPvJhcKIxr4pH/1nYLV2eQdFYVZDi7KgKKKYmvDvUbdE0O5OKcOKYgdQ4QOsUK1AQtiQu65ICVAVx1BXqterE/LbjGOti3W0O3s6HrXu0noLZZRCWfpW4Ud3p3vVMN/5DCyttcAczh++x+Ci6h0CejNxEuXO5BMDoUCHLM4xXaRIRRIYVEjp0R/3bwfsovqQWbUURTdA0Qynkw7WCi7131RSovb1iA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=hb80lXVxe3WcFs9UKnvmP2LSK+BHwPu4y1P48oZIlV4=;
 b=lth1a0srSDLWS1NU/lPkcLKEry0gzZuhRZGbSbDiaDdWw2gE169/XakMd0MTJQmhZAJf28vWOElFLrjFrYMMNh5YWBv2TrIQAPcpuGR8FUwFStx4nxCS7Kc0O5Rsfk8w73EcVO9Fzgrqra9lu0reABWnt06NHUxFu4qUFfu9Y4I=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4431.namprd12.prod.outlook.com (2603:10b6:806:95::11) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:16:55 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:16:54 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 06/20] x86/sev: Define SNP guest request NAE
 events
Date: Fri, 30 Apr 2021 07:16:02 -0500
Message-Id: <20210430121616.2295-7-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:51 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 801b1e68-2f09-4389-dcaf-08d90bd1d613
X-MS-TrafficTypeDiagnostic: SA0PR12MB4431:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB44310B8E4FD1879D1B1783A7E55E9@SA0PR12MB4431.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:3173;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 h1USE1rHdPbe68llBEyiW7VNl/9jI4OJeZT/1mcMsAK14HU83ttIkijht0hOU6DV+lD5fZuMKtPAblrcC/lEIfbrWd/45Wt/5jj4QE6IvKf2Bs6AVgAy+puZQl0wu7CMmG+UgKqaPWOSRgID2p/qKvHjidHVpOFCTrRlBeGvf0Qd8vHJdkuR4H6Cfj0TRKBP1xywSayRoNVtSVtVmDZ0yVnsGzPH2fkKQUZ/I1Re5eoCbln9ROQm2irI5yzROozQ6fFpskW40Wb385lNdxzHwnWDYgSZUFibrUuDuPD9spUao1VdeLVLJe3zeJ5MBamIycaUev3blBpjmZvN6XCVKAcV9yVpFx3nbd16Ebn39evB21GcxkJ+BKCLAgpJMocgSKhdgQ5ykLlLyyrfsqAWvU0J5u4ROUUq5WiTD/qQ+s+bjC5KrmWNYEHwvsnC0iVM5C0OsCj4K8A8Yjovuyqcq2jmkV/OhADmN+7nQYILX5CXkOE3pYA2ttOUKpKD7P/eb53L1Zq97+FFw1JNY5xAUj3vhhRReb2ogruAe9nGB41tGtFf3N76AwULc4Z7MT71Q4sz+jbB5Ezwt1akij1YgcW0GqEA9jrx960YdsX4yMDX3GmTf39KNDMTPV8PbG7TpIz8SPcQ8W9rALpqoKJfwg==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(136003)(376002)(346002)(366004)(39860400002)(396003)(6666004)(2906002)(38100700002)(8936002)(316002)(5660300002)(38350700002)(478600001)(1076003)(16526019)(26005)(7696005)(7416002)(186003)(8676002)(52116002)(4326008)(36756003)(956004)(6486002)(2616005)(66946007)(66476007)(66556008)(86362001)(83380400001)(44832011);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 ZSJtKHi4Ck22XBMDfEwXDaxW1iT0pUPa2U7ry7eanKneeojQQn8HxCbER9yAyXpJckxvYc/sT/mwxdv+POejz4tDiBfIIDCNq2jp9EVHpU8TyieFCat3TLB6vF1TP9wzOp/9FIhTel0ZR1dir6bJs+3RU7p9VPO66RW3jCo5YhMaA1rqH88DlRKefVpQoIrchdwH8YKaaj+3JeOToS2h67zxj7a8SkmRMyKrn8b44rsDzQtvX1Al/AmDfqu0w+eiMCqY1IiMxtatAvHhOR/qzZHhIGPILUIkPLz8+osq1p1oOghiAU1RiCGQ1zpjm7g4IlXD6KTnRyf69UwGljpQqDgzfbRhA9uajNMcSiu6WzUX88MHWjVea5XLd+6Wp6f9GA7NNpMxTphRJWg4K+wCTU1rkfAUrsyOZJOqz4PBXcr5sDZU6EP78yVr6RG38VPrTBZDq74y8hjSsirhP0LOHwQNX8gehElaENIw05xTqpoh1e2laT0B3nV4JtnLKJeShVAO0LEtXMLWtQ6oclnZY/NiRkhBAyNAtVgBQz1G+ggHSGcGMqxnlUsY183DFmAF9mjTb7IEDCV6507U1exiUYw0cTbkcgZ+ik+cz1KhvMEQF+mbLU7c3gdsBQRzEpoaC1QhI3IFptERnptXmDxBLz8UJYzgVhrfx18Hpvur29ZtnJNuMpfj4I3bYiTA0NGFyF9x/R7jdnZcZB3nDC8/kvaKh/x3yxVtFkiDLtaRbt3aw90a4x9dzwxuEX01ndaR5pYzxHMlAAq1zHYtUGQMqRZkVt4Y6MXLMufjnme73Kavc7K+YL1yFTwZYtwhWy5W5dhwWe9heJ1tKjhDjB/FHMw4vNsaurkPNxpfE/I7MVrxjDzf5FKdd2MhnC9gHT7jM2C29hCiXdm5mwVKUnBRq/0gx114yV9T+uheY5CnfLUXU1nG8A+0RDVC0bWU+HtKcxBz9GdcdEAUTAgtpVsxV+KbqDbX1xtPZE7nGR4meWFk/Po3A6/BGhwcaRV6Zq7LIYXwlCyA1fPc6W8UR4u/8uqtLtLIyTuudmK0/Ye7EY0YntKS5qUqkoMPHewiAzImSroPokNi1UqAiXHZ2d8zvOUUWMGr8cJrr7QxNbOE8Swz5Yns2F8MN6qxTu/v8KblZJQeE4JyoNTcFS/zLRBvCGJImvGakT4BMaScvYuGuAJ6KnHf7X3De/bEXqR5yiigKTlK2VWpAYq+fqGkqevVklYR9BO5js57J9AXwJARo6jV5uLgp1Cp2pqJ779f8/sCVhqX2jTJIcoDf/gahgjeGfjZR7L6sPiMYishGlM3iOJWA0rrVSuwUwHotWH8zXb1
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 801b1e68-2f09-4389-dcaf-08d90bd1d613
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:51.8611
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 aubCTkmPiTBV/9llcnyzSsKkfZGVUU9Iz9Mzf60xSBwlaF3eMPideXvt9JNPSZVQ4AujIANNL+TeLZOOsUAIxg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4431
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Version 2 of the GHCB specification added the support for SNP guest
request NAE events. The SEV-SNP guests will use this event to request
the attestation report. See the GHCB specification for more details.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/uapi/asm/svm.h | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/arch/x86/include/uapi/asm/svm.h b/arch/x86/include/uapi/asm/svm.h
index f7bf12cad58c..7a45aa284530 100644
--- a/arch/x86/include/uapi/asm/svm.h
+++ b/arch/x86/include/uapi/asm/svm.h
@@ -109,6 +109,8 @@
 #define SVM_VMGEXIT_SET_AP_JUMP_TABLE		0
 #define SVM_VMGEXIT_GET_AP_JUMP_TABLE		1
 #define SVM_VMGEXIT_SNP_PAGE_STATE_CHANGE	0x80000010
+#define SVM_VMGEXIT_SNP_GUEST_REQUEST		0x80000011
+#define SVM_VMGEXIT_SNP_EXT_GUEST_REQUEST	0x80000012
 #define SVM_VMGEXIT_HYPERVISOR_FEATURES		0x8000fffd
 #define SVM_VMGEXIT_UNSUPPORTED_EVENT		0x8000ffff
 
@@ -218,6 +220,8 @@
 	{ SVM_VMGEXIT_AP_HLT_LOOP,	"vmgexit_ap_hlt_loop" }, \
 	{ SVM_VMGEXIT_AP_JUMP_TABLE,	"vmgexit_ap_jump_table" }, \
 	{ SVM_VMGEXIT_SNP_PAGE_STATE_CHANGE,	"vmgexit_page_state_change" }, \
+	{ SVM_VMGEXIT_SNP_GUEST_REQUEST,	"vmgexit_snp_guest_request" }, \
+	{ SVM_VMGEXIT_SNP_EXT_GUEST_REQUEST,	"vmgexit_snp_extended_guest_request" }, \
 	{ SVM_VMGEXIT_HYPERVISOR_FEATURES,	"vmgexit_hypervisor_feature" }, \
 	{ SVM_EXIT_ERR,         "invalid_guest_state" }
 

From patchwork Fri Apr 30 12:16:03 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233187
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 9A203C43470
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:20 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 6B78060249
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:20 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232276AbhD3MSG (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:18:06 -0400
Received: from mail-dm6nam12on2089.outbound.protection.outlook.com
 ([40.107.243.89]:57920
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232113AbhD3MRy (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:17:54 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=QK08UBSyi4M7zocDpGeFPYnBU54xeyR76PoLhWC//X3YupNMrzZP53dbZY9dHuOOCVBu6K4IlmkSYrQrE8pvR5riMxmRBeAyZXimloZeFDNuJXNk/eLbjFwaZsPC+QzQssbD/rTmtnzpyN9+6gTbug0np7nY9xDiHkjufH/QYxDd/NeH7EV1yaPhdL8tcW9IcpMO30Xf+cLLx+HyrfOQ+/to3b5LkYWaxB7x27/CJQObD8H8sU/Ae4vgym99bLjufBCFWaiutjTBZ8HzxrgyUM9+zB8mj9t1bKnBGPK6iSIj7zraCCOro0UNC1Qg2uwyoiAZweD9ggaDmQd9GzNSDQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=+RndLtxGfWv7MpfveLrrmNpBHhrqUZ9RlDNGMg2W+XY=;
 b=nAleRbGeEWsfqpLP468yZWfHw4W6yGvsPiRmsNcce+62Mkul1lF7Xm/OS/QCkl3VWpo5y1k44s4JFzyHLKATDVjSgY3NQDvdx3kaOtlFq81l9ktge7AeZP4MJtmr4TlPU+fKCv2sUvarrqRHla5RHt1Y0q4RjOK9/1KQvGKY2Y7v1t68MUCOfB+0gtDiy0l1enUaIOQP/sWeELi8Il4asHKd3jdFb8K43z+rAD6kfqLqHGhFjs5W2RGgNeP6zDt4mDbVyKbIZvnk8Jh+NaGMtoOLqhPJrhubLkz8cfnTwWB845IeVwh79yrL+7tN8tAij+yTPdKc5woR3DJ/4iS+vw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=+RndLtxGfWv7MpfveLrrmNpBHhrqUZ9RlDNGMg2W+XY=;
 b=H/G3mz5To1F2clYVayG15Hzms5I3gDsyY8IrpJMPedoh9wCQAJdzJSKtVWIF82PHHhAQVYFlWUXjtf70dxEWbVz41+b9PaEcqBQgPT/0lsR6k7jWAYuRWRFr98p19uDZTu5izqifMz3q0Qv39dlF54rRLAv35MxObZh6sWbVfGk=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4431.namprd12.prod.outlook.com (2603:10b6:806:95::11) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:16:57 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:16:56 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 07/20] x86/sev: Define error codes for reason set
 1.
Date: Fri, 30 Apr 2021 07:16:03 -0500
Message-Id: <20210430121616.2295-8-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:52 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: c0d8dac7-47e3-431f-c46f-08d90bd1d675
X-MS-TrafficTypeDiagnostic: SA0PR12MB4431:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB4431770588E270D9FA2B1C90E55E9@SA0PR12MB4431.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:9508;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 RJewmPIJdiIasZisxi+AgyYzD6buQqXkBGOjrvfmn03dSK5L4L9IL2WYuXW3EHy7OTBR8STQsV1/bOHu1waFbx0kKaKYlF/C50rM40E5hVJA/wmEecT2qvMSqiFQ1NlUxeuLPo3BidGtSghOpxwB1nCXBJ7zXJJP+MY/oFk9lAOAnA+9g2A72M0DBOFWmYzYYJNK5YEaIM5GZfpOBduXR/MabzD9U05pxyWLNNIbxOiQ5OKSdChmVJw1Ur3k4nWhOBrR3A4tbCJInHj4QxVfvFBiD0wBN6WxDDNA/2lUYwH49wPrSk32KyULs7oY1wKEwIg4rMFKnOAfUwNa2YjlEx5av21JCjYS/T9aqccoPWYq9abx1F2ALh+yVHwDG4/ncNyY8vL3/yD1Hu3YaDPyZNV0LnBHTL5pU6+RjI68f7/2io9Z6duT6nL08UjruR4Q2GuIKTkHXsnmByXVwfxhGNLg6/yFDVVlnqtEsHVxwBAzZBkxgD5BuierZJEfB1KDAeRqVjWbglR7XoSQpCiVYlV3h4sPFNj2Nfgc2LahotWQW6s0htnIvuSfAqBImjwqhzT8QC+Lst1W031MAt4dhOShIoy9B50jemCRLQHlw6s7XBRWCpRHA2jQT/WOCngwlBE4jG/8PE9CZIiW4jazAw==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(136003)(376002)(346002)(366004)(39860400002)(396003)(6666004)(2906002)(38100700002)(8936002)(316002)(5660300002)(38350700002)(478600001)(1076003)(16526019)(26005)(7696005)(7416002)(186003)(8676002)(52116002)(4326008)(36756003)(956004)(6486002)(2616005)(66946007)(66476007)(66556008)(86362001)(83380400001)(44832011);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 iJ6o20HmQA0By8FtcSkm+LApGxYX+QAaPH/V7+MPI1iJPGxK0/W8otZ/hGsXZqQBV0nMZhvNktA38FLE/rCpWGwTRg8tKYDm+OZvx5qa/DS0eIv7x7AnnaZiJvExsTF1wk1EelXFHt0z86TblZSBLYHXsu3LMSQPh4vrqsVE7x+FMBN1Vk08f5H+e7MLrqqFooi/QVb7S5nb9RZvxALZxGKmQk6GvhzS8SXE8u/XU75Gc88n9mb7gU7VtmOwvB0I/lAi/5+CNkhKBXQOp+q57TFVzrpmNwHqCIVNj4Zm6Rij8t59/3Z+7xtUu8loquCYzOb3TW9jgoe1X7bN/X/nHRL8UcCL7yZiK1T/25UZDxx4xsF11Cf+/zR0JUvHkdjw1SM/sklT4I/dwIe6AyvmJEA06DaQseUs8UyTZ0q0t/VK6qaG3QK8sf/4KNFOy0LXL+PeZ5Xm1jUXb7o3WDaEjBQjkSw2pIOMsk0wlo4zXSFDlhnzOdbICO03kGam30D93oCLH7w71edPAUL/omurAdrXStF4KcDcXKgtaTFAULstqzUTmO0YnaRB70ZFFlqLWcZQnF6WzJxkvLUtCTi9ceMboYv8f+frOauAp9URugz2gQmt5mxAMFyjx5erF56RrvO5ahLKwKwmU3An2BT/1Wx9O9vDNfNjV+882IwGvjq2rj3uvgPeL0gvj509XDKpDpK32/8PIL7poHeiT/Q2k8mbX995tcagHqsbbn6cHCzjtYx9RebKuMuY5/oWSH3dPoA58C0FkIMD81TxmELu8f58mc4NrZNx5wv9u8L0kWqAFVshE1Y0g9eLIr09M7KeW0TQmisPDppHEViYBKW8pfDesa4UA3P4vFXUZEyANjuIPj79y7uTf4rV/yUL98q03u3sdmAHrBp+2/4Rc02PkFaoIv+gh2RGG9OIBX7pSBR/Pf9UncthqskEil6ALi5HAzx7K8XacKADEud/No2H4USmaObTYUXiktH2o5LuYEJvMZUMHnHgXCtRRcEV4eGOZtM+IO4sJSnNnuwq337CAB7rYBG2Zf4XfC0MARwQ0yiRmCzEmLDzJdrKtob6QFilYzzrc0OeMhVnU3Z5wsxRYxJ/lpVpMYnFkcCOeycFo+gPqzVuCH3Mr8IhfZtNi8jSwzv9SVg3veVEJVXjwP9tHi3gfXuK+pz4ym5zq0od2iCm5jOi6x4CeAxqkHIDFolPqcAx4BCe/snR5KCNdsVVSvbLMZJ3COO7POczTi9Q+U96SQQiNoO6CHka7Z/g0GwMzJrbKC4mer9c54CFNlnXKj8Q5wtps6HBQmHym8Ua5QYsgrtePoTr6kmZlfIQfjPp
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 c0d8dac7-47e3-431f-c46f-08d90bd1d675
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:52.5087
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 ja6hfLJvY1oGL1Utfp96xm+mqE7CgnGM+IdKN/uamoEYYHhiYyEjt3PmDc9/xo8n84G/90aYM/+tK7ZQJuGYYA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4431
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

GHCB specification defines the reason code for reason set 0. The reason
codes defined in the set 0 do not cover all possible causes for a guest
to request termination.

The reason set 1 to 255 is reserved for the vendor-specific codes.
Use the reason set 1 for the Linux guest. Define an error codes for
reason set 1.

While at it, change the sev_es_terminate() to accept the reason set
parameter.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/boot/compressed/sev.c    | 6 +++---
 arch/x86/include/asm/sev-common.h | 5 +++++
 arch/x86/kernel/sev-shared.c      | 6 +++---
 arch/x86/kernel/sev.c             | 4 ++--
 4 files changed, 13 insertions(+), 8 deletions(-)

diff --git a/arch/x86/boot/compressed/sev.c b/arch/x86/boot/compressed/sev.c
index 670e998fe930..6d9055427f37 100644
--- a/arch/x86/boot/compressed/sev.c
+++ b/arch/x86/boot/compressed/sev.c
@@ -122,7 +122,7 @@ static enum es_result vc_read_mem(struct es_em_ctxt *ctxt,
 static bool early_setup_sev_es(void)
 {
 	if (!sev_es_negotiate_protocol())
-		sev_es_terminate(GHCB_SEV_ES_REASON_PROTOCOL_UNSUPPORTED);
+		sev_es_terminate(0, GHCB_SEV_ES_REASON_PROTOCOL_UNSUPPORTED);
 
 	if (set_page_decrypted((unsigned long)&boot_ghcb_page))
 		return false;
@@ -175,7 +175,7 @@ void do_boot_stage2_vc(struct pt_regs *regs, unsigned long exit_code)
 	enum es_result result;
 
 	if (!boot_ghcb && !early_setup_sev_es())
-		sev_es_terminate(GHCB_SEV_ES_REASON_GENERAL_REQUEST);
+		sev_es_terminate(0, GHCB_SEV_ES_REASON_GENERAL_REQUEST);
 
 	vc_ghcb_invalidate(boot_ghcb);
 	result = vc_init_em_ctxt(&ctxt, regs, exit_code);
@@ -202,5 +202,5 @@ void do_boot_stage2_vc(struct pt_regs *regs, unsigned long exit_code)
 	if (result == ES_OK)
 		vc_finish_insn(&ctxt);
 	else if (result != ES_RETRY)
-		sev_es_terminate(GHCB_SEV_ES_REASON_GENERAL_REQUEST);
+		sev_es_terminate(0, GHCB_SEV_ES_REASON_GENERAL_REQUEST);
 }
diff --git a/arch/x86/include/asm/sev-common.h b/arch/x86/include/asm/sev-common.h
index 07b8612bf182..733fca403ae5 100644
--- a/arch/x86/include/asm/sev-common.h
+++ b/arch/x86/include/asm/sev-common.h
@@ -128,4 +128,9 @@ struct __packed snp_page_state_change {
 
 #define GHCB_RESP_CODE(v)		((v) & GHCB_MSR_INFO_MASK)
 
+/* Linux specific reason codes (used with reason set 1) */
+#define GHCB_TERM_REGISTER		0	/* GHCB GPA registration failure */
+#define GHCB_TERM_PSC			1	/* Page State Change faiilure */
+#define GHCB_TERM_PVALIDATE		2	/* Pvalidate failure */
+
 #endif
diff --git a/arch/x86/kernel/sev-shared.c b/arch/x86/kernel/sev-shared.c
index 874f911837db..3f9b06a04395 100644
--- a/arch/x86/kernel/sev-shared.c
+++ b/arch/x86/kernel/sev-shared.c
@@ -32,7 +32,7 @@ static bool __init sev_es_check_cpu_features(void)
 	return true;
 }
 
-static void __noreturn sev_es_terminate(unsigned int reason)
++static void __noreturn sev_es_terminate(unsigned int set, unsigned int reason)
 {
 	u64 val = GHCB_MSR_TERM_REQ;
 
@@ -40,7 +40,7 @@ static void __noreturn sev_es_terminate(unsigned int reason)
 	 * Tell the hypervisor what went wrong - only reason-set 0 is
 	 * currently supported.
 	 */
-	val |= GHCB_SEV_TERM_REASON(0, reason);
+	val |= GHCB_SEV_TERM_REASON(set, reason);
 
 	/* Request Guest Termination from Hypvervisor */
 	sev_es_wr_ghcb_msr(val);
@@ -240,7 +240,7 @@ void __init do_vc_no_ghcb(struct pt_regs *regs, unsigned long exit_code)
 
 fail:
 	/* Terminate the guest */
-	sev_es_terminate(GHCB_SEV_ES_REASON_GENERAL_REQUEST);
+	sev_es_terminate(0, GHCB_SEV_ES_REASON_GENERAL_REQUEST);
 }
 
 static enum es_result vc_insn_string_read(struct es_em_ctxt *ctxt,
diff --git a/arch/x86/kernel/sev.c b/arch/x86/kernel/sev.c
index 9578c82832aa..97be0fe666ab 100644
--- a/arch/x86/kernel/sev.c
+++ b/arch/x86/kernel/sev.c
@@ -1383,7 +1383,7 @@ DEFINE_IDTENTRY_VC_SAFE_STACK(exc_vmm_communication)
 		show_regs(regs);
 
 		/* Ask hypervisor to sev_es_terminate */
-		sev_es_terminate(GHCB_SEV_ES_REASON_GENERAL_REQUEST);
+		sev_es_terminate(0, GHCB_SEV_ES_REASON_GENERAL_REQUEST);
 
 		/* If that fails and we get here - just panic */
 		panic("Returned from Terminate-Request to Hypervisor\n");
@@ -1416,7 +1416,7 @@ bool __init handle_vc_boot_ghcb(struct pt_regs *regs)
 
 	/* Do initial setup or terminate the guest */
 	if (unlikely(boot_ghcb == NULL && !sev_es_setup_ghcb()))
-		sev_es_terminate(GHCB_SEV_ES_REASON_GENERAL_REQUEST);
+		sev_es_terminate(0, GHCB_SEV_ES_REASON_GENERAL_REQUEST);
 
 	vc_ghcb_invalidate(boot_ghcb);
 

From patchwork Fri Apr 30 12:16:04 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233185
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 79347C43462
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:19 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 4B136611F1
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:19 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232382AbhD3MSE (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:18:04 -0400
Received: from mail-dm6nam12on2089.outbound.protection.outlook.com
 ([40.107.243.89]:57920
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232262AbhD3MR4 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:17:56 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Lm8PauTqVS2uvX+azkCN2Iq9dUm9NDhiSZBajUUyiXM5iW64BFIUGLPdF954BBkqjnJPk8yeWD2X8wBV4C/g9WfZjoWdamKtFg22sKu3kfU381iV2p1WxRFlTUGkRGNEVjeKDHntP3JYEwFpvKlfGD24wwFp+auZcENvIlxupWlL0hX/XRqpNd3sl+J3R7tFxSmxpKisAHsi+ZL7JK0o6yqCLat+f2+BVpagWlhlyOQxp2gVST799du1pTQpI6n9b3JsiGiMokCeRi8HoMrM7POt+ckBALdFYeF6wLm6lvdd00tb0f7oytnuIvM4w//m8YlkXVEVS258q+lEmMPNhA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=2kay/JRDY37noxVSdPHyzu5DZP76xKmddeLfmtODzDw=;
 b=G8zNFh0eXiM2A2vaUoTneWaLU03zYpDlF0uYjzuJlnVuCAq17lEdGrt/Ec/ZkEAAZACBp88enYb9jTt650Diq3oC8qe0PKeoollRwv62xeLjBoNDtk1foxuRPcO1uMOZ6Dnfd/y2Ac2ncDCp8+P26EdO0OW8NxiI2vJepq+zvtKNAK9AnrlQ+/lI4lnguLBBYiUSyxjfnMXLmB4llfj5a9qN/4rwDMOceDHag9WTN2wLmvcCge2brVzlFniT63RBGdXmex0uULtfDX42RzbbrRITV7KltcfyW/eYwxysffCqm0x9RlNMd2aR9q1v4XjaaTg7q5p8QWe0WJAH13ELug==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=2kay/JRDY37noxVSdPHyzu5DZP76xKmddeLfmtODzDw=;
 b=yY8+v5zrhBBOKVUguZQGwYjYNR/1X88meSlXXynP5FaAk0TeOTC8IT/MevfoPfzPvO0SeznmQJ0jOyUIMZA8HFH4f9bx/stgOGNhuPgaNAVhUGXQdCtU/W57VX+1AHFSn7rLoZ6yDv8KZYxnvrhy7Fz7go7M/1oGoPYGsqnysQg=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4431.namprd12.prod.outlook.com (2603:10b6:806:95::11) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:16:57 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:16:57 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 08/20] x86/mm: Add sev_snp_active() helper
Date: Fri, 30 Apr 2021 07:16:04 -0500
Message-Id: <20210430121616.2295-9-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:52 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: c316e454-1da7-488a-ceb1-08d90bd1d6d9
X-MS-TrafficTypeDiagnostic: SA0PR12MB4431:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB44311A5BB40F44CCB74AB973E55E9@SA0PR12MB4431.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6430;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 w7GrWvVa0G0SsPFJ9tvu1sRo9R+6VArJit/kg9gaIPXFEPMxTcXuRNHF3ZZh/gGlKXVtvCpeIGgMXZzoGHjS+TSnXyCh3/oBrRFVnu96Pouh7bG9CGaK8PDvVKc6lR3VAixSuzEh8/oDJxQreQCZyHFjJ6/bn65RYnRTzQNCcCfQxXmk6etjX4iAIQ0u7LEns9Yi3UzN0pLqNZT0kbWy2zud3bNTyJoUwkidCPqc4kvIelm0kMWMkW72si/La57YBO0Cs/iFIqHbU9bi0oAp+YcTIcgMOZASBTVepneKNWGL1Mq37TOCtJrpbJE3Sz3jleuyFnGWOWAmHkCulVFXRQPcOd8/caWePcKPgsnL8Rxa8oCq61K/dSVmSild5/lS733NHu9yShUb9qalKOEmQ6AlifvW4rKR/iAikyxzC+AkoX62GlifqXOm7AHQIomET6pZo/bcXx6wMeIrO/S98hHT28ifkv0Pxq8+Ix7ylnOrmuobW7t4SnU++wZEE5JkGLTsX/PL0HQrDlaIK/kOn3fAvwpzeolmgChhu9FOEY0YmdwtO1ToKiFrWT6YXbOPYlNkJYOeGpedRnVogdjMbay8vCxXS7rYJqJb+bnXVvug9jv8k0vzJvCUwt07tlMuevKjgyd0pQ/9faKcqtHGMA==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(136003)(376002)(346002)(366004)(39860400002)(396003)(6666004)(2906002)(38100700002)(8936002)(316002)(5660300002)(38350700002)(478600001)(1076003)(16526019)(26005)(7696005)(7416002)(186003)(8676002)(52116002)(4326008)(36756003)(956004)(6486002)(2616005)(66946007)(66476007)(66556008)(86362001)(44832011);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 ZNBXjj031+WcKkh81Kb+3GfQUXqRKO+z/qhekWo6h9ZcFymFNIp64ZzkR3zdQL8QWHj7VVC99EHWOU8f9DPTQLVf/yCyMhRVTTFfNTUmhcDaDbOfwuDptk8VlvLHo6ucQBjyRcM9Yh6YMUTbwL8yT4O1vDlDpOBH3oNxRCQCj+/hfRfKEzG8Ax/1ztUqmNuhw82vEa0lUjsoM3pJEBY87G9ihExg2Rr/r6YvLW1v2Bcs6CBgg3QqMSftlMP+e2k+zgzgflnC/BqBaHJTXDMS28com8Q0+RzVYx4OCNuIEXdptpI59juGIg5ntB8cXZ4w0bf8/3dn795AUp6ey+KLEKu+aQ/H9zQXJ3QNc+f+IfwS5/vNT2s8ZI9TFVEQRFqWVW9NW0JE4RDUZywr2OP0A7a90mn7dUkusNgqep0m1YJfxoqbwapVB5vldKNVheFI+OgmQlDGoglhLjxnQ5rN60RePUm19fwsJBQwccR0VYoHgKxhX68hSjbCe8MPTJCuot+GgaRxeeeG95Ya5SEvfl/9pj6jlQESF9S0ntjbmrP2k0Wtt8n+dhHt73cLJ0ueFxYuNf9tqX3wNlBSO+FAwzohIUb5izHupjgeGu27j++sxNJWzfhjjk1kSiiqVqsfDIDTR1tAjXA4KmEcuZbGR0DjddGC9MTu/NyvGSKE6lN4Q9qci4/SgAvH6ItKO9TQukTBjLGTR/u4S5gIfARCpqTHM6f+oAwNtdmOhrFdKfxnX6IQP2toDelhTOa9NcJ0jqXQkmz5++itDRt9Qdo+8ocVGYvqVQ9VuIqSUN9poNY4f50nkAHJ0ubAZ1m6VSKwhxDT1XqDjJwoSDG9mf+qsb8/GZyeS9ZqhVwjFUKD7juaAj5+zNQUq3EjiQWDPjszPle2Tffj3alCNY2hcoOYH7absPC3aGkzYFnk2cJISV2d1iHg2MkW2tvZ+pqQluoIjV4rLHUEMj+bQUyi5v7lFZqQSNUd5BlVhTlTu5v7h5WXmkreqadj7sySWflkf3CY6ewnUolbKFuZNQUm8RA4SoRgqWM4hEJLONlsucNSmgaKnIwR30ZKmelncFOBYSo34O4GhKDvP+Hx/Ekj2O3ljJxF/0xrk/scTVonCCb7U9Nlt0aYiweOSjHq7XRtjWQeXe0FoC4l2xTh+aUeEZ5bKTakK3eLF+9UK2DYzgupuEunBHZIiDr/e/1BFdZWMVGjB63yV/XurkQS+eeu9zb7fmgdBlWPla8WUHXUE5gEFbn8LVr5CY0Wmz1pU3YDzHAwv64fzqRlNTs2Hz9YJr3ToAOXXV8/aVr1fx+5kZu9W0YpqREBsbPOoDpXSqMZ+Ton
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 c316e454-1da7-488a-ceb1-08d90bd1d6d9
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:53.2383
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 wOC0zxz9neqAwFFRCAujuHs47yw+x5zMFhWBYyNIq2hgk2JZ1JUQ9sulxNZjCvLpFriVrBP360D7mmer4j4Qng==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4431
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The sev_snp_active() helper can be used by the guest to query whether the
SNP - Secure Nested Paging feature is active.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/mem_encrypt.h | 2 ++
 arch/x86/include/asm/msr-index.h   | 2 ++
 arch/x86/mm/mem_encrypt.c          | 9 +++++++++
 3 files changed, 13 insertions(+)

diff --git a/arch/x86/include/asm/mem_encrypt.h b/arch/x86/include/asm/mem_encrypt.h
index 31c4df123aa0..d99aa260d328 100644
--- a/arch/x86/include/asm/mem_encrypt.h
+++ b/arch/x86/include/asm/mem_encrypt.h
@@ -54,6 +54,7 @@ void __init sev_es_init_vc_handling(void);
 bool sme_active(void);
 bool sev_active(void);
 bool sev_es_active(void);
+bool sev_snp_active(void);
 
 #define __bss_decrypted __section(".bss..decrypted")
 
@@ -79,6 +80,7 @@ static inline void sev_es_init_vc_handling(void) { }
 static inline bool sme_active(void) { return false; }
 static inline bool sev_active(void) { return false; }
 static inline bool sev_es_active(void) { return false; }
+static inline bool sev_snp_active(void) { return false; }
 
 static inline int __init
 early_set_memory_decrypted(unsigned long vaddr, unsigned long size) { return 0; }
diff --git a/arch/x86/include/asm/msr-index.h b/arch/x86/include/asm/msr-index.h
index 211ba3375ee9..69ce50fa3565 100644
--- a/arch/x86/include/asm/msr-index.h
+++ b/arch/x86/include/asm/msr-index.h
@@ -481,8 +481,10 @@
 #define MSR_AMD64_SEV			0xc0010131
 #define MSR_AMD64_SEV_ENABLED_BIT	0
 #define MSR_AMD64_SEV_ES_ENABLED_BIT	1
+#define MSR_AMD64_SEV_SNP_ENABLED_BIT	2
 #define MSR_AMD64_SEV_ENABLED		BIT_ULL(MSR_AMD64_SEV_ENABLED_BIT)
 #define MSR_AMD64_SEV_ES_ENABLED	BIT_ULL(MSR_AMD64_SEV_ES_ENABLED_BIT)
+#define MSR_AMD64_SEV_SNP_ENABLED	BIT_ULL(MSR_AMD64_SEV_SNP_ENABLED_BIT)
 
 #define MSR_AMD64_VIRT_SPEC_CTRL	0xc001011f
 
diff --git a/arch/x86/mm/mem_encrypt.c b/arch/x86/mm/mem_encrypt.c
index f633f9e23b8f..076d993acba3 100644
--- a/arch/x86/mm/mem_encrypt.c
+++ b/arch/x86/mm/mem_encrypt.c
@@ -391,6 +391,11 @@ bool noinstr sev_es_active(void)
 	return sev_status & MSR_AMD64_SEV_ES_ENABLED;
 }
 
+bool sev_snp_active(void)
+{
+	return sev_status & MSR_AMD64_SEV_SNP_ENABLED;
+}
+
 /* Override for DMA direct allocation check - ARCH_HAS_FORCE_DMA_UNENCRYPTED */
 bool force_dma_unencrypted(struct device *dev)
 {
@@ -463,6 +468,10 @@ static void print_mem_encrypt_feature_info(void)
 	if (sev_es_active())
 		pr_cont(" SEV-ES");
 
+	/* Secure Nested Paging */
+	if (sev_snp_active())
+		pr_cont(" SEV-SNP");
+
 	pr_cont("\n");
 }
 

From patchwork Fri Apr 30 12:16:05 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233191
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 17C8AC43600
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:25 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id EE6A96161E
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:24 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232494AbhD3MSL (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:18:11 -0400
Received: from mail-dm6nam12on2089.outbound.protection.outlook.com
 ([40.107.243.89]:57920
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232302AbhD3MR5 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:17:57 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Ns/zAey+dms9wRqIN68H9mersQq44SUJ4+TMSXcrabQOezOlSQYUTGEfPkUeIFa55o06WMiKMCZEEYYU5UVQ6h7KtKnuY60dhiHeEeF4zcbHc9Z4kIoKgA2JcNyNUKqmDGAxF19ivITXUrNClpjzJjYasCF34jS4JbmVQ43BnHS613frqKLcJV6jmvLcPO9qE8H4xAFEJWe5KDueJiCYJxtMhg2Uc+NCjnOVhXMfa7E7a9cfj3WWzwkW60NnesGN52UAZyjJhNzvx+HP2/DBIyEscEUlY2ui3GY89K0t74u32PH87BXsFjzgR3sLAqXF2jxzjw7QY0oO0W4R+A8BVw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=T3/seJpLH8bUBap5nBKRnPVgl50Lw9RBaA3jY3pl18A=;
 b=QUEjC9d5osAx8MOJBkuew/Y5D0D/Ha9c+H/jZE/XGBK9BlhWsJhioKHsw/ZWCctdEJA5yxEyDdPJU32CnAZeBPlHbZCUT/OMq3W0R1pQkR/iu2ZNd0tD7dcoEFIXkCJsWsxnfitdVngOdop0auilCQ/tQGFu5stgLqOG9q4BJW5RJpKFTfVxXvSQpAlExrxgTDSNpP++vtgSct9gsWEk2s1JoJsv1WqVs17bkMl0rJELlRfWeUOwo1v2iie+pUll2Xd+u5ja9AD3gH+1BGDmMpLcY3uo81nHHqKFqyPNSlIOIW5ko+iSx4FpMTb0LY9zyvYML10jCqNUZKAg/1fJ6Q==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=T3/seJpLH8bUBap5nBKRnPVgl50Lw9RBaA3jY3pl18A=;
 b=RLr/Nc3twrhNcqInI0oYRrie8lOiOYcxqrxIaAx2dUebGGuyhOREiYXfHSge8yCxAu9BgYdkHn/Cv5Ai3eG4r/pa/gMn4Wp2zLs+jsrFkNXyDQmp+2mJihKw6fDmz0+cX1IGQdkrB60beJ5RNJUq3YJBuKFB0qXrckBPp35Ut9U=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4431.namprd12.prod.outlook.com (2603:10b6:806:95::11) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:16:59 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:16:58 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 09/20] x86/sev: check SEV-SNP features support
Date: Fri, 30 Apr 2021 07:16:05 -0500
Message-Id: <20210430121616.2295-10-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:53 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 2cfa8eba-fba4-4483-3b95-08d90bd1d78c
X-MS-TrafficTypeDiagnostic: SA0PR12MB4431:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB44316507E7F6C49E217D240CE55E9@SA0PR12MB4431.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6790;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 t2sG/ifTKUJ52DMtw2+bw4lg/E7rC0356M62TDJs2pmT0ZchB0FUouX0aVLIsrkFlX/v7vNaMIFxVTQFQfj1wYioGy/OeAgtOY9oPHosfgS3A+pDvFsdH/7ULQiYjL1u8Ww6xxbKRqyxUFQrV9rFcaTexVnkaqzjNk0qHPKfiozp+fv+JcFdcvUYBDdYgseSbhZEfPLikPUXq4aKUQzYm2054k02L9hYgaBRRbcA98LlKq9aKsbp9itxBCF5GvK4QI2HCS1I7B6xXD2Ng1WvHmiQu/c3+8TGo8NJwUI1RXVUblA+sRJePWSPpWfsJ4pKzh7iLVmUJCj412F5qN3Rei46sYTcOz/6NxXzjHrAPelXL8VGw5fPxMCdmi2O0r1uX9eB95btvxDJu8OHD86w3CaNWM86/FIJfCGdQAVpK/RDMyXjIRYiimCwCMJIwNEMpYMJotVFj73eqHHdMSirinFOl7PwbdSUwN95pPy9w4elVvPWxPEXxsVA8wUOSxQiPfjuvFqv2R5jujGxR6LhRn408OHq8K4f+xaBpP5DtsWn9GlwQBBlE57g8oqkPlEbVpkoMpLpdR8a1VRzy+xBFLXKgHXjvnjCQV3WZfuaFAcn7zM/3tmssHh3hU0Ja47h8KXqPr+uI6iZkblOSX+ZpQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(136003)(376002)(346002)(366004)(39860400002)(396003)(6666004)(2906002)(38100700002)(8936002)(316002)(5660300002)(38350700002)(478600001)(1076003)(16526019)(26005)(7696005)(7416002)(186003)(8676002)(52116002)(4326008)(36756003)(956004)(6486002)(2616005)(66946007)(66476007)(66556008)(86362001)(83380400001)(44832011);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 O7P/6K0HW9z5bbhErFQMet3UkGJh/ew1l4QAx3GADqs3gFYY60Cm3zUkYfb8lr6Kei+32dqiI4sqkgVafgxKEAOWXlN4yA26IKNXlEebCDtEAkr7/T7oXouxrkezt9p4z3Xo0T0ZmgGcWhw2xSUWlLvpFuA950rPpb6jhOiL24Da0+vSQ+E/JFV177L8h9xC0vEFntHiqeKACA/RS4mp+Xbon0DXQ00k8sDKPQrAlmOQ1vOYvKnuKZ6IYOe9HXN0DeQ2YtiW44HvXzl/35bxGaRXq1M1VMmd4MIu102SfzEwU+sNeV6q3ebMTrwgdWyucFz9v6lJ8j74luI1YK+bGoDwVHp6daZQFxA4aYHQBNefrXD4OEDZSiBnwLtNbhIEcgnSN8G5qJFczsSZyVzNnLFB2n2BZHorCNTUlQyt6jnYJsV9PKUkXPVn2F8OS//crcfxvBbGaL+ItMWaWqjY6TQnbAL0ANDctOrunGli/4XUCujbOqYCn65H0teuhLrcIjXIndCMg+SmGBPp+ltj72AMt+qkdRu5gKka24HzHPsNCbdzdCy6em+lQhiOE6lpCKRabdNbB7ZM0safYiwTP/n83xGBaXviGOlPbcN7qSylq3LFCDkf5FiI6lHBd747H4PpTi1y+bm7eGizcNqKWBP8b+7IsdIaBkXr48zRiZbIfzawTqRprODguXVtuRHKrQ43GSc1mQTvEkOn1b917mPu6WNo0IlGMjAszExLkiXg1Mhw61cDxRx+dx12dqMLXahb4V4VTG5i6cMd/8uOKfYfG1Vw+hdVWppod53EV8ZNXbIuffgyTeImDpS+xMPrFXptCqz07k0iBGZELA8hoeVJknLeprgekQ8g/00CA9KJG26LJ1tm5rZ+q0ZpXZqoUe1sd+oBWQddzdlqiVngLuRmpz3L8zdhePC96g5ELHkaWNBG7L+2KemhDhVWRh6QZq5gSQsjCqB30vRGG2nzQlktmzHBWYrBlSgdSF7mKC0RBYixzLfzebf+6XB8IhL9iinHH4V9Ci9iMiACZUgmDnmQ2Bg9iSf+cjBPil4SWir7Sdk1L9cVWTZvgJ1yMA3oFFVVTWLRGR18F+yKVWsQSbhoBfx68YOhVzDP0KPdwH9aJhscbLMLaGpX8LlZ6ipDC7SZ+eP2WEf/xxeSCsJ+qZu+gB+5kdz1A6aUxsXM5gE6LtO+q/0q5JCi2ry6WKhZx156ywBEqNQNlJlfYnJCCtgfYh/lDUfAwdF/7BtcAtfO6gjicov3VFPjok0SJpj97tQzbzpbfNMLUWOLD6xZ83hcrA8VOEbRr8XRvwrAHWc/yadNImOT/HtSQIAR9pnK
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 2cfa8eba-fba4-4483-3b95-08d90bd1d78c
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:54.3577
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 pjB3qh7VDQXo5jWPBnZ286kREQ15+1j7nZmICz3lot5Yt0+zFFVp2LrViSAuOOwRgindpv/rJEPa2x+1ekYWNQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4431
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Version 2 of the GHCB specification added the advertisement of features
that are supported by the hypervisor. If hypervisor supports the SEV-SNP
then it must set the SEV-SNP features bit to indicate that the base
SEV-SNP is supported.

Check the SEV-SNP feature while establishing the GHCB, if failed,
terminate the guest.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/boot/compressed/sev.c | 21 +++++++++++++++++++++
 arch/x86/kernel/sev-shared.c   | 13 ++++++++++++-
 arch/x86/kernel/sev.c          |  4 ++++
 3 files changed, 37 insertions(+), 1 deletion(-)

diff --git a/arch/x86/boot/compressed/sev.c b/arch/x86/boot/compressed/sev.c
index 6d9055427f37..7badbeb6cb95 100644
--- a/arch/x86/boot/compressed/sev.c
+++ b/arch/x86/boot/compressed/sev.c
@@ -25,6 +25,8 @@
 
 struct ghcb boot_ghcb_page __aligned(PAGE_SIZE);
 struct ghcb *boot_ghcb;
+static u64 sev_status_val;
+static bool sev_status_checked;
 
 /*
  * Copy a version of this function here - insn-eval.c can't be used in
@@ -119,11 +121,30 @@ static enum es_result vc_read_mem(struct es_em_ctxt *ctxt,
 /* Include code for early handlers */
 #include "../../kernel/sev-shared.c"
 
+static inline bool sev_snp_enabled(void)
+{
+	unsigned long low, high;
+
+	if (!sev_status_checked) {
+		asm volatile("rdmsr\n"
+			     : "=a" (low), "=d" (high)
+			     : "c" (MSR_AMD64_SEV));
+		sev_status_val = (high << 32) | low;
+		sev_status_checked = true;
+	}
+
+	return sev_status_val & MSR_AMD64_SEV_SNP_ENABLED ? true : false;
+}
+
 static bool early_setup_sev_es(void)
 {
 	if (!sev_es_negotiate_protocol())
 		sev_es_terminate(0, GHCB_SEV_ES_REASON_PROTOCOL_UNSUPPORTED);
 
+	/* If SEV-SNP is enabled then check if the hypervisor supports the SEV-SNP features. */
+	if (sev_snp_enabled() && !sev_snp_check_hypervisor_features())
+		sev_es_terminate(0, GHCB_SEV_ES_REASON_SNP_UNSUPPORTED);
+
 	if (set_page_decrypted((unsigned long)&boot_ghcb_page))
 		return false;
 
diff --git a/arch/x86/kernel/sev-shared.c b/arch/x86/kernel/sev-shared.c
index 3f9b06a04395..085d3d724bc8 100644
--- a/arch/x86/kernel/sev-shared.c
+++ b/arch/x86/kernel/sev-shared.c
@@ -32,7 +32,18 @@ static bool __init sev_es_check_cpu_features(void)
 	return true;
 }
 
-+static void __noreturn sev_es_terminate(unsigned int set, unsigned int reason)
+static bool __init sev_snp_check_hypervisor_features(void)
+{
+	if (ghcb_version < 2)
+		return false;
+
+	if (!(hv_features & GHCB_HV_FEATURES_SNP))
+		return false;
+
+	return true;
+}
+
+static void __noreturn sev_es_terminate(unsigned int set, unsigned int reason)
 {
 	u64 val = GHCB_MSR_TERM_REQ;
 
diff --git a/arch/x86/kernel/sev.c b/arch/x86/kernel/sev.c
index 97be0fe666ab..8c8c939a1754 100644
--- a/arch/x86/kernel/sev.c
+++ b/arch/x86/kernel/sev.c
@@ -609,6 +609,10 @@ static bool __init sev_es_setup_ghcb(void)
 	if (!sev_es_negotiate_protocol())
 		return false;
 
+	/* If SNP is active, make sure that hypervisor supports the feature. */
+	if (sev_snp_active() && !sev_snp_check_hypervisor_features())
+		sev_es_terminate(0, GHCB_SEV_ES_REASON_SNP_UNSUPPORTED);
+
 	/*
 	 * Clear the boot_ghcb. The first exception comes in before the bss
 	 * section is cleared.

From patchwork Fri Apr 30 12:16:06 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233201
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 5E72BC43462
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:52 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 2E7A1613EF
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:52 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232305AbhD3MSj (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:18:39 -0400
Received: from mail-dm6nam12on2089.outbound.protection.outlook.com
 ([40.107.243.89]:57920
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232231AbhD3MSL (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:18:11 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=mMZ1jCk3Jye0sMQN8B0FilxQZy5Km/OV8bXZp3qf+rH78NmEMnPcs9bgfgGbkLrtwbhBe7/ra1tpxIG2SX7/bCNFL3+x4rle9MYwbmV2l0crSfu9EzI1fS9KCow4GSJzQX2CCg8WDDt3ZDFL45B6EUF+hin+LrTpRmf1B0tQVXxyhS0kp563hEyAThdJjjdqIsiSLD9lZBYO1y4YOrzPZuLM+DSu8Lrxii3m54AAmrXADh6bNm6oRrIx/5HmgrEAXHrm4DrOJGVtwn+n4VqRl8MVVJZ/TIfaSVizKXf2hjyMaUaBeKEdv59M2rDBY7NmkPQA6zMT9xULgBDtC/qL3A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=MVhIaxMpyujQL6Fvq0llLz3rx0U6cFhPx5ikqu42Q6s=;
 b=laOqCT1nR8CTGCQf7WB6m90+y2rmgOE5un40l6bvseRejYiJuY1KuGwbXpQFkgim61CIGHXQpHoolD3lqhsDVlP/Bng62zY+gS7+UcQyryf91FGMsed6pfetAoNSkzeqkhV+LhtSDbyv0fw/c32aJZzVXRSkdtM5cJ9RxsSnvLb5MvfjmYrY9obLmBBMif9RDfjknWNBknXMQswNF3d1idcXLWyX/yGGP2K2amZ0CJD7vsBPEItclt4ZVdESePY0yJCw95lI7KeYa9NZqaTSran9I9N8TAFMI6x8SxpqMERIPGL4NQ+wsoppOwICNTqTdpH4RcslTgP6SmfB5ePtag==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=MVhIaxMpyujQL6Fvq0llLz3rx0U6cFhPx5ikqu42Q6s=;
 b=VCTqrmZut/aoSXu2GxfnyJxW+KL6rUNIs7ua+TxMsRl+G3jQ9oTmwoGuBa68vZKL7U+JwnoTayObCP5mqaDGtPExcLdUCzu08QJ/5IgHqcuCUIi13jT1uwic60TQL9K5L/FuDBMUfGKsg+sOp+n3Ezh7ObzuVfhCmfKPsBwwS9U=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4431.namprd12.prod.outlook.com (2603:10b6:806:95::11) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:16:59 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:16:59 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 10/20] x86/sev: Add a helper for the PVALIDATE
 instruction
Date: Fri, 30 Apr 2021 07:16:06 -0500
Message-Id: <20210430121616.2295-11-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:54 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 037cf877-1344-4478-c7c7-08d90bd1d7f3
X-MS-TrafficTypeDiagnostic: SA0PR12MB4431:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB4431A68989FABAEF25F6C13FE55E9@SA0PR12MB4431.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:5516;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 rcnKb8ErjtDTE+qNt7woAZFm0SarDh3LPTUlu9lOKy/CLko3NwnjYl9H6DZqQtmv6V11GNTQDC3try/Q9XnYYWo/P/4AdUnG8BSKGYkB0ICLiRLEfwuG9Qr5pHzzeKUNvwA6WO88SXS76rOCwNCZwOCG04Zvul1VxHGUeRySVpeU8SdZt6ElA+7fK1yg9u0QDs2Hsga3GA980uKXHGo43BrC0ptgbXwUova1mrAmTuKSFqOM4l+qxoqwPgSOuf/TJlvI6p06xTD9fH55Nf1+AiS5fHmAiIOm5PantMj7gS6DoCTxZ3Iu0bbgesuoW3/w7HoHslFgEvcZJgflybYN7BkNZx4a2GmtfKcHgpyl5CHHzp7+LCVXVpWaSAtS2cq7qUBKDaKbFdEIi6IMTgNTJM53Bl/vy+eOaJol5rsWWLo40vrNaIHvgHQo9YLcAwwKba8Q7b+rVNEu6sdx154Y7ltFZxqlzE6L4c0H36Ly+wkNe1TEGuMf0XuXjKbpgTVFNDlYUaY5lunoK1ZTAGPcuUU9xkA8LkSRQYVpRxDUeTln+YH6KycYDQ9KJp74MKGRS5U+BM2rsbbZFrz9G4FnXf6DKD3Zd9d57iYOyKkm2pmadVIfEBeciD30VsM4E2UZSvzOvByuKGxkMQe8FG4k8g==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(136003)(376002)(346002)(366004)(39860400002)(396003)(6666004)(2906002)(38100700002)(8936002)(316002)(5660300002)(38350700002)(478600001)(1076003)(16526019)(26005)(7696005)(7416002)(186003)(8676002)(52116002)(4326008)(36756003)(956004)(6486002)(2616005)(66946007)(66476007)(66556008)(86362001)(83380400001)(44832011);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: =?utf-8?q?2ljnTUSwUuDfDLS2j9cODuiNlx3mis?=
	=?utf-8?q?5xFB5Y9aulajJxkFWiJfUi2O2y/WkjQ9zw8Wbu0g9artOZsVoqKHxfisPN8et+KQK?=
	=?utf-8?q?iq9lTUC+K/aMpLUORRa39+1RF4T8Z11lPJvNLmzjL64de9JYRenJ4udWuEcrX71jk?=
	=?utf-8?q?Wye8D4hWhTwRof2T4uKdtvE4luN2n1ogkDJx1K3IbroHI5CVH4QCfWvkgy6xcahf4?=
	=?utf-8?q?LBA+9RQpZoLFICm8JVtpiHqhU8NE0SToz8CmoXW7DGsDBz1DoI+7ZveukmdxIJeAL?=
	=?utf-8?q?e5CUyVHB8AyDxFyN8ravxRlDzsjAS9rQ/NQTlXS5t3bYSZt5sxnL24UluDYvF5KgZ?=
	=?utf-8?q?+6j5ANSEz53+nQ7EZLaNb5Lz9QL9oZ/bF0yIGt1cJWmLibl/u0sDYo/NpiZg5AdFS?=
	=?utf-8?q?N1zd1g0Mf+/zgpZekd5em0b/KzvsjgZUSsTbdlc3LZI3Mf/j4wR7eOymz7JM8F+eb?=
	=?utf-8?q?9GeweMYwPE5Wd+flMMOJwxCYKzegVlIpPV6cKKargG9bA0wISpyiEsf5YVV7oRhe4?=
	=?utf-8?q?kT49VYv9xDWHnesKhrX7KKbObb4LGJt/BrXNSuaFU8Od8DILiPVwbES+mAObRDYGv?=
	=?utf-8?q?gNSgWFtzdEn9qv3Iy8lqBNuC9X6ZwNu/0B1+lBNpaOO4PjxLypzq0mE+bYU76nBRC?=
	=?utf-8?q?AJVfhPnfPg5tSZzvyry08Jh0A3PvAPlkb/ej+2eOlcRi1/8rdzA7FnSo4/xz70cPe?=
	=?utf-8?q?8XLPA/UT52NRtAY+KLyCSg7dXtGBcQVHsiD2+Myee9+fK2HN65z30XpLUnZs3gCFE?=
	=?utf-8?q?RiUf4dVf8zyM40mF8ipEtOPwp3rmEBbZaCI2YTF83LNrBOslkQu+p6VADvyqyd85T?=
	=?utf-8?q?cn4/tcByywIRn3jtWdE6bDEouZy1RUw6xCX7rHpiHKo7kCoI6cae1rQeg9BHoIQDR?=
	=?utf-8?q?X3FxJ2bPrLQHkgcf4PEfF+p8eSuIKUUwE/CZTXc5qMMYObNRKvpfZsgXtTJyhWjWg?=
	=?utf-8?q?rqIK5fGHp4nE6TTDgZUQW4sDwwAa/QwaNJrmgvWNO/tnrU+TbXRrT8H0SWTVyelPk?=
	=?utf-8?q?+Js6Al2auV27+QiWfeFqW6AezcXw9N2oTAQ3OcUTpDxAHVX+wTIQi+3BbSjdJ9GGX?=
	=?utf-8?q?fufIWx94mHEBvANFPhZqwa13KQFJ3mM1yg8fQU0u2ndUp0TUvkgwU6FKHvekrkR0z?=
	=?utf-8?q?x7ZTGqERv3TePzQaya/vi+d4pggic8jojNf1xwgXhPXFc39/DPo+xhfzcwkg0Eu0C?=
	=?utf-8?q?cG1a83j9c6OB0tQoc3J2ohalLxziQ2Q8LnY0W6h3Swm2Cy5ZdDMu/shqkYpMszjJA?=
	=?utf-8?q?cVyU3bn2IHilNc?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 037cf877-1344-4478-c7c7-08d90bd1d7f3
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:55.0772
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 Q5/kk7nsvH3tW8H0lZAV1FxCUJfJV9ZSKrRiICnvOZiiVE+bKD+Xo8nUBUTzFp9YwlgGefCnL3eRrDojL/rNRA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4431
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

An SNP-active guest uses the PVALIDATE instruction to validate or
rescind the validation of a guest page’s RMP entry. Upon completion,
a return code is stored in EAX and rFLAGS bits are set based on the
return code. If the instruction completed successfully, the CF
indicates if the content of the RMP were changed or not.

See AMD APM Volume 3 for additional details.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/sev.h | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/arch/x86/include/asm/sev.h b/arch/x86/include/asm/sev.h
index 134a7c9d91b6..48f911a229ba 100644
--- a/arch/x86/include/asm/sev.h
+++ b/arch/x86/include/asm/sev.h
@@ -59,6 +59,16 @@ extern void vc_no_ghcb(void);
 extern void vc_boot_ghcb(void);
 extern bool handle_vc_boot_ghcb(struct pt_regs *regs);
 
+/* Return code of pvalidate */
+#define PVALIDATE_SUCCESS		0
+#define PVALIDATE_FAIL_INPUT		1
+#define PVALIDATE_FAIL_SIZEMISMATCH	6
+#define PVALIDATE_FAIL_NOUPDATE		255 /* Software defined (when rFlags.CF = 1) */
+
+/* RMP page size */
+#define RMP_PG_SIZE_2M			1
+#define RMP_PG_SIZE_4K			0
+
 #ifdef CONFIG_AMD_MEM_ENCRYPT
 extern struct static_key_false sev_es_enable_key;
 extern void __sev_es_ist_enter(struct pt_regs *regs);
@@ -81,12 +91,29 @@ static __always_inline void sev_es_nmi_complete(void)
 		__sev_es_nmi_complete();
 }
 extern int __init sev_es_efi_map_ghcbs(pgd_t *pgd);
+static inline int pvalidate(unsigned long vaddr, bool rmp_psize, bool validate)
+{
+	unsigned long flags;
+	int rc = 0;
+
+	asm volatile(".byte 0xF2, 0x0F, 0x01, 0xFF\n\t"
+		     CC_SET(c)
+		     : CC_OUT(c) (flags), "=a"(rc)
+		     : "a"(vaddr), "c"(rmp_psize), "d"(validate)
+		     : "memory", "cc");
+
+	if (flags & X86_EFLAGS_CF)
+		return PVALIDATE_FAIL_NOUPDATE;
+
+	return rc;
+}
 #else
 static inline void sev_es_ist_enter(struct pt_regs *regs) { }
 static inline void sev_es_ist_exit(void) { }
 static inline int sev_es_setup_ap_jump_table(struct real_mode_header *rmh) { return 0; }
 static inline void sev_es_nmi_complete(void) { }
 static inline int sev_es_efi_map_ghcbs(pgd_t *pgd) { return 0; }
+static inline int pvalidate(unsigned long vaddr, bool rmp_psize, bool validate) { return 0; }
 #endif
 
 #endif

From patchwork Fri Apr 30 12:16:07 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233183
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 20B15C43460
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:10 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id EDB5261476
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:09 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232284AbhD3MR4 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:17:56 -0400
Received: from mail-dm6nam10on2049.outbound.protection.outlook.com
 ([40.107.93.49]:15328
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232158AbhD3MRv (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:17:51 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=c5yothtKWFDIRkbl7S+6HbGErpC4+ZlCVa7zNBKE4kNeItZUSL0U4O/j3NPh65nphDSFE7tcBcN2tRPQMkeFfklx9IAL9a9u2DjPfMFloZZyy85q0NNToJLAFKMPKaUhY5Ai8ptcQcDm2HU3beZmRPOFbYNHUv9QmnH9gcd0rmPd+M6sfSn0EnA7bgYI3fVvZyRagk/zWJlSFwgQ66WRzV0KilYQb6xGpWZRPq2PJUln3UE9TyWcPk0XceAH+TZViZzEGQTZxMO3KfK1A9YDaeTjDT5Vc/vj8gRoYDcQfFO9wC9PEzkZZ2Tjj6FX3IQxxrWE+hXpSzp8kiqsxKP9Yw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=dR/UBnMvWHCPi7NmmG5+lK70cAQaTJlDu5VpRm84CGM=;
 b=Qsag7k6RdUCABvzNi4HZIII0HhKhWXiHQBafvVMHPuVC27CBBfWNnRvJFHX4WDZNVMBsQdcfcdvhSL7M5l5aMl1M4ReyKkShVJ1e47MEB7fxyt/AfR8S54+YcSjzXTrkd4clFtRnJ8X0Rki02+8b30ffhfnv6DwCcthoBzX8iAvbd4+uno+MyWC9aFtTJoQFLWZX1ADcUXT/u2y3tpezkdFaLzgU/9r6b1MJ3jQB+Y6TXIjyTWnV0NGQeJS9Ym8JEYdfwDevHgfGDZP9FMcH2UsFuM6F6sJQx23Ux5C2wDCSqRwvXiKVza9ePNkPQd5svmjkTfhGtWX9fF4eq1YfAA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=dR/UBnMvWHCPi7NmmG5+lK70cAQaTJlDu5VpRm84CGM=;
 b=y2WDnsEyoCR4xUgPza/tIMJls6Qi9BzmtR5j+kxU3Ivc0MwepldivQyr33gi9bh4Kv5jGJhBECQ1YRtx3iUecb1fQ/K5TKlul3xfYfGLdLLXoSiP87T2Y/zuqSiOaIgY3kJqwhxf7nlY4OBfdAGA1WWjUwk2wwZC4IGxOdcgP5s=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2640.namprd12.prod.outlook.com (2603:10b6:805:6c::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.21; Fri, 30 Apr
 2021 12:17:01 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:16:59 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 11/20] x86/compressed: Add helper for validating
 pages in the decompression stage
Date: Fri, 30 Apr 2021 07:16:07 -0500
Message-Id: <20210430121616.2295-12-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:55 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 14fe380f-a7d6-4a71-7ed8-08d90bd1d862
X-MS-TrafficTypeDiagnostic: SN6PR12MB2640:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB264066864EE9D59B743C4E81E55E9@SN6PR12MB2640.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:8882;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 bMgbvEj/LkhCtcdaWgfq++nsDioY8PPqrgTQ0H0G43a/yOy6S0dRRv/UT65iCcsGpT7TTIf2Zb0QGJ2Ek7Z1bc0bKCerumCYPjNipY22xRFhoLTFHBnoWiB7CogQ3sRFiB0PzA8KIaQ7/hkOB1misdmEeT0NScO74hm1BKmvn7ifpe1YjN47LAOxPh+5kDVl9FCjttbE2Iv7D5Q3cPINi8i5nfX0C8R4y9xXZawFytgvy/e0rS9rGxSwT9AskAU819LkiIDJM4meXkfVlka4eu/qOUzkbKlGPI4/QLyN8R52GSrCUk3evsQMhOuG4X0Wy/KDeJvFXzfsrMwLQHEsP42Vs5+yg1X7kTU1AmYGjZhK1VMAqTVw4ovu00RwLH5DQRC3wVongglFGnhZ9fihKUOYGmhn0ImtNq1F5HEu5Gi6pz0pnmIoDSC27aVAqAAMcGj3iWbCmQDdpQpq+SaY4j6WoPfap+/vg9J01uy6xRoV03Pp56QRHtJ12sc1qVq5/j9vwzRYhdLCxiB2QAuP/7Fp+qDqcN3LxJ6Gc50uqfgjjBNDqejxx5HOG/kYsDTiMeu52tg73Yt5RtBvrkkCzDngLb7YcBSyB25N/EXqBcYJe1OvzZbxk/cSkop0BgxuMUNnSfi1JOreoCitaSR22w==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(136003)(376002)(366004)(396003)(6666004)(52116002)(7416002)(316002)(16526019)(2906002)(36756003)(186003)(26005)(38100700002)(38350700002)(66556008)(66946007)(5660300002)(1076003)(66476007)(4326008)(83380400001)(6486002)(86362001)(8936002)(956004)(44832011)(2616005)(8676002)(7696005)(478600001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 JP+S5NWxGQqrfu0PkCxJh1ngkPenyxHKhzJyrfhQuIMDArflLOfIBHmloQdLO6l/Jxh1EUdkNml1GZni6rWLPpgtpmOkLyWLZFQgZBc/8oGMKR95T7Rvy2fXGTx/3V8m4TMJPyjt3uv7nAroYSYEgt848MK5yMvHk1ur0bDezvb3zVRo+vZ/RsVxOoJAtqhwI/WZJrkpYkLw59ngjzzeuHrnqYkkjclIytZpHZHVbaPQUy967W5XgKUk1jLsjqLEcReMUIXeLmvFKuUleWPlMvPxw3lEE/YCzX+VP1yCtdsx07EIPUwieKio8F3v1cscQomxwEMXc7sDcSPByhg+1VTPXMES7xHjU72fLFkgJwfjSwRZuGZX+ciYApmOjVK7iZ8zoZIxkNK4ddj1XXoZX8HoG/GH+wonkHw3e3viLTjPARpbi/BLtN/cE9/6ZUnYEcefnl4mT+l41FNTUb40r6rxZCj5zeMoA5aBx1dEmAyytKQ34AxkpENDJnSVlmmDxvG/ZEwAQE1u4mQzpC0qBZvFUIyEInSwnBOhTM14sGwcqJbZbF9WgN8nnm14uKCFcuuBZ+JkzhZ1SINDM8E1l1JvUPwxUvUW6xRzPxcpMIzdwy50Z6jF7Xqj1nfhWGM9VTKs7OXkCUOmuEc13S0ktInL2qvi9JpcFzdDVEp7WoWhKVvsfvK2OsISQDeZ8TxhBCeD8xYT4wqP1SCUwtSdv2p6RT+ueyFquDL3Y8gfgWLUOfWZjjPlhdsGzJLTKeeADGofNkYuScHPLRaVgSsDWZKoE2GEiYdGyBvjkZLWPXn8NHxLVOULLi6hc8bbQiRLTfS/8wBkzk6YbI+bHQRt8zTwm005dE2Q62/DSl7TXtqtX5FeI0YJq1CkFcSVZqOiAjFeJTNqIFtJmLoEIInstv3E1YX24yj/+1suPENLJuedqsRKD5z9Nhx/R+OnxCOsQmZMtBX/2TSSnWTljUha9CJUaG4waUWVT4jJzpNiAMtXUvsOCPZlfqqKw55nMCB2n9owtTyD2xAgqaoDT0e4giqqZE3jl/levI/jRZ/DkbqDbyHxEpo+fw/19eEbIveGN7NTlNW8RRaziiXGJDQQx3d0FIi27jJTlEyodVA/xwluE6ZmO/ErRWH4ITzEhFGA915JRBItE6VamDamCgmt7gVehvyg4cN3UqUdGnhboikL9Dx4UPD7aOYplB49VsU/KF3GbHCiISQtbONEf3yi1/PiEfNMGCJWVc6lqoVgrNAauT/rg5lPyPJ6ipS10U0BKUlw7wFDRR2vYFAzxXki+8Eo1q1Ibuc1mnYU3gS+uAWH8vv+T4cdPeKmcAAmWMI2
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 14fe380f-a7d6-4a71-7ed8-08d90bd1d862
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:55.7648
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 KTKO2RSzL3MOFTGmZMd8OekYx2aV7mBJT+MXRKqzMwHn7FP6Wz/Qf72hPqJyKyTUQFgw0F0+Z2aE3QYqBEBs8Q==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2640
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Many of the integrity guarantees of SEV-SNP are enforced through the
Reverse Map Table (RMP). Each RMP entry contains the GPA at which a
particular page of DRAM should be mapped. The VMs can request the
hypervisor to add pages in the RMP table via the Page State Change VMGEXIT
defined in the GHCB specification. Inside each RMP entry is a Validated
flag; this flag is automatically cleared to 0 by the CPU hardware when a
new RMP entry is created for a guest. Each VM page can be either
validated or invalidated, as indicated by the Validated flag in the RMP
entry. Memory access to a private page that is not validated generates
a #VC. A VM must use PVALIDATE instruction to validate the private page
before using it.

To maintain the security guarantee of SEV-SNP guests, when transitioning
pages from private to shared, the guest must invalidate the pages before
asking the hypervisor to change the page state to shared in the RMP table.

After the pages are mapped private in the page table, the guest must issue a
page state change VMGEXIT to make the pages private in the RMP table and
validate it.

On boot, BIOS should have validated the entire system memory. During
the kernel decompression stage, the VC handler uses the
set_memory_decrypted() to make the GHCB page shared (i.e clear encryption
attribute). And while exiting from the decompression, it calls the
set_page_encrypted() to make the page private.

Add sev_snp_set_page_{private,shared}() helper that is used by the
set_memory_{decrypt,encrypt}() to change the page state in the RMP table.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/boot/compressed/ident_map_64.c | 17 +++++++++
 arch/x86/boot/compressed/sev.c          | 50 +++++++++++++++++++++++++
 arch/x86/boot/compressed/sev.h          | 25 +++++++++++++
 3 files changed, 92 insertions(+)
 create mode 100644 arch/x86/boot/compressed/sev.h

diff --git a/arch/x86/boot/compressed/ident_map_64.c b/arch/x86/boot/compressed/ident_map_64.c
index f7213d0943b8..c2a1a5311b47 100644
--- a/arch/x86/boot/compressed/ident_map_64.c
+++ b/arch/x86/boot/compressed/ident_map_64.c
@@ -21,6 +21,7 @@
 
 #include "error.h"
 #include "misc.h"
+#include "sev.h"
 
 /* These actually do the work of building the kernel identity maps. */
 #include <linux/pgtable.h>
@@ -278,12 +279,28 @@ static int set_clr_page_flags(struct x86_mapping_info *info,
 	if ((set | clr) & _PAGE_ENC)
 		clflush_page(address);
 
+	/*
+	 * If the encryption attribute is being cleared, then change the page state to
+	 * shared in the RMP entry. Change of the page state must be done before the
+	 * PTE updates.
+	 */
+	if (clr & _PAGE_ENC)
+		snp_set_page_shared(pte_pfn(*ptep) << PAGE_SHIFT);
+
 	/* Update PTE */
 	pte = *ptep;
 	pte = pte_set_flags(pte, set);
 	pte = pte_clear_flags(pte, clr);
 	set_pte(ptep, pte);
 
+	/*
+	 * If the encryption attribute is being set, then change the page state to
+	 * private in the RMP entry. The page state must be done after the PTE
+	 * is updated.
+	 */
+	if (set & _PAGE_ENC)
+		snp_set_page_private(pte_pfn(*ptep) << PAGE_SHIFT);
+
 	/* Flush TLB after changing encryption attribute */
 	write_cr3(top_level_pgt);
 
diff --git a/arch/x86/boot/compressed/sev.c b/arch/x86/boot/compressed/sev.c
index 7badbeb6cb95..4f215d0c9f76 100644
--- a/arch/x86/boot/compressed/sev.c
+++ b/arch/x86/boot/compressed/sev.c
@@ -22,6 +22,7 @@
 #include <asm/svm.h>
 
 #include "error.h"
+#include "sev.h"
 
 struct ghcb boot_ghcb_page __aligned(PAGE_SIZE);
 struct ghcb *boot_ghcb;
@@ -136,6 +137,55 @@ static inline bool sev_snp_enabled(void)
 	return sev_status_val & MSR_AMD64_SEV_SNP_ENABLED ? true : false;
 }
 
+static void snp_page_state_change(unsigned long paddr, int op)
+{
+	u64 val;
+
+	if (!sev_snp_enabled())
+		return;
+
+	/*
+	 * If the page is getting changed from private to shard then invalidate the page
+	 * before requesting the state change in the RMP table.
+	 */
+	if ((op == SNP_PAGE_STATE_SHARED) && pvalidate(paddr, RMP_PG_SIZE_4K, 0))
+		goto e_pvalidate;
+
+	/* Issue VMGEXIT to change the page state in RMP table. */
+	sev_es_wr_ghcb_msr(GHCB_MSR_PSC_REQ_GFN(paddr >> PAGE_SHIFT, op));
+	VMGEXIT();
+
+	/* Read the response of the VMGEXIT. */
+	val = sev_es_rd_ghcb_msr();
+	if ((GHCB_RESP_CODE(val) != GHCB_MSR_PSC_RESP) || GHCB_MSR_PSC_RESP_VAL(val))
+		goto e_psc;
+
+	/*
+	 * Now that page is added in the RMP table, validate it so that it is consistent
+	 * with the RMP entry.
+	 */
+	if ((op == SNP_PAGE_STATE_PRIVATE) && pvalidate(paddr, RMP_PG_SIZE_4K, 1))
+		goto e_pvalidate;
+
+	return;
+
+e_psc:
+	sev_es_terminate(1, GHCB_TERM_PSC);
+
+e_pvalidate:
+	sev_es_terminate(1, GHCB_TERM_PVALIDATE);
+}
+
+void snp_set_page_private(unsigned long paddr)
+{
+	snp_page_state_change(paddr, SNP_PAGE_STATE_PRIVATE);
+}
+
+void snp_set_page_shared(unsigned long paddr)
+{
+	snp_page_state_change(paddr, SNP_PAGE_STATE_SHARED);
+}
+
 static bool early_setup_sev_es(void)
 {
 	if (!sev_es_negotiate_protocol())
diff --git a/arch/x86/boot/compressed/sev.h b/arch/x86/boot/compressed/sev.h
new file mode 100644
index 000000000000..a693eabc379b
--- /dev/null
+++ b/arch/x86/boot/compressed/sev.h
@@ -0,0 +1,25 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * AMD Secure Encrypted Virtualization
+ *
+ * Copyright (C) 2021 Advanced Micro Devices, Inc.
+ *
+ * Author: Brijesh Singh <brijesh.singh@amd.com>
+ */
+
+#ifndef BOOT_COMPRESSED_SEV_H
+#define BOOT_COMPRESSED_SEV_H
+
+#ifdef CONFIG_AMD_MEM_ENCRYPT
+
+void snp_set_page_private(unsigned long paddr);
+void snp_set_page_shared(unsigned long paddr);
+
+#else
+
+static inline void snp_set_page_private(unsigned long paddr) { }
+static inline void snp_set_page_shared(unsigned long paddr) { }
+
+#endif /* CONFIG_AMD_MEM_ENCRYPT */
+
+#endif /* BOOT_COMPRESSED_SEV_H */

From patchwork Fri Apr 30 12:16:08 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233181
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 27B7DC43461
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:14 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id E964961405
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:13 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232317AbhD3MR6 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:17:58 -0400
Received: from mail-dm6nam10on2049.outbound.protection.outlook.com
 ([40.107.93.49]:15328
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232125AbhD3MRy (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:17:54 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=gaQX1ZAUydEebxLThY5vQxJYihS3EuLgfNfC/pBdQTZZxX1NI+4FGWcqEXmidurrkzQt1BQKn7+JdrT6toJDJs/mXCWw/5F9SFh7TCrUkSoYfuaNZZA70JcqAp2s1jq2KJPEzcw++9mrnGioZPl0ErVXNFVunrML4ijheChY51A4sokaBhp3pCYjyal+bQZtMXIWtHVr61mVzjRoKeXWqa4+XxvAm8WiCb2mwq1YSv6/a8p4vp35FwIMaDqbzo8zvV06o22XODMexFhSI9xo9GCHznFyU5DXMHF51urIm50HS0FJgg1wpDEldre0YnT4OdBmJ4KGCvTqUsK1zWB9AQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=wQpuiwLdMfJYiivQvigGB5VtDe315f0d+gl7yidM63Y=;
 b=HL8fRTRby/2Y+mor4aHei5F3zTMZit89UO1qQzEKJkm4hOzn3bNgSMclfOI85tqDuRjLfXCoi/fgCv4MjdAY32Lg3e3S3HRECX5wDhikRwTRmItiounUnsXt/3aproq2PdwXiYYBcZkM9TizO72oRI7ZL2PP51HYiFN5mH5nCKPNgNpiE5MMC2tz1LB38sDQDF5H81+7LtoMSCD5OzeAmv9poMM9FxwSJYNBjeFbssmBm+k/nydRj6Y+trp91ilxovI8GX1DHSzviA0jLotucO62yUF3EAsOzyIfXB0norE+cOn29Z3aTpnQ6v7oQ3iXGnxFqL+WpzqH2W+E3gL+8Q==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=wQpuiwLdMfJYiivQvigGB5VtDe315f0d+gl7yidM63Y=;
 b=PQc+ka+FBtd/m6V8G1DRai2ubCvuuLo3yeEC956jGYPwBcXemJaWenzJ9p9Y14Q4iwc1BN7ntjyQDbbu4T4unjdf0B/110pm1BMMXOSPIo9oY0d334EciJ081DPo1YubX/NI0sbhMDDfX2kuVfTjiXbbLXZIvbZJK8ZghY8/xXM=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2640.namprd12.prod.outlook.com (2603:10b6:805:6c::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.21; Fri, 30 Apr
 2021 12:17:01 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:17:01 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 12/20] x86/compressed: Register GHCB memory when
 SEV-SNP is active
Date: Fri, 30 Apr 2021 07:16:08 -0500
Message-Id: <20210430121616.2295-13-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:55 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: ed337953-4134-4d3b-fd9a-08d90bd1d8cf
X-MS-TrafficTypeDiagnostic: SN6PR12MB2640:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB264050257A8D7DF295BD709DE55E9@SN6PR12MB2640.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6430;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 hfLj1UY4mQZkBHhdjAcJlc1IqSSXuCMhQ4QD7xMy/bDDFIspkwVChWaBPTe8CCy6krofyJ7Bsp6+S0th5g4b9InVmI1dWSVF6wZxQZJryN9sSX/kc60Mlo47S6Y1fJ5PWX3iEFl9VaIjz8nISBfRdif12v+UjbKnT7rnHleVd3O+gvhn93QOgsagOz/D1sIZaZbEVmx6VaTqKpeoEDwCuYPOY6AjllEsb0nmAmY/P1H9d4KvfGGCD0JIe85lH5Flg3ahfBJlhNYyI6hSG7dw7L3G0HDuAykTaAOQAx0brhKrq+08C6NHccVZhJDDC2xFPsrMm/iOY5fEpZTQGdDG33esFc6FyqUzu7HTPfmkLVHXFNxJB6s8bYMeXo/C8bM+CX5tTlmLCtyGgK3XX8ZCa1rrrvIIR8evIv6d/8vPmZufL5MrwYdq0O/KMVaGYJ6bou3cdB0GNEHeUpCCj9hV3ryrWicM//sGJcb6a+5CvWB+AaNBzNpL8T79gt6SLZPxMENfn3yqpOjYGjnywl9ow3C3FVVzE4y41N/Az+/EvmAYKQPw1xdmhLMjah3csqKCcJnhk8XzHkQT9gwaY+lTBIWKL2cLIv8xgRFMCVIaKWJVABH6zRdgNqmD5LaQsBNGU5VRvoBwUI2cw1sjUmJKhg==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(136003)(376002)(366004)(396003)(6666004)(52116002)(7416002)(316002)(16526019)(2906002)(36756003)(186003)(26005)(38100700002)(38350700002)(66556008)(66946007)(5660300002)(1076003)(66476007)(4326008)(6486002)(86362001)(8936002)(956004)(44832011)(2616005)(8676002)(7696005)(478600001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 bCg4mMVDJw5l4ioNgf2jmZft2RVOnlqi2HD6/U+neDQMLVfOixundiIZ0sGNd4tzWAKz5zITQ0KAbnnobIpaq92ycHJQ7eajIeuluegxqJll1Z3i2UJ02zF3jho/f6TCfgrcDUH7Zq74iCqGXrpK4Wxv84CvVZ70Kqu0EpYGEItkahcZsVlQ+AhPQqNvH9JELRM+W8gCfZuA2uWudYZpJ6p0U9sUCdvOGKpoFMEK60pWPozBtudcYxmFg6pKKHXoZSR07hsVIICR1wTAzAqVTnWyt9aSNZJhJKMzAWFW1QHLr5l3Ss9Nbx4bJnVURaaSxQKEJLLz+Jo649kQ9PGLIKxnd3myUkUN2bgaFUshSW9iZJufSOuO3FIDC7g+Q0VGHHPs6chupLTo0YG+Kkn6Xsk3mH6dsbZRoFLpz9QitoL5ZbpcHJBRze6oTRgxFaH+QW9dFMAQS8O8cgLnYjIFpM2EbA7+h30G+YaD4+cxSlHIVPOqgXDRX64wA04BzrDDyUqa23XDf9ATT727BqHOPtWGLM5STZKgMBUG7OCi9h9RZtXc/lZgQ/ZVPGcMYXDomYp2n4AF9rTcHhGyjFqzYARLY9PWQvfGp2C81carL1gEv8vgnAr6ZhWgPNrFmyB1MTNrcoYh7kg7pwtuv26GRZsOICNnDThYxsdiYNe3f2efhpgTzpWOvGR05xMzmSvd6tETGqsui778KbRqx2Qgx9JZXX3uOPezgAjyeomcUUTtyFgODl3AcGTWI8yY/b54M7Aw6aUNw+5jw4suNT/j0hITVy9M/99ziUagTEUeWrb6UhkPksiDj5v7S+H0cVUY0AvYc6Hc/WWBMRAmSJARP/2vxcha7zXOkbhD2ePpxyZ1bHDio/lrSxzdYoXIay6pmig0ct6FyRLDQLqWvbKuaZH0P9kXU0YLhh9auHk1AcEKeeTl1OnjHsNHd7po1XQQNohSp9gkIUq3m0s2mEc6wT9Qivotv3FvQfCJIZmf5UwyjsqCU+RHQvkSuAvzBIZvNP9gE5VJICj++nOic96j1qEA6nXIn+mpeShTOjaPO2CwrPJlQqVQ3BlQC3AfhPY2up2D4HfWDFUmCZ/s2N4dcNsoC3H+9PRY02GI+WhjOuPjC0Q7CshI8eelaEzmVP+bJUCCba0Bbg+VwcWPLT+7+eGS4D50YWpd9wmDc1yS1GG+WGlRNYoEK4B3XOl3iVFoYf1GOgU1RmqC+ejkAYxugl/WiSvrEDlfGun5aB4e6X77Xl5xfTzvUg/reNTmhf03BQxFkRg5YAWThEIDx9lq8mmbFLrKYqEfRbYtyaWlRwS0GgbJYhitLS0hf0OzpH8e
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 ed337953-4134-4d3b-fd9a-08d90bd1d8cf
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:56.4914
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 r109YRyF15Of1inGT6QCuuSPu5UXNiUP4G2QARgTO6bEEEh6XpKaCbl4GYm5wOnnN7p3X1t/q5z+SNEqrMZKwg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2640
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The SEV-SNP guest is required to perform GHCB GPA registration. This is
because the hypervisor may prefer that a guest use a consistent and/or
specific GPA for the GHCB associated with a vCPU. For more information,
see the GHCB specification.

If hypervisor can not work with the guest provided GPA then terminate the
guest boot.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/boot/compressed/sev.c    |  4 ++++
 arch/x86/include/asm/sev-common.h | 12 ++++++++++++
 arch/x86/kernel/sev-shared.c      | 16 ++++++++++++++++
 3 files changed, 32 insertions(+)

diff --git a/arch/x86/boot/compressed/sev.c b/arch/x86/boot/compressed/sev.c
index 4f215d0c9f76..07b9529d7d95 100644
--- a/arch/x86/boot/compressed/sev.c
+++ b/arch/x86/boot/compressed/sev.c
@@ -206,6 +206,10 @@ static bool early_setup_sev_es(void)
 	/* Initialize lookup tables for the instruction decoder */
 	inat_init_tables();
 
+	/* SEV-SNP guest requires the GHCB GPA must be registered */
+	if (sev_snp_enabled())
+		snp_register_ghcb(__pa(&boot_ghcb_page));
+
 	return true;
 }
 
diff --git a/arch/x86/include/asm/sev-common.h b/arch/x86/include/asm/sev-common.h
index 733fca403ae5..7487d4768ef0 100644
--- a/arch/x86/include/asm/sev-common.h
+++ b/arch/x86/include/asm/sev-common.h
@@ -88,6 +88,18 @@
 #define GHCB_MSR_PSC_RSVD_MASK		0xfffffULL
 #define GHCB_MSR_PSC_RESP_VAL(val)	((val) >> GHCB_MSR_PSC_ERROR_POS)
 
+/* GHCB GPA Register */
+#define GHCB_MSR_GPA_REG_REQ		0x012
+#define GHCB_MSR_GPA_REG_VALUE_POS	12
+#define GHCB_MSR_GPA_REG_VALUE_MASK	0xfffffffffffffULL
+#define GHCB_MSR_GPA_REQ_VAL(v)		\
+		(((v) << GHCB_MSR_GPA_REG_VALUE_POS) | GHCB_MSR_GPA_REG_REQ)
+
+#define GHCB_MSR_GPA_REG_RESP		0x013
+#define GHCB_MSR_GPA_REG_RESP_VAL(v)	((v) >> GHCB_MSR_GPA_REG_VALUE_POS)
+#define GHCB_MSR_GPA_REG_ERROR		0xfffffffffffffULL
+#define GHCB_MSR_GPA_INVALID		~0ULL
+
 /* SNP Page State Change NAE event */
 #define VMGEXIT_PSC_MAX_ENTRY		253
 #define VMGEXIT_PSC_INVALID_HEADER	0x100000001
diff --git a/arch/x86/kernel/sev-shared.c b/arch/x86/kernel/sev-shared.c
index 085d3d724bc8..140c5bc07fc2 100644
--- a/arch/x86/kernel/sev-shared.c
+++ b/arch/x86/kernel/sev-shared.c
@@ -81,6 +81,22 @@ static bool ghcb_get_hv_features(void)
 	return true;
 }
 
+static void snp_register_ghcb(unsigned long paddr)
+{
+	unsigned long pfn = paddr >> PAGE_SHIFT;
+	u64 val;
+
+	sev_es_wr_ghcb_msr(GHCB_MSR_GPA_REQ_VAL(pfn));
+	VMGEXIT();
+
+	val = sev_es_rd_ghcb_msr();
+
+	/* If the response GPA is not ours then abort the guest */
+	if ((GHCB_RESP_CODE(val) != GHCB_MSR_GPA_REG_RESP) ||
+	    (GHCB_MSR_GPA_REG_RESP_VAL(val) != pfn))
+		sev_es_terminate(1, GHCB_TERM_REGISTER);
+}
+
 static bool sev_es_negotiate_protocol(void)
 {
 	u64 val;

From patchwork Fri Apr 30 12:16:09 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233189
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 2A6A7C43461
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:22 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 085E161405
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:21 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232454AbhD3MSI (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:18:08 -0400
Received: from mail-dm6nam10on2049.outbound.protection.outlook.com
 ([40.107.93.49]:15328
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232280AbhD3MR4 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:17:56 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Ud+Qqn4m2q9wiGR9G36AlyyQ/6QtoKNZIqx/drpMFOP50rITL6vr97Z5HegXpF6vS/+iAKqUbqvyswpGURCgiIhKX2EMWhZJr2jfUBNBnggOL3TH6Kr1pX5bN+ZlvFNHcFQsSR6zRu6k/s78O8uvN5gR1pqEHqZ66syXEud+OKP0bG4YIfqHCxpLziOKYxTKF1Y7KN6FKA01PWzFK3G4srLYNRQVGV2vxluyiH/7Gbx5SFTJ0LP/oPnZjXnPwlr9OL32cJK4swBOo+l+B3Y+Cx574Z+cJeehkTXrIlzGdbellAPs7BqDAXWx34vVfa/JfL+wf8WWy+Sq8csMJoPy3g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=v0rfvJ7o1K+3Q7drpLS5ezsU0Cf1EqtBIR1BTIor6Bg=;
 b=LVi9Nwc+ygAgDbbY34CsQd7NX0HkI6oIBm/R3NZi9MvVh9sXfvzCs3DsFtQhHPnrfQJnCqJHppj8mGamDYxOLf5toebyOXw0Tafmq4ZAiBfaCRsS4A6qptoe6HnF2Ww0GYfEXq+0rDiC8Vrb1IaA1bCsZGIzd7AX+hv3zMTNFz5claWBxJZddhS+XZSD7KVG+zKb5wqAD5NyrNzaq4wAfYaIeC4zWmiC2nh3vBYl+Z4GA/8srqLhYf4DEb3YbgLYclmxG99yBQFGgRGF9xpTcQIb3Dll7x2zYVMBH9KkfPstnhP1RYUQgcaw31SnA7sWEcB1MQOgsy0t/pq5/iMlfA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=v0rfvJ7o1K+3Q7drpLS5ezsU0Cf1EqtBIR1BTIor6Bg=;
 b=ZxG8Oztj2HjtgUIjsfASfLQt36fLVliR8rRexAaJrmFkSe27skSTCaAFYyoOlfB9WHIsg/WEqATdWABXdfouIbLNld+Y9dbTSOPLB5pWCwjSjEovm7KjWPicgbIciUCJrTWDZkeipXf4C9xW/t4QNbEnWX2I6p1GO5QMq1F6nxU=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2640.namprd12.prod.outlook.com (2603:10b6:805:6c::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.21; Fri, 30 Apr
 2021 12:17:02 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:17:02 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 13/20] x86/sev: Register GHCB memory when SEV-SNP
 is active
Date: Fri, 30 Apr 2021 07:16:09 -0500
Message-Id: <20210430121616.2295-14-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:56 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: dd7d1bc6-729f-4d58-2e4a-08d90bd1d93d
X-MS-TrafficTypeDiagnostic: SN6PR12MB2640:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB26407C699AC9D59023A0176DE55E9@SN6PR12MB2640.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6790;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 J0Ht+AwBBe9M3lQLMnhlNgC/gFKqcdH9zzVQKsj5UHLCRFRx8GRMuXLFiKTgUmZLdhrL89sWfWZdBfpCQ9Vd+xpqw2N6aIZEK8n8JiG80pj2Tfn+mm8dS1wRFM3xyLx1rPx9U/j2nGEVQcFajhEAg9GzlTSYZUrRT1ozjBBe4gLxhUMCZutt/soYoqcuvvFY+F/ekzd3DUIhW1+HzbB9vCfJdWPY8xbmd5fONWqWqDQgiyTNh3HUOSWjvdXEm1ED+qC0V157NQv6nXaNMpanO6IoCXHlbTHLoUV+liu1GI8TILsD2DmRbcNfPelL3g1QABubUWxCXfN9W0nZDlfeSd9tmRzOKyJ1XfWSt7EDJbxlw/YMWEIsPU8DUrCidx8VFCftUfJzhuFRiz9bl2HxQXkOf4Ohr9cq7HZPgojoWcLmSr52eomdcm0H1Ub6tyFEaXgU7uv9W+2vlz0D4qnK7+27J5jy+DRPVdgrobmNegYfLr/T1qFooiNezYqPSzufIERzsjFgwBkrHfLkI7EgpWKuNiovVjvq/vuBiWAEFX9iplcK1se7o1bgfbWbDRqRWe4K0Fp+8OzvZAqVNBb4rV+IF2c/IyI41wXg68RgEYrcZwBMZrqnzHxsHw4ZVQHcfYf15hGN8KW3SzCm/MmpJQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(136003)(376002)(366004)(396003)(6666004)(52116002)(7416002)(316002)(16526019)(2906002)(36756003)(186003)(26005)(38100700002)(38350700002)(66556008)(66946007)(5660300002)(1076003)(66476007)(4326008)(6486002)(86362001)(8936002)(956004)(44832011)(2616005)(8676002)(7696005)(478600001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 KdMFeG7nw1dp9TXurs6tIp3ZYKNC9ut7v1IXo5TRpgvlI7m+YX0ZsJwsc2H4wph6vaV46C+oab1V/XtsQLnXamP+8mnvunJTubf50Iy9cp2b9QTB0g3CIxyGQSqExEnv87Wnsv5a+GnPBjL7ZZN4DWz3FPkq7BSKClt9IielLx9XtBC2dq/kTBzGibgIpAvOGzq8cnWMZu35lMpe0lgoayIiZC6u13WbjZOE+28U1AhN0dtYWtw3I/gTfFK1uc6Tmq6Pc1TZHChAny6S/6sOAe/eWcOl7AQTdrcEHvAOZK0Lao2PggKkp0ZnXg8noVYcnPa8hTGyUzv22UeiwwFiOrAPRFG64uPDwQAFfKl75lNJ9kDBsSTBFiLaNjsce4HmRucIN9PCXAJBkgUqJn9z+3L7GQfwDVp12Hagw1Pfzqklds9vT+5pcQuS6UwStfa2qUrx6E6DGIiJ/+CJ6JwAE6xv3l2RnXXFO4FTsk+gF2QwVNvgKP625H24v5j4xEnL1K8hj9BThNJZDrV0KVaSXHoKAqBzU3dxjhEfRr7ib0teQhji+qn1i1W6WqHARx8xmdosmz7HxEANDcd1EbMYIZcW9NXOPNglyKgvKXjoTq+NjKa6pwaqZgTxsnOt5kwgxIsHiVvXRiiQnWApOJhddp4Hq616vM85IAU3zofX0qKWAWtyAKtOP1ienLeDlC1x/kDJM6Vy1VCmiVYumq7YnG/snsgLZxxsg/LmS56tTYCkYF8ENbb5TPVEoShuVxbBEIwAz2y8otR8TjOMQsSRNASN9C9EqUbtuChnVsi7PnD44EL5EBUu009pLjGy06ztsIvg4WiV71Q9xJqzCZQAbwkK1cKLpnKdQSwZipoOl0hIihjHNH/r6q0NSTCq1MEAZqYN5srMD9fPWUK5n7oWPxj75IotYaz9CubMDpSyEECnRxn2jMpyorH8Aqhc35niHPA/sVvjRIwyGy+A3QkeKb4r7MVLamh5tz0bEH9TMOM3GrY1HCctpXubAWHTE9TxYFtVddM8stQL3zYvcXwRXes8q7o2jIHU7VuAQVceiApUQkw1wQB36K5ghKMpy9fMItB9C/lMcutuAcHrocjmLepdUUCc0bJ/6Db5gb9R0YlQH+TN3RJ6xSe6EV89t1OxS4gdvklFUV2zWKTAo1qnqApNBAg1kd0NJPRkAizpoM0DkqX2PhWSihREzipcRqGNryrX8xMhzh/YKdWzUYeytfdmK0ZadDc1XbZ2F+2fnatmH2/9UAI2DcGCt8eGNXBnQBAxd97K0RsZ3h1RNLRrAFYiuWDb6zjq0RqyL6ndQehVbODE79Ua3meCKYiONkMa
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 dd7d1bc6-729f-4d58-2e4a-08d90bd1d93d
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:57.1940
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 jfQTKHSF6EV+Zl2lkah6Tx3kn5crWFJjv32GQiyKThg2w/BsVnRRxqk6ZYbFKZ7CIX95d5/oTF/b9CNCauQdwQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2640
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The SEV-SNP guest is required to perform GHCB GPA registration. This is
because the hypervisor may prefer that a guest use a consistent and/or
specific GPA for the GHCB associated with a vCPU. For more information,
see the GHCB specification section GHCB GPA Registration.

During the boot, init_ghcb() allocates a per-cpu GHCB page. On very first
VC exception, the exception handler switch to using the per-cpu GHCB page
allocated during the init_ghcb(). The GHCB page must be registered in
the current vcpu context.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kernel/sev.c | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

diff --git a/arch/x86/kernel/sev.c b/arch/x86/kernel/sev.c
index 8c8c939a1754..e6819f170ec4 100644
--- a/arch/x86/kernel/sev.c
+++ b/arch/x86/kernel/sev.c
@@ -88,6 +88,13 @@ struct sev_es_runtime_data {
 	 * is currently unsupported in SEV-ES guests.
 	 */
 	unsigned long dr7;
+
+	/*
+	 * SEV-SNP requires that the GHCB must be registered before using it.
+	 * The flag below will indicate whether the GHCB is registered, if its
+	 * not registered then sev_es_get_ghcb() will perform the registration.
+	 */
+	bool snp_ghcb_registered;
 };
 
 struct ghcb_state {
@@ -100,6 +107,9 @@ DEFINE_STATIC_KEY_FALSE(sev_es_enable_key);
 /* Needed in vc_early_forward_exception */
 void do_early_exception(struct pt_regs *regs, int trapnr);
 
+/* Defined in sev-shared.c */
+static void snp_register_ghcb(unsigned long paddr);
+
 static void __init setup_vc_stacks(int cpu)
 {
 	struct sev_es_runtime_data *data;
@@ -218,6 +228,12 @@ static __always_inline struct ghcb *sev_es_get_ghcb(struct ghcb_state *state)
 		data->ghcb_active = true;
 	}
 
+	/* SEV-SNP guest requires that GHCB must be registered before using it. */
+	if (sev_snp_active() && !data->snp_ghcb_registered) {
+		snp_register_ghcb(__pa(ghcb));
+		data->snp_ghcb_registered = true;
+	}
+
 	return ghcb;
 }
 
@@ -622,6 +638,10 @@ static bool __init sev_es_setup_ghcb(void)
 	/* Alright - Make the boot-ghcb public */
 	boot_ghcb = &boot_ghcb_page;
 
+	/* SEV-SNP guest requires that GHCB GPA must be registered */
+	if (sev_snp_active())
+		snp_register_ghcb(__pa(&boot_ghcb_page));
+
 	return true;
 }
 
@@ -711,6 +731,7 @@ static void __init init_ghcb(int cpu)
 
 	data->ghcb_active = false;
 	data->backup_ghcb_active = false;
+	data->snp_ghcb_registered = false;
 }
 
 void __init sev_es_init_vc_handling(void)

From patchwork Fri Apr 30 12:16:10 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233193
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 33284C43462
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:28 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 01C8361621
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:27 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232532AbhD3MSN (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:18:13 -0400
Received: from mail-dm6nam10on2056.outbound.protection.outlook.com
 ([40.107.93.56]:37728
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232313AbhD3MR7 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:17:59 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Uy+1/iq2zQ6ZU7N/XZDyaNTBYUwzmDcxYgOr5dPofQayFTyO843LPabK7AjJJuUnKOExeq5rssQeIxJXbGlckPCzt8db1IPvBmmNK/LphxhrV7eB5uLLJu03QLVJPOgq/em+GFXorAoy1nY/Wy0zMY+bvXg0rn77Ndf2jIl2+Zn7ayvXhNwfKTTZ9x19EzMVyr9udKmzchyM1u106uLX8qCJOyaGdKUETP+hgvfxBGeIav7by6RfCi+MCvGEnFGflDv21SOuj05h+r+Ymj4AmNSvHcg+hF6ysJGGJ6GiS6tA3LzqDTICMHDt7TeCaQhCq0nGouAIgTOBD1ZnbEkJzg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=2IYYbkzCemoJSX5JRfh+d6XPS1LjlSdPCKjkUCy/6rk=;
 b=D09IqOkhfJagdOMnpHCFxVBHWYdnP9wkp+22G8D/uHSRasO/ZF4FyhOepsnsQjB9O6wcFwL/KoLtZ+yxw3H8UQb2/pkZT/0aSauKq1N5DCv/KpiZmGf16pxkUbfj3ENRv4hz+076ij+eRHn33f0PUvttZqATigGDrOswtIP60zt0JZw2dyuyNPKRzH9GOqeF9y7tUyYtLuCrS708yjmk4S3/VUWUyFmNi7X+LaxSuz/M3BYZdxGcWGwOxRWg+DVAOgTm/Gt6y3Vj0G0LTsRnjvhGUksjBbFTvlmdCRjjUtuLPp3eMWZ36YEkBiPMnEoEqjsMUXePmSGl57wmzrlZVQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=2IYYbkzCemoJSX5JRfh+d6XPS1LjlSdPCKjkUCy/6rk=;
 b=YBt9qyB5Ico/vVG8CtZqUHx3ntU1bDcfkoKf2iBQ6gMhbEdZSKqjqBOjdCEu9BhmICZiWqlkoT/4jiiKgwqn9OK5vnsQS++DjjtyGWw0PUGo/AolIizWOs/ZJOg0f5P0/s/nTOHmFllsEdQ0lnm91wsHLtKo/ho5X3qiTB8xzWI=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2640.namprd12.prod.outlook.com (2603:10b6:805:6c::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.21; Fri, 30 Apr
 2021 12:17:02 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:17:02 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 14/20] x86/sev: Add helper for validating pages
 in early enc attribute changes
Date: Fri, 30 Apr 2021 07:16:10 -0500
Message-Id: <20210430121616.2295-15-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:57 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: f474b941-8b9d-45ff-befd-08d90bd1d9a2
X-MS-TrafficTypeDiagnostic: SN6PR12MB2640:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB26408FF1B1FEBD05C17C8E39E55E9@SN6PR12MB2640.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:2512;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 ceuaSeusMnVPb54CGk2NgtQwRTeOKCNeA4MU9YFy6ofIwwjEl3GwGJx7PpYmwZoR/38ewufPr0sd5WeEvyvxJ5Va4PofZWQH89HFGuCpMXUNdt3705Mr5ZHH7A43mIUqK8IFXn97PtqLyBJBk0jU9hm1WXoTC/VPTHtA97pveiX4y+jwiZmq28k/6cnPsedfda7qidQ3Z/Bh/Nu6QF3n69h4c1PdFL3tNqSh7V3fDmuZ0zLDypE6hkvl7svAW4gUbV32iDoIx/WsWC9TL3eDdt5GrKCwePRMNQoJ56yqC6cyAr46mmt982eW1baqNO8a2zynxHd/tsIx75Zzh5uGbOjLvNxGlWV+GDnluPfr0lLmucAWncS1cZJts3i88x0YKsGE0EA7kRVsOjXC3f1lOzI30LtodnjU9rPrT2VYyb8al09J+rS4WpZDyVvE7SJ17TD64TSpx112PfgpMcrydHxHl2vULEDQOrv8zPaN6q4bhRYUJxm1nr6RxfBgTGuBFlGxZ+AfY9FLCT0cX3v29pj4+4i2J3osM8J0kV2s6YWtlDnee5fFV0DRpmexwXgqDyOPxmbg8R+gfgwAXVCR1xHvRc4atgWqM0SKN2q9juqTcaFjbQvpEZdT6e1DoCBwTmnYPMXWXBetXN1Wzhlefw==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(136003)(376002)(366004)(396003)(6666004)(52116002)(7416002)(316002)(16526019)(2906002)(36756003)(186003)(26005)(38100700002)(38350700002)(66556008)(66946007)(5660300002)(1076003)(66476007)(4326008)(83380400001)(6486002)(86362001)(8936002)(956004)(44832011)(2616005)(8676002)(7696005)(478600001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 xyeZ6nRIUuGwc15mUIALOq5VhEM7XH8o34eVedg58Qij5kcw8tAwDq/iFV4aKddMTSYf4HtJRnh0zQyMTUAMZD8fXOgeTBfBCWA1Cz10nxwID0QMJaHcEkyooklFY8a9ZFcAaWcJQfYXuJUeVODfRJLXdEXpkLhfFZCOsoPLVPbAoaB8YYHIaU5FAIO5sxCfuYpoTiTIeDlQLxrGvBRRn7WxYYOJXqOiZb2Rr77yvhKW4FhH9uh+c/MVDZVsx7IH7MdVwWztM7gv479eLoZ5wYbCRM7ey5Ex/dvLZ7WKz3OACKJ0yxkRBGLggTEIdhZRpQE0rjfUfIKdMRlbj7rdOpULKuGHN04ooe5zAHfH1xwuECBjzL08DILYBU2233awHxWq87jwqDsrP4AW28rKeeQV+AqkRDhUUmFU08fB+nbqWaZIyPjB2bypKtwM6ijRd5NCapTGHVSLYanAjo99RCz0mofF0b68YkfAFmGCJqRJ8fMAe97ZDrr31VkrMaL3alfi7g7Hp2i7f1uc7k/3I/XIZh2MQD9ALtQNJHdP5jWI9MdPISjm7mgE4cqsDkhJIwvh9fYL2PnmIk6rVdkfFXzEXSnOZoNdRKTMmVqNpaumwnqGVAZRNrb5W4RAlE5mJH0T5KNuFc4w1vI4fByYEMP8gg12A1+1swZFwKstye44+3Gv6Lz0c2/WnulftXDpNroF2KOLrZeW+0an8NSxJnMs46Zd6sLEfa/wvyaPOe4z/ukR+oLIgCaCvVJsb4jdBJKWA1BGa0wzhIAf217mj1oohs0ZIgocnUEiYSpkvQ4xtC40NMNCvZmMyZNOREmO4fTcvARQEtbIKnrRfJxd2KnQfegvPRO2DUHKw/PZnbU9kLS/EC8pn7x02Qgx7t5LijPpdkcNQ3qLMv36JoeXi1R+GT80yl+3jf0CMuYoTR7vUu9zILkLpCFLO9QJNlLE4/mn/WNX1o7MlOBj1Af0NPQGfKKN4Fatz0WyXfdxZiNYzuW/R7kX2TTikJ+aImDvqcuZ/K9V3JUUWZRku48jR7wjCPfvoUNtRvSIEpkttq3naU8qC1iffFQNFvDTV8aMehIoMCm2u+pGGL32GkDwdp1yPbN8XhzwEJfAjbtX46LuWYDd8qstGdQ1j7pz2gX66livFVGtDh54ICs/Y+aYCK/0I8nMj2LSOqvrD4BuDmI40enBOIK5eXsgSAuJlBuOFWm9aaYHZeWKV+XtPGTr+LmJ9AfQpHrgR6UXhK/Y5/3QB1SbNijPznNDJfWleDKErhB4Y+KB2SXhrduP4+9CoG6GovbgJ36nx8ihA3xS0uaAfAuda4U5vBpi06QQH+Ll
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 f474b941-8b9d-45ff-befd-08d90bd1d9a2
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:57.8367
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 tUQ7PHX2TsZc3Vdliy0SDzVQOh+iRXJOF33gGp3lwwd3Aq/KFu10nX0lPmB9Ex5A10rIEfWHJmMMmYKNHlVL0w==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2640
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The early_set_memory_{encrypt,decrypt}() are used for changing the
page from decrypted (shared) to encrypted (private) and vice versa.
When SEV-SNP is active, the page state transition needs to go through
additional steps.

If the page is transitioned from shared to private, then perform the
following after the encryption attribute is set in the page table:

1. Issue the page state change VMGEXIT to add the page as a private
   in the RMP table.
2. Validate the page after its successfully added in the RMP table.

To maintain the security guarantees, if the page is transitioned from
private to shared, then perform the following before clearing the
encryption attribute from the page table.

1. Invalidate the page.
2. Issue the page state change VMGEXIT to make the page shared in the
   RMP table.

The early_set_memory_{encrypt,decrypt} can be called before the GHCB
is setup, use the SNP page state MSR protocol VMGEXIT defined in the GHCB
specification to request the page state change in the RMP table.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/sev.h | 12 ++++++
 arch/x86/kernel/sev.c      | 87 ++++++++++++++++++++++++++++++++++++++
 arch/x86/mm/mem_encrypt.c  | 43 ++++++++++++++++++-
 3 files changed, 140 insertions(+), 2 deletions(-)

diff --git a/arch/x86/include/asm/sev.h b/arch/x86/include/asm/sev.h
index 48f911a229ba..62aba82acfb8 100644
--- a/arch/x86/include/asm/sev.h
+++ b/arch/x86/include/asm/sev.h
@@ -107,6 +107,10 @@ static inline int pvalidate(unsigned long vaddr, bool rmp_psize, bool validate)
 
 	return rc;
 }
+void __init early_snp_set_memory_private(unsigned long vaddr, unsigned long paddr,
+		unsigned int npages);
+void __init early_snp_set_memory_shared(unsigned long vaddr, unsigned long paddr,
+		unsigned int npages);
 #else
 static inline void sev_es_ist_enter(struct pt_regs *regs) { }
 static inline void sev_es_ist_exit(void) { }
@@ -114,6 +118,14 @@ static inline int sev_es_setup_ap_jump_table(struct real_mode_header *rmh) { ret
 static inline void sev_es_nmi_complete(void) { }
 static inline int sev_es_efi_map_ghcbs(pgd_t *pgd) { return 0; }
 static inline int pvalidate(unsigned long vaddr, bool rmp_psize, bool validate) { return 0; }
+static inline void __init
+early_snp_set_memory_private(unsigned long vaddr, unsigned long paddr, unsigned int npages)
+{
+}
+static inline void __init
+early_snp_set_memory_shared(unsigned long vaddr, unsigned long paddr, unsigned int npages)
+{
+}
 #endif
 
 #endif
diff --git a/arch/x86/kernel/sev.c b/arch/x86/kernel/sev.c
index e6819f170ec4..33420f6da030 100644
--- a/arch/x86/kernel/sev.c
+++ b/arch/x86/kernel/sev.c
@@ -525,6 +525,93 @@ static u64 get_jump_table_addr(void)
 	return ret;
 }
 
+static void pvalidate_pages(unsigned long vaddr, unsigned int npages, bool validate)
+{
+	unsigned long vaddr_end;
+	int rc;
+
+	vaddr = vaddr & PAGE_MASK;
+	vaddr_end = vaddr + (npages << PAGE_SHIFT);
+
+	while (vaddr < vaddr_end) {
+		rc = pvalidate(vaddr, RMP_PG_SIZE_4K, validate);
+		if (rc) {
+			WARN(rc, "Failed to validate address 0x%lx ret %d", vaddr, rc);
+			goto e_fail;
+		}
+
+		vaddr = vaddr + PAGE_SIZE;
+	}
+
+	return;
+
+e_fail:
+	sev_es_terminate(1, GHCB_TERM_PVALIDATE);
+}
+
+static void __init early_snp_set_page_state(unsigned long paddr, unsigned int npages, int op)
+{
+	unsigned long paddr_end;
+	u64 val;
+
+	paddr = paddr & PAGE_MASK;
+	paddr_end = paddr + (npages << PAGE_SHIFT);
+
+	while (paddr < paddr_end) {
+		/*
+		 * Use the MSR protcol because this function can be called before the GHCB
+		 * is established.
+		 */
+		sev_es_wr_ghcb_msr(GHCB_MSR_PSC_REQ_GFN(paddr >> PAGE_SHIFT, op));
+		VMGEXIT();
+
+		val = sev_es_rd_ghcb_msr();
+
+		if (GHCB_RESP_CODE(val) != GHCB_MSR_PSC_RESP)
+			goto e_term;
+
+		if (GHCB_MSR_PSC_RESP_VAL(val)) {
+			WARN(1, "Failed to change page state to '%s' paddr 0x%lx error 0x%llx\n",
+				op == SNP_PAGE_STATE_PRIVATE ? "private" : "shared", paddr,
+				GHCB_MSR_PSC_RESP_VAL(val));
+			goto e_term;
+		}
+
+		paddr = paddr + PAGE_SIZE;
+	}
+
+	return;
+
+e_term:
+	sev_es_terminate(1, GHCB_TERM_PSC);
+}
+
+void __init early_snp_set_memory_private(unsigned long vaddr, unsigned long paddr,
+					 unsigned int npages)
+{
+	if (!sev_snp_active())
+		return;
+
+	 /* Ask hypervisor to add the memory pages in RMP table as a 'private'. */
+	early_snp_set_page_state(paddr, npages, SNP_PAGE_STATE_PRIVATE);
+
+	/* Validate the memory pages after its added in the RMP table. */
+	pvalidate_pages(vaddr, npages, 1);
+}
+
+void __init early_snp_set_memory_shared(unsigned long vaddr, unsigned long paddr,
+					unsigned int npages)
+{
+	if (!sev_snp_active())
+		return;
+
+	/* Invalidate memory pages before making it shared in the RMP table. */
+	pvalidate_pages(vaddr, npages, 0);
+
+	 /* Ask hypervisor to make the memory pages shared in the RMP table. */
+	early_snp_set_page_state(paddr, npages, SNP_PAGE_STATE_SHARED);
+}
+
 int sev_es_setup_ap_jump_table(struct real_mode_header *rmh)
 {
 	u16 startup_cs, startup_ip;
diff --git a/arch/x86/mm/mem_encrypt.c b/arch/x86/mm/mem_encrypt.c
index 076d993acba3..f722518b244f 100644
--- a/arch/x86/mm/mem_encrypt.c
+++ b/arch/x86/mm/mem_encrypt.c
@@ -30,6 +30,7 @@
 #include <asm/processor-flags.h>
 #include <asm/msr.h>
 #include <asm/cmdline.h>
+#include <asm/sev.h>
 
 #include "mm_internal.h"
 
@@ -50,6 +51,30 @@ bool sev_enabled __section(".data");
 /* Buffer used for early in-place encryption by BSP, no locking needed */
 static char sme_early_buffer[PAGE_SIZE] __initdata __aligned(PAGE_SIZE);
 
+/*
+ * When SNP is active, this routine changes the page state from private to
+ * shared before copying the data from the source to destination and restore
+ * after the copy. This is required because the source address is mapped as
+ * decrypted by the caller of the routine.
+ */
+static inline void __init snp_memcpy(void *dst, void *src, size_t sz, unsigned long paddr,
+				     bool dec)
+{
+	unsigned long npages = PAGE_ALIGN(sz) >> PAGE_SHIFT;
+
+	if (dec) {
+		/* If the paddr needs to be accessed decrypted, make the page shared before memcpy. */
+		early_snp_set_memory_shared((unsigned long)__va(paddr), paddr, npages);
+
+		memcpy(dst, src, sz);
+
+		/* Restore the page state after the memcpy. */
+		early_snp_set_memory_private((unsigned long)__va(paddr), paddr, npages);
+	} else {
+		memcpy(dst, src, sz);
+	}
+}
+
 /*
  * This routine does not change the underlying encryption setting of the
  * page(s) that map this memory. It assumes that eventually the memory is
@@ -98,8 +123,8 @@ static void __init __sme_early_enc_dec(resource_size_t paddr,
 		 * Use a temporary buffer, of cache-line multiple size, to
 		 * avoid data corruption as documented in the APM.
 		 */
-		memcpy(sme_early_buffer, src, len);
-		memcpy(dst, sme_early_buffer, len);
+		snp_memcpy(sme_early_buffer, src, len, paddr, enc);
+		snp_memcpy(dst, sme_early_buffer, len, paddr, !enc);
 
 		early_memunmap(dst, len);
 		early_memunmap(src, len);
@@ -279,9 +304,23 @@ static void __init __set_clr_pte_enc(pte_t *kpte, int level, bool enc)
 	else
 		sme_early_decrypt(pa, size);
 
+	/*
+	 * If page is getting mapped decrypted in the page table, then the page state
+	 * change in the RMP table must happen before the page table updates.
+	 */
+	if (!enc)
+		early_snp_set_memory_shared((unsigned long)__va(pa), pa, 1);
+
 	/* Change the page encryption mask. */
 	new_pte = pfn_pte(pfn, new_prot);
 	set_pte_atomic(kpte, new_pte);
+
+	/*
+	 * If page is set encrypted in the page table, then update the RMP table to
+	 * add this page as private.
+	 */
+	if (enc)
+		early_snp_set_memory_private((unsigned long)__va(pa), pa, 1);
 }
 
 static int __init early_set_memory_enc_dec(unsigned long vaddr,

From patchwork Fri Apr 30 12:16:11 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233195
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 49562C433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:34 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 1FF70611F1
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:34 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232616AbhD3MSU (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:18:20 -0400
Received: from mail-dm6nam10on2049.outbound.protection.outlook.com
 ([40.107.93.49]:15328
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232370AbhD3MSD (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:18:03 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=BmYnU7uJqJGIMUesfgA9lmADT2Uf8/Px7O6mCmVAlyHvn1C2UcQbLY1WKx4BqbkiRfduY4BQqtDwpNlvzqp4OL6i5nFgJINB4sjaAbO5Bq5EWWIgBbbmebuRmSnTDHzK5kAwIrrytXI73XaslTKBw9Wj5Z5bqHhpoleTFomYtfIbNivi4GKH00CR5M4UIinF/XgkMBA6RWEtpXnwwseRkAPc5CP4gINeoLjDHahge6B3OV/WJ27B2fcsYVr+QjoJp5eTtOmeO1Hn+bWJaYW9lEo4uilwv2+CmNpFtpozAeJ+JwjDhyrAr4MHVbMcrQ7F+roPP9fcM5JTcfbJh8g/2g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=TbJJjZxt+H9lBygplsUUgKsUuokN/yfU2BWEKMxvu1g=;
 b=WLjMDWP97Wi0tBQ902yGIzoEnCN7NnI7XbBOP/DCWT4fHXq7jqP8XrolCv0buwolmGYFH8c4b6kM4UKoSRV4lfGscb/ySVJspQix20grnFH9qp3+jq5YAevjZ3FpwcZ99hUp8bh89HjWFnYJgUtuB1nx6oS+g5pRRwUjzqMdg2VhWA5whxggsIMtdzygEj8NjDmyAPKAaNeZOY7giD3gm4ldNdtqp4pO3hWSM0yOBLkFpSN90mElcRJ5kvn1M3f26E2GDgyHKzOej6dSus2xmD1YO73pYSnw8spWP9AHdKW5eyvfd54HhykVGPlQc8+jE/CsLqiqUyxbhvM1zXJ3rg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=TbJJjZxt+H9lBygplsUUgKsUuokN/yfU2BWEKMxvu1g=;
 b=m7SyN6gc4G8kXFbgekAXyI1EHf+8ivxBLgffaUdP5V0rqhYRJDArg3W9okg3ph+I7Hib2L5jHwiWkzde3CcX9G6FkUaVYjQsFweu8j6gXEh0834M1mp1TXMBxRhjGQ6D+oBr3Nwnl2W3s11nWhW2FRyNMR4eitmsaE9Bu8ZJpdE=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2640.namprd12.prod.outlook.com (2603:10b6:805:6c::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.21; Fri, 30 Apr
 2021 12:17:03 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:17:03 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 15/20] x86/kernel: Make the bss.decrypted section
 shared in RMP table
Date: Fri, 30 Apr 2021 07:16:11 -0500
Message-Id: <20210430121616.2295-16-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:58 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 5c15b01e-c070-4d2d-c049-08d90bd1da0a
X-MS-TrafficTypeDiagnostic: SN6PR12MB2640:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB26404DBE67F05A3A452C0BE5E55E9@SN6PR12MB2640.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:2958;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 lcWY5cl6WWrlgFeQp358uftiF+VVJNVFNwAPJEogEfyl9J8LlHOynN9aEttvIFImGogna+tPB3pSh2797Q6QxiPT+5AnGd3f6+vXljvPxTfxg4HBuIQ+LRY/DozsMD5xXsb6LHldTsLVdyFWcn7hT4nfCLoFR9Qlf62gD4JcTi9Zhe3nejG+s7e0P285vyoeJHCWXLl7HbfyKSY4i/XQD6W5NfwLWuecOgSDuRGOTo5py8Fdrgvu2ezHkllfNMEejzRP20+WHxNr+5eczmO/Ece540ArTW1SOoiLPeDf4rhA+X7arw9tsBGoGMV+gQyyERES/4jBsGn4RNAY0uq/JzuFsISsG48kz31KY60IecoI34vH1GfDYOeL+pdQDnKL0/7KELMqJdfIvDI9+GYjHC1CvxsO+D2BU2B4MtcugpJC5loBLDb6OAuvsCF2pu9P0ujqSqF8a1BCimAgjc0oIbCNwjwF5S9hca7NPlOEE4I6hn40eB2VzCZ4xUMTRclW0xDisVjmK9eu+9O+9EfPP2CExfjGrtZ/oVUA1rYnOspQcmGJVZvU6LW/y5eqsAj+zeGM7yp7w+BXt+PuOXsVFK21BBG2Yy7jBe865i2ZOSgMl3grDChdcENnZVdMN9G68vhMklsWGl2qjl8CaOlDcg==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(136003)(376002)(366004)(396003)(6666004)(52116002)(7416002)(316002)(16526019)(2906002)(36756003)(186003)(26005)(38100700002)(38350700002)(66556008)(66946007)(5660300002)(1076003)(66476007)(4326008)(83380400001)(6486002)(86362001)(8936002)(956004)(44832011)(2616005)(8676002)(7696005)(478600001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 1v26ecbgcwYZfW+H0fN4UY+DaXDjexWZqchYOpEUtO7z4r5Czn3jl+g5jTLAYas+7e9GRDagr3XhSdoVyrAZdZMDSNiMCDeC2XQUiyWj97OSN9dZhwe8vd6a9mewt9x5WCiZGCjf1HsuvgPwgr5pDiLX1JnWKrzILDvnSduugOZqNQRcJ1ALUj7avswfd57i5T9Vv3slrJnfiLwa3xiYGDanhDWmQQzxXGfaXPz1010RdU15L0ZtMGkqzbduvobT8oP+zfDuMTJsgJ+jJ0gelq31TRtLCvgwwTEHDTVZVg1xbiGBzWj0l67B24KsG9Gemo2V2Jctg2hBV6FSaIkBbb+K9zWKRAtRNEbpARFE+1+HbVECxggJ8UM5udgwG2eGJnrgSdwIjEs7OTTGYNcF6T870Vwg3la1kwAsBw9D/xv/1cprorhHz8FHAIv6cNVpPr7EvSl8G23iQERiyyaPgacyLbox4/tmViNkqd7kPWQp6Yqn28yNMPQhB2UA65+Ugh6p/N0sfrUkGH0j8f7HT/y5+UGHSBNF6v2RQpD7+dakW+u1Qoi0HlVmI6faHZ4h7S+ECOj3ycgJXtr0YVToLmhYwHE/YR3ONBGCAO6ID0fEHuAGxTsHL1JJxDecYpnDkqMDdhRHJxpE5e5ABso6s0vANoIJnH9ayVLLsV16t+rKwDnzQeuyPKPX+0t15SSM1AHdbVpVcg+4IWeT0fasc31SbIHAlYF3BYYBavxjUmFsqZT/b/TYe5pO1Yh+5fP9DMM9x1/HG2SbVRonGYrkR1RPOXk7FCk0DiEHaKIZwSqRX91UbovbOV6HPfLlEXPJx1hzJeepmrHYAsUIAr1xk1y6lJ8yg2rI7sHS1LE5reoAO96XvUAU1dN4CVVx9EcUFI3hbzI9aXKuG/zPfy6SSypymR9F2LGnTUEhFFPMlWp1MxiIE21lLR0WmchE3K3F7FinrWSuTncHmxcnkOIw75Mrzn+vlu20eDWitLqeJ84Ov/FCavcO3HNOUSLq+cvEchrWdq4hxOXXzA2DcHwNFE/0Z2vkEGrE3KP/hVSKdK54oXRMto2QkymNaVqxRtcylLfV1xmeFG1AUQsc/iAmF4+bKt81Oqm/Pv53vPZNvbPrhMXGs/1a/apfK6dxiqnc+3YGiVqUMtr2uZUOPm3PgcG2E1xVzrCaPY9H9phBbKsQddIx/rca0eI7E5HMkJ+qP604d/S6NqlCwRJByR/N1FmfccUoY+owd62Zv8XPglCC7DqXFx2tutgrraAc2LSwoWYqCkQhDSj1RqkIZEFAN0H59PweqHRhprL3+MN3cfxMTRyaWlipAZvjRSJkTNg5
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 5c15b01e-c070-4d2d-c049-08d90bd1da0a
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:58.5492
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 8jcYuFPe3YWzkxgespfZS8Pg4q9yVIleD1MYpB4l85PD3OusC7llKSbtMqyFlZJWaem4RYE0z2S/0CnuxTw6eg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2640
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The encryption attribute for the bss.decrypted region is cleared in the
initial page table build. This is because the section contains the data
that need to be shared between the guest and the hypervisor.

When SEV-SNP is active, just clearing the encryption attribute in the
page table is not enough. The page state need to updated in the RMP table.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kernel/head64.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/arch/x86/kernel/head64.c b/arch/x86/kernel/head64.c
index de01903c3735..f4c3e632345a 100644
--- a/arch/x86/kernel/head64.c
+++ b/arch/x86/kernel/head64.c
@@ -288,7 +288,14 @@ unsigned long __head __startup_64(unsigned long physaddr,
 	if (mem_encrypt_active()) {
 		vaddr = (unsigned long)__start_bss_decrypted;
 		vaddr_end = (unsigned long)__end_bss_decrypted;
+
 		for (; vaddr < vaddr_end; vaddr += PMD_SIZE) {
+			/*
+			 * When SEV-SNP is active then transition the page to shared in the RMP
+			 * table so that it is consistent with the page table attribute change.
+			 */
+			early_snp_set_memory_shared(__pa(vaddr), __pa(vaddr), PTRS_PER_PMD);
+
 			i = pmd_index(vaddr);
 			pmd[i] -= sme_get_me_mask();
 		}

From patchwork Fri Apr 30 12:16:12 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233199
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id E321CC433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:50 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id B70026147F
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:17:50 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232323AbhD3MSh (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:18:37 -0400
Received: from mail-dm6nam10on2056.outbound.protection.outlook.com
 ([40.107.93.56]:37728
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232305AbhD3MSL (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:18:11 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=n/zqLu+xv4w5ehLPbfhyhRPYz8XxGm8qup7geqFsKeNgePhfr0k3SLTtGlT9zzY35LSy8QG6lqadwXU0wvQyBziOA6AH2GtADla5AjXz9V1MtDB32s/kw5A8xx/S+M/QcXb+YCJbN/diFFZyrFZvz5033NA7ZSwy2usIWoIOhBzco/ReAkCKSI/v1Hg58G8lFdNaPb6esaKkrBi3wu6pUPkZhlvLYEbXtkj3BepAouC/A3AKUu0meKGMpwFJ8PwOppwp57rVi9PaDrdBSVAymHxtcVhoX4vJUVRMes/YMZ40i+MzrxMJN5CmzhDpO3IvQW8pNrYP+kQafS6B5m/s6Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=jJXPTMPx3JnEwYWdVkobHZ5ZnGJRcDWshOurQSxwhNg=;
 b=Q6VIhVo4PAsnSbxve7HWjNLrTrjhqflmrc6imUC0odkpF2P+1UST0Dm5ivK7QFM/2kb88A2XU6ZaJbF5xc/RZfZ/lu4WgtvPvAHiI9TjO72+90aDoejrYGZpiMyt6XlAw/9MMQesZ06hUQeX61Qt/TBDTnq4+0R9XtF9b/6duBdrHe+24+eA2Fhps8oYwlEBLR3M7K2prnUyQpMxKm8QgKqKKtg/OYZXLBKE+CIPYQ6OI7J9qdvWqBQiUv19KhAD1P2Y57t7ulQkvHaXae+XPfIxbkelCQZl/LdvBejm5SyA1cOQI97gCToocwypaYoufURb2r+q9LvQuIP0H+1JpA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=jJXPTMPx3JnEwYWdVkobHZ5ZnGJRcDWshOurQSxwhNg=;
 b=oTDWJZyzcRO6xlpvKiK9+DEIRdoWJs0iQmjRgKwqddTGeNyWL/3xgc9Gx7UvonOojusaikDkVwi4oTYlVZPcbrl9EIIs5jIEiTZYwnS5Xk7xMTN53rrriuKc0mqIlBJV/ZPkXOnKWIEFQzET/0mbKFSm93tmQtgyltgijCmY3sg=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2640.namprd12.prod.outlook.com (2603:10b6:805:6c::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.21; Fri, 30 Apr
 2021 12:17:03 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:17:03 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 16/20] x86/kernel: Validate rom memory before
 accessing when SEV-SNP is active
Date: Fri, 30 Apr 2021 07:16:12 -0500
Message-Id: <20210430121616.2295-17-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:58 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: d13032a4-581b-4123-2100-08d90bd1da74
X-MS-TrafficTypeDiagnostic: SN6PR12MB2640:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB26407D2F09C24F00C466AA6FE55E9@SN6PR12MB2640.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6430;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 PBu839nyKqiX2qmjH/QdJYd+UyWBUwIxwz9q1o9ujngDSa1865NgrXUqbcSglLIvHpw7HhF4McsGmcpJnwnXh2+4V2t/Ounacdp2KzNbmqIzZWQ+PslutLhgNvFuVYe65iRUFMMUxGLZDii63rmGKvIoS/cZDL7tgf6xPUnyaVNR5l0+Y7uQRzEq8uWvmnOoGUtaF7b8kmDw5aLEERpNQOR61OYVhdv/Qhue68TQsNj3HJrPl+1AD1wcDqZsNtBEZ3pM9JTyLtQOGGRaSvCwrr9/6A/ylZ1BOPZTGmpMUgfXao3TF7ix5Xt9X+kaJypp9Tf+Z0qSoyqiRRjZmYRBuOPpa9M2vnmrpuR/AYgr/6QKb3BkpICB6x8NMDpEC+ufAzTRkduK8TDaWKskb2GN/BDj1AePuYpd5i/dpaFGkhVONkos2Wh7yrcteP5EQRhX1iEX99Jw5eReVg87o3PT1G9oEC9mHLBraxHPk1PrPV/Ddmne0vfGRAXLhhHkoiX0uvYRR0svwIF8RMZk14lOKYp1HFHLV22GaCON4XTsuc2rriMJFDgDH8JfDBNFjVLmjsqfWLIpVi9p45667D08E2avPLon7ThhyyaHfVMhu3dUCQkeLmvGBQbleok11JUirjEgmkmKkHBppIgpFzaRHQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(136003)(376002)(366004)(396003)(6666004)(52116002)(7416002)(316002)(16526019)(2906002)(36756003)(186003)(26005)(38100700002)(38350700002)(66556008)(66946007)(5660300002)(1076003)(66476007)(4326008)(83380400001)(6486002)(86362001)(8936002)(956004)(44832011)(2616005)(15650500001)(8676002)(7696005)(478600001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 XdqDo8kIjuXRJIbGyk02eH5f8AbU6yJ4YRhWgPUn8DSJhUyd8Cg/CsAIZcdxRYUSxYrtvei3v8Bph4cFL+MTMd4H6nTsm9mJmMphSqlW459hasFvo7tR8clfKf9BE19qMTh3oFX5Csglx3tH294Bj85daav3RVlmLSvYBlAnVT5ikyS+Y/Kd2L0r5yBll5s/hivkews6Ogy/aZw5Q9hA3tEsu2TWIRldvRhamUXkj1WgBLH+FLsnqc6ta3O9CRGIEVVeVSzw+ph3qXTaIdTd5MERZCPmPuJhbqEVmRXX5KCDUFJUsOB9DJsu9D5Y5cvTp1gaIX9h8YloZmTJHmQijf8DnfSrQXEHLhF06gZxEcdlGBaRkdHlespOWEvFolZaSv/Qy7TpOCgOcy52h9HpxR4N1v3keHIjMUScDSeJl8U2lZnRt/+2TcPgaroWw8yaG+sPV8e5Mcgenw7Av2+k0Bjv+j785isUGU/J6qt0bZ8vx5hkgBCqlLs++dRBs1F4Hatn33uIDJ1AckfiOIMSwQ65wmYTT0SYstHR6wx2fS3GIGP3J00v7JPqGJk189bMKZN8gyrPw+VN2/JyltoMD+nX+TuG0vUQnapJ+zdTsiWKC0h3SI510jjWOCq1KhEyHsptAz/E+iOViP+TjFUgia7zoaAupM+1txMVxqtyd7OS3BrdTkzv9+30C3axf0tyxHZi66XrPBEQB4gFQw2V4T2GZT+g2BLCiilHKjCNVZTOT0B2BRV0nc6S5Zqn3E2n3Mj0WeYpLcpA5J8QGs0XWZz3RuBwZUPjgxrLKTEe3g20MFukIgrvPFBHJ0btptjPZOEuRfmPCB1DJgKsHm2/Rgv1OGE9qE9bG1aYNvYgca5MEX1GkxGb7ecWeoPpplA4Jh8SXwy9r3xVBvybeBSeSgfsbJ4snxRSZgVUCsaNnKJIc0+C2rHuqecsTBisEinPLqRByyE2HviJiwcd+/ACXcnXhb139IO76EiWg+MhRFqBFz4O693yNTvqyLip4AtTK/gffhg97YYO1sUhTcERk91Zb5tQLaJmMHVlJrXC8YA/Osr4QhTA+GDWT7NvMGh717DTxxl+x3+CMg3MMFflVpyLSYHPhf6w75DX9FD+ap+pyqOCeKwKgF4i3jI6Nuzjw58uT3QMQK4hF099q8Ds5fbCLIQo4XEOiLQ617NXJEebZkrlda3VUSn0dXyayerAVjupGwiiCYunOywBgPwR4zRuUWTukDBK3s/snHhSArRhKviGA5FwXcvgpPIbQRGbvg4khdz0p0HJi3GCCrxQ3oz5DaripXx1GyEwL9pZkT6vPXWs0qkapxkdDAdw1kNf
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 d13032a4-581b-4123-2100-08d90bd1da74
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:59.2339
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 vzqn5Z+kaIXk/YD0nxzKIc6bhn/vjkUm96jwpVZtvwHEi4733kF9HF7FR7SGEVZGGS9CdffKUyoJF5fDzPuGig==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2640
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The probe_roms() access the memory range (0xc0000 - 0x10000) to probe
various ROMs. The memory range is not part of the E820 system RAM
range. The memory range is mapped as private (i.e encrypted) in page
table.

When SEV-SNP is active, all the private memory must be validated before
the access. The ROM range was not part of E820 map, so the guest BIOS
did not validate it. An access to invalidated memory will cause a VC
exception. The guest does not support handling not-validated VC exception
yet, so validate the ROM memory regions before it is accessed.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kernel/probe_roms.c | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/arch/x86/kernel/probe_roms.c b/arch/x86/kernel/probe_roms.c
index 9e1def3744f2..7638d9c8e1e8 100644
--- a/arch/x86/kernel/probe_roms.c
+++ b/arch/x86/kernel/probe_roms.c
@@ -21,6 +21,7 @@
 #include <asm/sections.h>
 #include <asm/io.h>
 #include <asm/setup_arch.h>
+#include <asm/sev.h>
 
 static struct resource system_rom_resource = {
 	.name	= "System ROM",
@@ -197,11 +198,21 @@ static int __init romchecksum(const unsigned char *rom, unsigned long length)
 
 void __init probe_roms(void)
 {
+	unsigned long start, length, upper, n;
 	const unsigned char *rom;
-	unsigned long start, length, upper;
 	unsigned char c;
 	int i;
 
+	/*
+	 * The ROM memory is not part of the E820 system RAM and is not pre-validated
+	 * by the BIOS. The kernel page table maps the ROM region as encrypted memory,
+	 * the SEV-SNP requires the encrypted memory must be validated before the
+	 * access. Validate the ROM before accessing it.
+	 */
+	n = ((system_rom_resource.end + 1) - video_rom_resource.start) >> PAGE_SHIFT;
+	early_snp_set_memory_private((unsigned long)__va(video_rom_resource.start),
+			video_rom_resource.start, n);
+
 	/* video rom */
 	upper = adapter_rom_resources[0].start;
 	for (start = video_rom_resource.start; start < upper; start += 2048) {

From patchwork Fri Apr 30 12:16:13 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233203
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id DE00EC433B4
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:18:04 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id B38916147F
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:18:04 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232772AbhD3MSv (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:18:51 -0400
Received: from mail-dm6nam10on2049.outbound.protection.outlook.com
 ([40.107.93.49]:15328
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232225AbhD3MST (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:18:19 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Ket99h8yEtf5u76S9ojD4DW6ileFQ4iuEMIZRyT13WK4w2sSaAD4QeGEGUYUtrBYwJsasUQd+5Mmb6NRfCp9RC9PXIQZvXjhbfnrqnOUYVWSB1J9MDjHO+bNAbZm6WDJOmj1rc78FScFsgzkM3DiJky7u/pTLdOGYQG1jzpR5z7dKoPH1opoo/J24qJf8AWmp+F8Jii+jKPcifoeWejMeD/kiPTY1Q/q8eQuGSbx4ssY2sudYpxmGpRAaR4NjjTpl/SKNsLXpjtNipGFIsof15sPi7Qo5KFj1A3zqweVccNfcgkPr9p4zz68vcYHYY7ubEs1NRRzvpSr01ZsXPxbRA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=nMaIGL0wm0r4MXad+d2+QJohR14hhojorUTmCVuCysE=;
 b=I6gjFL/olljDjx4rKG9XoQNN7KZgyOK43q9Axcef8cQkvbVuXPcIeiSLaW+NcIkTZMnfqETeVm2s8DmqNyyZGuKZW9c8KimzDyl2N+Cd6Uy0xO1uO7igNnTWS3UtgBZVOUoQdGmb7uA8nXLxLtQ1XJ5CXrYHdAH5ydgmlJTo0c1BR7EZ0Bx/RNh7/EeN8jEkfKffnIWuLFgCZs3iZFyY8C3eg1/dSXtfhhUNqLoMoQC8ygcaVfu+otQHsH5qdm41W2tkWaCH/+OtEXWL8A4B0ZyAahJLbgT2J1jjJJPx3tjv7ZLhvf9YyCdQlnnW8E8VUFg/1+Hx+hi+7dCP58L8mA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=nMaIGL0wm0r4MXad+d2+QJohR14hhojorUTmCVuCysE=;
 b=NDnMXJiWjjRQkeOH0iZ+ISTTYCBCiertR7pEKMt5TK+lZsCwxsiWvIZplLv3vePbbYbSfKK0Th0vFR0uGkezfCqciR0O8V6HQ1iPU6mZLxI0uvV4KzS2SN4BhPN1EI11hd31op2/9tRXD6WKDTXXdHshhHsEiKxJqeYJe2SlSIs=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2640.namprd12.prod.outlook.com (2603:10b6:805:6c::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.21; Fri, 30 Apr
 2021 12:17:03 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:17:03 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 17/20] x86/mm: Add support to validate memory
 when changing C-bit
Date: Fri, 30 Apr 2021 07:16:13 -0500
Message-Id: <20210430121616.2295-18-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:16:59 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 464f59d2-b716-46b5-2f1b-08d90bd1dadf
X-MS-TrafficTypeDiagnostic: SN6PR12MB2640:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB2640A23D3C2FBA1090BCAFECE55E9@SN6PR12MB2640.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:9508;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 hRniK0fgBvVTPqtnTYx6Py5hZ+9GZ92MtBuQI/VUo8OoDU0v0hIWokfCj09tjmdxpClSCF0OKqBd7SEpOUkUtzGUUwerWCPtkd+PtPI90ezX0uKIc7I3iAWQNJzMnU7eQLkDxITD77id7QTvSatnIhY4mBeZYvpS5dj55fkKTaVqjoGKTuq2Du57Zy8ombhzERacvaUDTWgS29e+SJUzhMbfKHJj/wGotCu/vUy4Nuv/00Xtd+Xk9g0MGdtUyww4z3xc00rn9ZY994+gxUWaN9pTfyM1XAF+iyEvwZuieyo6H2+bTzd/iQIjorUccd1QM4IBi8cpqHRycJnBZN0yBMvcxOpdUEyvskLbnUi6Gte13lbq8owLV/osvDjJkKUdETjPOypu4kxR0PBGtSXeOqLN+Lx8+Yrr8YsQGS0opviO7hqLQmC1sSKDN2UmHMfDQQPF7VxQbk4NdwyVZYbvuxrHop4fpiWMLmCSmOlx5MCSwrtrTfzsCTSJUOhxW1p+hCfp0iZwlw6zYO/FSUe0ACh7F+rKhBWDkjebA0JGX7L9khE9sWon/uZtI6K4cXLmbRUAQbgMZxkl9DEjCewxDA2rm4J7WpRhoiIS4oDY8cW3/O8RqzhFDSeU/5yQ+ufBomRh7xTwNtPCZaabw4PjNQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(136003)(376002)(366004)(396003)(6666004)(52116002)(7416002)(316002)(16526019)(2906002)(36756003)(186003)(26005)(38100700002)(38350700002)(66556008)(66946007)(5660300002)(1076003)(66476007)(4326008)(83380400001)(6486002)(86362001)(8936002)(956004)(44832011)(2616005)(15650500001)(8676002)(7696005)(478600001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 VpkEfemvrnKSrDEdv8u9hf0Hi1e8ZhIeeFBNBntojIyaMn6ynXNPONTCOzhJrZ55aA//bRJUNm4PK+9Hfd9+e2hHXelMZTirdJx2Wo5lkcAQWYM3NXQDnb7GyYCZFJhopbZW931kNsiYlHVnQypAHc+e5506jDn5q0hzmvTMaN+1ukYFWHJdEI24HrEcd9cgpfLImYhcyMiYpbIYATid5k+b52dyu+wNFs4wkAKVmDyJCklyaAE4ikG2kj7aJ0+xXxWDPw3sXxvM8UNVX7XQRp/jA4spKykeRFQfY0/qSGzcHJSR5xzjlGY2pe6IogYdjdZxKYFSAedXE0t0n6koBlMKy/rchCWkG+Wj+pyw9A+A60QPeuYneckyeXFRhXAci+RFiyAJP/fD3VEWwHH8PzL+F2XTG9aXOxDIQCBd8u6dc8Obns0dj5kDIFWG4PehvvrhIyKyfWsLT0jDXrxVTi1G5/Js2FTijpGEnlVbRbivPR0TeuxQidtncDxVQkdGM9z27nTHtu+8kXAccURmoTMdVOP7WEIj05Zj/LITE8xSFLASL3VKH117qsHaUuOMvKQKZ+YBUlZEpEF0fl0aWSsSv/69H6POSzFNm0QZMkrKLABnvUjIlMnboxmo3Ec4Dv1TajDOfi7vf++HBA03JFM71VUp2b0lZFVNlcf156iVCgIi9OjjDW82lXqyDOHtqVeld6RaewvykdKhps2YDZoIyxBxu8GD2B66nR6Tu4FQsZ/l7aRJOcdFX1oneEKJfKrjX3olYT0fk3jVz1Xdsu4X/9gdv0sCdLVsm/QaLV43npCw+cqoMfPQ8RA3FO6UfFi2fOIzQske1Z/f/xF9OzkcryGBUSC+F+DtKap+Sbel7I8YjhrPQiqgUp4q6LsWHVMcJjXbV4zoAZAknnapSWwl292vimCrZGD1fS5c+R71iz65ROnDeMOo6c/JHtU7FllFU/NQHzGpo/NOIJAG0I/7fnYZF61bhpWMtQvnQVOka/5i6A8w0jK3CWp7l3Fe80Xa3yE/Xj1ZgjBxCfpfCVtF1VDzugvcCjV0kDMweaulf8P0WH7RiTfAmCLLkWJ1yVwdngT6XkRVJU+ChDQaM+5drd5/CMD+XXlcLajFagbrD91lFC8Kr+jSoAg/jCcWuHdGX72ap2gKvgut6iWHFSHnoD56kmcCqvEPo6wbzNHYUSO3t6w+5Bbi4fcrw7E62tXVZWQwfPzshsEHkrQ3nkYAmqCbI8YXZ8r+OJp7y/I6UdRolqBfReF7TkKDHngoFzOPDu9hSVkRG5YaSLkKKRIhXmVt8wPngomWE45liTpPFzLyWhiEt9fuJ8ajWtiK
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 464f59d2-b716-46b5-2f1b-08d90bd1dadf
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:16:59.8955
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 xZ6s0O41UxxOfXsy5tjYqdbJUPluzIaPLdMXL1+PHoq4/WgrQjrr4AcsUsGYnpBb1RMRVtuhEHa3x5fd7FTFxw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2640
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The set_memory_{encrypt,decrypt}() are used for changing the pages
from decrypted (shared) to encrypted (private) and vice versa.
When SEV-SNP is active, the page state transition needs to go through
additional steps.

If the page is transitioned from shared to private, then perform the
following after the encryption attribute is set in the page table:

1. Issue the page state change VMGEXIT to add the memory region in
   the RMP table.
2. Validate the memory region after the RMP entry is added.

To maintain the security guarantees, if the page is transitioned from
private to shared, then perform the following before encryption attribute
is removed from the page table:

1. Invalidate the page.
2. Issue the page state change VMGEXIT to remove the page from RMP table.

To change the page state in the RMP table, use the Page State Change
VMGEXIT defined in the GHCB specification.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/sev.h   |   4 ++
 arch/x86/kernel/sev.c        | 114 +++++++++++++++++++++++++++++++++++
 arch/x86/mm/pat/set_memory.c |  15 +++++
 3 files changed, 133 insertions(+)

diff --git a/arch/x86/include/asm/sev.h b/arch/x86/include/asm/sev.h
index 62aba82acfb8..1b505061d9f7 100644
--- a/arch/x86/include/asm/sev.h
+++ b/arch/x86/include/asm/sev.h
@@ -111,6 +111,8 @@ void __init early_snp_set_memory_private(unsigned long vaddr, unsigned long padd
 		unsigned int npages);
 void __init early_snp_set_memory_shared(unsigned long vaddr, unsigned long paddr,
 		unsigned int npages);
+void snp_set_memory_shared(unsigned long vaddr, unsigned int npages);
+void snp_set_memory_private(unsigned long vaddr, unsigned int npages);
 #else
 static inline void sev_es_ist_enter(struct pt_regs *regs) { }
 static inline void sev_es_ist_exit(void) { }
@@ -126,6 +128,8 @@ static inline void __init
 early_snp_set_memory_shared(unsigned long vaddr, unsigned long paddr, unsigned int npages)
 {
 }
+static inline void snp_set_memory_shared(unsigned long vaddr, unsigned int npages) { }
+static inline void snp_set_memory_private(unsigned long vaddr, unsigned int npages) { }
 #endif
 
 #endif
diff --git a/arch/x86/kernel/sev.c b/arch/x86/kernel/sev.c
index 33420f6da030..f28fd8605e63 100644
--- a/arch/x86/kernel/sev.c
+++ b/arch/x86/kernel/sev.c
@@ -612,6 +612,120 @@ void __init early_snp_set_memory_shared(unsigned long vaddr, unsigned long paddr
 	early_snp_set_page_state(paddr, npages, SNP_PAGE_STATE_SHARED);
 }
 
+static int snp_page_state_vmgexit(struct ghcb *ghcb, struct snp_page_state_change *data)
+{
+	struct snp_page_state_header *hdr;
+	int ret = 0;
+
+	hdr = &data->header;
+
+	/*
+	 * As per the GHCB specification, the hypervisor can resume the guest before
+	 * processing all the entries. The loop checks whether all the entries are
+	 * processed. If not, then keep retrying.
+	 */
+	while (hdr->cur_entry <= hdr->end_entry) {
+
+		ghcb_set_sw_scratch(ghcb, (u64)__pa(data));
+
+		ret = sev_es_ghcb_hv_call(ghcb, NULL, SVM_VMGEXIT_SNP_PAGE_STATE_CHANGE, 0, 0);
+
+		/* Page State Change VMGEXIT can pass error code through exit_info_2. */
+		if (ret || ghcb->save.sw_exit_info_2) {
+			WARN(1, "SEV-SNP: page state change failed ret=%d exit_info_2=%llx\n",
+				ret, ghcb->save.sw_exit_info_2);
+			return 1;
+		}
+	}
+
+	return 0;
+}
+
+/*
+ * The function uses the NAE event to batch the page state change request.
+ */
+static void snp_set_page_state(unsigned long vaddr, unsigned int npages, int op)
+{
+	struct snp_page_state_change *data;
+	struct snp_page_state_header *hdr;
+	struct snp_page_state_entry *e;
+	unsigned long vaddr_end;
+	struct ghcb_state state;
+	struct ghcb *ghcb;
+	int idx;
+
+	vaddr = vaddr & PAGE_MASK;
+	vaddr_end = vaddr + (npages << PAGE_SHIFT);
+
+	ghcb = sev_es_get_ghcb(&state);
+	if (unlikely(!ghcb))
+		panic("SEV-SNP: Failed to get GHCB\n");
+
+	data = (struct snp_page_state_change *)ghcb->shared_buffer;
+	hdr = &data->header;
+
+	while (vaddr < vaddr_end) {
+		e = data->entry;
+		memset(data, 0, sizeof (*data));
+
+		for (idx = 0; idx < VMGEXIT_PSC_MAX_ENTRY; idx++, e++) {
+			unsigned long pfn;
+
+			if (is_vmalloc_addr((void *)vaddr))
+				pfn = vmalloc_to_pfn((void *)vaddr);
+			else
+				pfn = __pa(vaddr) >> PAGE_SHIFT;
+
+			e->gfn = pfn;
+			e->operation = op;
+			hdr->end_entry = idx;
+
+			/*
+			 * The GHCB specification provides the flexibility to use
+			 * either 4K or 2MB page size in the RMP table. The curent
+			 * SNP support does not keep track of the page size used
+			 * in the RMP table. To avoid the overlap request, use the
+			 * 4K page size in the RMP table.
+			 */
+			e->pagesize = RMP_PG_SIZE_4K;
+			vaddr = vaddr + PAGE_SIZE;
+
+			if (vaddr >= vaddr_end)
+				break;
+		}
+
+		/* Terminate the guest on page state change failure. */
+		if (snp_page_state_vmgexit(ghcb, data))
+			sev_es_terminate(1, GHCB_TERM_PSC);
+	}
+
+	sev_es_put_ghcb(&state);
+}
+
+void snp_set_memory_shared(unsigned long vaddr, unsigned int npages)
+{
+	if (!sev_snp_active())
+		return;
+
+	/* Invalidate the memory before changing the page state in the RMP table. */
+	pvalidate_pages(vaddr, npages, 0);
+
+	/* Change the page state in the RMP table. */
+	snp_set_page_state(vaddr, npages, SNP_PAGE_STATE_SHARED);
+}
+
+void snp_set_memory_private(unsigned long vaddr, unsigned int npages)
+{
+	if (!sev_snp_active())
+		return;
+
+	/* Change the page state in the RMP table. */
+	snp_set_page_state(vaddr, npages, SNP_PAGE_STATE_PRIVATE);
+
+	/* Validate the memory after the memory is made private in the RMP table. */
+	pvalidate_pages(vaddr, npages, 1);
+}
+
 int sev_es_setup_ap_jump_table(struct real_mode_header *rmh)
 {
 	u16 startup_cs, startup_ip;
diff --git a/arch/x86/mm/pat/set_memory.c b/arch/x86/mm/pat/set_memory.c
index 427980617557..34cd13671d5c 100644
--- a/arch/x86/mm/pat/set_memory.c
+++ b/arch/x86/mm/pat/set_memory.c
@@ -27,6 +27,7 @@
 #include <asm/proto.h>
 #include <asm/memtype.h>
 #include <asm/set_memory.h>
+#include <asm/sev.h>
 
 #include "../mm_internal.h"
 
@@ -2001,8 +2002,22 @@ static int __set_memory_enc_dec(unsigned long addr, int numpages, bool enc)
 	 */
 	cpa_flush(&cpa, !this_cpu_has(X86_FEATURE_SME_COHERENT));
 
+	/*
+	 * To maintain the security gurantees of SEV-SNP guest invalidate the memory
+	 * before clearing the encryption attribute.
+	 */
+	if (!enc)
+		snp_set_memory_shared(addr, numpages);
+
 	ret = __change_page_attr_set_clr(&cpa, 1);
 
+	/*
+	 * Now that memory is mapped encrypted in the page table, validate the memory
+	 * range before the return.
+	 */
+	if (!ret && enc)
+		snp_set_memory_private(addr, numpages);
+
 	/*
 	 * After changing the encryption attribute, we need to flush TLBs again
 	 * in case any speculative TLB caching occurred (but no need to flush

From patchwork Fri Apr 30 12:16:14 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233205
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 5BB51C433B4
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:18:27 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 2320F61476
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:18:27 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232695AbhD3MTO (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:19:14 -0400
Received: from mail-dm6nam10on2056.outbound.protection.outlook.com
 ([40.107.93.56]:37728
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232473AbhD3MSg (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:18:36 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=EacGSnaTFB+qR0a9N4g8Kk+ydUzTngahIrvGojIFUoeH9lgFpjMjtO5Xaggj51Ya5Qgt98Ge1zM8LTcIBaAsat+10NSos+7R3EHCp1I0KFEeQUYC7Ah0Ylx09Mx9uZWx1kulYz/hym72RSmbOPh8FoWdSPCJ0lvYMTy2f3K4Nrc/xYntpQxPb4iwuL4cOdC/DJ/7DlrDpyAku15ASzfDfwRhr91bGQ5pjlB+Zl9JZJNwC8zpGgaVL6GUhPotNFvE7jHaTadWGcKNlWUHdSYFdCxaQGhlCCOI8jK4WP7rn88u0HI+jJm7n0D8WdVP/zEWqYiNRuSESnkNEp0Upx2hNg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=glD6zeCoDbk4KuheZFM2dMGeSZIceTxh4u+wrzrEoQg=;
 b=b6qFX/TOePC5CLfWyZY3Rk2gTyJET0k7UuI1RkpvFyqW2Eai1MxIbnEgjdDvwEMlsgxhyFBY366ZEew1elDBu5YyI2SF8oDy/k7JTw64yd3uiSQWDkse6NkreGD+n2ltwj+YfwlYzgGZXdMRxRG2h50UOapdYdLs8KMN8QcUMS5IE10bDnQUeF1Ppc9aXtVIGvjWN0BGqesLsOjfxMuedemQybhlzuNvFQ8stFL00czI53l705Nu2WkQM3QEoBh5RPKU6vfKLpLRCIQr9hFBAy/8RCqtl+dKUkCn1WULKCLRsGrXkpbw++dL41JiHoGg8SGRLgfO6CQjVw+sucxeHA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=glD6zeCoDbk4KuheZFM2dMGeSZIceTxh4u+wrzrEoQg=;
 b=gLeWDQiAC/9RdWu/H0DTty5r+wy4KG0Mfe3I0buZRQG9vw9ayaJwpQZo6o64ygM9zmPLUDVHP6TOU0OJxKzkYpnr/s7blHK93OdN8lah78L54AtGkWvHoGvRM3IWTSN8M+nhWPmNGNK9UEwGb9VUdpiCHehUxZsLrWiBA77RCe4=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2640.namprd12.prod.outlook.com (2603:10b6:805:6c::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.21; Fri, 30 Apr
 2021 12:17:04 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:17:04 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 18/20] x86/boot: Add Confidential Computing
 address to setup_header
Date: Fri, 30 Apr 2021 07:16:14 -0500
Message-Id: <20210430121616.2295-19-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:17:00 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 37279f1f-8693-43ef-64e7-08d90bd1db41
X-MS-TrafficTypeDiagnostic: SN6PR12MB2640:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB26405391315E7B95F0C72352E55E9@SN6PR12MB2640.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:10000;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 0gmGZTT6D090vyehMDRwZhuetG84HXvwE5hnE5922zv398NYQ4MHK18p3RtdchQwd1mELb+6U1DpvisLX0ZQd+A6+rpMKL/CEdpj8Ar6sRth+5o1b78UUbdMkvTfkjZs1+QOWrCb8zhq0SgA8K7a0QSH7Au8XxCenJqBtf7EeVwUXfzFX6B9DWXo7AchTqiab039Jg6LLMhKyqJ/+kMZbrVdNrGtiUf6epYdEZbRD5e+HUeK4r6Pn1eyFYNY1QImFf3pp/FhxGd90W0b235kJ95wcnpq/9DaEnbRf+KdFDPXtmDa6bvcQ9cbV4igF9XGfUWPP9Ksz1Ndmt8VTV76ceyP6qvc54zqdRai8uhiNSZtgrW4fJnj41ziz7l6FjcD1SToufBxFMW+U2qTaJzzcM9fIYZN7b+hAM14Jx7Tj42YUPM1MYA65k0Am6BvmkCmZXZ5zucjh3/5pR/X6sGwqNvYFKSAWWuCLouPj5U63zjxBijY0g8Ib43Q/uu9NCbu5xNb0wuURhGLbFB5jgy6aT/WylgcSWF3POV71Lv5hf7ZF2OsIYbJ4xybJsmGP7/Xaqme49P2tIdwEtX9xzqPvjh0O0qc5hONmG76pa1R9wPdKUIsrRO7SPfw9K6WWFsYar845NahOgpI9und0UtQVg==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(136003)(376002)(366004)(396003)(6666004)(52116002)(7416002)(316002)(16526019)(2906002)(36756003)(186003)(26005)(38100700002)(38350700002)(66556008)(66946007)(5660300002)(1076003)(66476007)(4326008)(83380400001)(6486002)(86362001)(8936002)(956004)(44832011)(2616005)(8676002)(7696005)(478600001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 f8NBhj5EgsJDFAcgEtFUU3dY3dRtDTjMxMr2misxeS8bbTSizBspHJQE6EDp0Tefquwtn+fHdhDKyn767Iiw/8xCDX8dzTJtM6LU//niSAg3uZNo/35LrJ+MELUiY4gVl6pIXEuslycdyV0ZqrZJuTMItuuu/eBb2p6QKVe3mmEQVz2RV+ypxuVSq7MUICk2U5Jbgw0CadZEUn338pmyWc/4fe61T/Da6EWaa/mBaSNEZGM5jjTAKRiN17jYwEE1K8baHHNvFPA42zySRh0YYIM0TZboV0N7r3cYgDoQ5v4Cnou3eFHOc6oMI+zbg/ukOcX22eBpjPIHZPMp/j81+lxElQRsAeN8EZTf1Omcvt0yQLEw7xvsNijVnWaQjvneqo6vfiT4wlwy8ob77EZM3RqYVWyBsTo2HKvQl1niWjyV9qXboK1YqalnJlJY1MN4ybTQH2sfMZ5CuNcftibqK01+PkwpIWAGUGlswLgbFkSoLm+nsdaJNtShUGHL88d6PPkzO3JaDjiiJRPv/1fYvm0E9kVlm6wr348Eoq3UZaxfH1K87o57kwmJeUmlQNkP/v5MTvzZGTpuoV3xmQhQ7+Y8ty8+pFBQEWimcZWEQGfnRyef6ZOWXoX9tXwWT90nw3YMTGNLq79o4hti4t15/hJcle8eUztbKg6DNN5PAFc9ImSPlvOahOs2xPeGqW/BPiH49BYpj96zQ0RkNja4b+QpGzkRMgDmGHSucRaIBWrVm0OF1U3GJvBIiHB9q2lyZZ4BcBTfzfAoF49mQAhXQjyPcCvgZg9zE4QNrGCJQoQAs78OyweWTIQ5yPnYZyX7CXIz2GuXwFKVqQgUDfpLGPEb8/EFO18gFf5DDwGZdpUPpvM0d9E1dqta/7pzgsSK3vsGHeMFA/x7zt3us+9Gz50BbfNd7aUXwrbbPL8B7a1cOLW+z3uvlg5ed9sf/dW9lFfkNp8bl1ycoAYBro5do/VsvBWSH01b2q+Y1t9twbxyJfbfuxMk46bsmrGbXiepVDulxT6/x1QxzMPM9PFXaSfkpDVZGC2Wm1aO7J4GnhUApC6Eh0UxFTREwcSMBx6ZL0TGeHb+RkZhUq/ye4HMfrFAoZCc3b6M/qc+Pt6WMX9MLPRCV3dmLc2v4Ol/rqyOv/v+THYVTyn/TrKUWibRqNqo6TuzXxbOMw9+K2sMDEgL5cVpi1l1OHGdFHlLBrccSfhLvz0T/pWpM6KXkksFRe0ht+aC8ATAEuXFpneLV/o0OLKflzmDHbcm3ZeFHNquMK0orB//3gJ1JdhmJ7udbHo2BmFtQhfVhcfpp/zKG0l2EmdqBy0v+p+xCav60+Li
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 37279f1f-8693-43ef-64e7-08d90bd1db41
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:17:00.5811
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 7tRGzaylXjb2Xcad3rxBhcNwuwekAmz2+HH4WYtL/M1yNLbsXftWhNqGLtBFuxvQlmpWbThs3SkcH3QW538zwQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2640
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

While launching the encrypted guests, the hypervisor may need to provide
some additional information that will used during the guest boot. In the
case of AMD SEV-SNP the information includes the address of the secrets
and CPUID pages. The secrets page contains information such as a VM to
PSP communication key, and CPUID page contain PSP filtered CPUID values.

When booting under the EFI based BIOS, the EFI configuration table
contains an entry for the confidential computing blob. In order to support
booting encrypted guests on non EFI VM, the hypervisor need to pass these
additional information to the kernel with different method.

For this purpose expand the struct setup_header to hold the physical
address of the confidential computing blob location. Being zero means it
isn't passed.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 Documentation/x86/boot.rst            | 26 ++++++++++++++++++++++++++
 arch/x86/boot/header.S                |  7 ++++++-
 arch/x86/include/uapi/asm/bootparam.h |  1 +
 3 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/Documentation/x86/boot.rst b/Documentation/x86/boot.rst
index fc844913dece..f7c6c3204b40 100644
--- a/Documentation/x86/boot.rst
+++ b/Documentation/x86/boot.rst
@@ -75,6 +75,8 @@ Protocol 2.14	BURNT BY INCORRECT COMMIT
 		DO NOT USE!!! ASSUME SAME AS 2.13.
 
 Protocol 2.15	(Kernel 5.5) Added the kernel_info and kernel_info.setup_type_max.
+
+Protocol 2.16	(Kernel 5.14) Added the confidential computing blob address
 =============	============================================================
 
 .. note::
@@ -226,6 +228,7 @@ Offset/Size	Proto		Name			Meaning
 0260/4		2.10+		init_size		Linear memory required during initialization
 0264/4		2.11+		handover_offset		Offset of handover entry point
 0268/4		2.15+		kernel_info_offset	Offset of the kernel_info
+026C/4		2.16+		cc_blob_address	        Physical address of the confidential computing blob
 ===========	========	=====================	============================================
 
 .. note::
@@ -1026,6 +1029,29 @@ Offset/size:	0x000c/4
 
   This field contains maximal allowed type for setup_data and setup_indirect structs.
 
+============	==================
+Field name:	cc_blob_address
+Type:		write (optional)
+Offset/size:	0x26C/4
+Protocol:	2.16+
+============	==================
+
+  This field can be set by the boot loader to tell the kernel the physical address
+  of the confidential computing blob info.
+
+  A value of 0 indicates that either the blob is not provided or use the EFI configuration
+  table to retrieve the blob location.
+
+  In the case of AMD SEV the blob look like this::
+
+  struct cc_blob_sev_info {
+        u32 magic;      /* 0x414d4445 (AMDE) */
+        u16 version;
+        u32 secrets_phys; /* pointer to secrets page */
+        u32 secrets_len;
+        u64 cpuid_phys;   /* 32-bit pointer to cpuid page */
+        u32 cpuid_len;
+  }
 
 The Image Checksum
 ==================
diff --git a/arch/x86/boot/header.S b/arch/x86/boot/header.S
index 6dbd7e9f74c9..b4a014a18f91 100644
--- a/arch/x86/boot/header.S
+++ b/arch/x86/boot/header.S
@@ -303,7 +303,7 @@ _start:
 	# Part 2 of the header, from the old setup.S
 
 		.ascii	"HdrS"		# header signature
-		.word	0x020f		# header version number (>= 0x0105)
+		.word	0x0210		# header version number (>= 0x0105)
 					# or else old loadlin-1.5 will fail)
 		.globl realmode_swtch
 realmode_swtch:	.word	0, 0		# default_switch, SETUPSEG
@@ -577,6 +577,11 @@ pref_address:		.quad LOAD_PHYSICAL_ADDR	# preferred load addr
 init_size:		.long INIT_SIZE		# kernel initialization size
 handover_offset:	.long 0			# Filled in by build.c
 kernel_info_offset:	.long 0			# Filled in by build.c
+cc_blob_address:	.long 0			# (Header version 0x210 or later)
+						# If nonzero, a 32-bit pointer to
+						# the confidential computing blob.
+						# The blob will contain the information
+						# used while booting the encrypted VM.
 
 # End of setup header #####################################################
 
diff --git a/arch/x86/include/uapi/asm/bootparam.h b/arch/x86/include/uapi/asm/bootparam.h
index b25d3f82c2f3..210e1a0fb4ce 100644
--- a/arch/x86/include/uapi/asm/bootparam.h
+++ b/arch/x86/include/uapi/asm/bootparam.h
@@ -102,6 +102,7 @@ struct setup_header {
 	__u32	init_size;
 	__u32	handover_offset;
 	__u32	kernel_info_offset;
+	__u32	cc_blob_address;
 } __attribute__((packed));
 
 struct sys_desc_table {

From patchwork Fri Apr 30 12:16:15 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233207
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id AED8AC433B4
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:18:44 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 7D51360249
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:18:44 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232890AbhD3MTa (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:19:30 -0400
Received: from mail-dm6nam10on2049.outbound.protection.outlook.com
 ([40.107.93.49]:15328
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232273AbhD3MSv (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:18:51 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=L17xyPNCvlN+ocaeSmriYwikV1OCZoXkXAN/g+aE3XYyW9R/5EtdXxHd2PScj4Pxz+QozHq2QLr+STLkR362b/kJP6yzd/O+RMKCCX/m93DmvIpx+egZZN8CoFGNjcHaHfs/qJCPCogzsC0T+PXY/2/iBgtXp2OfcQApTUVeM0wtx3a5xamrCwTJYaaXtvuwiTMf5+Mo9JsW1D7OBDlrZvZ1M9B/cMwUZg+jB7hoBDTHw1NlbpUt6nkZYpyy47XryLPaqhV/2KWrAuOpfHorVSJFX5AimYsYFWwkGv7ByjecJCCL33giNYSCHz4Dw6OyBNUKJ0Kd1r9QJoYFcaasig==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=D3y8np/vyihgst/wIPhlYTev8KJYmFQJS/5Dlv+0OwQ=;
 b=V0oS9CqV1Iqq91o7ty1gzFAIZEcV81AzIjDXf/L6/XSzftbUO3bWbZ+c068AA6Qqcyl2TAiCRlcD77WAkZRKdYwlweHVqGaKDH3UIT7xUwSBxuvlM5cPlFpjskBkywXPP8580YRnRDaClWm/F+zfddTr7SY10sS+Npb3mEQQpH6KclUsUsNGtT1/mVVWULqG+aGe6KNV1P22zNlzgVWjOxMlzPZb7FhqQf9+OdHF72HBN8cVX41H+Ny4dEfRFEZQbmLag1wrm1Rvz9wKdxT6aUMzOB8CWWoy36UCnaCXcjAL2QKMyRBqBRWK/zYbE8s7dNz/5RJkW/n12wpgBWN9Kg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=D3y8np/vyihgst/wIPhlYTev8KJYmFQJS/5Dlv+0OwQ=;
 b=lUgJk/QiwbwXMIKcjBQM8Nbhu6lhx33eP8uvUfI/dap8CrrOIJdwy3f2kAX14FNyUhA0gV/BVf+AY/LuDSWpPRX0BOAYsMutBnEq2Yyt9uSzlRY04a/c7rSowSSl7gsqiNZ6NKGod49ToiUUO+jYSkeqg1dSKnPGUEj9tDTGOe8=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2640.namprd12.prod.outlook.com (2603:10b6:805:6c::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.21; Fri, 30 Apr
 2021 12:17:04 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:17:04 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 19/20] x86/sev: Register SNP guest request
 platform device
Date: Fri, 30 Apr 2021 07:16:15 -0500
Message-Id: <20210430121616.2295-20-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:17:00 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 826b8dce-d1b9-41ea-7780-08d90bd1dbaa
X-MS-TrafficTypeDiagnostic: SN6PR12MB2640:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB264039A3C1003E0EECD4D241E55E9@SN6PR12MB2640.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6430;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 D/QcrCP1qVdV99NkDEjqaApYmATjLxO6/PKjp1RFvcBprPwugR6IyHGe1g8FaBmyFvE2lC6ilL01yZ6LODu/fI9TyEzPsmAPCfM9eLtWp5TEiVYUE4J5m/MtiFrXICOR6iLge/VsFyGB0k6mi/JTXIcM7sWw1V1ZHL9AFxwRjpRxXfeAE8E1gckbSrNg5uaophfzn+TyVNVgc5y3yQTnNb4gPjRfNri6XGT7SfOMGBHDBTMTq+gWbSBg4vYvpLjf7UZ17B3M10F8sa5GNHgfierFDq7seVVNHqXbpTY3+otrkuAQLxsq1xI8chgb04vh+t4V2lEoFtHTj/rdLgkkEyQiltjIM0ww1PYE6EbeXOKS4lj5v+YayTgzjIgkGMsRw8WWT01Exvawhhsnzcm6MMO7+cz/EZ93ZIz6ij3amNtpTNjwm3yKQcO5nk4hze5V14U2a7hCtv6fjI5qhmXBtLnqfpVN5rTGR/F/AQgO/Ie642pUmiVOEL9FHm4XP00aaLCmSdkJnCw24L/dgMZTF/qmYu7t+TXJq1nacf64Eb3AgwUVs7fBHBfPOZlVJ2/nEa4fYRIYWgGZ6RDKEDGvZRSvoQhO3DwLl6q1dIA+UtU/6IIUmAxzEb4jgo6Nqsd3OjF1dPNP/0+1Qkcm3B5JjV2V7YoF61kUd+nhSbeBw/g6Qi3Vqk78ZqVyeL1zfvEebr2Cu+KCB5wHn/40BjOoTxad2rUfNO8d1DxDm+o7qbw=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(136003)(376002)(366004)(396003)(6666004)(52116002)(966005)(7416002)(316002)(16526019)(2906002)(36756003)(186003)(26005)(38100700002)(38350700002)(66556008)(66946007)(5660300002)(1076003)(66476007)(4326008)(83380400001)(6486002)(86362001)(8936002)(956004)(44832011)(2616005)(8676002)(7696005)(478600001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 fo0gzcYdb0xjeeyXNmBCV9EGoZgAGyafDU3zSTiTGtVp9/ZcHWEir4UDwPvr+Pb/1emDKzhnJNVo6lzyGhVjlvRLoYo6fujWlfL7NdEA+vwFXAGloBY8Pmg2VLBZZKrDjG6dJ43u4ncr0mvlA6TJNJucl3OY/wdQhsEVK47VcXV6jiZVrJIqQBtvH8cOynMr95WE0GRWSMV21Nf/LKzYYPmLeaGL/JViu+an0vMqiouTSOwtCBDuKRGh4fWH+/VopYchBwQezXG01E8xWWyZlB8fqyK39IncRIxrLfPHTzkh+UC8RqFCb7QTDZ6d8kDk+IQs5E0Q+e7ZbrDyJlDb2BKl1z1Ri6aVpelgcEJqy5bGtv+6pyzh1Cc6BRGIdmOBw61iGSb3wc1NjBdB1Rrz380+ip1NmwXFLndo6uhtJPDqJ3U1oRZfz41ZDYRmnLa/GyFDaWHiVkyDKso9+Z14Xa0NJEfRfzMDszRqwPy6Ujxg7ZcSXaHu8iZgkmdPB8usYh8W6sDWoMOvmxjgSoMRQDxUxG23Ub83DgogrC0VVR7UVIcyZ7rAiq18VHf0bIJSF0ZrnjkSjzOeqSPtNIr8965sOHRz9gWCZ5+bqwh4jI68asO2NrgEk/0hKbHjnOfkVzo1Yzfy4v+sug6M4louhSa/u/b9II6ezKB0df6595cIg8YeC86+A6sCzslbxSmorCm7ItMkieZkmN6InHabgV4oPZssAoDQsLJZNPwbIuNGSzuZmJEkpBVBF0H3BL+xzUfdya/W/CRumjbFecXsRL4vdbWvwfvkAscMfdmXr8NEPSYYZlBT9riMKJ4GteoPy/nJfww+FDFZsDAOPqEmH2CeFhx4kz7PwKNE+6OpZSzBbfpYeDvBjpecreoy3BlNdxs17cSRn22xF0gl9WgSt2sCRJmBW2ExJTaxP2Kw6jMC5xSJ6pVTv6gA2GyC+59+uNC2z3e5LOxLil/yXfTSKMBCXa84uwPLi3vMw+SstoCNwAenH0pLMiL3UOslSN6hxggYCuxcS+Sj0djXoMnDXTD73Lgvw+GucS75skvOhmJ97xKBHWbABrajvv0VarGif7hnNvzL7Bxpx7FjgC5wacymyyoFw/lloirELGVwnkz0wNNb/o9/WOieoov+7ZqDkd2D8YXnZxEKpP5D4IE5hU3Z6FQuuosTO5lCn46TJrG6IT5IHgUwDl56PBWJ8tjdWGG1WOTRAaQss7/i+gVqggrWXdySNB8G+T4B3MRbjG69UmL+qakrDLHeO449LyjiQSeSHZDL1OuDWKd+ZjhtxguqtvPfhzoem2NbTGovWpInJXvC/5Um2K3DpsvxpZ9x
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 826b8dce-d1b9-41ea-7780-08d90bd1dbaa
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:17:01.2447
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 Io6znElcLdLcYr69IcqO0FDIjtQRwh5FRBIvv91fyuPYFGvNMZs2ZXtL91cIBrp94DIuY/Yi8jVGbprb/Eb6yQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2640
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Version 2 of GHCB specification provides NAEs that can be used by the SNP
guest to communicate with the PSP without risk from a malicious hypervisor
who wishes to read, alter, drop or replay the messages sent.

The hypervisor uses the SNP_GUEST_REQUEST command interface provided by
the SEV-SNP firmware to forward the guest messages to the PSP.

In order to communicate with the PSP, the guest need to locate the secrets
page inserted by the hypervisor during the SEV-SNP guest launch. The
secrets page contains the communication keys used to send and receive the
encrypted messages between the guest and the PSP.

The secrets page is located either through the setup_data cc_blob_address
or EFI configuration table.

Create a platform device that the SNP guest driver will bind to get the
platform resources. The SNP guest driver will provide interface to get
the attestation report, key derivation etc.

See SEV-SNP and GHCB spec for more details.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kernel/sev.c       | 124 ++++++++++++++++++++++++++++++++++++
 arch/x86/platform/efi/efi.c |   2 +
 include/linux/efi.h         |   1 +
 include/linux/snp-guest.h   | 124 ++++++++++++++++++++++++++++++++++++
 4 files changed, 251 insertions(+)
 create mode 100644 include/linux/snp-guest.h

diff --git a/arch/x86/kernel/sev.c b/arch/x86/kernel/sev.c
index f28fd8605e63..6fd1f82f473a 100644
--- a/arch/x86/kernel/sev.c
+++ b/arch/x86/kernel/sev.c
@@ -9,6 +9,7 @@
 
 #define pr_fmt(fmt)	"SEV-ES: " fmt
 
+#include <linux/platform_device.h>
 #include <linux/sched/debug.h>	/* For show_regs() */
 #include <linux/percpu-defs.h>
 #include <linux/mem_encrypt.h>
@@ -16,9 +17,12 @@
 #include <linux/printk.h>
 #include <linux/mm_types.h>
 #include <linux/set_memory.h>
+#include <linux/snp-guest.h>
 #include <linux/memblock.h>
 #include <linux/kernel.h>
+#include <linux/efi.h>
 #include <linux/mm.h>
+#include <linux/io.h>
 
 #include <asm/cpu_entry_area.h>
 #include <asm/stacktrace.h>
@@ -31,6 +35,7 @@
 #include <asm/svm.h>
 #include <asm/smp.h>
 #include <asm/cpu.h>
+#include <asm/setup.h>		/* For struct boot_params */
 
 #define DR7_RESET_VALUE        0x400
 
@@ -101,6 +106,21 @@ struct ghcb_state {
 	struct ghcb *ghcb;
 };
 
+/* Confidential computing blob information */
+#define CC_BLOB_SEV_HDR_MAGIC	0x414d4445
+struct cc_blob_sev_info {
+	u32 magic;
+	u16 version;
+	u64 secrets_phys;
+	u32 secrets_len;
+	u64 cpuid_phys;
+	u32 cpuid_len;
+};
+
+#ifdef CONFIG_EFI
+extern unsigned long cc_blob_phys;
+#endif
+
 static DEFINE_PER_CPU(struct sev_es_runtime_data*, runtime_data);
 DEFINE_STATIC_KEY_FALSE(sev_es_enable_key);
 
@@ -1685,3 +1705,107 @@ bool __init handle_vc_boot_ghcb(struct pt_regs *regs)
 	while (true)
 		halt();
 }
+
+static struct resource guest_req_res[0];
+static struct platform_device guest_req_device = {
+	.name		= "snp-guest",
+	.id		= -1,
+	.resource	= guest_req_res,
+	.num_resources	= 1,
+};
+
+static int get_snp_secrets_resource(struct resource *res)
+{
+	struct setup_header *hdr = &boot_params.hdr;
+	struct cc_blob_sev_info *info;
+	unsigned long paddr;
+	int ret = -ENODEV;
+
+	/*
+	 * The secret page contains the VM encryption key used for encrypting the
+	 * messages between the guest and the PSP. The secrets page location is
+	 * available either through the setup_data or EFI configuration table.
+	 */
+	if (hdr->cc_blob_address) {
+		paddr = hdr->cc_blob_address;
+	} else if (efi_enabled(EFI_CONFIG_TABLES)) {
+#ifdef CONFIG_EFI
+		paddr = cc_blob_phys;
+#else
+		return -ENODEV;
+#endif
+	} else {
+		return -ENODEV;
+	}
+
+	info = memremap(paddr, sizeof(*info), MEMREMAP_WB);
+	if (!info)
+		return -ENOMEM;
+
+	if (info->magic == CC_BLOB_SEV_HDR_MAGIC && info->secrets_phys && info->secrets_len) {
+		res->start = info->secrets_phys;
+		res->end = info->secrets_phys + info->secrets_len;
+		res->flags = IORESOURCE_MEM;
+		ret = 0;
+	}
+
+	memunmap(info);
+	return ret;
+}
+
+static int __init add_snp_guest_request(void)
+{
+	if (!sev_snp_active())
+		return -ENODEV;
+
+	if (get_snp_secrets_resource(&guest_req_res[0]))
+		return -ENODEV;
+
+	platform_device_register(&guest_req_device);
+	dev_info(&guest_req_device.dev, "registered [secret 0x%016llx - 0x%016llx]\n",
+		guest_req_res[0].start, guest_req_res[0].end);
+
+	return 0;
+}
+device_initcall(add_snp_guest_request);
+
+unsigned long snp_issue_guest_request(int type, struct snp_guest_request_data *input)
+{
+	struct ghcb_state state;
+	struct ghcb *ghcb;
+	unsigned long id;
+	int ret;
+
+	if (type == SNP_GUEST_REQUEST)
+		id = SVM_VMGEXIT_SNP_GUEST_REQUEST;
+	else if (type == SNP_EXTENDED_GUEST_REQUEST)
+		id = SVM_VMGEXIT_SNP_EXT_GUEST_REQUEST;
+	else
+		return -EINVAL;
+
+	if (!sev_snp_active())
+		return -ENODEV;
+
+	ghcb = sev_es_get_ghcb(&state);
+	if (!ghcb)
+		return -ENODEV;
+
+	vc_ghcb_invalidate(ghcb);
+	ghcb_set_rax(ghcb, input->data_gpa);
+	ghcb_set_rbx(ghcb, input->data_npages);
+
+	ret = sev_es_ghcb_hv_call(ghcb, NULL, id, input->req_gpa, input->resp_gpa);
+
+	if (ret)
+		goto e_put;
+
+	if (ghcb->save.sw_exit_info_2) {
+		ret = ghcb->save.sw_exit_info_2;
+		goto e_put;
+	}
+
+e_put:
+	sev_es_put_ghcb(&state);
+	return ret;
+}
+EXPORT_SYMBOL_GPL(snp_issue_guest_request);
diff --git a/arch/x86/platform/efi/efi.c b/arch/x86/platform/efi/efi.c
index 8a26e705cb06..2cca9ee6e1d4 100644
--- a/arch/x86/platform/efi/efi.c
+++ b/arch/x86/platform/efi/efi.c
@@ -57,6 +57,7 @@ static unsigned long efi_systab_phys __initdata;
 static unsigned long prop_phys = EFI_INVALID_TABLE_ADDR;
 static unsigned long uga_phys = EFI_INVALID_TABLE_ADDR;
 static unsigned long efi_runtime, efi_nr_tables;
+unsigned long cc_blob_phys;
 
 unsigned long efi_fw_vendor, efi_config_table;
 
@@ -66,6 +67,7 @@ static const efi_config_table_type_t arch_tables[] __initconst = {
 #ifdef CONFIG_X86_UV
 	{UV_SYSTEM_TABLE_GUID,		&uv_systab_phys,	"UVsystab"	},
 #endif
+	{EFI_CC_BLOB_GUID,		&cc_blob_phys,		"CC blob"	},
 	{},
 };
 
diff --git a/include/linux/efi.h b/include/linux/efi.h
index 6b5d36babfcc..75aeb2a56888 100644
--- a/include/linux/efi.h
+++ b/include/linux/efi.h
@@ -344,6 +344,7 @@ void efi_native_runtime_setup(void);
 #define EFI_CERT_SHA256_GUID			EFI_GUID(0xc1c41626, 0x504c, 0x4092, 0xac, 0xa9, 0x41, 0xf9, 0x36, 0x93, 0x43, 0x28)
 #define EFI_CERT_X509_GUID			EFI_GUID(0xa5c059a1, 0x94e4, 0x4aa7, 0x87, 0xb5, 0xab, 0x15, 0x5c, 0x2b, 0xf0, 0x72)
 #define EFI_CERT_X509_SHA256_GUID		EFI_GUID(0x3bd2a492, 0x96c0, 0x4079, 0xb4, 0x20, 0xfc, 0xf9, 0x8e, 0xf1, 0x03, 0xed)
+#define EFI_CC_BLOB_GUID			EFI_GUID(0x067b1f5f, 0xcf26, 0x44c5, 0x85, 0x54, 0x93, 0xd7, 0x77, 0x91, 0x2d, 0x42)
 
 /*
  * This GUID is used to pass to the kernel proper the struct screen_info
diff --git a/include/linux/snp-guest.h b/include/linux/snp-guest.h
new file mode 100644
index 000000000000..32f70605b52c
--- /dev/null
+++ b/include/linux/snp-guest.h
@@ -0,0 +1,124 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
+/*
+ * AMD Secure Encrypted Virtualization (SEV) driver interface
+ *
+ * Copyright (C) 2021 Advanced Micro Devices, Inc.
+ *
+ * Author: Brijesh Singh <brijesh.singh@amd.com>
+ *
+ * SEV API spec is available at https://developer.amd.com/sev
+ */
+
+#ifndef __LINUX_SNP_GUEST_H_
+#define __LINUX_SNP_GUEST_H_
+
+#include <linux/types.h>
+
+#define MAX_AUTHTAG_LEN		32
+#define VMPCK_KEY_LEN		32
+
+/*
+ * The secrets page contains 96-bytes of reserved field that can be used by
+ * the guest OS. The guest OS uses the area to save the message sequence
+ * number for each VMPL level.
+ */
+struct secrets_guest_priv {
+	u64 msg_seqno_0;
+	u64 msg_seqno_1;
+	u64 msg_seqno_2;
+	u64 msg_seqno_3;
+	u8 rsvd[64];
+} __packed;
+
+/* See the SNP spec secrets page layout section for the structure */
+struct snp_data_secrets_layout {
+	u32 version;
+	u32 imiEn:1;
+	u32 rsvd1:31;
+	u32 fms;
+	u32 rsvd2;
+	u8 gosvw[16];
+	u8 vmpck0[VMPCK_KEY_LEN];
+	u8 vmpck1[VMPCK_KEY_LEN];
+	u8 vmpck2[VMPCK_KEY_LEN];
+	u8 vmpck3[VMPCK_KEY_LEN];
+	struct secrets_guest_priv guest_priv;
+	u8 rsvd3[3840];
+} __packed;
+
+/* See SNP spec SNP_GUEST_REQUEST section for the structure */
+enum msg_type {
+	SNP_MSG_TYPE_INVALID = 0,
+	SNP_MSG_CPUID_REQ,
+	SNP_MSG_CPUID_RSP,
+	SNP_MSG_KEY_REQ,
+	SNP_MSG_KEY_RSP,
+	SNP_MSG_REPORT_REQ,
+	SNP_MSG_REPORT_RSP,
+	SNP_MSG_EXPORT_REQ,
+	SNP_MSG_EXPORT_RSP,
+	SNP_MSG_IMPORT_REQ,
+	SNP_MSG_IMPORT_RSP,
+	SNP_MSG_ABSORB_REQ,
+	SNP_MSG_ABSORB_RSP,
+	SNP_MSG_VMRK_REQ,
+	SNP_MSG_VMRK_RSP,
+
+	SNP_MSG_TYPE_MAX
+};
+
+enum aead_algo {
+	SNP_AEAD_INVALID,
+	SNP_AEAD_AES_256_GCM,
+};
+
+struct snp_guest_msg_hdr {
+	u8 authtag[MAX_AUTHTAG_LEN];
+	u64 msg_seqno;
+	u8 rsvd1[8];
+	u8 algo;
+	u8 hdr_version;
+	u16 hdr_sz;
+	u8 msg_type;
+	u8 msg_version;
+	u16 msg_sz;
+	u32 rsvd2;
+	u8 msg_vmpck;
+	u8 rsvd3[35];
+} __packed;
+
+struct snp_guest_msg {
+	struct snp_guest_msg_hdr hdr;
+	u8 payload[4000];
+} __packed;
+
+struct snp_msg_report_req {
+	u8 data[64];
+	u32 vmpl;
+	u8 rsvd[28];
+} __packed;
+
+enum vmgexit_type {
+	SNP_GUEST_REQUEST,
+	SNP_EXTENDED_GUEST_REQUEST,
+
+	GUEST_REQUEST_MAX
+};
+
+struct snp_guest_request_data {
+	unsigned long req_gpa;
+	unsigned long resp_gpa;
+	unsigned long data_gpa;
+	unsigned int data_npages;
+};
+
+#ifdef CONFIG_AMD_MEM_ENCRYPT
+unsigned long snp_issue_guest_request(int vmgexit_type, struct snp_guest_request_data *input);
+#else
+
+static inline unsigned long snp_issue_guest_request(int type, struct snp_guest_request_data *input)
+{
+	return -ENODEV;
+}
+#endif /* CONFIG_AMD_MEM_ENCRYPT */
+#endif /* __LINUX_SNP_GUEST_H__ */

From patchwork Fri Apr 30 12:16:16 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233209
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id BF49AC433B4
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:19:06 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 8E35F611F1
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:19:06 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232816AbhD3MTx (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:19:53 -0400
Received: from mail-dm6nam10on2056.outbound.protection.outlook.com
 ([40.107.93.56]:37728
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232681AbhD3MTN (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:19:13 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=gMY90+jUdQtK301/3CgTzvl1LNPKeP6LJ9c55crkMgzDueYZaD1Ii+DRf8cPryf9Fy5DkaoG9C7JhsxgP3WF13TGc+4Az3QTb3GbPLoRy2IbGy8+obxqv1P6452pG/NU/sEkWjSLZtO/yT58pjaJfq5JtglFO6E9mv1wfXmAliwp2pKFerjqH3N8te2I2x3j9ah8aT/X/kDhEz4u+KFo/g9yntwuhaNTy12Vp+LG5W+tMUbvfE7W/rEPM/ykqq/hf13C5lqafxt0vAPF7vZBJmIem9boLatEAmZ5VwnE3QufI1A40UtVmq3tr6lsLTBr9s32Nwj/k5/Ikrrd5No/7A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=s38/RqnccsTxLl3TUbffPy5DEuIA45t9N2/vTTyMRbk=;
 b=S+YX4db25VYwEtFr7ljD8YQ4MM6Jc4tinfGBKI4JAvWbAHp5D5W6a4tiw16S+tfvaC98r8n2JsfXvDqMPpeHr1go6tdD7tE4awpmpkdnWFrmZct5fU35VOLV+rDJlKz5GnRn9+OPAdNMsmcF7+R5H0OSJwuGnuA8+2ZjhlZHpFiqpxuPWmXZyD6uwQNVDBbsOAr8DXzcWSxHVMiaGNPmeDplZEePppTDFNZi3CBK1CcWnon+sfz+JzxS+CI5lqAYMpmhhDe2aULJfj3mxvbhttSYh3gbh3alF6WBsivli0Sb7cGyyp3IwoAKHWHLa315soTW2NRZx631V1H7Z1xIFQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=s38/RqnccsTxLl3TUbffPy5DEuIA45t9N2/vTTyMRbk=;
 b=hvP9M7wIaV3kjsQUqUP6pqBzPD3ogEAStfwxggTKZuLAxHA+Qy3BREpjUV3fBcxCTEfjTm/G1ocbU/Quhjs2zkvZM9HWRWqDnlwCWnkhJEEjhoMzjPsI5MUETB2XNM9oqQBJWYn+I67T6LE6vfkg5W4/RnFiz+fwbYIoraN5+/E=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2640.namprd12.prod.outlook.com (2603:10b6:805:6c::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.21; Fri, 30 Apr
 2021 12:17:05 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:17:05 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part1 RFC v2 20/20] virt: Add SEV-SNP guest driver
Date: Fri, 30 Apr 2021 07:16:16 -0500
Message-Id: <20210430121616.2295-21-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430121616.2295-1-brijesh.singh@amd.com>
References: <20210430121616.2295-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0401CA0021.namprd04.prod.outlook.com
 (2603:10b6:803:21::31) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0401CA0021.namprd04.prod.outlook.com (2603:10b6:803:21::31) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.27 via Frontend
 Transport; Fri, 30 Apr 2021 12:17:01 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 3e74b4c7-43ce-4416-2268-08d90bd1dc0d
X-MS-TrafficTypeDiagnostic: SN6PR12MB2640:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB26402F6F09F411F04885C101E55E9@SN6PR12MB2640.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:4941;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 LMBfolT0gjTHVdLO+TcwO4zVkM6bO9aO3kCC4u/0fLQHYhucyNFDe7nlVxPlQsVdbPQ9N6tTHrKBaIucgm51uvoaLKZgWBZ+7slyMpSpf0pNHFmeYYK2JvHIu3i81qzgD+q7YmDjcj5zUdPwcXVgZAMIMYW0QiN1XCFFnKl/8dNNTYNDdXshuVjU2JYjS/MJhz2+mNFFd+m1nqFZAfIwsMMcOWVW2TRvYyhsaKZmWgf7LUoor0c6v2g6T6VOyqOmF8hOpMTcXjbb/LK9WfUgBdq8SJczo5DJmxZWdJ4gMj7G8kz9T3PZQGK2hApUh8wDT8t/ujd3NzvRvv2uaKrDrEiEodhNdjlOrkwwlaVFlqqDYpFwzXi6xIl5XxkDJtXaZmy4vaOUA5qvd/ns05ql+x/JM9UX1F78qChONs0Muz0S/qlgGu90y4G1g3zSIzfGppmNdJ9rHxJdk6ghwBWXlcoMzSzOCktR4TAAjKjJINO2g7gV1edRYvss+dIk5vbH3jwglS5mI5ttDpcuKp/2oWCK0aZ/npdMk1PozPSxngQRKDK7naqpKhoy1lSXuqkIuewvKM0p/EYpImZJxLG6ay65SvzeDrhzMzLVoVrFdPNosb2ocnei9pdzPMdQjVrHEnF+3b7ZP27OfER3vx4A8xL9Wpe6+hQETeSsYFG/IPgXhJrZFTsp6RXs3AY43SuZd+8FzGRb4vUyFxyfBZVTEBwn9wibQDMnZShELOQlOy0=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(346002)(136003)(376002)(366004)(396003)(6666004)(52116002)(966005)(7416002)(316002)(16526019)(2906002)(36756003)(186003)(26005)(38100700002)(38350700002)(30864003)(66556008)(66946007)(5660300002)(1076003)(66476007)(4326008)(83380400001)(6486002)(86362001)(8936002)(956004)(44832011)(2616005)(8676002)(7696005)(478600001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 rzz6utR9cCkYXLbETbMoRgZ/iWZfCSKh4wYs8dlMVLd7XvBro8/qTCP/cy8Hku8nAZvBCat68yE+zV+mfjaq+9waT6fKGBer/+d+LnCGPZbvMv4OZTAEJZj3Ch+wJ7dC9fgBw3sKuTRIYLwiyfU+rdv8WiYjYLkXhvrCCc5XrZjPv7qEbkjYJYBVvQH94Itc1PKbabUeOzQkcE/jEkeR8Smi6k/4p1aj6NCXVZeRDrXwPRxoglo6LyKY9w5YFad5IRrCKKl71IQknXL683gUXXUTm1vdvWQFEFRL9RzKWroAgpCWId6utrLUeLPw/u3Zcthyc1ON136W8WIreursY81nnzWrtMsfMMI0LQkzSpXlHkrcXDEA68eNKWyphouR66rTOMpxhvY2c9wVEIdNdUWOV0GY1Symn0na3Fm8D1Dk5z5wt9aU2G0sruLRHzI2TlpSfNArp45QIuHXF64ZjUalpa1OGV5/+vANOgACQtNL9PZiwP2rx47XBkal8AlxiVO+0YnBRWgK20RIAHHhgBcDiBO8zWX/B1azfA5/kghuVHS8AFWMbv2m+1toXeUt0OvlCcaIPOsbiKsZtOImFWSq8ugA/CZR6bjYCwkXFpMTXBUppJi2epP7yVdYKSMR9mEf6RZwXdxe5IvPHC+0Ee2IVscemRtJi8F9ntuH/IyK/U/MsFK9vNWzSuqteg2KafkpwKx2Vld1csC+SipwVd/YR3WhUNYOx6ZwLs+YpUW5mGoEgkFjpYi2Sg1+0cHmTLFuJx8BXmvto+Ac4pys0v1qIPDDAlqoDWuGk0zOmoMmZ+VbX9emEjY0biWsBz30jYY10w8HUUW+NN0u/dpKTWkJiQtt0WkuxwpljN1XV6g2JneCqcvjRqBLHcH7Pv7UOoJZIqx7RnLk8ziVctZH57o2v4Qd6oPdG6sc6p9VZOJWWlfl6nyj8RcRI6abUg6nqXKaBZcs/CDQl1jI1i+KAzlhmgi/U228LjB2cHUvx1g51oKoeTJNmdZdy+xfUzNQtvTG3S931JhYU7bXSBEzftO1EqGQuI2Y47Bop25S7hUTHxJKudXpACer6l1MqDRLl+iF8qFCuLSwbh/FCYNNMctHWmCRcOa/sqmuVCEREdkAUZAlzhFMHaoP/YW4o5c5SuXmgVPOOx2LRIKWKPV1ep0W45FsAbRgzrOoUROsgmUVnzdl86e74+KOWOUxzK1MWKS38LGWj+x1my6kOHJNSU9BWGDrDfB9Itp/DBZpOkyhQchI+qMwyA37mI/tpLExo4bedRJSlGbst1daHjDFvaSIrZx1RoFjqUjSX+9KAQ0zoNBLSkCg1qhuB7pX3MpO
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 3e74b4c7-43ce-4416-2268-08d90bd1dc0d
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:17:01.9073
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 uwwS2GEfiG7/3E0LpI4fEHb/RpVIfWbe6wMbLtW/edHoGYONQUpoojYO0/+hMSO5mjzCLEsqxMJ+3n0QkNfejQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2640
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

SEV-SNP specification provides the guest a mechanisum to communicate with
the PSP without risk from a malicious hypervisor who wishes to read, alter,
drop or replay the messages sent. The driver uses snp_issue_guest_request()
to issue GHCB SNP_GUEST_REQUEST NAE event. This command constructs a
trusted channel between the guest and the PSP firmware.

The userspace can use the following ioctls provided by the driver:

1. Request an attestation report that can be used to assume the identity
   and security configuration of the guest.
2. Ask the firmware to provide a key derived from a root key.

See SEV-SNP spec section Guest Messages for more details.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 drivers/virt/Kconfig               |   3 +
 drivers/virt/Makefile              |   1 +
 drivers/virt/snp-guest/Kconfig     |  10 +
 drivers/virt/snp-guest/Makefile    |   2 +
 drivers/virt/snp-guest/snp-guest.c | 455 +++++++++++++++++++++++++++++
 include/uapi/linux/snp-guest.h     |  50 ++++
 6 files changed, 521 insertions(+)
 create mode 100644 drivers/virt/snp-guest/Kconfig
 create mode 100644 drivers/virt/snp-guest/Makefile
 create mode 100644 drivers/virt/snp-guest/snp-guest.c
 create mode 100644 include/uapi/linux/snp-guest.h

diff --git a/drivers/virt/Kconfig b/drivers/virt/Kconfig
index 8061e8ef449f..4dec783499ed 100644
--- a/drivers/virt/Kconfig
+++ b/drivers/virt/Kconfig
@@ -36,4 +36,7 @@ source "drivers/virt/vboxguest/Kconfig"
 source "drivers/virt/nitro_enclaves/Kconfig"
 
 source "drivers/virt/acrn/Kconfig"
+
+source "drivers/virt/snp-guest/Kconfig"
+
 endif
diff --git a/drivers/virt/Makefile b/drivers/virt/Makefile
index 3e272ea60cd9..8accff502305 100644
--- a/drivers/virt/Makefile
+++ b/drivers/virt/Makefile
@@ -8,3 +8,4 @@ obj-y				+= vboxguest/
 
 obj-$(CONFIG_NITRO_ENCLAVES)	+= nitro_enclaves/
 obj-$(CONFIG_ACRN_HSM)		+= acrn/
+obj-$(CONFIG_SNP_GUEST)		+= snp-guest/
diff --git a/drivers/virt/snp-guest/Kconfig b/drivers/virt/snp-guest/Kconfig
new file mode 100644
index 000000000000..321a9ff7f869
--- /dev/null
+++ b/drivers/virt/snp-guest/Kconfig
@@ -0,0 +1,10 @@
+config SNP_GUEST
+	tristate "AMD SEV-SNP Guest request driver"
+	default y
+	depends on AMD_MEM_ENCRYPT
+	help
+	  Provides AMD SNP guest request driver. The driver can be used by the
+	  guest to communicate with the hypervisor to request the attestation report
+	  and more.
+
+	  If you choose 'M' here, this module will be called snp-guest.
diff --git a/drivers/virt/snp-guest/Makefile b/drivers/virt/snp-guest/Makefile
new file mode 100644
index 000000000000..f0866b9590aa
--- /dev/null
+++ b/drivers/virt/snp-guest/Makefile
@@ -0,0 +1,2 @@
+# SPDX-License-Identifier: GPL-2.0-only
+obj-$(CONFIG_SNP_GUEST) += snp-guest.o
diff --git a/drivers/virt/snp-guest/snp-guest.c b/drivers/virt/snp-guest/snp-guest.c
new file mode 100644
index 000000000000..7798705f822a
--- /dev/null
+++ b/drivers/virt/snp-guest/snp-guest.c
@@ -0,0 +1,455 @@
+// SPDX-License-Identifier: GPL-2.0-only
+/*
+ * AMD Secure Encrypted Virtualization Nested Paging (SEV-SNP) guest request interface
+ *
+ * Copyright (C) 2021 Advanced Micro Devices, Inc.
+ *
+ * Author: Brijesh Singh <brijesh.singh@amd.com>
+ */
+
+#include <linux/module.h>
+#include <linux/kernel.h>
+#include <linux/types.h>
+#include <linux/mutex.h>
+#include <linux/io.h>
+#include <linux/snp-guest.h>
+#include <linux/platform_device.h>
+#include <linux/miscdevice.h>
+#include <linux/set_memory.h>
+#include <linux/fs.h>
+#include <crypto/aead.h>
+#include <linux/scatterlist.h>
+#include <uapi/linux/snp-guest.h>
+
+#define DEVICE_NAME	"snp-guest"
+#define AAD_LEN		48
+#define MSG_HDR_VER	1
+
+struct snp_guest_crypto {
+	struct crypto_aead *tfm;
+	uint8_t *iv, *authtag;
+	int iv_len, a_len;
+};
+
+struct snp_guest_dev {
+	struct device *dev;
+	struct miscdevice misc;
+
+	void __iomem *base;
+	struct snp_data_secrets_layout *secrets;
+	struct snp_guest_crypto *crypto;
+	struct snp_guest_msg *request, *response;
+};
+
+static DEFINE_MUTEX(snp_cmd_mutex);
+
+static inline struct snp_guest_dev *to_snp_dev(struct file *file)
+{
+	struct miscdevice *dev = file->private_data;
+
+	return container_of(dev, struct snp_guest_dev, misc);
+}
+
+static void free_shared_pages(void *buf, size_t sz)
+{
+	unsigned npages = PAGE_ALIGN(sz) >> PAGE_SHIFT;
+
+	/* If fail to restore the encryption mask then leak it. */
+	if (set_memory_encrypted((unsigned long)buf, npages))
+		return;
+
+	__free_pages(virt_to_page(buf), get_order(sz));
+}
+
+static void *alloc_shared_pages(size_t sz)
+{
+	unsigned npages = PAGE_ALIGN(sz) >> PAGE_SHIFT;
+	struct page *page;
+	int ret;
+
+	page = alloc_pages(GFP_KERNEL_ACCOUNT, get_order(sz));
+	if (IS_ERR(page))
+		return NULL;
+
+	ret = set_memory_decrypted((unsigned long)page_address(page), npages);
+	if (ret) {
+		__free_pages(page, get_order(sz));
+		return NULL;
+	}
+
+	return page_address(page);
+}
+
+static struct snp_guest_crypto *init_crypto(struct snp_guest_dev *snp_dev)
+{
+	struct snp_data_secrets_layout *secrets = snp_dev->secrets;
+	struct snp_guest_crypto *crypto;
+
+	crypto = kzalloc(sizeof(*crypto), GFP_KERNEL_ACCOUNT);
+	if (!crypto)
+		return NULL;
+
+	crypto->tfm = crypto_alloc_aead("gcm(aes)", 0, 0);
+	if (IS_ERR(crypto->tfm))
+		goto e_free;
+
+	if (crypto_aead_setkey(crypto->tfm, secrets->vmpck0, 32))
+		goto e_free_crypto;
+
+	crypto->iv_len = crypto_aead_ivsize(crypto->tfm);
+	if (crypto->iv_len < 12) {
+		dev_err(snp_dev->dev, "IV length is less than 12.\n");
+		goto e_free_crypto;
+	}
+
+	crypto->iv = kmalloc(crypto->iv_len, GFP_KERNEL_ACCOUNT);
+	if (!crypto->iv)
+		goto e_free_crypto;
+
+	if (crypto_aead_authsize(crypto->tfm) > MAX_AUTHTAG_LEN) {
+		if (crypto_aead_setauthsize(crypto->tfm, MAX_AUTHTAG_LEN)) {
+			dev_err(snp_dev->dev, "failed to set authsize to %d\n", MAX_AUTHTAG_LEN);
+			goto e_free_crypto;
+		}
+	}
+
+	crypto->a_len = crypto_aead_authsize(crypto->tfm);
+	crypto->authtag = kmalloc(crypto->a_len, GFP_KERNEL_ACCOUNT);
+	if (!crypto->authtag)
+		goto e_free_crypto;
+
+	return crypto;
+
+e_free_crypto:
+	crypto_free_aead(crypto->tfm);
+e_free:
+	kfree(crypto->iv);
+	kfree(crypto->authtag);
+	kfree(crypto);
+
+	return NULL;
+}
+
+static void deinit_crypto(struct snp_guest_crypto *crypto)
+{
+	crypto_free_aead(crypto->tfm);
+	kfree(crypto->iv);
+	kfree(crypto->authtag);
+	kfree(crypto);
+}
+
+static int enc_dec_message(struct snp_guest_crypto *crypto, struct snp_guest_msg *msg,
+			   uint8_t *src_buf, uint8_t *dst_buf, size_t len, bool enc)
+{
+	struct snp_guest_msg_hdr *hdr = &msg->hdr;
+	struct scatterlist src[3], dst[3];
+	DECLARE_CRYPTO_WAIT(wait);
+	struct aead_request *req;
+	int ret;
+
+	req = aead_request_alloc(crypto->tfm, GFP_KERNEL);
+	if (!req)
+		return -ENOMEM;
+
+	/*
+	 * AEAD memory operations:
+	 * +------ AAD -------+------- DATA -----+---- AUTHTAG----+
+	 * |  msg header      |  plaintext       |  hdr->authtag  |
+	 * | bytes 30h - 5Fh  |    or            |                |
+	 * |                  |   cipher         |                |
+	 * +------------------+------------------+----------------+
+	 */
+	sg_init_table(src, 3);
+	sg_set_buf(&src[0], &hdr->algo, AAD_LEN);
+	sg_set_buf(&src[1], src_buf, hdr->msg_sz);
+	sg_set_buf(&src[2], hdr->authtag, crypto->a_len);
+
+	sg_init_table(dst, 3);
+	sg_set_buf(&dst[0], &hdr->algo, AAD_LEN);
+	sg_set_buf(&dst[1], dst_buf, hdr->msg_sz);
+	sg_set_buf(&dst[2], hdr->authtag, crypto->a_len);
+
+	aead_request_set_ad(req, AAD_LEN);
+	aead_request_set_tfm(req, crypto->tfm);
+	aead_request_set_callback(req, 0, crypto_req_done, &wait);
+
+	aead_request_set_crypt(req, src, dst, len, crypto->iv);
+	ret = crypto_wait_req(enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req), &wait);
+
+	aead_request_free(req);
+	return ret;
+}
+
+static int encrypt_payload(struct snp_guest_dev *snp_dev, struct snp_guest_msg *msg,
+			   void *plaintext, size_t len)
+{
+	struct snp_guest_crypto *crypto = snp_dev->crypto;
+	struct snp_guest_msg_hdr *hdr = &msg->hdr;
+
+	memset(crypto->iv, 0, crypto->iv_len);
+	memcpy(crypto->iv, &hdr->msg_seqno, sizeof(hdr->msg_seqno));
+
+	return enc_dec_message(crypto, msg, plaintext, msg->payload, len, true);
+}
+
+static int decrypt_payload(struct snp_guest_dev *snp_dev, struct snp_guest_msg *msg,
+			   void *plaintext, size_t len)
+{
+	struct snp_guest_crypto *crypto = snp_dev->crypto;
+	struct snp_guest_msg_hdr *hdr = &msg->hdr;
+
+	/* Build IV with response buffer sequence number */
+	memset(crypto->iv, 0, crypto->iv_len);
+	memcpy(crypto->iv, &hdr->msg_seqno, sizeof(hdr->msg_seqno));
+
+	return enc_dec_message(crypto, msg, msg->payload, plaintext, len, false);
+}
+
+static int __handle_guest_request(struct snp_guest_dev *snp_dev, int msg_type,
+				 struct snp_user_guest_request *input, uint8_t *req_buf,
+				 size_t req_sz, uint8_t *resp_buf, size_t resp_sz, size_t *msg_sz)
+{
+	struct secrets_guest_priv *priv = &snp_dev->secrets->guest_priv;
+	struct snp_guest_msg *response = snp_dev->response;
+	struct snp_guest_msg_hdr *resp_hdr = &response->hdr;
+	struct snp_guest_msg *request = snp_dev->request;
+	struct snp_guest_msg_hdr *req_hdr = &request->hdr;
+	struct snp_guest_crypto *crypto = snp_dev->crypto;
+	struct snp_guest_request_data data;
+	int ret;
+
+	/* The sequence number must begin with non-zero value */
+	if (!priv->msg_seqno_0)
+		priv->msg_seqno_0 = 1;
+
+	/* Populate the request header */
+	memset(req_hdr, 0, sizeof(*req_hdr));
+	req_hdr->algo = SNP_AEAD_AES_256_GCM;
+	req_hdr->hdr_version = MSG_HDR_VER;
+	req_hdr->hdr_sz = sizeof(*req_hdr);
+	req_hdr->msg_type = msg_type;
+	req_hdr->msg_version = input->msg_version;
+	req_hdr->msg_seqno = priv->msg_seqno_0;
+	req_hdr->msg_vmpck = 0;
+	req_hdr->msg_sz = req_sz;
+
+	dev_dbg(snp_dev->dev, "request [msg_seqno %lld msg_type %d msg_version %d msg_sz %d]\n",
+		req_hdr->msg_seqno, req_hdr->msg_type, req_hdr->msg_version, req_hdr->msg_sz);
+
+	/* Encrypt the request message buffer */
+	ret = encrypt_payload(snp_dev, request, req_buf, req_sz);
+	if (ret)
+		return ret;
+
+	/* Call firmware to process the request */
+	data.req_gpa = __pa(request);
+	data.resp_gpa = __pa(response);
+	ret = snp_issue_guest_request(SNP_GUEST_REQUEST, &data);
+	input->fw_err = ret;
+	if (ret)
+		return ret;
+
+	dev_dbg(snp_dev->dev, "response [msg_seqno %lld msg_type %d msg_version %d msg_sz %d]\n",
+		resp_hdr->msg_seqno, resp_hdr->msg_type, resp_hdr->msg_version, resp_hdr->msg_sz);
+
+	/* Verify that the sequence counter is incremented by 1 */
+	if (resp_hdr->msg_seqno != (req_hdr->msg_seqno + 1))
+		return -EBADMSG;
+
+	/* Save the message counter for the next request */
+	priv->msg_seqno_0 = resp_hdr->msg_seqno + 1;
+
+	/* Verify response message type and version */
+	if ((resp_hdr->msg_type != (req_hdr->msg_type + 1)) ||
+	    (resp_hdr->msg_version != req_hdr->msg_version))
+		return -EBADMSG;
+
+	/* If the message size is greather than our buffer length then return an error. */
+	if (unlikely((resp_hdr->msg_sz + crypto->a_len) > resp_sz))
+		return -EBADMSG;
+
+	/* Decrypt the payload */
+	ret = decrypt_payload(snp_dev, response, resp_buf, resp_hdr->msg_sz + crypto->a_len);
+	if (ret)
+		return ret;
+
+	*msg_sz = resp_hdr->msg_sz;
+	return 0;
+}
+
+static int handle_guest_request(struct snp_guest_dev *snp_dev, int msg_type,
+				struct snp_user_guest_request *input, void *req_buf,
+				size_t req_len, void __user *resp_buf, size_t resp_len)
+{
+	struct snp_guest_crypto *crypto = snp_dev->crypto;
+	struct page *page;
+	size_t msg_len;
+	int ret;
+
+	/* Allocate the buffer to hold response */
+	resp_len += crypto->a_len;
+	page = alloc_pages(GFP_KERNEL_ACCOUNT, get_order(resp_len));
+	if (!page)
+		return -ENOMEM;
+
+	ret = __handle_guest_request(snp_dev, msg_type, input, req_buf, req_len,
+			page_address(page), resp_len, &msg_len);
+	if (ret)
+		goto e_free;
+
+	if (copy_to_user(resp_buf, page_address(page), msg_len))
+		ret = -EFAULT;
+
+e_free:
+	__free_pages(page, get_order(resp_len));
+
+	return ret;
+}
+
+static int get_report(struct snp_guest_dev *snp_dev, struct snp_user_guest_request *input)
+{
+	struct snp_user_report __user *report = (struct snp_user_report *)input->data;
+	struct snp_user_report_req req;
+
+	if (copy_from_user(&req, &report->req, sizeof(req)))
+		return -EFAULT;
+
+	return handle_guest_request(snp_dev, SNP_MSG_REPORT_REQ, input, &req.user_data,
+			sizeof(req.user_data), report->response, sizeof(report->response));
+}
+
+static int derive_key(struct snp_guest_dev *snp_dev, struct snp_user_guest_request *input)
+{
+	struct snp_user_derive_key __user *key = (struct snp_user_derive_key *)input->data;
+	struct snp_user_derive_key_req req;
+
+	if (copy_from_user(&req, &key->req, sizeof(req)))
+		return -EFAULT;
+
+	return handle_guest_request(snp_dev, SNP_MSG_KEY_REQ, input, &req, sizeof(req),
+			key->response, sizeof(key->response));
+}
+
+static long snp_guest_ioctl(struct file *file, unsigned int ioctl, unsigned long arg)
+{
+	struct snp_guest_dev *snp_dev = to_snp_dev(file);
+	struct snp_user_guest_request input;
+	void __user *argp = (void __user *)arg;
+	int ret = -ENOTTY;
+
+	if (copy_from_user(&input, argp, sizeof(input)))
+		return -EFAULT;
+
+	mutex_lock(&snp_cmd_mutex);
+	switch(ioctl) {
+	case SNP_GET_REPORT: {
+		ret = get_report(snp_dev, &input);
+		break;
+	}
+	case SNP_DERIVE_KEY: {
+		ret = derive_key(snp_dev, &input);
+		break;
+	}
+	default: break;
+	}
+
+	mutex_unlock(&snp_cmd_mutex);
+
+	if (copy_to_user(argp, &input, sizeof(input)))
+		return -EFAULT;
+
+	return ret;
+}
+
+static const struct file_operations snp_guest_fops = {
+	.owner	= THIS_MODULE,
+	.unlocked_ioctl = snp_guest_ioctl,
+};
+
+static int __init snp_guest_probe(struct platform_device *pdev)
+{
+	struct snp_guest_dev *snp_dev;
+	struct device *dev = &pdev->dev;
+	struct miscdevice *misc;
+	struct resource *res;
+	int ret;
+
+	snp_dev = devm_kzalloc(&pdev->dev, sizeof(struct snp_guest_dev), GFP_KERNEL);
+	if (!snp_dev)
+		return -ENOMEM;
+
+	platform_set_drvdata(pdev, snp_dev);
+	snp_dev->dev = dev;
+
+	res = platform_get_mem_or_io(pdev, 0);
+	if (IS_ERR(res))
+		return PTR_ERR(res);
+
+	if (unlikely(resource_type(res) != IORESOURCE_MEM))
+		return -EINVAL;
+
+	snp_dev->base = memremap(res->start, resource_size(res), MEMREMAP_WB);
+	if (IS_ERR(snp_dev->base))
+		return PTR_ERR(snp_dev->base);
+
+	snp_dev->secrets = (struct snp_data_secrets_layout *)snp_dev->base;
+
+	snp_dev->crypto = init_crypto(snp_dev);
+	if (!snp_dev->crypto) {
+		ret = -EINVAL;
+		goto e_unmap;
+	}
+
+	/* Allocate the shared page used for the request and response message. */
+	snp_dev->request = alloc_shared_pages(sizeof(struct snp_guest_msg));
+	if (IS_ERR(snp_dev->request)) {
+		ret = PTR_ERR(snp_dev->request);
+		goto e_unmap;
+	}
+
+	snp_dev->response = alloc_shared_pages(sizeof(struct snp_guest_msg));
+	if (IS_ERR(snp_dev->response)) {
+		ret = PTR_ERR(snp_dev->response);
+		goto e_free_req;
+	}
+
+	misc = &snp_dev->misc;
+	misc->minor = MISC_DYNAMIC_MINOR;
+	misc->name = DEVICE_NAME;
+	misc->fops = &snp_guest_fops;
+
+	return misc_register(misc);
+
+e_free_req:
+	free_shared_pages(snp_dev->request, sizeof(struct snp_guest_msg));
+e_unmap:
+	memunmap(snp_dev->base);
+	return ret;
+}
+
+static int __exit snp_guest_remove(struct platform_device *pdev)
+{
+	struct snp_guest_dev *snp_dev = platform_get_drvdata(pdev);
+
+	free_shared_pages(snp_dev->request, sizeof(struct snp_guest_msg));
+	free_shared_pages(snp_dev->response, sizeof(struct snp_guest_msg));
+	deinit_crypto(snp_dev->crypto);
+	memunmap(snp_dev->base);
+	misc_deregister(&snp_dev->misc);
+
+	return 0;
+}
+
+static struct platform_driver snp_guest_driver = {
+	.remove		= __exit_p(snp_guest_remove),
+	.driver		= {
+		.name = "snp-guest",
+	},
+};
+
+module_platform_driver_probe(snp_guest_driver, snp_guest_probe);
+
+MODULE_AUTHOR("Brijesh Singh <brijesh.singh@amd.com>");
+MODULE_LICENSE("GPL");
+MODULE_VERSION("1.0.0");
+MODULE_DESCRIPTION("AMD SNP Guest Driver");
diff --git a/include/uapi/linux/snp-guest.h b/include/uapi/linux/snp-guest.h
new file mode 100644
index 000000000000..61ff22092a22
--- /dev/null
+++ b/include/uapi/linux/snp-guest.h
@@ -0,0 +1,50 @@
+/* SPDX-License-Identifier: GPL-2.0-only WITH Linux-syscall-note */
+/*
+ * Userspace interface for AMD Secure Encrypted Virtualization Nested Paging (SEV-SNP)
+ * guest command request.
+ *
+ * Copyright (C) 2021 Advanced Micro Devices, Inc.
+ *
+ * Author: Brijesh Singh <brijesh.singh@amd.com>
+ *
+ * SEV-SNP API specification is available at: https://developer.amd.com/sev/
+ */
+
+#ifndef __UAPI_LINUX_SNP_GUEST_H_
+#define __UAPI_LINUX_SNP_GUEST_H_
+
+#include <linux/types.h>
+
+struct snp_user_report_req {
+	__u8 user_data[64];
+};
+
+struct snp_user_report {
+	struct snp_user_report_req req;
+	__u8 response[4000];	/* see SEV-SNP spec for the response format */
+};
+
+struct snp_user_derive_key_req {
+	__u8 root_key_select;
+	__u64 guest_field_select;
+	__u32 vmpl;
+	__u32 guest_svn;
+	__u64 tcb_version;
+};
+
+struct snp_user_derive_key {
+	struct snp_user_derive_key_req req;
+	__u8 response[64];	/* see SEV-SNP spec for the response format */
+};
+
+struct snp_user_guest_request {
+	__u8 msg_version;	/* Message version number (must be non-zero) */
+	__u64 data;
+	__u32 fw_err;		/* firmware error code on failure (see psp-sev.h) */
+};
+
+#define SNP_GUEST_REQ_IOC_TYPE	'S'
+#define SNP_GET_REPORT _IOWR(SNP_GUEST_REQ_IOC_TYPE, 0x0, struct snp_user_guest_request)
+#define SNP_DERIVE_KEY _IOWR(SNP_GUEST_REQ_IOC_TYPE, 0x1, struct snp_user_guest_request)
+
+#endif /* __UAPI_LINUX_SNP_GUEST_H_ */
