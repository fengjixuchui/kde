From patchwork Fri Apr 30 12:37:46 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233281
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 84D30C433B4
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:38:59 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 582A161480
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:38:59 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232276AbhD3Mjp (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:39:45 -0400
Received: from mail-dm6nam10on2058.outbound.protection.outlook.com
 ([40.107.93.58]:15105
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S231696AbhD3Mjo (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:39:44 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=kbC6fntHx8WQrOFfS1oMo9M9Cv3ofqWnUxw5sYQZSpHAUNpzDPTZ3IXGpJ8C4FJQseoybP/QmbFGrGS6ALx4e27UBrheuAhkjrkXuAzDarNXbBUBGxPBO6yxB/yOncuKD2E7M88/MRSELUgQIOQ0ZJy7RvSZNmt4xAFa3OvfhAfp+a9i3lu+NmT1BMbxkToGuMfCRaykPudHJU9X/oN3zwjm6g3YfzpC+0Iud5QE/bh2XwATW1oo+nwkP1304shEWm+Bvf2KXXr46R4l1eVhiWuO6wdkVUdJAT4Kxm13Sb55g9f7uUbUDRCPQzTeWj7fvi9PFLWYgwK3hjw3pATROA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=CMI48TF+FLivggMVMqIDTa5FlClU/ZB2/9LsP4EYhxc=;
 b=OfXt4B5SxIEqHEw0Z/A14rik2ywsF0qD0XcK7EoOaccNljSpB6knGLzK5/ARjk5i7unoNdOy9s8OtKMONW2pf/EViDc7zDTJn+PP7eSzI31kA5s8h5dev0hQKN/wM+rLZlDE4k4yRqZGXg99dmtKwfCCoyZP8SRgyurhKg9kbY1feVzb/pfNnEZKKD8OylG6B4dlv49pr+JDGUC2mj1w5GxEFCFoC0mJajKflcToMbmZp5RoU3Vuvm3+BimiB9HLwgIjD92xeA68KBx99trfr0KCjQg2FYaejtsn0+J4WSK5kZA8Jjwk96zjlxErwH9BANTOZEM9+njx6oXATmpmyg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=CMI48TF+FLivggMVMqIDTa5FlClU/ZB2/9LsP4EYhxc=;
 b=ECVHdf0YyS4zXgsAP3XCPmRux3CASTYNQgRhemI5GRA6rnxcxN3ieUNYLihWaYaZ9HTe9i2IUvSmXmStQGvN8RM/Jzeh/qC4sihmP1QfztEhKeEkGZ9nCEWJ5lKGFanIucIF1ovmkRKb396I8s0usUPltOiSM++HsxZcpwPx7y8=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4511.namprd12.prod.outlook.com (2603:10b6:806:95::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:38:54 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:38:54 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 01/37] KVM: SVM: Add support to handle AP reset
 MSR protocol
Date: Fri, 30 Apr 2021 07:37:46 -0500
Message-Id: <20210430123822.13825-2-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:38:53 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 52723c5b-bd6f-469e-6175-08d90bd4ea66
X-MS-TrafficTypeDiagnostic: SA0PR12MB4511:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB45110BA51EC3A763128FD3A2E55E9@SA0PR12MB4511.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:9508;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 bKkMUu348hk2Kfqx/0HAwNE+gm0+pOa+BtmTXdLGT3JpGaN+ufQ0y8rLC7r8aNrUEpI+WDR/WKEqHgiY8ObLG2l8t8GlGtQYa71v7LGi5voIcDGKpleUtF7i/6igteQsRVjfznzYmX4QUBVMTSuh+w9qby8tTCny6DVTcsyuA1GIureRxhpNhnmTfUuyylpPqwuDEHQq2tSs5eiNfgJJxdi4dBzBPA2xtCm8RkyfFmpzu/tSdB8jOwjBFrPnDX5SAFhHdQPawPkqUGkGVwV/Ofl5bduoUUf7B/q0KBPxJlxt2vZsrsg7Xb+6uOjjRwsx0K85anttN1YyTNsR2I+hu571rhi8DQMkO9ghMbpzm2loBI54gNEWimi/SoIMSBMyTVAFAsVZI3WgdJTzdXUzyHMPuO0V97taUKq1Md6z+MeWWn7JBNfLw3xd5iSn9CTfqbDJr9NV1vKHAoWxg1wdMntec+CA1O0dUIOM0xthO9P/HD5g7TnpB8+0Y8F3JaYrBf0GprsswkFeyO39Zw1mB/gvQPer4nSEGhqhx5Y+fuxzThkLyqmPXfV0PVuCk7q3GXnRLR8W2w2VnNtaUx6Juq3/5DP31WlEYjpyZvQake2uKVaf7AEmZfrtBjYm5Mfj0gWqJkFAjom/grzgneU7dw==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(346002)(39860400002)(136003)(366004)(376002)(396003)(83380400001)(36756003)(8936002)(86362001)(66476007)(956004)(186003)(38350700002)(16526019)(6666004)(6486002)(44832011)(52116002)(5660300002)(38100700002)(7416002)(66556008)(2616005)(26005)(478600001)(4326008)(66946007)(316002)(2906002)(8676002)(7696005)(1076003);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 QsxDGsIT6y2yu4v2fDHAPjEnFpKe2Wb7uh9FgMVh0NZnnYzPhM2nip6aWxqmBkWwYE6hy5GFhkhsTVQurAHI9ikoBpZEsTCmoG2tpC1gJ2eNiXUhsfoZAStVqVZgfoaIVutAxe2p2IxJmipz4mbYPOvBT0x0NqTzzHhcb1zvRtMTe7eIaa/gThZ9BPsut8P0+zgY+cpFzko9+el4ozLTKoJriyrpu+M4QonI9p6WHg+wO5D3Ygt1+iGBGyH0nKV5PqLq88GhkCECfsfjHhmy1uxWYIHPHnGOl6wkRQcbVjHk4aoWfZ7qujcdtf+M4F7EYTUWlENYyoYmBOsoxnmTK/8cYoCma1/DnloXuVO2IGwjhxvarBjFgkzBTI7MZRSKCH9WeX8Wit1jXWMhT8cuDqM5X9IJUM36AEJl/GI77HW0Xs4mr+uDVRKl4GvhQnK6td0XExB4HR8zrlbxbPEheBOWxRYN45+Io4KPf+pcmQGqqg4IfXVk+5yuAcuE9e7lYL8+Z3fBmVo7mResDU0k1mdSwK67Ut/FoG2XMdgnuU+/MTqCaxvpxMwwP2pCDZ70+TYnJKw7Voy3RcxwKDflumyLj1P2sRZ0D+eAHRsB/luV6oGCWgBLu8MZjIdgFB1mHMcR/Teaa2lh0VIJQ7nHfoXb9PAnA+gcBnNbM6kY3tzp6Ix9tv9mb2yAdDBiRgnSwKeQAeUl+YvmoJAoBo3Mk36WiS2wkIEd+KfqeXWHcsF5qCoeeC/5MDfyIHldfFN/8lOuAiLVn0/mOy4QMvKNg9oFgn2hpEiEF5kzolZoX8BmlLzs7VMp2nKXTiH22IBdFaLCNSz8btFMlcODXVa+f2Mmz6UP4oY2+0IN0PtLJGjM+AsY8er5QlQ3dHQtWqS2RLbrYwQznRmnnfTKV1dAWTwqlKSN3fsbmtOUCekxBkm/zQDOhtA4aHMtybyXBW5In8/SjRxxHunLhIWIfymxbmTaBZBtqZioAqDXAZGSaMGcm2TcY5gkqbN7JQI3FXLFl2d1ityEKgwItmUzhTXlMnY9nwe+D6vfQcgvjn4aqh/hcP5e7l/Syr24e5JKFoLhQnbnBcR/vLkKnbR5WvfAsug+YgFd2HiG9SD+9LlvwS3bc5+RQjLRQ5CAPHbZdxXQeEHrqL0d7F8Wxfl89Rhf1PZqdWpjhi9Ui9/dUlL8qmeyGKO5SqxQZbiPBt2dR82Dol9yAvN42tRD15GNGFDKa4WjeJBP9Ei9DzPfhLZ3bYACMkMEOVoD3f0WRLLo7Dgwr0MIL/5e7BX3EMHbomfyzhP6l1GBK7J1Aio2JxoS7/f88jsaI9CrDlewk/N/VtgW
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 52723c5b-bd6f-469e-6175-08d90bd4ea66
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:38:54.4785
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 qqOh+R9Ma6e0o9qAVDj6v6ELY110rwcjXbnp0kOY6zuetzHctvzySumuPYMvn1xhXDEcjv3r1uUZQsccHBW2LA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4511
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Tom Lendacky <thomas.lendacky@amd.com>

Add support for AP Reset Hold being invoked using the GHCB MSR protocol,
available in version 2 of the GHCB specification.

Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/svm/sev.c | 56 ++++++++++++++++++++++++++++++++++++------
 arch/x86/kvm/svm/svm.h |  1 +
 2 files changed, 49 insertions(+), 8 deletions(-)

diff --git a/arch/x86/kvm/svm/sev.c b/arch/x86/kvm/svm/sev.c
index a9d8d6aafdb8..7bf4c2354a5a 100644
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@ -57,6 +57,10 @@ module_param_named(sev_es, sev_es_enabled, bool, 0444);
 #define sev_es_enabled false
 #endif /* CONFIG_KVM_AMD_SEV */
 
+#define AP_RESET_HOLD_NONE		0
+#define AP_RESET_HOLD_NAE_EVENT		1
+#define AP_RESET_HOLD_MSR_PROTO		2
+
 static u8 sev_enc_bit;
 static DECLARE_RWSEM(sev_deactivate_lock);
 static DEFINE_MUTEX(sev_bitmap_lock);
@@ -2200,6 +2204,9 @@ static int sev_es_validate_vmgexit(struct vcpu_svm *svm)
 
 static void pre_sev_es_run(struct vcpu_svm *svm)
 {
+	/* Clear any indication that the vCPU is in a type of AP Reset Hold */
+	svm->ap_reset_hold_type = AP_RESET_HOLD_NONE;
+
 	if (!svm->ghcb)
 		return;
 
@@ -2408,6 +2415,22 @@ static int sev_handle_vmgexit_msr_protocol(struct vcpu_svm *svm)
 				  GHCB_MSR_INFO_POS);
 		break;
 	}
+	case GHCB_MSR_AP_RESET_HOLD_REQ:
+		svm->ap_reset_hold_type = AP_RESET_HOLD_MSR_PROTO;
+		ret = kvm_emulate_ap_reset_hold(&svm->vcpu);
+
+		/*
+		 * Preset the result to a non-SIPI return and then only set
+		 * the result to non-zero when delivering a SIPI.
+		 */
+		set_ghcb_msr_bits(svm, 0,
+				  GHCB_MSR_AP_RESET_HOLD_RESULT_MASK,
+				  GHCB_MSR_AP_RESET_HOLD_RESULT_POS);
+
+		set_ghcb_msr_bits(svm, GHCB_MSR_AP_RESET_HOLD_RESP,
+				  GHCB_MSR_INFO_MASK,
+				  GHCB_MSR_INFO_POS);
+		break;
 	case GHCB_MSR_TERM_REQ: {
 		u64 reason_set, reason_code;
 
@@ -2495,6 +2518,7 @@ int sev_handle_vmgexit(struct kvm_vcpu *vcpu)
 		ret = svm_invoke_exit_handler(vcpu, SVM_EXIT_IRET);
 		break;
 	case SVM_VMGEXIT_AP_HLT_LOOP:
+		svm->ap_reset_hold_type = AP_RESET_HOLD_NAE_EVENT;
 		ret = kvm_emulate_ap_reset_hold(vcpu);
 		break;
 	case SVM_VMGEXIT_AP_JUMP_TABLE: {
@@ -2632,13 +2656,29 @@ void sev_vcpu_deliver_sipi_vector(struct kvm_vcpu *vcpu, u8 vector)
 		return;
 	}
 
-	/*
-	 * Subsequent SIPI: Return from an AP Reset Hold VMGEXIT, where
-	 * the guest will set the CS and RIP. Set SW_EXIT_INFO_2 to a
-	 * non-zero value.
-	 */
-	if (!svm->ghcb)
-		return;
+	/* Subsequent SIPI */
+	switch (svm->ap_reset_hold_type) {
+	case AP_RESET_HOLD_NAE_EVENT:
+		/*
+		 * Return from an AP Reset Hold VMGEXIT, where the guest will
+		 * set the CS and RIP. Set SW_EXIT_INFO_2 to a non-zero value.
+		 */
+		ghcb_set_sw_exit_info_2(svm->ghcb, 1);
+		break;
+	case AP_RESET_HOLD_MSR_PROTO:
+		/*
+		 * Return from an AP Reset Hold VMGEXIT, where the guest will
+		 * set the CS and RIP. Set GHCB data field to a non-zero value.
+		 */
+		set_ghcb_msr_bits(svm, 1,
+				  GHCB_MSR_AP_RESET_HOLD_RESULT_MASK,
+				  GHCB_MSR_AP_RESET_HOLD_RESULT_POS);
 
-	ghcb_set_sw_exit_info_2(svm->ghcb, 1);
+		set_ghcb_msr_bits(svm, GHCB_MSR_AP_RESET_HOLD_RESP,
+				  GHCB_MSR_INFO_MASK,
+				  GHCB_MSR_INFO_POS);
+		break;
+	default:
+		break;
+	}
 }
diff --git a/arch/x86/kvm/svm/svm.h b/arch/x86/kvm/svm/svm.h
index 42f8a7b9048f..dad528d9f08f 100644
--- a/arch/x86/kvm/svm/svm.h
+++ b/arch/x86/kvm/svm/svm.h
@@ -174,6 +174,7 @@ struct vcpu_svm {
 	struct ghcb *ghcb;
 	struct kvm_host_map ghcb_map;
 	bool received_first_sipi;
+	unsigned int ap_reset_hold_type;
 
 	/* SEV-ES scratch area support */
 	void *ghcb_sa;

From patchwork Fri Apr 30 12:37:47 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233285
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 7A420C433B4
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:08 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 52ACA61554
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:08 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232444AbhD3Mjy (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:39:54 -0400
Received: from mail-dm6nam10on2058.outbound.protection.outlook.com
 ([40.107.93.58]:15105
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232154AbhD3Mjp (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:39:45 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=JuHEN5Cmh4qr0YsTRDup0+OxZJbEKsHPPGi0cVQiWtpQibFwp8EEoGO6rUuX4vYVmU1vWmbiCF2dV2s8hbtT0AfvU9KLzm280K4FM0ppseqaTwwcopOzGnkWuFaVGvLjMY0loBmO9p6lWEFA52UIdYWgRE2o5ZNWoyCK569q0sKJl/wspwYqzdACB9rV8GSGDLye2ill30P0My2nGG/xN37u9Z/dFfSibxW0ncDuPnT5WSLsgfHshWyDt1lbgyJVwk02oqGW6jvdwQpqkYNTckLm9vuBBdaHtm2w1pxmIH9ZlaBlxqtNlY2Ws75Iv+NeZlpKB5bza9pkMkgQkYAgRw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=6vWNdGBWM2hCj6xfJeyYcH3m9kjbKolT8k9WpVzLQWk=;
 b=EE7qz4+vAw8bJGQbPeJ//M29yDkhJYWxnKNtJWCHVFGAeQ7SoY499EUTiCXfDNtlVNJEVBmxMcISab5BsYidq2EvukRQjHx0nCmyXyyQhMWiCSK2I93LjkuHFNtPGEF2PyeT6GC7iOrzMenBVf6H1T6AapodnF6ss77bsWfV/+id8tWNnA1G6IT2Fltw5nuG3hwad7dKnt6XQJhAoIu5cRuTz1Qh/giNX6Xi6AKzLx+n69VwJxgn8N4pwSXsICzTatSRhdwKyfDss3WPj2hpGNPmc7cic70CkGTSqyR3usgI1u1tmbPx1jfblYOKSombRIeyfeguylkAABxQSuGEBA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=6vWNdGBWM2hCj6xfJeyYcH3m9kjbKolT8k9WpVzLQWk=;
 b=JXQDRDazMBX5uZfUXiSZeX6hnyzVpeP/1euJJHriIIZpySP4QDY9yHsh42T8JVe9jS9SKo2+gvKa7s/AA3ByD2IGaVqTmDDMr7PnvtaW9d3UnH9Vo9+1DhApDVcPrZblDvpU5+fg2K9cgGE/OzWwK5CFV8kJ08m6UAlYPrEmWHM=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4511.namprd12.prod.outlook.com (2603:10b6:806:95::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:38:55 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:38:55 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 02/37] KVM: SVM: Provide the Hypervisor Feature
 support VMGEXIT
Date: Fri, 30 Apr 2021 07:37:47 -0500
Message-Id: <20210430123822.13825-3-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:38:54 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 6bfe5bd9-235f-4798-bda5-08d90bd4ead1
X-MS-TrafficTypeDiagnostic: SA0PR12MB4511:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB45118A54E0733C8085FE0571E55E9@SA0PR12MB4511.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:3968;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 WMENVWqfzfPkx9oUVrLhIU0lC+7DMzI0/0TQf3cYj4t7oSXicbi0GsCwehwNU0Z3QSPKq+oyKSrtZIgzrF2IvH699tEQikOZmb1t/4K07zatH64/9RrpHzVlEcq0cEdvEe+97MvK5dH4vvf8Y/PWhs/rIA00Y3dA2PomBICjOWZXMOXmdMnEMjbvJgft9CIYGd5bI1eyYq8xy7KW3xulLzymirmdFwgLgdX7imm0Czad1mD021IzBIYzf9T2UvhYVggeZrC4Jf0kPZMiW8LAqz4uFTwqOoZnNvI4aa4iFkFsO3akmE02xnlPD8O6AhbIA18SV1oPMjNghvb/kabZnQ8UkPgMLptOQeJsXYy+Fsv8iZM8jV8ZS/2KBnWvFtUUgb5sRGY/HGuLJmuTUlTsxlcATeuWf0sVln2WmP4q8Bf6AaBOXb3ddPC1i/LVS/rrVvg4YU36/Gk1B2+tMte2RyE0LOWAT3w/BmYvNuj1lrjUTJMjzbupjabDZZwnf2DBAtWdYXivLP5jXErzb36OfMnd2PTTLAoGQznJfYA5TdlfK/3vmg+EdD2nsm5N9dNsS0qWyu22PAg3gEgKwkEz4mfPgBGjpq1qN3UcsrZXN7PyqfrfZcoQDmSypL8F32gjWqSLUQwju1BnZ/z9lF9tPQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(346002)(39860400002)(136003)(366004)(376002)(396003)(83380400001)(36756003)(8936002)(86362001)(66476007)(956004)(186003)(38350700002)(16526019)(6666004)(6486002)(44832011)(52116002)(5660300002)(38100700002)(7416002)(66556008)(2616005)(26005)(478600001)(4326008)(66946007)(316002)(2906002)(8676002)(7696005)(1076003);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 RzWF9IN0oCVUEqA4gZOlssNeL9qkqgfCuc+rpxkOJENK9U7LmupzJb1Y3M+4OCNGa9RT20mbs33SYSEp+mO4pQkYxvf+i6aUtvFwcGNg5/mE13u+u/aNFkkW0LsQ7379jk25zd8dgZzIofWTUso0KZRf8syPZjFicij91p9KpvAsSVbFu+zC0uiXskzNhnGArzfoVw3c2cqXjAm3yhiluVL0b6j5Pol3O2IyJI7fsucUnTjlCtte99XxWl4PiAbMk0H/yyaeKiHWBZHHSiHZVlsQ7bjggcpo4NUxjMrINQQD+0mea/5ljrF4jsryFuMyDx52m97dliSFW153GkQapzh4dsSFHRYMdZXoTkIxfj4ypJj/3MOPx6US+XMZJJlNSHuQ22ni8MlJc0mtT3P4M6VKqbJz0lRTmjXY06rjiytZCjKt/7Fi9rw+H1y1ci0APGPraLAiEM9PzoKS38wCMa56oGONbwM/KK8VfiAiEsXPGFdHQv9BVwbGKBZ5KMOnQ/tRNTxoIvh6a3tu8CJtii2ywrnXHetjF0llusSMgv/jZRR8+hd8GnLfMrbD9rbVrngDe7RHqAmS+6jXgvcox4Mgsj78SggUC80hFeeRmbxTIKNzmqMQBUAj4eF20hb0ZHZ2723kU9M0MKKkfUZ+GaKF171KCSqGY7ezwlgCF5Wnji69Ar4r2LYFo35wsNjAyEp9pm90X6Bagih2ClbvrMu0ZSJrhCFhvyzOMekWgBXSOEFv3EhOotZJvXTf5nMi2NaVZLEzjJwF6qgTO5FW3JMpRC8GXnqH927pyQrOmWjLB8Y/jE6JO+t19LUge7b/RjT2cp8NDmWaRNft3lF/Lrlt21fIv1WZKC1HKP3acg451a70KafUYZWzh9t/irxu/0t30lUzzy4fOhaNh54KFu0OWVHzI0wbGTAa57GkxvTbOgruUKKRPilPrff6CTMTlCGNjP8sI4Hd2Ba+AY/Ym5Hf+lKjc6e/o+a6MsQnDBH78/JD6lWWf2ZfgjbFd8HhqGPUzMiGTqmbaEVhCm+nTLzyEfmm9h9yaDlP1a5FsyfUIKpVXXuTwUQJyLwFP3WNFNkCmegyv0mA4GvNAap+Q0zzAp2Jgk6rwyEHAMlZF9ymCtkVReKX2WRtTnAzFkAQE4Zkn42kBxiUtac9RNV820BDgsVD9zUen9wQfDmVirn4+bwnlyUZvrFdoXG2En1aV5Iz9fOywNlvT8KwE/0gM5eR2YHzmyqzqkYDttbwySaTQoG+QffQGsIxQltoG05PYs12Zd45s6WVYu0m5s0jobr1i6zqsxajPjQnNTpeSkW32mkIFy/+qkQ4cZTJ2q9B
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 6bfe5bd9-235f-4798-bda5-08d90bd4ead1
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:38:55.1951
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 RsoGcWF+h6A1DONec13D1NAndZrw9xwVQd9ohs81qpnHjC6ilwCYSxLOKtlIK1/KROfuzEX2vnVVCj7m6XeoLw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4511
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Version 2 of the GHCB specification introduced advertisement of features
that are supported by the Hypervisor.

Now that KVM supports the basic SEV-SNP, advertisement the support through
the hypervisor feature request MSR protocol and NAE VMGEXITs.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/svm/sev.c | 14 ++++++++++++++
 arch/x86/kvm/svm/svm.h |  1 +
 2 files changed, 15 insertions(+)

diff --git a/arch/x86/kvm/svm/sev.c b/arch/x86/kvm/svm/sev.c
index 7bf4c2354a5a..5f0034e0dacc 100644
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@ -2174,6 +2174,7 @@ static int sev_es_validate_vmgexit(struct vcpu_svm *svm)
 	case SVM_VMGEXIT_AP_HLT_LOOP:
 	case SVM_VMGEXIT_AP_JUMP_TABLE:
 	case SVM_VMGEXIT_UNSUPPORTED_EVENT:
+	case SVM_VMGEXIT_HYPERVISOR_FEATURES:
 		break;
 	default:
 		goto vmgexit_err;
@@ -2431,6 +2432,13 @@ static int sev_handle_vmgexit_msr_protocol(struct vcpu_svm *svm)
 				  GHCB_MSR_INFO_MASK,
 				  GHCB_MSR_INFO_POS);
 		break;
+	case GHCB_MSR_HV_FEATURES_REQ: {
+		set_ghcb_msr_bits(svm, GHCB_HV_FEATURES_SUPPORTED,
+				GHCB_MSR_HV_FEATURES_MASK, GHCB_MSR_HV_FEATURES_POS);
+		set_ghcb_msr_bits(svm, GHCB_MSR_HV_FEATURES_RESP,
+				GHCB_MSR_INFO_MASK, GHCB_MSR_INFO_POS);
+		break;
+	}
 	case GHCB_MSR_TERM_REQ: {
 		u64 reason_set, reason_code;
 
@@ -2546,6 +2554,12 @@ int sev_handle_vmgexit(struct kvm_vcpu *vcpu)
 		ret = 1;
 		break;
 	}
+	case SVM_VMGEXIT_HYPERVISOR_FEATURES: {
+		ghcb_set_sw_exit_info_2(ghcb, GHCB_HV_FEATURES_SUPPORTED);
+
+		ret = 1;
+		break;
+	}
 	case SVM_VMGEXIT_UNSUPPORTED_EVENT:
 		vcpu_unimpl(vcpu,
 			    "vmgexit: unsupported event - exit_info_1=%#llx, exit_info_2=%#llx\n",
diff --git a/arch/x86/kvm/svm/svm.h b/arch/x86/kvm/svm/svm.h
index dad528d9f08f..2b0083753812 100644
--- a/arch/x86/kvm/svm/svm.h
+++ b/arch/x86/kvm/svm/svm.h
@@ -530,6 +530,7 @@ void svm_vcpu_unblocking(struct kvm_vcpu *vcpu);
 #define GHCB_VERSION_MAX	1ULL
 #define GHCB_VERSION_MIN	1ULL
 
+#define GHCB_HV_FEATURES_SUPPORTED	0
 
 extern unsigned int max_sev_asid;
 

From patchwork Fri Apr 30 12:37:48 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233287
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 2D258C433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:10 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 011CE61574
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:09 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232471AbhD3Mj4 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:39:56 -0400
Received: from mail-dm6nam10on2058.outbound.protection.outlook.com
 ([40.107.93.58]:15105
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232332AbhD3Mjq (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:39:46 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Ul9ZrRhBa0qKFXSvsxUFP+dRP4+IWUov+mDY0zdgpqRSNF7hZe3yb9hjwKVN3iqPW6/eRBncXDLZyZBYB9pdqq8qFNpcdwGP3/Laf8KOCrEC7N0dJoiuitbJHzdJjI13fjTDWUKPozOPfp4FFB7Q87lNuEe1lrp6A+lRh6lay9oppLm3MyV7+/li4T4eJ1vhrK3fpSAIRv0NF8m8rjUcBRt5LqoihnoNKTGeeX5d5qaS19YxJRMYR5pwUepf48H4Et3WMXjBRSfVYXxCADMQANtJJwFIv0Ju/Lbr1RWx1F8oHxxjqvyQlMwrIaBLdxE+IwlgUK4oLBEVjBz136hAlQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=i44ReSM8MQmWE/MFoOP7MFdrznCUvGyizGwNj2/3dJM=;
 b=NhXixHsyene63h0M6+4G0qBHvht0u9oaX0+loZtPBpPOcCn2am05N0DdPc/6IxyYyuAD1mGGqjJaFVHfdHtmXAvc/yLktlH5N+y1f3Syc0O+KzMjA2Fb+pYxk/ks9a/IFDwLnB2/GBKr1/DaCG7C50/0UpG+f9RpcRFw4uC0WddJgOFUrVUw8EAUYIXnqLrNmrtV9N1W79hf+iBCpnbmY9PD+mz/PENHCrvPRNkaXMW0/2UGlSmJxSEoEzAy/8h43+sboVco4uijvHGo0+ufIthEuU8/ASnPDN3/d2GR5RjGaxC4Odu+oX4jIwMQuIAFJi0xPzFyniqeykJMI2lBMQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=i44ReSM8MQmWE/MFoOP7MFdrznCUvGyizGwNj2/3dJM=;
 b=TTsrUGGCbU7iCm0PynB0VV/7to3/cxKUPSWq3otuYvIuuLRhAmWAPrz3dnVWHz1F51SHg1fm/6RRzIAY91Q91nVgQyBnFFFcYeKx4rmOzjj6mZcLwIHm6tSlZZsdD9bfpSO3+iLiM7Ca0tlzY1awapAwWnfD9ORsfuYaztjl5P4=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4511.namprd12.prod.outlook.com (2603:10b6:806:95::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:38:56 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:38:56 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 03/37] KVM: SVM: Increase the GHCB protocol
 version
Date: Fri, 30 Apr 2021 07:37:48 -0500
Message-Id: <20210430123822.13825-4-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:38:55 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 98d08e53-2ada-4737-5a81-08d90bd4eb43
X-MS-TrafficTypeDiagnostic: SA0PR12MB4511:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB4511A3688ECAC5BC8AB2D19FE55E9@SA0PR12MB4511.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:1060;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 FTJtzZEN+WskXKh2OKq4SjBMY34v4LJwOyIYKNhkAJTcZPecH5h0a4mpWlXpbuyGfM+nMBOjFldq94N5h0CrG35VjR8UQ0JN8Q6OVzFJh8eAlVAdvarb49uvj2SsLb1lcTqcoyfyR0Yd/qHu57QVtgwL13J2WVrLY8kNqZ7ewG5IqZpkpcPipwpgGuiwAd7+DlK2nAHwUrkCrN/JM4fNZM5vJfWe9zNXSBDnG1sYdLXa71YwERNNYBy6obj1Bfpv6+rjCWADOLGHeC7iArA3lvCe2AANcJaQF7yIKWS6zGI6dg6YjlksHt6rG7nZq4Rc86/FSSsnaUnUzLY+5+EgEJKv+QUHV8TkwQs4KddbokmoOVEK1fqNeuVJjjoB55L2Q5/0rvpt7pJ23j/kq4D3mxeT7teHRT5/YbgP9V1XbxFv0/Pw0pLYZv3RxtJFuPIkHPXTreeIJ/njJ9ALCWVCrWhbLqBL/dzzt1BbJg1TQzMnIC/jTwl9Z8Ese7P9jOhcwqxSuSuIohHHOVNAPHwLxImw99r80AOORHofg9Ay0C3nxh8iD6HQuWika8TqW1q5IG1QtAi/ODmx1mFrtdZwXcRhTYyG+QOPvSXLH3G4yNRZl6E/SCns9xPWH3scc/ok2VhsvG6ByS9FuwzCL5TcLA==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(346002)(39860400002)(136003)(366004)(376002)(396003)(83380400001)(36756003)(8936002)(86362001)(66476007)(956004)(186003)(38350700002)(16526019)(6666004)(6486002)(44832011)(52116002)(5660300002)(38100700002)(7416002)(66556008)(2616005)(26005)(478600001)(4326008)(66946007)(4744005)(316002)(2906002)(8676002)(7696005)(1076003);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 U3JYmPJ84NxKHR0CYycpk7Ylm1RUMKCVy5xxl21VFHnrw2rvhS8S34o75Mne5mLleqUK1euev/B/LcUnjaICKizfo4HA67pYyezTVfQPPJmWPQZoPx44rL6RnDD9fcKSfAi4Z3U7zOQ+3Y+91HYNJnqLuy1kWuh1YJdpJ+YQ/z2BZHnJisE4A1aBbh7curslL9bMdS/EazNdVYxsjmafgE1c5XrZg7DXmMCnqmtv3ynCDdONdAOYO6rkeEzj7gunN7XosiEg9ZS3kg0ugG2ZmwBw99RbnWNrVGmufWsAextEPGiePjxfZPqb9BayExsE3+FKF6oa7gMbaMHB1YUO9kYHcaYODGn8Lh5cypojmzehgYoH+VpRLH1N2SpfGY7FY+d/vdSW6/3lDyJYEnVg1yTVZUgdm4fwOUjNdBZ3cdcMbTzavTWOV46yIdzMdaJPyr2JnGwWvzTgG9oQxNrv8JAV5xZUiOwS4g713Tp1okQt9va98VWhUlT/EZi4lnH6+HjjSf5THBCJUBBYrpjrnI3h/9j2G9L7SiLducJx/PbeuvkkpRn5PvtV1Yn3+SODCiwtzPVo69ktCQYF4GkDaToZvT+H+8qh/jTVbHCc/wLFwA3Sm+8Neiw5EzxyOF8jGmlT828QE9CjWxiWw72OKx9H9geokXuCC0LJCl6+sQtSXDBe0Wc6TmFWNa7wzoBDJcfilH0xUEcMEwLnhsSIlK1yfscDT9NZvsjHLSCQnMm159/+oi9UE/IF6XuwTDvcdxbr6olsZVaeSr81+c1WCj43ESVHWqrXHipuxBCGuVpl1kNxy8HEdW21pvGSttLWOMrTjGsjFrlD65FEn8CXUOtWuz3RIprppIlgyK87aoQHRx1eQdk7NzIpls4APAazQMGHCQixa4KddvFZythvuuy190WhAfjPjhIpb2YKukcMEqVMPspKhrzXZvHGGZqBt6tjrToLhujkkc2oBonvrA1EpDP9EXRCcsveIiDtS6dM8mlM556/iy+B/60ob/l1ZJCWT6CX2C5CF+ctazPOoS/PhUv1MDqUE3teKLrql6iI2FAg+oaSYZnCXKgYxJJbpjrO00SF7eRuTAFgn2zJ9J3hb5Su3QICqJ10rgXO7t9ArumvG+KMUs0DFSlLDBBv9pItPirF7OoRvXcvNHDMiEhCORY8jfN+QCjr1tmBRu1+GmXXMtK6MDpGDK3qpPQNACcMA1BB4Qk+BCzViC1Wkgmh0PK14qtqxm5KT8kxD6sqBlXnkE0eTCqPQJ2OxTM1ZbVMbFEDogWA+C/+yRbzQZ3fPIY6wG0Yccghd5WPitDCw3fhoRcFckdKymv7tcII
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 98d08e53-2ada-4737-5a81-08d90bd4eb43
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:38:55.9167
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 UOj8CgLLtpGioyuvwPW/AMC76/fJGqJr1LCLckOdUXumd/K//d1NbiD30fQ8970s7PhLrD3/uAJtmpZFkzuNlw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4511
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Now that KVM supports version 2 of the GHCB specification, bump the
maximum supported protocol version.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/svm/svm.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/x86/kvm/svm/svm.h b/arch/x86/kvm/svm/svm.h
index 2b0083753812..053f2505a738 100644
--- a/arch/x86/kvm/svm/svm.h
+++ b/arch/x86/kvm/svm/svm.h
@@ -527,7 +527,7 @@ void svm_vcpu_unblocking(struct kvm_vcpu *vcpu);
 
 /* sev.c */
 
-#define GHCB_VERSION_MAX	1ULL
+#define GHCB_VERSION_MAX	2ULL
 #define GHCB_VERSION_MIN	1ULL
 
 #define GHCB_HV_FEATURES_SUPPORTED	0

From patchwork Fri Apr 30 12:37:49 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233289
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id B5837C43460
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:12 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 8ED746147E
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:12 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232499AbhD3Mj6 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:39:58 -0400
Received: from mail-dm6nam10on2058.outbound.protection.outlook.com
 ([40.107.93.58]:15105
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232380AbhD3Mjr (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:39:47 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=JAZOlfrEqf5a4QbBT5xtiB+hKx7HiIOYCVkItsbCzbrSDCjS4DNbDKuxPab17+Kimt/ptouN6mRbJdV+9IZW5BaGHUX0tDIhkCqwIDmlGQQn4Bf4pSEZk0iBhx/ftNcMJD8heMgZ8UAtf9bCycgP+I3Xfu4IU+AwWLvlAx5verBwBLPv/rtle4JYRw73q75ovO6DUQmoZ34Li6aeXUsHDUR0skveMdVsBCYe2XLKu0qAcy+GcVd4yjuawKjAgzTSXxgeuKyk+Nbrs4bUM7ck3fYqZeYnf/tkm8KNDKMf3o+S7KE5hAYZuIwNkBFNAysSWenY6RAec4UWt2gC5aCRwg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=jEc3OkoB5XhRNIYGeiGIjX7xCaS7DDZ+9iL6/Hb6CXI=;
 b=Ve0NmJYiqOyAIFRmcPfZNrDvm/JCApkPX6FN+o9ZCwiF4XlUUTwsWGUTUEG+Me0NvLz/Hxdud9+fkeEDE2j5supPbvMDBvoMj5nM4aCJxjs3rxCdG7jL0RGUn7Pazgy+tNoUGc2GIHgyAVWiUCqzAdK3FV4p7+rtt6KLHi7XSiaNyntSsiaJT34mCb9qo1GuE2GT6nLDycvbOs0xwaaLGvnq9r2+8ru04D0g6aFDHilzE8s6ER4OYVUAIRTkzzJSvG2R1TMBFot7moYKgkRB7kNfLsbhJJP11Md1+2iIjA2AOdz5L4MLoh/YvQ5L22e+4boppcWvvaUxFd722vk9bA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=jEc3OkoB5XhRNIYGeiGIjX7xCaS7DDZ+9iL6/Hb6CXI=;
 b=WTZlT/9o4OIdjGzNIo6rST+3rv2px0D8SYazGO6gBlv2n6q65YvhiRrZW8jBJUtuq/lLpKHpYCIVMgpvTly8k9LcILN9AjkAXB7ghbnlkC2XKO5whRnEiqm/dEoDF3TPT5dyKsWYMoNTDf9v30p0rW+6VDyJUtbIC+Kjunhn1Ck=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4511.namprd12.prod.outlook.com (2603:10b6:806:95::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:38:56 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:38:56 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 04/37] x86/cpufeatures: Add SEV-SNP CPU feature
Date: Fri, 30 Apr 2021 07:37:49 -0500
Message-Id: <20210430123822.13825-5-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:38:56 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: ce252337-fa67-44bd-22dc-08d90bd4ebb3
X-MS-TrafficTypeDiagnostic: SA0PR12MB4511:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB4511B56E3EC27297B8A4EE4EE55E9@SA0PR12MB4511.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:4941;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 TX2ZgHI/hfcxoanPlBs/j97YKpn25VST0FrO8E2IIl8CMnAEA74cURxqzGWtiL0oQdA4P/nXvspb0axaT3U1LvUeYGZvGEWa+k+pkc3MFzdCr5Zus5RsxKWAN/HN2ZBz8htNm/nFJzL5oWpPR4eYu4oqtlAp3LPpg+dFFEOMgUhoNNXsL0k0SwmsnKOmwOjwvkXYcdiIKIYWCPJpP3qRc2lIAc6IlASgxFoOJIQ3/JN+B0E05sURSAr0edCZZz4TwxRKTkbSpJNHLV52kpRIb3a4SwnZxEO4heF7L00WEy4UIM0LSOqxuK5x8HNBLM08nao4IWDnmmCcES+xInFDZJaSG60erc/hwlvTyjU6SCJS1bO342scL11pSii2GufYv1qteO6BDcgDTZWq4nNlYcHe5GldHX+IhyfiH24/WQY5QF/Lqd/2bPsR2iSrPdHqi9x49SC8w7cjq3MIwEnP7JFwWjDANUurJ9Z3mmOXNHRU+ikIZIDN11ro0vMccHBzAZCzdqhBnFaSvwpLvfUyX9kGNnzGJ1lZJ4od4HMqn/O0RJqrgcifh0NdD0ZDMI7xPB2rWGjYsQSR4KDWhbZ33LNdUfWaPYQfDRFxDR+5GLUJkBh9I6Z+hS+ygbhOuJNjZ59hyp92n0Q9gxzyyv4XmA==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(346002)(39860400002)(136003)(366004)(376002)(396003)(83380400001)(36756003)(8936002)(86362001)(66476007)(956004)(186003)(38350700002)(16526019)(6666004)(6486002)(44832011)(52116002)(5660300002)(38100700002)(7416002)(66556008)(2616005)(26005)(478600001)(4326008)(66946007)(316002)(2906002)(8676002)(7696005)(1076003);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 PKxAmJ6gz0Whznqn3TdTkA5UMq2Skjn6pwphOjiG/TDQjrLb0gQdE3ffNAm5lOVz7lr9SBIsFe38R+6WNlz2CmBTSwIDnT2BHb+FtbvOxn9uYqDhpuAqqZ9Z03lawq+9Mjhm3dJbYR3f6BF4m1Ws8hzrvBGxnyd2QyZwUrcTbMbHZvQbCfN9VcHd2zhG6T55QD4MhbT2l8W35sSVxQ3r96tCX3cjmFk3a8K4Pz1wqeKL7tAEtNmECnGSnBCPJZCwYBCFmU/BDRa+Pm2OkReF5p8GvwwpWC4BPByXdLaq9/OUBP77vp6MaOpn4NtthSRaFWF1xge6Db6VvhQ61YYJ2msPVhdFudSmFycDy7XO3cc74ukyh3AWFX7gl4+QQ1aaF2LSyrwc1lfQLYViaHhUQ6u4cW8szX4ga+Q9KTwyZ44/UHqqz4mJebsqmXCVilSh6Wp4MVbuF4Jwg2eGY4vMGwPDnR0bFPBKDwdzqU0dD8uZuum81v8fy6PwNEr8F5qobCD4s4azhgJo4XbT4TlOI5cNVlMKSD+foqz6JsAw8890P0PRGNk0o/6amWzwGjLb1LY+ZxaI+3grK8tOy5CLeFgy9ppxNf+cFO4UAaqGARg0tmyKoWXQiKlIySkWODCo/l9SKzOn3smAFrbr/Bd6X1J9lIu8xMUUlOLRFPSFOTA8qeZ2EJXrhKj4jsbAR2pPg5SGvcpBE8qqLyQ54sk8NLpdX8Jc2AlotUSrGT1gNJOdWMCYnJo9sMBVXHTY33x78OvAyxYr+lxDFUextUBgTTF7Op7/uuE8Ierrv6l/J10SfPCpnr3dpUJP8jkkhoy8ASG25m43LEsPpIG7rymtp1gSiY3qj6VeiW66KMiG7u2B1tdpyg66T76f8ON9/e7xFnvCe6GFiG2rBHFizue6CoFd06HdSPgnsEetx2mati2uD34RzVFr78cj5WPzaXlEuHvzlvaOnNBLVwRkL3uLK8XS5NYf4WC1VbY1x63/eB0V1/mJaJW9FGHtMkmP2KnR61NiCPP3ls3M78imzs+51z8VSTlliaQ3qt/SXRP6Ns4lzA6UpXNah75mflrayps71mVg44SYMTZQXHmqTJA8qd0n1mpncevNqCRSNXV5fi0kX3+WU1X6q/ZDlcq6dXEMdzICunE8iWpNw/HC6UA+wkdIRmSBQNb1UT/Bda9STOjIJrsCbc6s4+ALembUYRAEVatS8vBNC+X5+r6Or6466wgNnv5u9WDXX2mPhmMQu38ufjFWofIF3cobRbpbeJk1wem8birLZEeJ94wsQH6SyjxD5EixI5IvlxV7Co/lgHsa9PXuMM7X8xAZkYLHH1p1
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 ce252337-fa67-44bd-22dc-08d90bd4ebb3
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:38:56.6382
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 Ewd4c4rTXPpDPxXMzzwcQPe7S6Cfsoa06IH7MwSLineMS146223xZWXipPDdiXNhd3IdrbLvoQM1POKqu1f3LQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4511
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Add CPU feature detection for Secure Encrypted Virtualization with
Secure Nested Paging. This feature adds a strong memory integrity
protection to help prevent malicious hypervisor-based attacks like
data replay, memory re-mapping, and more.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/cpufeatures.h       | 1 +
 arch/x86/kernel/cpu/amd.c                | 3 ++-
 tools/arch/x86/include/asm/cpufeatures.h | 1 +
 3 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/arch/x86/include/asm/cpufeatures.h b/arch/x86/include/asm/cpufeatures.h
index dddc746b5455..88b21de977d8 100644
--- a/arch/x86/include/asm/cpufeatures.h
+++ b/arch/x86/include/asm/cpufeatures.h
@@ -393,6 +393,7 @@
 #define X86_FEATURE_SEV			(19*32+ 1) /* AMD Secure Encrypted Virtualization */
 #define X86_FEATURE_VM_PAGE_FLUSH	(19*32+ 2) /* "" VM Page Flush MSR is supported */
 #define X86_FEATURE_SEV_ES		(19*32+ 3) /* AMD Secure Encrypted Virtualization - Encrypted State */
+#define X86_FEATURE_SEV_SNP		(19*32+ 4) /* AMD Secure Encrypted Virtualization - Secure Nested Paging */
 #define X86_FEATURE_SME_COHERENT	(19*32+10) /* "" AMD hardware-enforced cache coherency */
 
 /*
diff --git a/arch/x86/kernel/cpu/amd.c b/arch/x86/kernel/cpu/amd.c
index daf6c6e74ff9..15b389ebb019 100644
--- a/arch/x86/kernel/cpu/amd.c
+++ b/arch/x86/kernel/cpu/amd.c
@@ -586,7 +586,7 @@ static void early_detect_mem_encrypt(struct cpuinfo_x86 *c)
 	 *	      If BIOS has not enabled SME then don't advertise the
 	 *	      SME feature (set in scattered.c).
 	 *   For SEV: If BIOS has not enabled SEV then don't advertise the
-	 *            SEV and SEV_ES feature (set in scattered.c).
+	 *            SEV, SEV_ES and SEV_SNP feature.
 	 *
 	 *   In all cases, since support for SME and SEV requires long mode,
 	 *   don't advertise the feature under CONFIG_X86_32.
@@ -618,6 +618,7 @@ static void early_detect_mem_encrypt(struct cpuinfo_x86 *c)
 clear_sev:
 		setup_clear_cpu_cap(X86_FEATURE_SEV);
 		setup_clear_cpu_cap(X86_FEATURE_SEV_ES);
+		setup_clear_cpu_cap(X86_FEATURE_SEV_SNP);
 	}
 }
 
diff --git a/tools/arch/x86/include/asm/cpufeatures.h b/tools/arch/x86/include/asm/cpufeatures.h
index cc96e26d69f7..2e78ab5b92ab 100644
--- a/tools/arch/x86/include/asm/cpufeatures.h
+++ b/tools/arch/x86/include/asm/cpufeatures.h
@@ -390,6 +390,7 @@
 #define X86_FEATURE_SEV			(19*32+ 1) /* AMD Secure Encrypted Virtualization */
 #define X86_FEATURE_VM_PAGE_FLUSH	(19*32+ 2) /* "" VM Page Flush MSR is supported */
 #define X86_FEATURE_SEV_ES		(19*32+ 3) /* AMD Secure Encrypted Virtualization - Encrypted State */
+#define X86_FEATURE_SEV_SNP		(19*32+ 4) /* AMD Secure Encrypted Virtualization - Secure Nested Paging */
 #define X86_FEATURE_SME_COHERENT	(19*32+10) /* "" AMD hardware-enforced cache coherency */
 
 /*

From patchwork Fri Apr 30 12:37:50 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233293
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 94210C433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:16 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 740CA61613
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:16 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232532AbhD3MkC (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:40:02 -0400
Received: from mail-dm6nam10on2058.outbound.protection.outlook.com
 ([40.107.93.58]:15105
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S231696AbhD3Mjx (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:39:53 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=WroCWdkX0M2Kk+/iSKPfLtR6ZkUIzyWYMtZwL1k/6SjD1Ew6W7ckE3DBujzENKVSpxG8DosJyuTWSR0poPC/rIB9pA5QngCIQarlqwvaTfo34t4G8xBumsm2E2bhuLuSBpn/UA4F9BfPOkkmyfwS52WhsDr/y7ygqiVHMOaGkBMr+c1IPayRT7tUsBUziyY/HRcdJRdmbVZOfNO4D4vc/vBp1Du53DwKeyHa/nsP4cSG00C6D+GezZbmn5+HrrQGpzFyrVGGWAzKy3XP3xqX5wmB7Q3q7XI33tXfGeeETQszifGJdm6+j5TBvmc8x2EgcIvdM6Vv4iGXAuqp1+WM2A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=m3DdvCrLSEGXEdhC62vyFKT+09OMJobfB3JwxfkgxM4=;
 b=RfJ09a0/SLHQ27gmsAyLumLUWlOKpBssaOqjVsTV2UfX1V5CX54op/ZqHyLOy4DVGrjVH7mwUdtwQBDG+fMtR0kNwEDGR36+R44qwOLEIuCk9vwq9fkNxAQPFhOQbJN6oKGwbC7NLafGiwGr/CbrFsq8dNHBIJEAf/dyZgHDqwrMExL2us1u/kXRBPRSZHARkU0ZLS7v02pp8suwxTX1GrBYTZOzFAwrn6AUqqKJ6AvvGzhnDwUoqyIjXzEnuexevUf5PWeo3D5A9BPzse65abBTF/CF/1yBKxMS20lP5VbN7cK7uwvOsBNtqqRRXT9KzTefnwjmJsT7nU+GsR3+Qw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=m3DdvCrLSEGXEdhC62vyFKT+09OMJobfB3JwxfkgxM4=;
 b=hL14VNI3I3HpQgfITksqCVfy6AaUG++/foIAkGPj1WxbTA9IQdUE7t+FcwQUftiWxyYN41SFBjwwV9uej+Eh2SDXzLZkWqI+oSZYm/fPfaIX8v2cxoYG1833Y1AmiLD5mWJAZx70JKl9aaIOM+pbD14Q3dfTB73dmu8YcIogoA4=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4511.namprd12.prod.outlook.com (2603:10b6:806:95::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:38:57 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:38:57 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 05/37] x86/sev: Add the host SEV-SNP
 initialization support
Date: Fri, 30 Apr 2021 07:37:50 -0500
Message-Id: <20210430123822.13825-6-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:38:56 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 192290c4-095f-480d-39ea-08d90bd4ec1a
X-MS-TrafficTypeDiagnostic: SA0PR12MB4511:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB4511287FE79F607789B3E626E55E9@SA0PR12MB4511.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:7691;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 a5Fh2Qe59Lnlej8+5ZdMmKy0ErgY8nEOXR3HivgVGmf76Al9IJU1jjfKlhyfypmlMBaIwZ2EisS3VosAw5+w7V63me6KAqT5Y3TtXTZmewie7MigWk5W2ZtGaeEjbWOgYGQVAAX/pUp3WBvXLloYQm0WRpWcvXTAcHPZKRBROH3yueWOCfis4l0HwMmicZ4qhzkL2ioYehzLAkFaAhtyoi0J+Gp4w8yEHJ7tkkdFWM6jEAe0npBF5H5ApK3oZKzbXjwpt6GsrASPVaVy7jtd56b7IFJITyaft1WMC3Vi7/VZOi2kRX+UKObvFbt0oe/h+lHJJCNyQX6jqm3BBso2gLgNkXqsuUfUb479dxaN1OKDju/oRbI3F+t4cVxHU4KWQW3Az+FarTzvrvUM/bVUqAARsnzPEXqisMdEH1J2CN0LzwViooc0TrJk1aqexDnlO4DDHcTE3CDrhO+D/5lPefySe+SR8lqOOljbupVG1HTZEjMr3i48woD9RNnhHJe4PP+4Knu/hWuwCcbOxWEM8PZT7dp9FE5WhMkN9zqmmS2jg38AtNaJqmEOOd6UGfu6PHFAn+wwQT7BhhNPKe//Cii/l8hrIISijXX5Mw400L8yKI1ZPUm2n4+bNJGoNHliHG4ncUAP8/Kqr+GQlD1hxw==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(346002)(39860400002)(136003)(366004)(376002)(396003)(83380400001)(36756003)(8936002)(86362001)(66476007)(956004)(186003)(38350700002)(16526019)(6666004)(6486002)(44832011)(52116002)(5660300002)(38100700002)(7416002)(66556008)(2616005)(26005)(478600001)(4326008)(66946007)(316002)(2906002)(8676002)(7696005)(1076003);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 TC86PS4OCR7Ar9W8T/3a0ovhyWALsavxKBlLq0i3Hn1FF8BZtqxInEQR+H1o9T7Gv6Hto761dXdetH0Wc9JUQzgVKihE7IRcn+dVc0MNuu/l2FjMkys3PtI2VETplLIDzIXgPlYXN9AIiihGAqdlTImmsVAl5TMWHdFOTwX2w+GF6VebUAh4FDDiO23o8S3j/3cEv0vSZN0GISjeHjZVAYYls9JQdaJOxGUNszhm/wLs9l2nw6bVDim6JPSgFmXdyipnUD3meo/6edcszFTDWocEst7hU5hiveoHFEFanR0a+l6gsJvgvpL82lOpYpbnoLuiApXSbhrpAlkDznUS7E6U/o6I0qJgIIz4o5oxEnAnxFlLzn3D4ieJBh5WbQ3dhCdTWhVuxZMjm79C1J13WVYRt+25Tr0nS+4UhBRqRroyOvzcHirRwd9YMjZoc0JRu19VIYyzRev3HPvZC2AAQS+2xo0V5lzH3mfMbMjXfDurCnoyZV+dgBaDiliTVdsZANxBYbJ+I6RxhIrC/LBhJPp7BcJtWrdZ8by4TbKsDefC9TUq7EAU+FC73k1KrkrSSEIZH5aDsGeOe/PNhLjW8uNzv93P8lb5BuY+stWiyMQc7inuuuUuOgdv6RDuMJzNS0QbXTFII5VZgfJqVL1zUo34OjU8HWWWedDkwDreJ1vpc0F8e00pA9SL32f8OpQMpEktZqu7oOb1v6Dgh8k/EThERNuwblXnkF2apJg8zFhLQLQqyPYl6LUTmqve0fQ5/glIFFBTZrtKx3JIO7q4qa/6WAkK/EtrOdo+dF5IhKGuCgLnVu00tLjuLVF5G78voshrjT4WYFVXyZHUgsnU+AqqzzlhvgYQWdxFEncgIDgWyoS+b1pqqCJxsy9LBoRvnwlBn4H36Q6laWhY6CfVniumDMferI4oRBe7cx3O/mlsj8VLk6nmaKCw3qOWFyleofs+EIAcHTM11TJvSAZAQOx25YQu75ICt8eubgTAU4DSTSymBqHLry3xCR9feZsW7BR3MYT6ICERDviRK8Papqma9H4uOVvYwhXPXFXCpO39F6m/9niKAct0P3MUCrqay4KVPveEq0elNHwNQR2Ol9Gc/oJsrM13VbLwTeyr3lNYD+tf7FL9OeVJ2UVC1UQYrQmccGaed1+Muw5n90xpOVy9FA6798DgRZE96N1DDF3DTmEB49ORxz5YYHS/ak4UAPBW3HKKPTurB6XLS9iIwmM8L+M91Y5ocyEbtX5ztzqITwAZEDsCG4p0joD/EbCfTBYBfRosq7M6C+hcgKRBeMVkuV+2ZpHXeg8P14o57a1G2BtI0hLAySKwYbBPBuOZ
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 192290c4-095f-480d-39ea-08d90bd4ec1a
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:38:57.3568
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 IM2+hk1pSJv06lLcFYByutPeVufg+1+/vccdyRsaGkGiQn0P1Ll11S0f4g8Br1HSI5Uzk1GaeJSA/E4rvnRO2w==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4511
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The memory integrity guarantees of SEV-SNP are enforced through a new
structure called the Reverse Map Table (RMP). The RMP is a single data
structure shared across the system that contains one entry for every 4K
page of DRAM that may be used by SEV-SNP VMs. The goal of RMP is to
track the owner of each page of memory. Pages of memory can be owned by
the hypervisor, owned by a specific VM or owned by the AMD-SP. See APM2
section 15.36.3 for more detail on RMP.

The RMP table is used to enforce access control to memory. The table itself
is not directly writable by the software. New CPU instructions (RMPUPDATE,
PVALIDATE, RMPADJUST) are used to manipulate the RMP entries.

Based on the platform configuration, the BIOS reserves the memory used
for the RMP table. The start and end address of the RMP table must be
queried by reading the RMP_BASE and RMP_END MSRs. If the RMP_BASE and
RMP_END are not set then disable the SEV-SNP feature.

The SEV-SNP feature is enabled only after the RMP table is successfully
initialized.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/disabled-features.h |  8 ++-
 arch/x86/include/asm/msr-index.h         |  6 ++
 arch/x86/kernel/sev.c                    | 91 ++++++++++++++++++++++++
 3 files changed, 104 insertions(+), 1 deletion(-)

diff --git a/arch/x86/include/asm/disabled-features.h b/arch/x86/include/asm/disabled-features.h
index b7dd944dc867..0d5c8d08185c 100644
--- a/arch/x86/include/asm/disabled-features.h
+++ b/arch/x86/include/asm/disabled-features.h
@@ -68,6 +68,12 @@
 # define DISABLE_SGX	(1 << (X86_FEATURE_SGX & 31))
 #endif
 
+#ifdef CONFIG_AMD_MEM_ENCRYPT
+# define DISABLE_SEV_SNP	0
+#else
+# define DISABLE_SEV_SNP	(1 << (X86_FEATURE_SEV_SNP & 31))
+#endif
+
 /*
  * Make sure to add features to the correct mask
  */
@@ -91,7 +97,7 @@
 			 DISABLE_ENQCMD)
 #define DISABLED_MASK17	0
 #define DISABLED_MASK18	0
-#define DISABLED_MASK19	0
+#define DISABLED_MASK19	(DISABLE_SEV_SNP)
 #define DISABLED_MASK_CHECK BUILD_BUG_ON_ZERO(NCAPINTS != 20)
 
 #endif /* _ASM_X86_DISABLED_FEATURES_H */
diff --git a/arch/x86/include/asm/msr-index.h b/arch/x86/include/asm/msr-index.h
index 79f7a926476a..862cd2e777d9 100644
--- a/arch/x86/include/asm/msr-index.h
+++ b/arch/x86/include/asm/msr-index.h
@@ -481,6 +481,8 @@
 #define MSR_AMD64_SEV_ENABLED		BIT_ULL(MSR_AMD64_SEV_ENABLED_BIT)
 #define MSR_AMD64_SEV_ES_ENABLED	BIT_ULL(MSR_AMD64_SEV_ES_ENABLED_BIT)
 #define MSR_AMD64_SEV_SNP_ENABLED	BIT_ULL(MSR_AMD64_SEV_SNP_ENABLED_BIT)
+#define MSR_AMD64_RMP_BASE		0xc0010132
+#define MSR_AMD64_RMP_END		0xc0010133
 
 #define MSR_AMD64_VIRT_SPEC_CTRL	0xc001011f
 
@@ -538,6 +540,10 @@
 #define MSR_AMD64_SYSCFG		0xc0010010
 #define MSR_AMD64_SYSCFG_MEM_ENCRYPT_BIT	23
 #define MSR_AMD64_SYSCFG_MEM_ENCRYPT	BIT_ULL(MSR_AMD64_SYSCFG_MEM_ENCRYPT_BIT)
+#define MSR_AMD64_SYSCFG_SNP_EN_BIT		24
+#define MSR_AMD64_SYSCFG_SNP_EN		BIT_ULL(MSR_AMD64_SYSCFG_SNP_EN_BIT)
+#define MSR_AMD64_SYSCFG_SNP_VMPL_EN_BIT	25
+#define MSR_AMD64_SYSCFG_SNP_VMPL_EN	BIT_ULL(MSR_AMD64_SYSCFG_SNP_VMPL_EN_BIT)
 #define MSR_K8_INT_PENDING_MSG		0xc0010055
 /* C1E active bits in int pending message */
 #define K8_INTP_C1E_ACTIVE_MASK		0x18000000
diff --git a/arch/x86/kernel/sev.c b/arch/x86/kernel/sev.c
index e54a497877e1..126fa441c0f8 100644
--- a/arch/x86/kernel/sev.c
+++ b/arch/x86/kernel/sev.c
@@ -23,6 +23,7 @@
 #include <linux/efi.h>
 #include <linux/mm.h>
 #include <linux/io.h>
+#include <linux/io.h>
 
 #include <asm/cpu_entry_area.h>
 #include <asm/stacktrace.h>
@@ -48,6 +49,9 @@ static struct ghcb boot_ghcb_page __bss_decrypted __aligned(PAGE_SIZE);
  */
 static struct ghcb __initdata *boot_ghcb;
 
+static unsigned long rmptable_start __ro_after_init;
+static unsigned long rmptable_end __ro_after_init;
+
 /* #VC handler runtime per-CPU data */
 struct sev_es_runtime_data {
 	struct ghcb ghcb_page;
@@ -1782,3 +1786,90 @@ unsigned long snp_issue_guest_request(int type, struct snp_guest_request_data *i
 	return ret;
 }
 EXPORT_SYMBOL_GPL(snp_issue_guest_request);
+
+#undef pr_fmt
+#define pr_fmt(fmt)	"SEV-SNP: " fmt
+
+static void __snp_enable(void)
+{
+	u64 val;
+
+	rdmsrl(MSR_AMD64_SYSCFG, val);
+
+	val |= MSR_AMD64_SYSCFG_SNP_EN;
+	val |= MSR_AMD64_SYSCFG_SNP_VMPL_EN;
+
+	wrmsrl(MSR_AMD64_SYSCFG, val);
+}
+
+static int snp_enable(unsigned int cpu)
+{
+	if (cpu_feature_enabled(X86_FEATURE_SEV_SNP))
+		__snp_enable();
+
+	return 0;
+}
+
+static __init int __snp_rmptable_init(void)
+{
+	u64 rmp_base, rmp_end;
+	unsigned long sz;
+	void *start;
+	u64 val;
+
+	rdmsrl(MSR_AMD64_RMP_BASE, rmp_base);
+	rdmsrl(MSR_AMD64_RMP_END, rmp_end);
+
+	if (!rmp_base || !rmp_end) {
+		pr_info("Memory for the RMP table has not been reserved by BIOS\n");
+		return 1;
+	}
+
+	sz = rmp_end - rmp_base + 1;
+
+	start = memremap(rmp_base, sz, MEMREMAP_WB);
+	if (!start) {
+		pr_err("Failed to map RMP table 0x%llx-0x%llx\n", rmp_base, rmp_end);
+		return 1;
+	}
+
+	/*
+	 * Check if SEV-SNP is already enabled, this can happen if we are coming from
+	 * kexec boot.
+	 */
+	rdmsrl(MSR_AMD64_SYSCFG, val);
+	if (val & MSR_AMD64_SYSCFG_SNP_EN)
+		goto skip_enable;
+
+	/* Initialize the RMP table to zero */
+	memset(start, 0, sz);
+
+	/* Flush the caches to ensure that data is written before SNP is enabled. */
+	wbinvd_on_all_cpus();
+
+	__snp_enable();
+
+skip_enable:
+	rmptable_start = (unsigned long)start;
+	rmptable_end = rmptable_start + sz;
+
+	pr_info("RMP table physical address 0x%016llx - 0x%016llx\n", rmp_base, rmp_end);
+
+	return 0;
+}
+
+static int __init snp_rmptable_init(void)
+{
+	if (!boot_cpu_has(X86_FEATURE_SEV_SNP))
+		return 0;
+
+	if (__snp_rmptable_init()) {
+		setup_clear_cpu_cap(X86_FEATURE_SEV_SNP);
+		return 1;
+	}
+
+	cpuhp_setup_state(CPUHP_AP_ONLINE_DYN, "x86/rmptable_init:online", snp_enable, NULL);
+
+	return 0;
+}
+early_initcall(snp_rmptable_init);

From patchwork Fri Apr 30 12:37:51 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233297
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 68029C433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:20 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 39EBA61483
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:20 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232579AbhD3MkF (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:40:05 -0400
Received: from mail-dm6nam10on2058.outbound.protection.outlook.com
 ([40.107.93.58]:15105
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232475AbhD3Mj5 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:39:57 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=KCtWZca2Njik7qz99/C/z629S0X74MwkfQcBiayanHvLptiGamYNhS888AKcYG7ykJouugwmPLwwknoX46ceLE+ZFyxYsPIdwzEc2MYHGao+KWcLfHAEUNFplnmXQaw0V5J6FJShmeTPiq9SJqGJsfZxJRNPi1OlKABp56vHh94/plGP7HYhuo7xE7hMEeIKemPk88RIsh/lyQUMyLESOtD5xk4W6AQ9pUT+d07UCA5izRhCtgaOnz5D6mYufcByyIUVZlv6AJ7poYFYHNAgPVTUoeU3y1FrzwFT2Lz5qrc1X5f8zQxXJOmjhVuYKWvjpeJCbHS32zXTxlo1ji5AVA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Q83C/jzYOOnVgwB4PymkXjtqp1TK1hMza9YW4F1I3zE=;
 b=leo/pFQwqrfIEmBR8g/cfAd/k1LARf39inLnA5tu6WMrYXoKoxFoJJaOVt9IF6HlKR66tdeBuzd7ol86vpHRjgstE6raOCYrOSclL7SNdqQHyRM0mkDUJMwajPqrN7QfGNuFhurDT7rf84PLHd1BbVSjQjcpfjKJOJm406wSKPXcGbLHLXxhaCO2blcGNnRGHeOxJCVl8bJdGznODeOPl2JWC8FM39mV6OFBIQE4pZjYvjdhI2PEoUkJ2gJb0suz6mhcBtwij46r+mFpyXJimrIDF9ukbOBjxFIBoy2kqEQM6GP4uGmPdfwM6poDGw5KjzC+UdUmgFnSgrr3q3qZ9A==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Q83C/jzYOOnVgwB4PymkXjtqp1TK1hMza9YW4F1I3zE=;
 b=j1JQxfpDvgSr5KN7IAIn1hCupw87/EXBdeJiqPLZHbZCMWcfanF5Y+Y1GNhw5VMPAcw2sXuvW88r8IvFsD2NkhvnLX6F/gvhOrnktFI40qct3yVmJuAsTfkfLnacULLVO6MDCb5ClBdwzW6SmP5HSgmPgITT+/Unnn3OnfF7KUE=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SA0PR12MB4511.namprd12.prod.outlook.com (2603:10b6:806:95::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.26; Fri, 30 Apr
 2021 12:38:58 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:38:58 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 06/37] x86/sev: Add RMP entry lookup helpers
Date: Fri, 30 Apr 2021 07:37:51 -0500
Message-Id: <20210430123822.13825-7-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:38:57 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: bcd307f5-92da-4cce-3a9c-08d90bd4ec8b
X-MS-TrafficTypeDiagnostic: SA0PR12MB4511:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SA0PR12MB45118AAE86C53C024FAF0E6BE55E9@SA0PR12MB4511.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:8882;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 +UxaLWrgwcBTeYb+zu9mq6cXP1QXZI1Fv96m7sGTM4LnV1Jsn+6ObdAzaP8R1VoFK3uGgojQBHYzikk/OLw1SUFayXL/WXggsqCgCowYw9D//jZkqf8jUWBZk3/zIH6kMALvYhzh7nTmj8aCcvcbPt7N/Y+Y313/hVUNW0H4DJPb4AejhOx+aTXSjKU7JXQysSB26tTUXPxiMiyNhjLAQFNz+qZOPjsGJyr0Zq3ROM4tXR8xJK86Wjp4Gw+A+AHxzFKhuoXNFC06Xgb0da+ykmp5fEkra90nCNga0/T/GL4su8sqk87eXRu9j/etdJX2AQQL63etdPBuNoPb6dRnyWLLSkZUPPEtCPiUgmTnoKrUh2vUwjEbWV90TQfmuIjUt2Yb78XDy4Q2bq4PUnhsSNSMVzxfgNhEEPn/4yw7VUlTWds+2WFOio/z+UO7NiFrT3w7nKsrSeac8S9mqs7Y/v1HMt0e2dSqpQYNZ9VdZn3IAv5Q9OByrCT3oRRkW1wMMyrOnAkQY6LDPbQaDkvzNp87dFvhJQeGl6bgaKN3c48abdXut0pt2dbfnhVDOHNFtT+JU32qyNG85fm5oOZEXdfoVrL1hw+Dmt1eDUIejeGSeFAltpPnszMtpfP0gW+7dgeGxMClfiRpHzKfHn2y4C26XQrqYcVyVXAlJBK273vWUqullCZarfzJB6sAayJ7nWpvB3KhsvdkItAfoZCSQt2naoHj8jj0rcPM39gnhqg=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(346002)(39860400002)(136003)(366004)(376002)(396003)(83380400001)(36756003)(8936002)(86362001)(966005)(66476007)(956004)(186003)(38350700002)(16526019)(6666004)(6486002)(44832011)(52116002)(5660300002)(38100700002)(7416002)(66556008)(2616005)(26005)(478600001)(4326008)(66946007)(316002)(2906002)(8676002)(7696005)(1076003);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 DmbDIJDrPmIKxQYt5VwsqyEU5wg0nRizDxnL3y7UMqa1vEta5kMnlWBxYjkLEmaKJnx+Zb2LatRnygh6L3e1jwDmok5EMnPwVLmn2A0zqol/9j9NKMsLPIHmuPCeqGCEMLpwLA+6ocWhLX4LQezmG7KuEM/TMqndDbQUenbKjXRcDCrBvjFJbx89dtC42aRQ53v7yP2DgBD8sz0qVPJHwdPVQ8m9OCaf5Z69t3cP/hGpvsUyJSMAXmhYp9eybKJsORhXmgZJglW4DOlaQLFmelEM2cWPzB283QVm6iDFNMDhj9hzubRT8NQoEYy+lRYoHkThTNC0kDqZ5a287Mi2zi2TWD4d74h9OY3EYe5BnxmYebB4gFMe+9rwCGiVRuWtBceuiWSJmh6Md4OqACkyzEr5h6nR71x3QofBOnv8rRn/0vWI3LLuZ7dc7kJN+WBhBiED2teYjZUzsPBNeb8UbuV9GmIvQQnv5dcQtwpPNxgYOkmV/In6OC2XYO1atY9U3E98T76E3D5oQRUv/M4xm8303vqeZexLTuyyR+j+cA+yxUOgATxXn5uKGBdOugZE4e7oro7yywQXUBYXgPgI8ndUZp2dpnB1v3Cg9LkRYfiyw1uzQvnK0sSHYwvzrVR9V1sCDTBhSIDIGyZkmMdQUQIgFGE1kzVzKY+JY46ox6g7zjZYirrXDWuKOsgLmDdn4Dzrjm14AO0t6XKBJmcWpYoDgLWrb1gaBFsjiLwzV1Ttyo1b8iwgde1nMBa4BJ7N4LGwGKd/tGREjS9awfnmQQWeJf4cBq5Ya4gfHhsQAO4DfNXxDk817VVjYF1M3lt9sHOxYjc/hspBlwSAJmhFKM3yEvdly4QfzNu3PmCmmBG/7AfeqIzkBHst5VfkukJ2NsYANhXdtPvbHyDG4ACeBKi9awFKOcOiF+h001Cw1OrU2eKoiB40mHsbsrl+F2MJFoSBVYvnkfs+rjIPd9i72DKZYeuZKmThl2/DOKonB0otGf8h28cqwVw8MnvZAV+XYPMHsbO7zKZrw0B0kn5tLQyWMy6/4qbBnz80e5+EIDCTcNesF7LanjOBLNvNDQavZd56CRlPlkfMZBTl6/noLYdjEGDpT6UZd2tALUC/LpVsEa9mIkoIsV7TdVfzIW6aj4+docvjd8l/4iYVjw7KrsWOCgomPl7JtN5wduexlrAU0eUzFCpDkQCHR8DlsxJmh7j8TU3s4I1CTlxaoMUExQWtKtFef5g7/VFhwxkjWy0CJ39nv7Ww/50G16YM5CffK+BQ1UZDiNfMcIDpPcFdf6LLixjUcyNisGXKuDlMGf8RO7/5DYd/YSUWBYF3Iz+A
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 bcd307f5-92da-4cce-3a9c-08d90bd4ec8b
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:38:58.0854
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 3hSNtlePMb3EHlJwEW4QziuByoD36ZAqgGiuODz0/jGZdaGmZ4unFPWIob2aG6C/Xmq5ZFFJ6EOG1QhgRuRgWg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB4511
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The snp_lookup_page_in_rmptable() can be used by the host to read the RMP
entry for a given page. The RMP entry format is documented in AMD PPR, see
https://bugzilla.kernel.org/attachment.cgi?id=296015.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/sev.h |  5 +---
 arch/x86/kernel/sev.c      | 28 ++++++++++++++++++++
 include/linux/sev.h        | 54 ++++++++++++++++++++++++++++++++++++++
 3 files changed, 83 insertions(+), 4 deletions(-)
 create mode 100644 include/linux/sev.h

diff --git a/arch/x86/include/asm/sev.h b/arch/x86/include/asm/sev.h
index 7f4c34dd84e1..a65e78fa3d51 100644
--- a/arch/x86/include/asm/sev.h
+++ b/arch/x86/include/asm/sev.h
@@ -9,6 +9,7 @@
 #define __ASM_ENCRYPTED_STATE_H
 
 #include <linux/types.h>
+#include <linux/sev.h>
 #include <asm/insn.h>
 #include <asm/sev-common.h>
 
@@ -65,10 +66,6 @@ extern bool handle_vc_boot_ghcb(struct pt_regs *regs);
 #define PVALIDATE_FAIL_SIZEMISMATCH	6
 #define PVALIDATE_FAIL_NOUPDATE		255 /* Software defined (when rFlags.CF = 1) */
 
-/* RMP page size */
-#define RMP_PG_SIZE_2M			1
-#define RMP_PG_SIZE_4K			0
-
 #ifdef CONFIG_AMD_MEM_ENCRYPT
 extern struct static_key_false sev_es_enable_key;
 extern void __sev_es_ist_enter(struct pt_regs *regs);
diff --git a/arch/x86/kernel/sev.c b/arch/x86/kernel/sev.c
index 126fa441c0f8..dec4f423e232 100644
--- a/arch/x86/kernel/sev.c
+++ b/arch/x86/kernel/sev.c
@@ -40,6 +40,10 @@
 
 #define DR7_RESET_VALUE        0x400
 
+#define RMPTABLE_ENTRIES_OFFSET	0x4000
+#define RMPENTRY_SHIFT		8
+#define rmptable_page_offset(x)	(RMPTABLE_ENTRIES_OFFSET + (((unsigned long)x) >> RMPENTRY_SHIFT))
+
 /* For early boot hypervisor communication in SEV-ES enabled guests */
 static struct ghcb boot_ghcb_page __bss_decrypted __aligned(PAGE_SIZE);
 
@@ -1873,3 +1877,27 @@ static int __init snp_rmptable_init(void)
 	return 0;
 }
 early_initcall(snp_rmptable_init);
+
+struct rmpentry *snp_lookup_page_in_rmptable(struct page *page, int *level)
+{
+	unsigned long phys = page_to_pfn(page) << PAGE_SHIFT;
+	struct rmpentry *entry, *large_entry;
+	unsigned long vaddr;
+
+	if (!cpu_feature_enabled(X86_FEATURE_SEV_SNP))
+		return NULL;
+
+	vaddr = rmptable_start + rmptable_page_offset(phys);
+	if (unlikely(vaddr > rmptable_end))
+		return NULL;
+
+	entry = (struct rmpentry *)vaddr;
+
+	/* Read a large RMP entry to get the correct page level used in RMP entry. */
+	vaddr = rmptable_start + rmptable_page_offset(phys & PMD_MASK);
+	large_entry = (struct rmpentry *)vaddr;
+	*level = RMP_TO_X86_PG_LEVEL(rmpentry_pagesize(large_entry));
+
+	return entry;
+}
+EXPORT_SYMBOL_GPL(snp_lookup_page_in_rmptable);
diff --git a/include/linux/sev.h b/include/linux/sev.h
new file mode 100644
index 000000000000..ee038d466786
--- /dev/null
+++ b/include/linux/sev.h
@@ -0,0 +1,54 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * AMD Secure Encrypted Virtualization
+ *
+ * Author: Brijesh Singh <brijesh.singh@amd.com>
+ */
+
+#ifndef __LINUX_SEV_H
+#define __LINUX_SEV_H
+
+struct __packed rmpentry {
+	union {
+		struct {
+			u64 assigned:1;
+			u64 pagesize:1;
+			u64 immutable:1;
+			u64 rsvd1:9;
+			u64 gpa:39;
+			u64 asid:10;
+			u64 vmsa:1;
+			u64 validated:1;
+			u64 rsvd2:1;
+		} info;
+		u64 low;
+	};
+	u64 high;
+};
+
+#define rmpentry_assigned(x)	((x)->info.assigned)
+#define rmpentry_pagesize(x)	((x)->info.pagesize)
+#define rmpentry_vmsa(x)	((x)->info.vmsa)
+#define rmpentry_asid(x)	((x)->info.asid)
+#define rmpentry_validated(x)	((x)->info.validated)
+#define rmpentry_gpa(x)		((unsigned long)(x)->info.gpa)
+#define rmpentry_immutable(x)	((x)->info.immutable)
+
+/* RMP page size */
+#define RMP_PG_SIZE_2M			1
+#define RMP_PG_SIZE_4K			0
+
+/* Macro to convert the x86 page level to the RMP level and vice versa */
+#define X86_TO_RMP_PG_LEVEL(level)	(((level) == PG_LEVEL_4K) ? RMP_PG_SIZE_4K : RMP_PG_SIZE_2M)
+#define RMP_TO_X86_PG_LEVEL(level)	(((level) == RMP_PG_SIZE_4K) ? PG_LEVEL_4K : PG_LEVEL_2M)
+
+#ifdef CONFIG_AMD_MEM_ENCRYPT
+struct rmpentry *snp_lookup_page_in_rmptable(struct page *page, int *level);
+#else
+static inline struct rmpentry *snp_lookup_page_in_rmptable(struct page *page, int *level)
+{
+	return NULL;
+}
+
+#endif /* CONFIG_AMD_MEM_ENCRYPT */
+#endif /* __LINUX_SEV_H */

From patchwork Fri Apr 30 12:37:52 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233291
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 9F0F9C433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:14 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 82E2661601
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:14 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232465AbhD3MkA (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:40:00 -0400
Received: from mail-bn8nam12on2044.outbound.protection.outlook.com
 ([40.107.237.44]:33505
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232397AbhD3Mjv (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:39:51 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=iVPMB4ykkDehJdpYNohv8TbcJptETbi1iMCURmFBx1A0DSpITQ4+WsqrSfimCFUdJx1EJAyHtY7E+tkLBdJYnL8nahvW47BF3vO+JRQKphe3H0UjQeh2VHGOpZHw9TtEvw4c0wg4D9V1uGHuf8mEz2u4ZvtEe3wkayOnrdfogfNa8/PX4d+vPXSNSayoMXLANZJYTd+HUNLFd9SHbIjYl+E/KWE/mHJUJT3PHh6Orl6vAQE36w2JuFK4muFu0rQtjjxFQQdVqE/uhctSKByva1sWK+FaUKPuUuLLIwnVTMHLlgUAgZD7o9mlUNx8cbBu4ZMVCT2lfDbX8WfpBqjD5Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=JeW0iUxCla5zCPXAA/b5F+0o0ibUx8HqC8wxQINKewU=;
 b=SK4cAdnLG/J3JfB+5prGIrkmVfskNHLMZEhVXi6oSNpl5grImEPAAL8WlAWhZY/AGUoN0hphZRIKVMgVFj0xeXMNB/x23J+iF0u//Lau2M/Q4NIcssES1bKrMiMB5a4d2RxORJk44CtVKiuMVL44RMEzkykT8PEAL3okuDUd7jhcpDA8jvhQLGE8ZHFxzyzj180cPpvOehluI+oREGGEevvA71cXnJonWCoRw6vwrkkdfEZkAS5mYUVDCdky1URN/IqQkQ5cumCdPeeSjNzGtzQRU87uQ0h5pzhKYE+QgUMc1fpRNi+ZW9d/CbZg1xWC872Qr0Q3JEJD5sYn50XysA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=JeW0iUxCla5zCPXAA/b5F+0o0ibUx8HqC8wxQINKewU=;
 b=zyTsjN7WzzGno/GhPh0xwYnPwbIKc3/7O1zkhLmcWvkn2qmHbP7A8WKWi680BeShKsgiN09Cd8X+ijjBRabhxqC/ONwMegbMq5XNI3LZYoW470Z2djjauMXCiEVuDVyvF6HGoP9x3WN4z+5Bqm5CwI29AK03yS3EApMlY4aH0ak=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:38:58 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:38:58 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 07/37] x86/sev: Add helper functions for
 RMPUPDATE and PSMASH instruction
Date: Fri, 30 Apr 2021 07:37:52 -0500
Message-Id: <20210430123822.13825-8-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:38:58 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: b6126d84-5735-47ff-e4e6-08d90bd4ecf6
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB2832295D107F43C9ADDB77D0E55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:7219;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 UGaP8pCVw3O1OV1zVfEnTAgJPB1wJz04SkjRR4jUqhie6FsS94G6kCUFosCByOVs4ecye3saLHN17xCeuaP1Tc1NDOjUAcmbRiKpKZGFNlPIp586MtfggOQkwsrMDj3Rsb27G1w69JD3Mjf5vuXpkQF1+A2J8y5wDlVa13w5+H9tWq6eELXiayPLz2fprs+tZVeMYnassE3CovyWZSeyBUVA1So1qAel/qpYjLLuJ2ydWj+f/uqtoRfDZdpAP4TrbQJDgXbq0ta2B8e8bqALdUauzxlqn5rw8Ae6jxeBT4FS3QWauh2Cw3uIAZ2naR+3zcgBHR8Ka6MHev7XgPC/AJ4hbtNaJNwv21TNdE1dHF2l0v88JjAm2kDqQIpJYlmJgtmb78isRuKqHblw/Jw5w+TRv8weKjY5xZ5ff64WkLcOQtuu9IR8VkDsH0bbylWjHisLHVoFuqKmn3oSAsBj1ArSJIHgK7jjzXJ1zJCbV9S13gU7Zoi0lQeW977WSsctsb8ggL6NnzK27XppHqYYb5sb5boAF++NQVHTpSSAdWtDtfGjOhYarpqGISxohVGWxeOiyKr0Njq+IsfEaoZUe6YYa0VJa8QJ8hMvkYDv3X2eKRKmdu3rGU7cxbFzt8IcaxI9zDcuMk+krKHFD5O1UQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(6666004)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 NxUYVi0TnSV4OStFNv3xI3nF1vreHOpCwkalGZaSzqCsO8BIctIvAa8Mjj+rcZrLACxXSFU2HYSN/3TfP2w+xcaYC6Md9iF6Ua1/akZFUEjt1h7DwzOVhXvUta5EUQ8juIE7fJCCYymkjqtvSzZCniXE8KRoU+wrjiO0fBXviJGoJJrMjG9dGR1NWHMonUng4CG7BAu3zZv4zzScaSRzNgpBrKU9HOzLueGL+lJ+4XHwopdXPs4tfl9Gt1gX6JOSFCi22e487G5GiIRn5TrTsEBt/GA+Lil8D32RHaU2OVN1b4EQ2gS9oP4qBcnWvxIrYkzIiysAVwKG6KKNYoYOTn5YQeffcMK1Kb+Cb3Ezo5P8/pVAVICwcVroW6uUfz0ZlkzSSp7zji2cYZxKez1/ovoxjsanzCFGUtBWWNpNT8a6VbcWB/y8t7VHv0u4rAPtHmlapvrehA2tURoDSkiw54I97IC9YnZEE+oCMzfitKP63TlexKR+Ipv6TM2oOK0r1DCF3rZ4knxDNL2Pt0zpTc7BYXqOOl2jKmuXUMSBNISHQUzw2P9JDPQKxWu7p9GR/8VzV3w0KGond6DDAhCK+01bqCuuhl7QzcHi3ZDPPaTgvuuVj+JU6AXLvF1ratge9JJYW36+wyRmMmD8m2/eoiEwulG3lok1NWKljugYG7jU6pcrkGdukqjb3RgLiyoAmncDohnICRgbEcxwTD6OKMVixsYiBh6YrnkLNEzS6jhYjz7mZ3bi2OfcOz9H9Ko/7hVM2bhtiDNleDhpOzpnaFsDUmLwMa4vSZqhlA3stq/5Ano8U385fKts983qOgX76DHfJ5UIfs7hWd+l2c5hpmj6bfMKLjKlB1aRHPbSLCpCT3Y87Dk+rqs0E0mH/xwrY2K88T+0YR1Ipby3dVXUZwzpB2onXGbFJnxomYIRtPXpOTlSgklhYyciV2viutanbupjsCysJv7r7ArQBzjJ2AmU4dIqRHJohr8fXJNibErl8DEDiNX1pmX1+zURtsOFvc6lmn21lwob2tKP7bAzm/he0BZ3/j9U25ofYHoz4fHADhrnkR8l3fPSlDU9r0eBS6zC69qUf4HX+GJ/0DW53FF9ZZBJKWF/0HL6fwcO739nk+g6Iu92txG71FNgr+L0SRvXvDZR7oqXuOF66sMSnrdR1w0v9I7z2EetepdvS3LXCp+i+q++m6D9ciRs1gz/zffBoL5DQP1kZNQMzGD/KevGi10STBWe+5hTWElwkspdQpNvgAvy5yM9ODzpai6XtIqQCUSv3QUqMqrZDEYGIlGh3K8KUVsrO4dxsjvi3GQCx27n4hGtffAMykbS0ReW
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 b6126d84-5735-47ff-e4e6-08d90bd4ecf6
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:38:58.7880
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 VOz2b5Agcu+5PRjkgPNj9hwuMSo4VnC3bHCqY2XFQNpl3NYGB9SeVrBTBZ+0g+oyTcGkglopgsPErZUvRRRWdQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The RMPUPDATE instruction writes a new RMP entry in the RMP Table. The
hypervisor will use the instruction to add pages to the RMP table. See
APM3 for details on the instruction operations.

The PSMASH instruction expands a 2MB RMP entry into a corresponding set of
contiguous 4KB-Page RMP entries. The hypervisor will use this instruction
to adjust the RMP entry without invalidating the previous RMP entry.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kernel/sev.c | 42 ++++++++++++++++++++++++++++++++++++++++++
 include/linux/sev.h   | 27 +++++++++++++++++++++++++++
 2 files changed, 69 insertions(+)

diff --git a/arch/x86/kernel/sev.c b/arch/x86/kernel/sev.c
index dec4f423e232..a8a0c6cd22ca 100644
--- a/arch/x86/kernel/sev.c
+++ b/arch/x86/kernel/sev.c
@@ -1901,3 +1901,45 @@ struct rmpentry *snp_lookup_page_in_rmptable(struct page *page, int *level)
 	return entry;
 }
 EXPORT_SYMBOL_GPL(snp_lookup_page_in_rmptable);
+
+int psmash(struct page *page)
+{
+	unsigned long spa = page_to_pfn(page) << PAGE_SHIFT;
+	int ret;
+
+	if (!cpu_feature_enabled(X86_FEATURE_SEV_SNP))
+		return -ENXIO;
+
+	/* Retry if another processor is modifying the RMP entry. */
+	do {
+		/* Binutils version 2.36 supports the PSMASH mnemonic. */
+		asm volatile(".byte 0xF3, 0x0F, 0x01, 0xFF"
+			      : "=a"(ret)
+			      : "a"(spa)
+			      : "memory", "cc");
+	} while (ret == PSMASH_FAIL_INUSE);
+
+	return ret;
+}
+EXPORT_SYMBOL_GPL(psmash);
+
+int rmpupdate(struct page *page, struct rmpupdate *val)
+{
+	unsigned long spa = page_to_pfn(page) << PAGE_SHIFT;
+	int ret;
+
+	if (!cpu_feature_enabled(X86_FEATURE_SEV_SNP))
+		return -ENXIO;
+
+	/* Retry if another processor is modifying the RMP entry. */
+	do {
+		/* Binutils version 2.36 supports the RMPUPDATE mnemonic. */
+		asm volatile(".byte 0xF2, 0x0F, 0x01, 0xFE"
+			     : "=a"(ret)
+			     : "a"(spa), "c"((unsigned long)val)
+			     : "memory", "cc");
+	} while (ret == RMPUPDATE_FAIL_INUSE);
+
+	return ret;
+}
+EXPORT_SYMBOL_GPL(rmpupdate);
diff --git a/include/linux/sev.h b/include/linux/sev.h
index ee038d466786..9855e881e542 100644
--- a/include/linux/sev.h
+++ b/include/linux/sev.h
@@ -42,13 +42,40 @@ struct __packed rmpentry {
 #define X86_TO_RMP_PG_LEVEL(level)	(((level) == PG_LEVEL_4K) ? RMP_PG_SIZE_4K : RMP_PG_SIZE_2M)
 #define RMP_TO_X86_PG_LEVEL(level)	(((level) == RMP_PG_SIZE_4K) ? PG_LEVEL_4K : PG_LEVEL_2M)
 
+/* Return code of RMPUPDATE */
+#define RMPUPDATE_SUCCESS		0
+#define RMPUPDATE_FAIL_INPUT		1
+#define RMPUPDATE_FAIL_PERMISSION	2
+#define RMPUPDATE_FAIL_INUSE		3
+#define RMPUPDATE_FAIL_OVERLAP		4
+
+struct rmpupdate {
+	u64 gpa;
+	u8 assigned;
+	u8 pagesize;
+	u8 immutable;
+	u8 rsvd;
+	u32 asid;
+} __packed;
+
+/* Return code of PSMASH */
+#define PSMASH_SUCCESS			0
+#define PSMASH_FAIL_INPUT		1
+#define PSMASH_FAIL_PERMISSION		2
+#define PSMASH_FAIL_INUSE		3
+#define PSMASH_FAIL_BADADDR		4
+
 #ifdef CONFIG_AMD_MEM_ENCRYPT
 struct rmpentry *snp_lookup_page_in_rmptable(struct page *page, int *level);
+int psmash(struct page *page);
+int rmpupdate(struct page *page, struct rmpupdate *e);
 #else
 static inline struct rmpentry *snp_lookup_page_in_rmptable(struct page *page, int *level)
 {
 	return NULL;
 }
+static inline int psmash(struct page *page) { return -ENXIO; }
+static inline int rmpupdate(struct page *page, struct rmpupdate *e) { return -ENXIO; }
 
 #endif /* CONFIG_AMD_MEM_ENCRYPT */
 #endif /* __LINUX_SEV_H */

From patchwork Fri Apr 30 12:37:53 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233295
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 5907EC43461
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:17 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 310A561482
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:17 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232562AbhD3MkE (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:40:04 -0400
Received: from mail-bn8nam12on2044.outbound.protection.outlook.com
 ([40.107.237.44]:33505
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232389AbhD3Mjz (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:39:55 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=njFQbClGwmvA9UPyyTSuGfOlI4T0fNydWOsKKhBzfxREHdMU7eXLca/yBIy+aouYpOm54WLTRKHToJYpyrI18mkODYsw4vopK7bMs9T5/SlOjnwGp+6OJX1nRh58i3c0OkVLvTqLhMDEqZQEab+BhbkRghH/4oe0KNsd5tc3i9PwHBXZIaSAjAD6hxoYEp8ymqw5ntbN18J0JmYhDs5tSDIQEdI3UI6E7ZuVI2X/D5b8mlahWdmFeI2VlTnMlDIBvXxgqNpoDDd72ncRkFJo8+MsOU8tS/Zwg2pEy9ZA95bEn4h38hWKGR7B+1AluhiGpAPcUlaRJ0lgWth7BeX9JQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=RfqACMzDJKdDBS+CBPxjIqKdFFd7BasWtVdzsmv++zA=;
 b=n+LaatdtRNUymHiVSYiDAmVFQhNEwsXqh4owZSv3kzlJok0eyDiTxPel5a0wPy0w7J5SF55foQyU49g/QjjFYNedndFpKZ/dcPXUybxSusMHPNpPHpqD+VgMgKBrJkgxLkNPe0E1V8PP22HDH4gnT6oIu+cROFD3fz8bzXZDF6ftbhogbPTgC+KpI9io2VkwZYlAd9mYHV0IBdsOYDEjnjsMVdzxltO89F29Z0tymj9jo+3rFGrpXpJ6gRisfUinpV/WjzdhWqBObD4hVmqFK88pAj9vWA0C4Fo+oDWsF1t/M916rjFl57T6Qt1iQxZxQJHN+ySn3SENuUquj1ylbA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=RfqACMzDJKdDBS+CBPxjIqKdFFd7BasWtVdzsmv++zA=;
 b=Sn+ae15lh16rDkkAHVT+SZYPT92Zf/GIjKyXhYrmfDdoh9Yo2EqIPvneUg6tSLYNNYnDOTf8/cpXV0krkquPU3sWVnsN8M1lobK3PK9FhNFFR2TItvCFunKPjpzFFIZVg/fgrc/a+LLlA/2mh2ekANe7+p86FcDgLV5keaeP43M=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:38:59 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:38:59 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 08/37] x86/sev: Split the physmap when adding the
 page in RMP table
Date: Fri, 30 Apr 2021 07:37:53 -0500
Message-Id: <20210430123822.13825-9-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:38:58 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 8ec064fe-4ae9-4c00-981d-08d90bd4ed5e
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB2832BE087F0B40BAEA1DF6A6E55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:10000;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 TL8x5/uhsl28WqyANy5/w7Omb3ryz/WTsiTpmoZz41CrOcaKwMo9HZJ5Tjj1RdadiXzutQkXFaJQP9ufjFqd8yE3/D/Vginq1Qw/25NB1WGueiDrduK/YZH/1FJS9sYHrvAOwY1uv5aO+2L0dADpV5jSb5+ZL69XaBFNTEgeMrkOfqrwn/XIvqzOkXGoz/lOseIFXUJen4BpT6UvGF1kNL2gvVPBFyKNjLEj39D8zYdGnl0d0A6cfrqkX2Ee0HFNXGVsusjlPKkHw7eteVHx+GEpLMKsnDGTLryvkgDOVa7+yyhEvWPeheNPZ2JEcSywexaipy62XXEeBWcE3VHUTVhnPw/0Wia2enShCi1PBSeEeRHiHxWl49lMbRbgBELck5nc0xYFbMRJoSTfLuQoKfq0SPuqWop36k/cW6JggfPG6TqO0ydIPP2iaXvDcQGXYd4q1H+sXYuR/6rp67blJRI+zNU8yrpwg/P8O0hMxy1IxRO7GnLZLnFTQ5AyN9aUNY2kdZa6ubnlQQqBQjYF104eFCZ7UAs7dw7a/5/BrsfbmTxrRmt/cCH+LFLI2NJqUXWm10u2zjAfi0JSUIQGAtpzE9KYlfyGFK0wdvOhna1oIUCRqzFDsVHPMbHY92tHp1xmL6WGLLu8n0fBXVFtsg==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(6666004)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 Q49HaHlwj9gGwuIakfjM++kqt4Jhx1XrhmIB75QAuBGbSVrI2Af/F8gD6brwM7ggJsz3MIOjT0W3skQCquGhqoD+DdldkrFOhgL97e07YnuEGPrw+dr/8Ql+AkzW1xFYqSweutHijFO/XBJjEo7nbC5hlgdOoHwZII63YErJNCWxIJjEjlQlGkBpviwBQsQzh5gW451EYeUnY8n+zJDnsWfI2/XeTppagV1b11eYPhh0gPwlEd7B39PJCE2MIBwQszJCiaHdNgDcgp2W4h9gJU9jOlZsmhwIvmmRxulHuArfWmtS12zVaEXAbBLRZHIy5k/CBtn6kblOVHllyrr07AFaupYUbGH+/FJ+mj5M/8HAd+b7LkWFIef+WQc/tKm8JkNY0D7B/1r0LI8VrTg101zH+E+SUQv31fyZwRjnYb18BE1vHtC56Coq4i9YPwLESgoacsYkVX0bdSPJ5tiQmRrkCpwCqY5NKyW9qIH+vIG8htgeLPUYI0JzU+x4B9AhwBhkB5J/ln6Bngp05ozOChr91Q6h7AyoCcYpgj15LjohJj0NUofH0N2J4JulaE6CJMlLes3mcjAeLl4yy9JA7T67vjgvQhd3rOs4WY4BBWqn0bzqyn/eEK+qDntqTk/4Z5gzfzDUJm1Yb6MblQ4LwTXwZfBe+UXnM4hJGcnNSLuEssyhr3EfhCFVnxRmak9ZgoWIXli/eRjsZqoqYzqKeiXOyPlkoH6/+JOcM7Qzwk/j+VVqG57XN1DDZwo0itpmZHfoL2YjvHxg86ectV8/tvV/847Wi5vtvmYV81vmHlWDi8EYtabRq6kufNoIrHK0Mi9KIVGLmkwwBQixCwkrUPOXUd7n2kvlwfJe+LEu5NuYm0F1UnW84nOx1SR3Lc8xLYmV730+8nhMe/5XMY1r2ow93auVPwoxof8DqTuhK0cU7dTwBeIMac/KMufjn2wgCo3oDYC8VTXB7V8pXmb93zVmoNDvPygPxUM3f5dutBpY0lJnodBOkuEeP8NyLKy5xG9V1c1fvD4lSYsxLMCuIp0E7kozx4eFehSt0XY9AchMxYXe0OiBkcVQlLtisvOkgMdnA3PeNeWgdzkSr1VVupZoLVHxa2cEWiRjnF78gpB6YAo1/GNlQh/Fudh6tqqMUlfxeVM4ujYysdvqIoQoi6ndB8tGJtGh/Yf5/Fmbje6hJCAe3t3TopY8Hf6aHewamWBFMwPm+CXKy3BQ405Jqd2lqn1jFwnAIU7HhnUnW+Xah1hQX/Rnp78Hf57DQs2G6f5SUHuY1vmAuN+XETUvn+b4rZQ0zCFqjZKCumqXI9oi/AOCRlWdt6xPKwthHcuG
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 8ec064fe-4ae9-4c00-981d-08d90bd4ed5e
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:38:59.4596
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 QRwZTKhnOy1QE4IDqmK7YZZ9/f3c+ja1rTdsa8NISNUbnZlEHa7cRhQRzghzkYhq66mDh8+3u6cJbDnfLgMsZA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The integrity guarantee of SEV-SNP is enforced through the RMP table.
The RMP is used in conjuntion with standard x86 and IOMMU page
tables to enforce memory restrictions and page access rights. The
RMP is indexed by system physical address, and is checked at the end
of CPU and IOMMU table walks. The RMP check is enforced as soon as
SEV-SNP is enabled globally in the system. Not every memory access
requires an RMP check. In particular, the read accesses from the
hypervisor do not require RMP checks because the data confidentiality
is already protected via memory encryption. When hardware encounters
an RMP checks failure, it raise a page-fault exception. The RMP bit in
fault error code can be used to determine if the fault was due to an
RMP checks failure.

A write from the hypervisor goes through the RMP checks. When the
hypervisor writes to pages, hardware checks to ensures that the assigned
bit in the RMP is zero (i.e page is shared). If the page table entry that
gives the sPA indicates that the target page size is a large page, then
all RMP entries for the 4KB constituting pages of the target must have the
assigned bit 0. If one of entry does not have assigned bit 0 then hardware
will raise an RMP violation. To resolve it, split the page table entry
leading to target page into 4K.

This poses a challenge in the Linux memory model. The Linux kernel
creates a direct mapping of all the physical memory -- referred to as
the physmap. The physmap may contain a valid mapping of guest owned pages.
During the page table walk, the host access may get into the situation where
one of the pages within the large page is owned by the guest (i.e assigned
bit is set in RMP). A write to a non-guest within the large page will
raise an RMP violation. To workaround it, call set_memory_4k() to split
the physmap before adding the page in the RMP table. This ensures that the
pages added in the RMP table are used as 4K in the physmap.

The spliting of the physmap is a temporary solution until the kernel page
fault handler is improved to split the kernel address on demand. One of the
disadvtange of splitting is that eventually, it will end up breaking down
the entire physmap unless its coalesce back to a large page. I am open to
the suggestation on various approaches we could take to address this problem.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kernel/sev.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/arch/x86/kernel/sev.c b/arch/x86/kernel/sev.c
index a8a0c6cd22ca..60d62c66778b 100644
--- a/arch/x86/kernel/sev.c
+++ b/arch/x86/kernel/sev.c
@@ -1931,6 +1931,12 @@ int rmpupdate(struct page *page, struct rmpupdate *val)
 	if (!cpu_feature_enabled(X86_FEATURE_SEV_SNP))
 		return -ENXIO;
 
+	ret = set_memory_4k((unsigned long)page_to_virt(page), 1);
+	if (ret) {
+		pr_err("Failed to split physical address 0x%lx (%d)\n", spa, ret);
+		return ret;
+	}
+
 	/* Retry if another processor is modifying the RMP entry. */
 	do {
 		/* Binutils version 2.36 supports the RMPUPDATE mnemonic. */

From patchwork Fri Apr 30 12:37:54 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233299
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id BE543C43461
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:21 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 92E996161F
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:21 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232636AbhD3MkH (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:40:07 -0400
Received: from mail-bn8nam12on2074.outbound.protection.outlook.com
 ([40.107.237.74]:41101
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232428AbhD3Mj7 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:39:59 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=htV91abDsOwTEt3NXRtHL+y/wxljPW176dNwAIZwobszJKsak48HY5G6mB+LY/r3sGFydRlSZqpDAWZytQoXNEcMvIHjpfreAYWbWOPf7xF8h0QmjDpqZ89ujC4gVYGd8NyCubhGUAE3eeard/t9cWGo3tDMviwnYzWjaUrdjZgktYfOyHYlM4wY/1Uf4oGqVaESWncFFsa6qQg/kF8oaXQEkRvCaDkrhwIFRStDXfwFOERXALJi14oJwRO72yUIAaO95+nFYCC4akx/P6yON1rpSPL+J4mHLwh6UwwvfK7SNUIorCycN0c4OPMmSV3LaPxKy7vadF6X+qKNJSmMyw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=ZQk1+NayfuudC/EVbsPjdngnqar5UmVKrfvL/maJC8k=;
 b=Wg3dHycyVf/sfFT+Yz0xVn1h6ue16ebPbNaNylSm9DF4v+AOa93vK9BYq5aqgEeWqo4u+vG+Nc2xt9EPi8591GPZ8TGaAVNJDYZba2mzOr9CPZS/oA7W28w/+R8x8iL/nioj8c6f9fNbIqjuvgOxo6zMjA/2H8/xMdfWfDvyjIuVb8Sgw+AgU0/6o+xDx3nAnS3Ln36poEDwOUvSfG/i9h1VcX/tjNhf5aAkL3WDZhzq22v21GjS/slAopU3nFo6nzpM6em0JpIn6Nm8hmbkjI0yltIBSn7iEZFS48cAv7T60PWIAvWAdGfEVcR2ZCoZWrXdcSDWgStzikz/oXQj1Q==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=ZQk1+NayfuudC/EVbsPjdngnqar5UmVKrfvL/maJC8k=;
 b=01Tpar9U8c15XBvOcNLCOMc+BGKIbo4cHGNggVEJTDTbzWtFXm0dgEOLjHuFzilY5XEVhV6c9hEkpjveLVH8neNh9JMrWyfuQHkxB3LsEVps5+hN1Lb0H6bCSehtgJ/cu/Zqw+ch5JFOltVgLQUep9wQifT/Pue24fvrD/Z2PnY=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:00 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:00 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 09/37] x86/traps: Define RMP violation #PF error
 code
Date: Fri, 30 Apr 2021 07:37:54 -0500
Message-Id: <20210430123822.13825-10-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:38:59 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 1e46f871-07f5-4398-f8cd-08d90bd4edc7
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB283291AC11368682BA482337E55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6790;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 G7ZiCChpUE1m5VjKbopMFHH4r3HqaPVdARiHBKvTlZ3K6mUN3CW4hn7m+1l/H7sWbRDC96dNg6UXWxB5ElXVQPHo/E8PNHkc2iVPBPtXCaCTR5RhSfspezS/pyoBj5o2uSPzfw6pxb+JwijHJEVndXBX+f8mIuAkIT6smZChjBaRY5imBJroEswuFd+Q4IKdvnltfMRWXzmKhqNJFBKHQB6LjxSYVSp6S53zBsnstPqtQRb6FRnVkOtqvwdIAcF96fHQAzrryLoKjFhf1Tj6rCRTmTDf5xO9KOhj6urfElDoITHlSkkaH0xLQBsUBKLRvV4LPHrjQ0QHqevaYVGR2ggfLLHSeI/3cuIkYcTMF08T/2UYD+tI9kEXyrS+BSXU6VVSVB9ea7eUpWnZtcB1s0HT8SMbRgMcgzbYfCsipAVYFU9XV/rALdnYU21/nqMVe6BIb9vVQxnzqxv1momI75RgwImPb29Pge9L2DbTyZVaEKdybsRJUXkE4ZXdopcD6Ih53ES6JK9wwVXOV9TSaZ1Tya7mkdvGJ0+x3kYA7YPkowlEFqzv18iz3EPYlgeNqWrLQjQXRx/T/1Kdtq0RGdLzgvoRk1QufpVif9PAvXReZPPfKzYL8O3LCbvznHR8Qn2JtDDeCQT6IgeZviPDsQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(6666004)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 oLzGMObs8jhEp+QVv7T3UZSTkSEqd2UFGbROPxx+Tb9qpJqlm+o6iaKDM86k2DO2wni0PbpfKv75yv/q3cCW5KfzEh62Tyq8PJ/diPqmnedBByGNfQcbSKsNR1gPaI8K0ryGJnj1SRNR0pDwOYBD5CsGCpcIltKH3o5joCs1sD0TnrQJdP2dSRPpmYRHWkjDBc3lZcu/j3j2ibf0eyRDIEANa+tyV8QbG5xHtDUauNPlOww1KuLma3JNyZ/RJ8jz18b53NgysyAZehwdB9YS18SVgSElKmU9noBhqeqrzjRa2epekbfSqi89R7hjdF945P6s3dY+xrWtnk2Su3h0Mtfhvr1UXYs6/Joxsd7imJ0Klk82SOG93yFATbBxK97sl/vLbPFP0rQ/JaOW6bR3nplKoPhHBHxX7W8jaljOOalXadp0FbRMOSWmqgKy/TBjKQzX1WySnGBBesadiLP/MmfqH9vmVGLrgRksW8sOY31yafssYjKF53UzTswZ2lBCJ4y/cp82QqZKb3qD9fJP29n2BCz00m5zlOkVuHt3UpvKATJsZTe0eo6RE4jviDKbfOibcKDA+dCG+GHBGotL1qFeC/NPr/3n0w4cqPnr14ROP3FW7L8emV8gJ/7y1fBIoM8zmWm36+efrQ/VLl2MTkSh5M1iIzWhShNIqCDZntgpLIXhwYxXgdjL4bwiH4IWAea74AUEqQYryfn39mcGBlgLrT0d/61ugNunj827fLmlhZhc2vJSfi3p2Gdoc3Mi67Ec+KJKUbIClG6UEoRpKqfmIlqkKSpdUkx/8O9aVbo9ZTVoiA1RTVUt8d3W1H3b3WnI5k/6WgiD0EksRdQnkKlyl48DW1TSE9Lv5s3MfUbLaQnIlNKxorL3ecqpNeZh0H3HsT7EH891R+eaV73mWklugoW6WaL/jMv9qMQxRkXDdhgaToW2/PRFhV0KDB1p10GALdjZwU9Cz/P47622aERjDcvUSqzrwcyqqE0T4u00zx5Z+ojNFvqPnoKi0Vh8ANTQD5nKYV/+7ee5G9OMsKeNQoFYeytO3fnBh7b9qD/KVpOKoSkCIf0bsvqa4Z4WhaV+M9LmgaBy1qokZVhJInxhyxDb3o6R/qNcs07BCPpMq3npx8clls23hqbO2X4DsJJTETNSxPomzP59ZaUFKvtAMz73afvXn3yDlcCgoTVOVtCk43sB9njcMQl4pwxER8R87kQFD60Dj/XeDOc6855pamGqaMFNLlpR3cOhGN4ZDUiC0XwPPJJaCunLyJtLUNFaOlPergFLY+uN8SouEocjQhsMtxqLcwZkdFyoH8bv9pgoYtgGOVrZR7PYeug2
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 1e46f871-07f5-4398-f8cd-08d90bd4edc7
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:00.1882
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 uNbXOpUWv6zP3vH+y4KrAjo5TelZNVOGMQtS2xaOvsozKgwl3iMHFldQIpCzsDXxeHpGUOL/OH/BWwdIYn6MyA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Bit 31 in the page fault-error bit will be set when processor encounters
an RMP violation.

While at it, use the BIT() macro.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/trap_pf.h | 18 +++++++++++-------
 arch/x86/mm/fault.c            |  1 +
 2 files changed, 12 insertions(+), 7 deletions(-)

diff --git a/arch/x86/include/asm/trap_pf.h b/arch/x86/include/asm/trap_pf.h
index 10b1de500ab1..29f678701753 100644
--- a/arch/x86/include/asm/trap_pf.h
+++ b/arch/x86/include/asm/trap_pf.h
@@ -2,6 +2,8 @@
 #ifndef _ASM_X86_TRAP_PF_H
 #define _ASM_X86_TRAP_PF_H
 
+#include <vdso/bits.h>  /* BIT() macro */
+
 /*
  * Page fault error code bits:
  *
@@ -12,15 +14,17 @@
  *   bit 4 ==				1: fault was an instruction fetch
  *   bit 5 ==				1: protection keys block access
  *   bit 15 ==				1: SGX MMU page-fault
+ *   bit 31 ==				1: fault was an RMP violation
  */
 enum x86_pf_error_code {
-	X86_PF_PROT	=		1 << 0,
-	X86_PF_WRITE	=		1 << 1,
-	X86_PF_USER	=		1 << 2,
-	X86_PF_RSVD	=		1 << 3,
-	X86_PF_INSTR	=		1 << 4,
-	X86_PF_PK	=		1 << 5,
-	X86_PF_SGX	=		1 << 15,
+	X86_PF_PROT	=		BIT(0),
+	X86_PF_WRITE	=		BIT(1),
+	X86_PF_USER	=		BIT(2),
+	X86_PF_RSVD	=		BIT(3),
+	X86_PF_INSTR	=		BIT(4),
+	X86_PF_PK	=		BIT(5),
+	X86_PF_SGX	=		BIT(15),
+	X86_PF_RMP	=		BIT(31),
 };
 
 #endif /* _ASM_X86_TRAP_PF_H */
diff --git a/arch/x86/mm/fault.c b/arch/x86/mm/fault.c
index a73347e2cdfc..39d22f6870e1 100644
--- a/arch/x86/mm/fault.c
+++ b/arch/x86/mm/fault.c
@@ -545,6 +545,7 @@ show_fault_oops(struct pt_regs *regs, unsigned long error_code, unsigned long ad
 		 !(error_code & X86_PF_PROT) ? "not-present page" :
 		 (error_code & X86_PF_RSVD)  ? "reserved bit violation" :
 		 (error_code & X86_PF_PK)    ? "protection keys violation" :
+		 (error_code & X86_PF_RMP)   ? "rmp violation" :
 					       "permissions violation");
 
 	if (!(error_code & X86_PF_USER) && user_mode(regs)) {

From patchwork Fri Apr 30 12:37:55 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233301
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 0B081C433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:29 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id D524161490
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:28 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232704AbhD3MkL (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:40:11 -0400
Received: from mail-bn8nam12on2044.outbound.protection.outlook.com
 ([40.107.237.44]:33505
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232501AbhD3Mj7 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:39:59 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=a5WeossFBSp1CjS35+X9qltGDGTw7T2yZS+yFmuQU39eMItwalUHOvtGaUzKQLt+kBmbxFYwlQzhHT8c0xkTgiSJqM9rVmmoeSYFMNlMazTOpzyBu1nV7pc92pNqHkW9K8IN9sH2SvNCFwtOklB/+1apLiNYNs6+1RY0BtdBNrdtwAWQJ3knUcs4XUNpiuG2pDSGopcYb/3peGQYl+luBkerWYMhvHpRGtw0BFM6xmdj3dKvDwQROt1LpAxUSfZGE1nivBEWZYUYoxlgeQOf0buzmEYIG54pctQyyzvcnucqQRgcZIqFFb44Uamj2kBRBaxGh/Pfwi8bwGNTNlexyA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=wCyQrABOK79UUGNlr+sQq2uK45PIMflOhTcnCmYUUZM=;
 b=kp8KQkZfKDI5DuUAlZ216v8iwFD+iwL/QdBbAuL3WB3BfZiCyjsx/AWwZ1RNYQJs7T5tHUvoetYZxo+uN4mlm/t+aeXkQlI00wafn5vEM3m64XPYur/VGZkiQ9zOhOnwMiuUAIYYwj6T97lCbXx2nOjdgw+04dBiOVuiBJHDgsANycC4tehb9+HztPzZYKwMm4jrXbCjY6XdPawmWcy5vjo0AwXZX7zAAsGkMm9LM9I6n08yV5fz2xzOiiXyRQ0UQqom8p2MEvSH1G6IVVcfSD41X+yDyy96qmRTPaqdvli5IoMyjq8BI0mv+3H61IjtwosuiXwC76g8eTcVpSy9UQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=wCyQrABOK79UUGNlr+sQq2uK45PIMflOhTcnCmYUUZM=;
 b=Kg84P2cgFXTHTQIkjpdD0xY9GAhtyUhorj8CdQGfJ5s36YgtB/cYTc4cihUv1RKQjSa9ryCYc7NCBbcKmKpJL2RJtSdp8DEELCYQ/1T12dix64yR/wznjPAISSs8eso2T/sKWmTDNYYx2F89RS86KEn3QwncRVR9xWmO1OEmyKk=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:01 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:01 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 10/37] x86/fault: Add support to handle the RMP
 fault for kernel address
Date: Fri, 30 Apr 2021 07:37:55 -0500
Message-Id: <20210430123822.13825-11-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:00 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 4bf20d5d-6549-4eb7-7fe1-08d90bd4ee3a
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB28324ED858E6540E6CA14C04E55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6790;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 cIceHTwfnDB6LBrE/jg7iFWuyflVC+R8O87T5a0FJxxOWPCXh1zoUEABppF5b+dWdrfcEYVXzoa8rO+jHJmIiE9jXf9RfnYNC/1WEpdNBUEa7MimXzlEbYMlflqIiW+egj7777hFr0MVpEuPWonGNwCIRva/aQJMoAMeVDA+5C5XZ5TFQh6JMCNfUIQ0Qg83qF4TWSfC4eYSoTqeXs9osxvpnxwPZlTx0lz0l2L0CCfEBRK92LK1Pr41o+BCx7kIPT68kdWLkEuprf/5X6DDn0Jaiz1b7/Dodttpmh1UyCt6ZydJaG2Trbl+clWnoDjmLnd0BlWWhvU0T59jMtdSiq3t/wr20PwjrjkXppt0hPBFRJ8V1RHgMDl+qicTjwVkXPCW7fZfQPvu6XeXfepNKDaaaujdFOK0PrKZrky9vn1p6L4F9ssHbJejlfgnii76Lza96oC8Ly3wFRW+aQ/NH3TEdirHOWf3KZWCKBL4gVCwcaIYqZ0cEQoqlU4m8cSj/no56jWYXr4yebutw1UgREDW8RO25CFP3lfDAGQf6gyaFdlMdlrMUoKKSn2S9C+WBKdgIF0Mg1Vzdl59HawSOHgZ5X0CtsIYN4Cc6BTE6csqDRsNlx7IH8H8Wy2XZFfbC2Wn9mg99zt4DoEaYVgdsQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(6666004)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 Rn/hOGE5zgOc19JGwTzr9KmvYXVOZGr9D0B2OZ0pwjP8JDXIlWcapmAbW8J4HxQ5hPxTjQqbEWes4tNXlfyQFomNxow1NvSSQC2L4wd9GfrtxJ5VlvRteJmg9rvGJtB0FdKqaG31x8MKbeYZGYkUCPiyoaYZtvrcMzvCi9CYjRioCqqtl9wKuTHK2uM42c8iOr6WKfGAiHpfMugyY7QXvjFHYTAnk0FFRIunlh0Nx0XWIcBEXOR9y2A3OvP2KpZTOaT0TJXPvmEoIQOZElmKHfjtX1bglequ6s56hH0+IukBz/BgZg6jib6Lq7sJyQwrmvi1r0/kRcQZsTleD1i3v/MfwzYZrpHMDCLnBy2q5uGIOeTlz/gzGawZO1tIVnqkSUfJzA6V1QuEYSIRP0V50ln5XUZloAg/n+i2uDqFPHDGsxwBI+q405wROfxVkNxX+HcXFZZVrgaUABPHB+qdh/NvQcCFUN+ugNpdOHBcqGBeXPdlNZFxs8f+GZJcL9YlVsGiP5GYTShPuvrUnsMizqgAEmneT/pW9RpwgO74SUobgrpsk9deY5d7tLveC/1CrbKtFI7DEwcSb74FvbzwzJ7B6uPJM8iXtYeMJHuYYBiZ0oRPv4u4eSEhOqTLqpvHMUKPwhfm/Z3Gni/ZlzY5Eiz6GKqdpCDZK7pnV5aYRq1jle9ksT/c2XmSz5cVr0NMz7gG0klpt0rJSTxy+ck1NINE/X5aiQX531FFpnFqGdPu+PJgeolT/NULm4WDWYsb0w3mAB9qvu2T1uJTLqRuOpB97zxjHn7ICD4BSBytSsP6Hk53wJfgKfZftD01372p6GOdrtIKq8CODwFgvcYdVP1NQAwXOXzwQq6QUbValfoOgdHhwDkT+XOh6VWkXi08WzpT3OT/1evbI3dk0hInvN/QJ3iE6Iu4d8gE5UnrCKhKXjMaf2Y3XXL9M2HB/SEDYHdZFLAi2C5ui5tRLbVbrVBPW9ngEHEgq5kzauoCXJcRPXzZ1y/5gT23uxNqYye8eIovo4ACP6tZiW3RTLPK6R+JxC3J/EAJnGuitSZY9jYxTjQPlDftCQrvorHdOLMYVWLZCvgMTOBF0Wk1TrkvBNlIAkyr4E1yOp2ilvPkVY6O56Gak9YxyHmj144tbU/tS+J2uf1PI9QNV5wURZdCKHCGagw4R8BlYRSOLWn8o4DSQsdzMtcSfTAdcaIJ12sgVnzCBjJCdZIk7fpQd9tqZdgalGryE9i1Pz3qZVd8lmLHe+SypU5UVVqUinoxVi4LapE9kTU0JvIEiOwdVBJxvKOrvWq8LwaAzFvnPoHghv82888QiEfJb+iWMQgByPcR
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 4bf20d5d-6549-4eb7-7fe1-08d90bd4ee3a
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:00.9198
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 nRmtZyNfrbhpnPFFmRFEmJxYXpLgvKHCLludYJUfRY+KLsL8bj2QBtBCOppziaz/WbjKI0DxMIHu0fzhYeqs3Q==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

When SEV-SNP is enabled globally, a write from the host goes through the
RMP check. When the host writes to pages, hardware checks the following
conditions at the end of page walk:

1. Assigned bit in the RMP table is zero (i.e page is shared).
2. If the page table entry that gives the sPA indicates that the target
   page size is a large page, then all RMP entries for the 4KB
   constituting pages of the target must have the assigned bit 0.
3. Immutable bit in the RMP table is not zero.

The hardware will raise page fault if one of the above conditions is not
met. A host should not encounter the RMP fault in normal execution, but
a malicious guest could trick the hypervisor into it. e.g., a guest does
not make the GHCB page shared, on #VMGEXIT, the hypervisor will attempt
to write to GHCB page.

Try resolving the fault instead of crashing the host. To resolve it,
forcefully clear the assigned bit from the RMP entry to make the page
shared so that the write succeeds.  If the fault handler cannot resolve
the RMP violation, then dump the RMP entry for debugging purposes.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/mm/fault.c | 146 ++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 146 insertions(+)

diff --git a/arch/x86/mm/fault.c b/arch/x86/mm/fault.c
index 39d22f6870e1..d833fe84010f 100644
--- a/arch/x86/mm/fault.c
+++ b/arch/x86/mm/fault.c
@@ -19,6 +19,7 @@
 #include <linux/uaccess.h>		/* faulthandler_disabled()	*/
 #include <linux/efi.h>			/* efi_crash_gracefully_on_page_fault()*/
 #include <linux/mm_types.h>
+#include <linux/sev.h>			/* snp_lookup_page_in_rmptable() */
 
 #include <asm/cpufeature.h>		/* boot_cpu_has, ...		*/
 #include <asm/traps.h>			/* dotraplinkage, ...		*/
@@ -1132,6 +1133,145 @@ bool fault_in_kernel_space(unsigned long address)
 	return address >= TASK_SIZE_MAX;
 }
 
+#define RMP_FAULT_RETRY		0
+#define RMP_FAULT_KILL		1
+#define RMP_FAULT_PAGE_SPLIT	2
+
+static inline size_t pages_per_hpage(int level)
+{
+	return page_level_size(level) / PAGE_SIZE;
+}
+
+static void dump_rmpentry(unsigned long pfn)
+{
+	struct rmpentry *e;
+	int level;
+
+	e = snp_lookup_page_in_rmptable(pfn_to_page(pfn), &level);
+
+	/*
+	 * If the RMP entry at the faulting address was not assigned, then dump may not
+	 * provide any useful debug information. Iterate through the entire 2MB region,
+	 * and dump the RMP entries if one of the bit in the RMP entry is set.
+	 */
+	if (rmpentry_assigned(e)) {
+		pr_alert("RMPEntry paddr 0x%lx [assigned=%d immutable=%d pagesize=%d gpa=0x%lx"
+			" asid=%d vmsa=%d validated=%d]\n", pfn << PAGE_SHIFT,
+			rmpentry_assigned(e), rmpentry_immutable(e), rmpentry_pagesize(e),
+			rmpentry_gpa(e), rmpentry_asid(e), rmpentry_vmsa(e),
+			rmpentry_validated(e));
+
+		pr_alert("RMPEntry paddr 0x%lx %016llx %016llx\n", pfn << PAGE_SHIFT,
+			e->high, e->low);
+	} else {
+		unsigned long pfn_end;
+
+		pfn = pfn & ~0x1ff;
+		pfn_end = pfn + PTRS_PER_PMD;
+
+		while (pfn < pfn_end) {
+			e = snp_lookup_page_in_rmptable(pfn_to_page(pfn), &level);
+
+			if (unlikely(!e))
+				return;
+
+			if (e->low || e->high)
+				pr_alert("RMPEntry paddr 0x%lx: %016llx %016llx\n",
+					pfn << PAGE_SHIFT, e->high, e->low);
+			pfn++;
+		}
+	}
+}
+
+/*
+ * Called for all faults where 'address' is part of the kernel address space.
+ * The function returns RMP_FAULT_RETRY when its able to resolve the fault and
+ * its safe to retry.
+ */
+static int handle_kern_rmp_fault(unsigned long hw_error_code, unsigned long address)
+{
+	int ret, level, rmp_level, mask;
+	struct rmpupdate val = {};
+	struct rmpentry *e;
+	unsigned long pfn;
+	pgd_t *pgd;
+	pte_t *pte;
+
+	if (unlikely(!cpu_feature_enabled(X86_FEATURE_SEV_SNP)))
+		return RMP_FAULT_KILL;
+
+	pgd = __va(read_cr3_pa());
+	pgd += pgd_index(address);
+
+	pte = lookup_address_in_pgd(pgd, address, &level);
+
+	if (unlikely(!pte))
+		return RMP_FAULT_KILL;
+
+	switch(level) {
+	case PG_LEVEL_4K: pfn = pte_pfn(*pte); break;
+	case PG_LEVEL_2M: pfn = pmd_pfn(*(pmd_t *)pte); break;
+	case PG_LEVEL_1G: pfn = pud_pfn(*(pud_t *)pte); break;
+	case PG_LEVEL_512G: pfn = p4d_pfn(*(p4d_t *)pte); break;
+	default: return RMP_FAULT_KILL;
+	}
+
+	/* Calculate the PFN within large page. */
+	if (level > PG_LEVEL_4K) {
+		mask = pages_per_hpage(level) - pages_per_hpage(level - 1);
+		pfn |= (address >> PAGE_SHIFT) & mask;
+	}
+
+	e = snp_lookup_page_in_rmptable(pfn_to_page(pfn), &rmp_level);
+	if (unlikely(!e))
+		return RMP_FAULT_KILL;
+
+	/*
+	 * If the immutable bit is set, we cannot convert the page to shared
+	 * to resolve the fault.
+	 */
+	if (rmpentry_immutable(e))
+		goto e_dump_rmpentry;
+
+	/*
+	 * If the host page level is greather than RMP page level then only way to
+	 * resolve the fault is to split the address. We don't support splitting
+	 * kernel address in the fault path yet.
+	 */
+	if (level > rmp_level)
+		goto e_dump_rmpentry;
+
+	/*
+	 * If the RMP page level is higher than host page level then use the PSMASH
+	 * to split the RMP large entry into 512 4K entries.
+	 */
+	if (rmp_level > level) {
+		ret = psmash(pfn_to_page(pfn & ~0x1FF));
+		if (ret) {
+			pr_alert("Failed to psmash pfn 0x%lx (rc %d)\n", pfn, ret);
+			goto e_dump_rmpentry;
+		}
+	}
+
+	/* Log that the RMP fault handler is clearing the assigned bit. */
+	if (rmpentry_assigned(e))
+		pr_alert("Force address %lx from assigned -> unassigned in RMP table\n", address);
+
+	/* Clear the assigned bit from the RMP table. */
+	ret = rmpupdate(pfn_to_page(pfn), &val);
+	if (ret) {
+		pr_alert("Failed to unassign address 0x%lx in RMP table\n", address);
+		goto e_dump_rmpentry;
+	}
+
+	return RMP_FAULT_RETRY;
+
+e_dump_rmpentry:
+
+	dump_rmpentry(pfn);
+	return RMP_FAULT_KILL;
+}
+
 /*
  * Called for all faults where 'address' is part of the kernel address
  * space.  Might get called for faults that originate from *code* that
@@ -1179,6 +1319,12 @@ do_kern_addr_fault(struct pt_regs *regs, unsigned long hw_error_code,
 	}
 #endif
 
+	/* Try resolving the RMP fault. */
+	if (hw_error_code & X86_PF_RMP) {
+		if (handle_kern_rmp_fault(hw_error_code, address) == RMP_FAULT_RETRY)
+			return;
+	}
+
 	if (is_f00f_bug(regs, hw_error_code, address))
 		return;
 

From patchwork Fri Apr 30 12:37:56 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233305
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 560C8C433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:36 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 3AA7A61468
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:36 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232554AbhD3MkW (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:40:22 -0400
Received: from mail-bn8nam12on2041.outbound.protection.outlook.com
 ([40.107.237.41]:60768
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232543AbhD3MkE (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:40:04 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=JtikAgUx0WYIkC5maE5NqCwUwxMvLbG8b4vu/ZVPXZBHOk2JyIEYdGO3hq4peqn5ErZ/QtaUQv5US3aGVmSBgdUIQvBx5EKHbAUSHM3pixKdvTrlu0jelO9qqLE9XO3nqMjFNfrhWn3AOg8g0KA3WCjt4xlcn5nFDZA4yRuWkGBLXwF9fXFapJed/mvj2NpBL0vzdP6V3xnAwOl5BD/xhbE73EaVRyRenWayVNvfhvyjUBeykIb+jk0V/QEoL1zZRfSwxbU4rZRX8NBSzr907EbL4TakNblhGqk1+/guxFyjIJ9pjauWuexc2xIUgO0CfROiqcGIMvnYcgije3x8bA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=S+61kpZuBnxPQA6Jak/Dfpo81a0hBdVaTDnFYoNbg4s=;
 b=EdVAxeSuY/j59yb5KS51nW6MrVtg/ViGXmBPFkd7Fz2GtUbWS0k8OvvmY+kVrTNf5IeWiPYHv75pPzvbltIsG7cm7t9yoR3B04v6354J3LM+EH+u4QclD4Y0SwCh4bm+A69542tLBmGVaeygxFdTo0fNX4WZweE3nvxUkAl1NNYqCpYea0x6w9MPSOsWOnHU1OrAKeKCw08r2Nadz6nheE8U1SqSSDePSt4gAH4vU7JQ1Mf/c6REWV3Z2uWyJvIzWpkxOrtzZjHpihVckJGdBf1i3mowOmq1zGFHcR6UsvY/A9CFtJiLTqSNHVsu3NoK0bYZdUDEhvpNnjX5E0jQnQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=S+61kpZuBnxPQA6Jak/Dfpo81a0hBdVaTDnFYoNbg4s=;
 b=hYTRC4ZjYGnyMv/UmuLJr1+XYs/h77hNS35DxRtYvB9KgTXUm3WlQ8LvwWb5VGywjeE48aHLSr6iMcvrrp00Qp2uQSES1+VmV9mzhkk+1t8V8miIyVjrNoUO2VfRNPJxSb9wdNp7/rh6uhKkI9PukcODt8D2k0/2G9fRKrHQE6Y=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:02 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:02 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 11/37] x86/fault: Add support to handle the RMP
 fault for user address
Date: Fri, 30 Apr 2021 07:37:56 -0500
Message-Id: <20210430123822.13825-12-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:01 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 18d24d63-1728-4cfc-e468-08d90bd4eeaa
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB283266EB2C9D9B60AEACAB5DE55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:332;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 fyK//B10I8ogPVcjYYv6+s3MwiyTyPIBJePOEqvSYNF7EyjdEvyGIm6nNRryaCcdwNdN1fErcXxKB9zwLEndIqC+Oxr/FbOHW/M/Rt/l7LycQiwfEhP8nUT4inMOBaJkTazzp31ox44No3LQU810JFGserDdJG7ymnohSQmV3PtHFGKnaIE4bszfZQds3E9SP0HGhVyKTyW5KxL7hfQWIbJ2FxJ6UJ32JCZ4CyudVkIrsoqPMZgXw/p3c7w0/71dMKXXO/utOyz9+6RMvYY+61n8V80HfLjIAv3jZ9GzYoIUTghht0NAKQzVb5e/XbIPLDRmKY+FaXfKVq4LffbsqHyyZlsBMPfMfKb8mEtuJj8TS6UGp/O9N1wq6Cid696gETATThU5KD/xSzX5EwzP/rphmM7Jpp6Ca9eSW0XzXZrxkWZMeBF5Y6lsabhaHASYDe03mdMINbi4bWHKkEsZfsQkPtASDhqqSjNQ0RtEmRGPgpO+4Sfi/95WnBWEDZEkHv91qFwZF3FxfWAceU8wEgMYMjDI2SllnJRi1+3CGYdqeu2+OdZYmw8IwNoZIsK05jWIfQTrfL5RNWGLNcEallnen5Ns36J6I2wCFE/tPC8p4cm3JWpOaVJmmu2Z+OqbIf+t+bAyy4T1udjMUwW6bA==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(6666004)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 zq8g2EYKPlNu6+mGJs8abr5IdI2AedqE/dDlyHZ2DghKbr6putvbjvFTy0mmjHNqGzljj2/8vQFV0GdA9tF4HujOYUZRd/gjQx09DvedTgLgx0PuVoMiOJ/Ibkw5F9CwvBJUaUPqyaNvBjW+Ufm8KPjBAaPy6qMjaqg9Y7V3P6XD3reRYtpm7BJx/d9qZnAlF4ITMARIogkRIlbxLgYpa7wh5WY/0Ch9Pg69caQ6U9CDD4Dao2fTKgOMB+pDHS7v1fSfyDWC3d782iBdyyj1CHcijXbbnA5Js6pYfRcZziqRJlQTGlgs2FUrlEvZUZYdgVFaKGpgEFtRBSNZet2olZ+zNAw1tkzZHrHvHD0pMRO4FnFTFIvyipz3SbEgY1OHhsc8VNpE4dVjfEvpgu/j7BM65ExBcn3EFjQ5U6Fa5qUJkj9jwSzs4akZSOHQv1jq5pVabbxGpbfz8ae/fsAZKRJ3Z2yr2Cq4J35piDWk+yZAgs2eGYLl1zvekQib+JRTHWoszsL17ZQCxQviDCsapMaicMgAR3mu+tUQxTftsC4MP88baGUXFJRox65PT340b6zyk954YMUxDJ8iKmI4cFYpx/3pQ/szNtVK8H/8b0yzgsUE31h419R6a+TmthUXqAzpEX5sVhmmhzeWOMG6KnIcPP0XXLnteYWxs0DQehaxcLKTCmJ3xrLMCnn2IPBUGxZCWaeF4e23QhrTFPX9uKPIgwwD5lQP1JDfPFFecPoqyO4TprvvwCUaWvarlKD0rSLQ5IEhv2KQY04CspbWPfiHsFbl77vtXcvf+9xsWDDFO8rusCWmZMMMuc+VZh8LhkT8i4Rc1glhgpTPiuEgDr3CByE8xOAhvv8SMlxWRZW6+j8Y4XFJWH7ZTyZti+3YftCOG41NPRWE8zkcVj9NRY1zo9ymfk2brtoVt+V0lgEOs/TCQur+2xC/s6Yjoa2pewuF8VH3QXMNc6MMl/MItwCfJ48HC/UjAzx5e/McTqQj32KrAwtJN3Z7X+OmLAKBjAOHBk3J0wyBdNBeswHc/d+/eovViyJ810hVglx8m1TFMw8zuftWLH0dBcZk2wc9LKHWwLG5D2SvDZGYfy76XGvYUpS2njI8hHBEi42OSjOPThOhkEtumdD94WiDTDfRFUejIQQ4XCUK5ASQPHFgXHiiwdjeLXz1Vh95IPGD3Wa81rJns+axuImbwSlhOyu1Vt0ps0/hcrvv7MNklf6dpl1wC2Aedx3I9ULubPNswvW9zpuvH0gIm4kbOLpptomou3+73fwVuRhJBfL0VEbCyXAy80qyQdtUPzQK5ZVtFPFIy3KaDjyB0bliU5i8f+o3
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 18d24d63-1728-4cfc-e468-08d90bd4eeaa
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:01.7753
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 A1Ozx6UCG4J8sxI/UFGgDWh2yJSt8b+/fbIC04nfTio1U8/afTsSVEpikmlx4fr0OJ3wKGBwz3Ay8C9Dg+0hNw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

When SEV-SNP is enabled globally, a write from the host goes through the
RMP check. When the host writes to pages, hardware checks the following
conditions at the end of page walk:

1. Assigned bit in the RMP table is zero (i.e page is shared).
2. If the page table entry that gives the sPA indicates that the target
   page size is a large page, then all RMP entries for the 4KB
   constituting pages of the target must have the assigned bit 0.
3. Immutable bit in the RMP table is not zero.

The hardware will raise page fault if one of the above conditions is not
met. Try resolving the fault instead of taking fault again and again. If
the host attempts to write to the guest private memory then send the
SIGBUG signal to kill the process. If the page level between the host and
RMP entry does not match, then split the address to keep the RMP and host
page levels in sync.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/mm/fault.c | 60 +++++++++++++++++++++++++++++++++++++++++++++
 include/linux/mm.h  |  6 ++++-
 mm/memory.c         | 13 ++++++++++
 3 files changed, 78 insertions(+), 1 deletion(-)

diff --git a/arch/x86/mm/fault.c b/arch/x86/mm/fault.c
index d833fe84010f..4441f5332c2c 100644
--- a/arch/x86/mm/fault.c
+++ b/arch/x86/mm/fault.c
@@ -1348,6 +1348,49 @@ do_kern_addr_fault(struct pt_regs *regs, unsigned long hw_error_code,
 }
 NOKPROBE_SYMBOL(do_kern_addr_fault);
 
+static int handle_user_rmp_page_fault(unsigned long hw_error_code, unsigned long address)
+{
+	unsigned long pfn, mask;
+	int rmp_level, level;
+	struct rmpentry *e;
+	pte_t *pte;
+
+	if (unlikely(!cpu_feature_enabled(X86_FEATURE_SEV_SNP)))
+		return RMP_FAULT_KILL;
+
+	/* Get the native page level */
+	pte = lookup_address_in_mm(current->mm, address, &level);
+	if (unlikely(!pte))
+		return RMP_FAULT_KILL;
+
+	pfn = pte_pfn(*pte);
+	if (level > PG_LEVEL_4K) {
+		mask = pages_per_hpage(level) - pages_per_hpage(level - 1);
+		pfn |= (address >> PAGE_SHIFT) & mask;
+	}
+
+	/* Get the page level from the RMP entry. */
+	e = snp_lookup_page_in_rmptable(pfn_to_page(pfn), &rmp_level);
+	if (!e)
+		return RMP_FAULT_KILL;
+
+	/*
+	 * Check if the RMP violation is due to the guest private page access. We can
+	 * not resolve this RMP fault, ask to kill the guest.
+	 */
+	if (rmpentry_assigned(e))
+		return RMP_FAULT_KILL;
+
+	/*
+	 * Its a guest shared page, and the backing page level is higher than the RMP
+	 * page level, request to split the page.
+	 */
+	if (level > rmp_level)
+		return RMP_FAULT_PAGE_SPLIT;
+
+	return RMP_FAULT_RETRY;
+}
+
 /*
  * Handle faults in the user portion of the address space.  Nothing in here
  * should check X86_PF_USER without a specific justification: for almost
@@ -1365,6 +1408,7 @@ void do_user_addr_fault(struct pt_regs *regs,
 	struct task_struct *tsk;
 	struct mm_struct *mm;
 	vm_fault_t fault;
+	int ret;
 	unsigned int flags = FAULT_FLAG_DEFAULT;
 
 	tsk = current;
@@ -1445,6 +1489,22 @@ void do_user_addr_fault(struct pt_regs *regs,
 	if (error_code & X86_PF_INSTR)
 		flags |= FAULT_FLAG_INSTRUCTION;
 
+	/*
+	 * If its an RMP violation, try resolving it.
+	 */
+	if (error_code & X86_PF_RMP) {
+		ret = handle_user_rmp_page_fault(error_code, address);
+		if (ret == RMP_FAULT_PAGE_SPLIT) {
+			flags |= FAULT_FLAG_PAGE_SPLIT;
+		} else if (ret == RMP_FAULT_KILL) {
+			fault |= VM_FAULT_SIGBUS;
+			do_sigbus(regs, error_code, address, fault);
+			return;
+		} else {
+			return;
+		}
+	}
+
 #ifdef CONFIG_X86_64
 	/*
 	 * Faults in the vsyscall page might need emulation.  The
diff --git a/include/linux/mm.h b/include/linux/mm.h
index 8ba434287387..b37d9d8aae3b 100644
--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@ -434,6 +434,8 @@ extern pgprot_t protection_map[16];
  * @FAULT_FLAG_REMOTE: The fault is not for current task/mm.
  * @FAULT_FLAG_INSTRUCTION: The fault was during an instruction fetch.
  * @FAULT_FLAG_INTERRUPTIBLE: The fault can be interrupted by non-fatal signals.
+ * @FAULT_FLAG_PAGE_SPLIT: The fault was due page size mismatch, split the
+ *  region to smaller page size and retry.
  *
  * About @FAULT_FLAG_ALLOW_RETRY and @FAULT_FLAG_TRIED: we can specify
  * whether we would allow page faults to retry by specifying these two
@@ -464,6 +466,7 @@ extern pgprot_t protection_map[16];
 #define FAULT_FLAG_REMOTE			0x80
 #define FAULT_FLAG_INSTRUCTION  		0x100
 #define FAULT_FLAG_INTERRUPTIBLE		0x200
+#define FAULT_FLAG_PAGE_SPLIT			0x400
 
 /*
  * The default fault flags that should be used by most of the
@@ -501,7 +504,8 @@ static inline bool fault_flag_allow_retry_first(unsigned int flags)
 	{ FAULT_FLAG_USER,		"USER" }, \
 	{ FAULT_FLAG_REMOTE,		"REMOTE" }, \
 	{ FAULT_FLAG_INSTRUCTION,	"INSTRUCTION" }, \
-	{ FAULT_FLAG_INTERRUPTIBLE,	"INTERRUPTIBLE" }
+	{ FAULT_FLAG_INTERRUPTIBLE,	"INTERRUPTIBLE" }, \
+	{ FAULT_FLAG_PAGE_SPLIT,	"PAGESPLIT" }
 
 /*
  * vm_fault is filled by the pagefault handler and passed to the vma's
diff --git a/mm/memory.c b/mm/memory.c
index 550405fc3b5e..21ec049e21ad 100644
--- a/mm/memory.c
+++ b/mm/memory.c
@@ -4358,6 +4358,15 @@ static vm_fault_t handle_pte_fault(struct vm_fault *vmf)
 	return 0;
 }
 
+static int handle_split_page_fault(struct vm_fault *vmf)
+{
+	if (!IS_ENABLED(CONFIG_AMD_MEM_ENCRYPT))
+		return VM_FAULT_SIGBUS;
+
+	__split_huge_pmd(vmf->vma, vmf->pmd, vmf->address, false, NULL);
+	return 0;
+}
+
 /*
  * By the time we get here, we already hold the mm semaphore
  *
@@ -4435,6 +4444,10 @@ static vm_fault_t __handle_mm_fault(struct vm_area_struct *vma,
 				pmd_migration_entry_wait(mm, vmf.pmd);
 			return 0;
 		}
+
+		if (flags & FAULT_FLAG_PAGE_SPLIT)
+			return handle_split_page_fault(&vmf);
+
 		if (pmd_trans_huge(orig_pmd) || pmd_devmap(orig_pmd)) {
 			if (pmd_protnone(orig_pmd) && vma_is_accessible(vma))
 				return do_huge_pmd_numa_page(&vmf, orig_pmd);

From patchwork Fri Apr 30 12:37:57 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233307
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id B8517C433B4
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:43 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 9427461477
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:43 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232513AbhD3Mk3 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:40:29 -0400
Received: from mail-bn8nam12on2074.outbound.protection.outlook.com
 ([40.107.237.74]:41101
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232619AbhD3MkH (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:40:07 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Ir0wQnPOy/aENO2abSSt7JTOXNQMPRFe26yyko3aOxXXcOeMhCxVyWUgEy18e72LMm0Uh3SyVf74RaoJdT/kz1KHnLHKAQU/0s6LtxpU0ZWZJBnTrL/QYPwqytIym9zNNnBbDcgf6isA0lu5oh0OxJk0G5vljBMNO2ywYq6QTMbXuPaPEFyHR5oitEb1l9N3Nwk40nMXfCLkB36RfRZyDhwgnKgqnzBB6aCMv4H1g2DfEDxrHrlNpixbLNR2MlpE9FEf4+P1mH2dv2coWPiSCwVDqt+P6nuqNfPzMUx5AhUgkLAgcCFCUEpfozkmAw+MuE9ifSk0x8FM67+4noqrfQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=HZ6Bw8lrIRwS2WUrmh5XBCQ5mWYqcrqWepkePO899xY=;
 b=SmSR3sn+mAQp+GZ3f5U8CKadK/Jnc+iHZnSRI5mLTemtux1ozEG1pmgBzU+chvL/VxdqlOtCRlKnz6GN8YmT/6h2u7zErTdUhNtzJPEYW+QldL46eQdabTlDr0HoZ76mRmqd38lE4Xa7zrmNu5ZG9fqzqkyYwlQj5WJk+VmRqkRj/BIAPmM2+08+9IRJAHF5lbk4QQE1G80HJPWmB0mQbGcfyvh2e1L9tdTgvA6u4tt+vrDosxQ3jxbtdIedzVL7CRI/mpAAJaokvbB0vOoEulJFVP/yvN0NlmWM8RawZHs3S0GBH/0DjFZsl1n2wihlgavePAVn5Rf9zY+i2jdcXQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=HZ6Bw8lrIRwS2WUrmh5XBCQ5mWYqcrqWepkePO899xY=;
 b=Zhjq4hUETM45XLDzA0dmM4QOqX7mQAQA77Bea1jtB74zW4rO2vl4PfgAPsvLtcQ3rGtoXu7vsALgggbOebBsPnwrvqDHG/MX3JH2rrvnnR0x3VxlCi2RrJfmBNxXCHjGOiDhokOT7Wce6ykJ4467GtiiMOWAAAjYndxxus7cMWs=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:02 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:02 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 12/37] crypto:ccp: Define the SEV-SNP commands
Date: Fri, 30 Apr 2021 07:37:57 -0500
Message-Id: <20210430123822.13825-13-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:01 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: dd128264-08c3-4764-9ad8-08d90bd4ef22
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB2832508A8B1E76F3293C30A7E55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:7219;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 kvs9oIm7oEUnMC7WnuZm03skXDWtg9ZF0obw8rEmrizUsPIdaGSZtP1nCnIwY1Eluz9X04NR8Xu+kGx8wyLj1MuL2g+hfTIrIFFC7uaeMUwwjY0KPEGeAG8u65h7qicHT/AukXndg/6gImKE8TiIBXFdz3FmPhBZlem/IDyt/feFMNrxBTFQO7O8Z4VcuBPi33dnkS2r+JQdHpzlJ8ezFsPIApz/KSHs9NfPEOJJXvYdn8X6UNB0inni34LOonVZa5yEwdyfgyWKZTO+QbThZgcF7Fu0fi+1rmOm2hYY8eLA46/TOqLz+kL6LrJbpGbp8RUKzl/qXM0hAetUYWcd2paYPZrZyCaLua9tL5DtdDTuCb5Ix61Q7aOUnp3dc0kngnK2a6sKl9DwEAkxuAKSdqi8IVrpl+UsP2zeJ4Np6uzYhRZm5dMau6L67rK+yNYpv5eRplOGFZfUTwQ6ylL+J89XC6X7U/nybrJ5ZRGBKD/h7xL+L77fi/18PFSk3nL1nuR3lXuhU2cTzXVC1c45QqUyTnaFWJVdaqXzAgZMulwXWg74otewqUUbpkmeOButwy7FS4ErluwjYN3An+7Sk4Z7R/KEJnUutYRwKfUudnp2vZIODM7LSUkyBvejNDJFHL2zN5UN2+w5tot+qMBZnQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(6666004)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(30864003)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 YSXLaK7eyDmowTMEpADwbT41h5cFDKIR+6OQ0q62uIgd8mtSZPXGWgEWM9oJBe8zNYHFwbPS05wODDG/bBC5sIraBDNk3SmhDvqt7zv74PRlpXqB570q9/zNPeC42HgCSdmMyjYT9npYYc+iVtDJWh8+eKCWhXCiPUpGiE3ikIhBa1XWHu0iHCSygQEPG2z7Arez/KLSfCvOvlFAqFQZGrVMfvnorNeglo8OLqP9QOlGONU0Ahebt2czDq7zvkWj1cY/zDFJv0vGl2glO1qhlXpmcobJd2KBwqAhhB1ekBZTPA3D/y+5lByfTZNCqpZIswZ6TXmbOuejicnpl7mxUt+arYe6HbzgGqfBsRNZL2XDJkrp+oLQL2redNiF0Fq5vwG1ieU3zZ+SV0gnx3L7SasVA58QIlx4F0G5zRckTkClAgfm7UpGc6dDfnfVSL/nq/+Fl9qgGg0CzGNdW0fiY2bHoReTiprP6XIfnNS42NDETM37mwzmLNSDRwf5txCUanbzyq4c4aAJtGnfE5w5DKj+zDeD6Eooidi3ygoBrW8EO7fKDHfMbdybMXCPYpZpYMApdUYJAngM0uOu3u/Vftgjoy4qqVeCyEcgsagRTvy+6PylHIrUBQxU/OTXsB24WZCDG42kBKPX7bBxO7gZH+mlI2NRbLPAw40mlvNouk8o/ADnTBYtxgY1kQwIsHrEEVTDJLXla4TdjFMZfITxGIIYFxeIkRgI98QumyAXpmIhmgTcjF6sjVL4cXWEQwaltX9zqD+5WzVP4FBaCuyan9Db7FnEBPIpSXl9yktZY++98eaBv8kYJQhLEId4cu/EWL65HdKhqjkmA+brkFn01hcQeQI65PpLJYWdyDyvlUsdP8E21r+tjJMsGn7aKyPBbtrGEuFLL3VLHnPqsQ8LlYNuCBmNggvNJVQjP9wvIDKxaPXaFSRJX/AWEq6gZrM4CYHxl1P4CrEDQYb4+5HVSkiwjIXdWppow8BjknZsKACQDIkiANp8MLX+SEROUuIS5eOt9yvNsPMt4d9+Zej17/uz39YkfINVaygze+y2b73r4YpfDcWvZF7QEjIXXSBhueUyrWKN3wkm4Uo+q0D6fpMEwsYRWJcLd6kg1/uKzQ7NHwN+6d+ax/qWGN86qN80x+eTyBseJtH0R0dPJeK/DIEFVCj3pWwr1meVrOjte+qiRTV1L8X7vxiXYG/oaQgYwQjfA1dLhLA2a6v+cdPX/rvJ1VPmErSPGc8Ks2M5xO5+lUa9eglbe5RyloftwRtBjV2nUlCx9PstvGJFQoshCXpZGyAO9zsWMM3qLrPzhYZHIQLC7rnp2eBscKuE4MEU
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 dd128264-08c3-4764-9ad8-08d90bd4ef22
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:02.5009
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 8CpG343kGEOXwvc3EwsTPfaUY3Lp3ofJ5AXu/rwCMtZLtMcpB8udbhZA6+v4j+q202dtgXLHqSQX7+lGaF9imA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

AMD introduced the next generation of SEV called SEV-SNP (Secure Nested
Paging). SEV-SNP builds upon existing SEV and SEV-ES functionality
while adding new hardware security protection.

Define the commands and structures used to communicate with the AMD-SP
when creating and managing the SEV-SNP guests. The SEV-SNP firmware spec
is available at developer.amd.com/sev.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 drivers/crypto/ccp/sev-dev.c |  16 ++-
 include/linux/psp-sev.h      | 222 +++++++++++++++++++++++++++++++++++
 include/uapi/linux/psp-sev.h |  44 +++++++
 3 files changed, 281 insertions(+), 1 deletion(-)

diff --git a/drivers/crypto/ccp/sev-dev.c b/drivers/crypto/ccp/sev-dev.c
index 6ee703176049..09d117b99bf5 100644
--- a/drivers/crypto/ccp/sev-dev.c
+++ b/drivers/crypto/ccp/sev-dev.c
@@ -129,7 +129,21 @@ static int sev_cmd_buffer_len(int cmd)
 	case SEV_CMD_DOWNLOAD_FIRMWARE:		return sizeof(struct sev_data_download_firmware);
 	case SEV_CMD_GET_ID:			return sizeof(struct sev_data_get_id);
 	case SEV_CMD_ATTESTATION_REPORT:	return sizeof(struct sev_data_attestation_report);
-	case SEV_CMD_SEND_CANCEL:			return sizeof(struct sev_data_send_cancel);
+	case SEV_CMD_SEND_CANCEL:		return sizeof(struct sev_data_send_cancel);
+	case SEV_CMD_SNP_GCTX_CREATE:		return sizeof(struct sev_data_snp_gctx_create);
+	case SEV_CMD_SNP_LAUNCH_START:		return sizeof(struct sev_data_snp_launch_start);
+	case SEV_CMD_SNP_LAUNCH_UPDATE:		return sizeof(struct sev_data_snp_launch_update);
+	case SEV_CMD_SNP_ACTIVATE:		return sizeof(struct sev_data_snp_activate);
+	case SEV_CMD_SNP_DECOMMISSION:		return sizeof(struct sev_data_snp_decommission);
+	case SEV_CMD_SNP_PAGE_RECLAIM:		return sizeof(struct sev_data_snp_page_reclaim);
+	case SEV_CMD_SNP_GUEST_STATUS:		return sizeof(struct sev_data_snp_guest_status);
+	case SEV_CMD_SNP_LAUNCH_FINISH:		return sizeof(struct sev_data_snp_launch_finish);
+	case SEV_CMD_SNP_DBG_DECRYPT:		return sizeof(struct sev_data_snp_dbg);
+	case SEV_CMD_SNP_DBG_ENCRYPT:		return sizeof(struct sev_data_snp_dbg);
+	case SEV_CMD_SNP_PAGE_UNSMASH:		return sizeof(struct sev_data_snp_page_unsmash);
+	case SEV_CMD_SNP_PLATFORM_STATUS:	return sizeof(struct sev_data_snp_platform_status_buf);
+	case SEV_CMD_SNP_GUEST_REQUEST:		return sizeof(struct sev_data_snp_guest_request);
+	case SEV_CMD_SNP_CONFIG:		return sizeof(struct sev_data_snp_config);
 	default:				return 0;
 	}
 
diff --git a/include/linux/psp-sev.h b/include/linux/psp-sev.h
index d48a7192e881..c3755099ab55 100644
--- a/include/linux/psp-sev.h
+++ b/include/linux/psp-sev.h
@@ -85,6 +85,34 @@ enum sev_cmd {
 	SEV_CMD_DBG_DECRYPT		= 0x060,
 	SEV_CMD_DBG_ENCRYPT		= 0x061,
 
+	/* SNP specific commands */
+	SEV_CMD_SNP_INIT		= 0x81,
+	SEV_CMD_SNP_SHUTDOWN		= 0x82,
+	SEV_CMD_SNP_PLATFORM_STATUS	= 0x83,
+	SEV_CMD_SNP_DF_FLUSH		= 0x84,
+	SEV_CMD_SNP_INIT_EX		= 0x85,
+	SEV_CMD_SNP_DECOMMISSION	= 0x90,
+	SEV_CMD_SNP_ACTIVATE		= 0x91,
+	SEV_CMD_SNP_GUEST_STATUS	= 0x92,
+	SEV_CMD_SNP_GCTX_CREATE		= 0x93,
+	SEV_CMD_SNP_GUEST_REQUEST	= 0x94,
+	SEV_CMD_SNP_ACTIVATE_EX		= 0x95,
+	SEV_CMD_SNP_LAUNCH_START	= 0xA0,
+	SEV_CMD_SNP_LAUNCH_UPDATE	= 0xA1,
+	SEV_CMD_SNP_LAUNCH_FINISH	= 0xA2,
+	SEV_CMD_SNP_DBG_DECRYPT		= 0xB0,
+	SEV_CMD_SNP_DBG_ENCRYPT		= 0xB1,
+	SEV_CMD_SNP_PAGE_SWAP_OUT	= 0xC0,
+	SEV_CMD_SNP_PAGE_SWAP_IN	= 0xC1,
+	SEV_CMD_SNP_PAGE_MOVE		= 0xC2,
+	SEV_CMD_SNP_PAGE_MD_INIT	= 0xC3,
+	SEV_CMD_SNP_PAGE_MD_RECLAIM	= 0xC4,
+	SEV_CMD_SNP_PAGE_RO_RECLAIM	= 0xC5,
+	SEV_CMD_SNP_PAGE_RO_RESTORE	= 0xC6,
+	SEV_CMD_SNP_PAGE_RECLAIM	= 0xC7,
+	SEV_CMD_SNP_PAGE_UNSMASH	= 0xC8,
+	SEV_CMD_SNP_CONFIG		= 0xC9,
+
 	SEV_CMD_MAX,
 };
 
@@ -510,6 +538,200 @@ struct sev_data_attestation_report {
 	u32 len;				/* In/Out */
 } __packed;
 
+/**
+ * struct sev_data_snp_platform_status_buf - SNP_PLATFORM_STATUS command params
+ *
+ * @address: physical address where the status should be copied
+ */
+struct sev_data_snp_platform_status_buf {
+	u64 status_paddr;			/* In */
+} __packed;
+
+/**
+ * struct sev_data_snp_download_firmware - SNP_DOWNLOAD_FIRMWARE command params
+ *
+ * @address: physical address of firmware image
+ * @len: len of the firmware image
+ */
+struct sev_data_snp_download_firmware {
+	u64 address;				/* In */
+	u32 len;				/* In */
+} __packed;
+
+/**
+ * struct sev_data_snp_gctx_create - SNP_GCTX_CREATE command params
+ *
+ * @gctx_paddr: system physical address of the page donated to firmware by
+ *		the hypervisor to contain the guest context.
+ */
+struct sev_data_snp_gctx_create {
+	u64 gctx_paddr;				/* In */
+} __packed;
+
+/**
+ * struct sev_data_snp_activate - SNP_ACTIVATE command params
+ *
+ * @gctx_paddr: system physical address guest context page
+ * @asid: ASID to bind to the guest
+ */
+struct sev_data_snp_activate {
+	u64 gctx_paddr;				/* In */
+	u32 asid;				/* In */
+} __packed;
+
+/**
+ * struct sev_data_snp_decommission - SNP_DECOMMISSION command params
+ *
+ * @address: system physical address guest context page
+ */
+struct sev_data_snp_decommission {
+	u64 gctx_paddr;				/* In */
+} __packed;
+
+/**
+ * struct sev_data_snp_launch_start - SNP_LAUNCH_START command params
+ *
+ * @gctx_addr: system physical address of guest context page
+ * @policy: guest policy
+ * @ma_gctx_addr: system physical address of migration agent
+ * @imi_en: launch flow is launching an IMI for the purpose of
+ *   guest-assisted migration.
+ * @ma_en: the guest is associated with a migration agent
+ */
+struct sev_data_snp_launch_start {
+	u64 gctx_paddr;				/* In */
+	u64 policy;				/* In */
+	u64 ma_gctx_paddr;			/* In */
+	u32 ma_en:1;				/* In */
+	u32 imi_en:1;				/* In */
+	u32 rsvd:30;
+	u8 gosvw[16];				/* In */
+} __packed;
+
+/* SNP support page type */
+enum {
+	SNP_PAGE_TYPE_NORMAL		= 0x1,
+	SNP_PAGE_TYPE_VMSA		= 0x2,
+	SNP_PAGE_TYPE_ZERO		= 0x3,
+	SNP_PAGE_TYPE_UNMEASURED	= 0x4,
+	SNP_PAGE_TYPE_SECRET		= 0x5,
+	SNP_PAGE_TYPE_CPUID		= 0x6,
+
+	SNP_PAGE_TYPE_MAX
+};
+
+/**
+ * struct sev_data_snp_launch_update - SNP_LAUNCH_UPDATE command params
+ *
+ * @gctx_addr: system physical address of guest context page
+ * @imi_page: indicates that this page is part of the IMI of the guest
+ * @page_type: encoded page type
+ * @page_size: page size 0 indicates 4K and 1 indicates 2MB page
+ * @address: system physical address of destination page to encrypt
+ * @vmpl3_perms: VMPL permission mask for VMPL3
+ * @vmpl2_perms: VMPL permission mask for VMPL2
+ * @vmpl1_perms: VMPL permission mask for VMPL1
+ */
+struct sev_data_snp_launch_update {
+	u64 gctx_paddr;				/* In */
+	u32 page_size:1;			/* In */
+	u32 page_type:3;			/* In */
+	u32 imi_page:1;				/* In */
+	u32 rsvd:27;
+	u32 rsvd2;
+	u64 address;				/* In */
+	u32 rsvd3:8;
+	u32 vmpl3_perms:8;			/* In */
+	u32 vmpl2_perms:8;			/* In */
+	u32 vmpl1_perms:8;			/* In */
+	u32 rsvd4;
+} __packed;
+
+/**
+ * struct sev_data_snp_launch_finish - SNP_LAUNCH_FINISH command params
+ *
+ * @gctx_addr: system pphysical address of guest context page
+ */
+struct sev_data_snp_launch_finish {
+	u64 gctx_paddr;
+	u64 id_block_paddr;
+	u64 id_auth_paddr;
+	u8 id_block_en:1;
+	u8 auth_key_en:1;
+	u64 rsvd:62;
+	u8 host_data[32];
+} __packed;
+
+/**
+ * struct sev_data_snp_guest_status - SNP_GUEST_STATUS command params
+ *
+ * @gctx_paddr: system physical address of guest context page
+ * @address: system physical address of guest status page
+ */
+struct sev_data_snp_guest_status {
+	u64 gctx_paddr;
+	u64 address;
+} __packed;
+
+/**
+ * struct sev_data_snp_page_reclaim - SNP_PAGE_RECLAIM command params
+ *
+ * @paddr: system physical address of page to be claimed. The BIT0 indicate
+ *	the page size. 0h indicates 4 kB and 1h indicates 2 MB page.
+ */
+struct sev_data_snp_page_reclaim {
+	u64 paddr;
+} __packed;
+
+/**
+ * struct sev_data_snp_page_unsmash - SNP_PAGE_UNMASH command params
+ *
+ * @paddr: system physical address of page to be unmashed. The BIT0 indicate
+ *	the page size. 0h indicates 4 kB and 1h indicates 2 MB page.
+ */
+struct sev_data_snp_page_unsmash {
+	u64 paddr;
+} __packed;
+
+/**
+ * struct sev_data_dbg - DBG_ENCRYPT/DBG_DECRYPT command parameters
+ *
+ * @handle: handle of the VM to perform debug operation
+ * @src_addr: source address of data to operate on
+ * @dst_addr: destination address of data to operate on
+ * @len: len of data to operate on
+ */
+struct sev_data_snp_dbg {
+	u64 gctx_paddr;				/* In */
+	u64 src_addr;				/* In */
+	u64 dst_addr;				/* In */
+	u32 len;				/* In */
+} __packed;
+
+/**
+ * struct sev_snp_guest_request - SNP_GUEST_REQUEST command params
+ *
+ * @gctx_paddr: system physical address of guest context page
+ * @req_paddr: system physical address of request page
+ * @res_paddr: system physical address of response page
+ */
+struct sev_data_snp_guest_request {
+	u64 gctx_paddr;				/* In */
+	u64 req_paddr;				/* In */
+	u64 res_paddr;				/* In */
+} __packed;
+
+/**
+ * struuct sev_data_snp_init - SNP_INIT_EX structure
+ *
+ * @init_rmp: indicate that the RMP should be initialized.
+ */
+struct sev_data_snp_init_ex {
+	u32 init_rmp:1;
+	u32 rsvd:31;
+	u8 rsvd1[60];
+} __packed;
+
 #ifdef CONFIG_CRYPTO_DEV_SP_PSP
 
 /**
diff --git a/include/uapi/linux/psp-sev.h b/include/uapi/linux/psp-sev.h
index 91b4c63d5cbf..f6d02d4dd014 100644
--- a/include/uapi/linux/psp-sev.h
+++ b/include/uapi/linux/psp-sev.h
@@ -28,6 +28,8 @@ enum {
 	SEV_PEK_CERT_IMPORT,
 	SEV_GET_ID,	/* This command is deprecated, use SEV_GET_ID2 */
 	SEV_GET_ID2,
+	SNP_PLATFORM_STATUS,
+	SNP_CONFIG,
 
 	SEV_MAX,
 };
@@ -61,6 +63,13 @@ typedef enum {
 	SEV_RET_INVALID_PARAM,
 	SEV_RET_RESOURCE_LIMIT,
 	SEV_RET_SECURE_DATA_INVALID,
+	SEV_RET_INVALID_PAGE_SIZE,
+	SEV_RET_INVALID_PAGE_STATE,
+	SEV_RET_INVALID_MDATA_ENTRY,
+	SEV_RET_INVALID_PAGE_OWNER,
+	SEV_RET_INVALID_PAGE_AEAD_OFLOW,
+	SEV_RET_RMP_INIT_REQUIRED,
+
 	SEV_RET_MAX,
 } sev_ret_code;
 
@@ -147,6 +156,41 @@ struct sev_user_data_get_id2 {
 	__u32 length;				/* In/Out */
 } __packed;
 
+/**
+ * struct sev_data_snp_platform_status - Platform status
+ *
+ * @major: API major version
+ * @minor: API minor version
+ * @state: current platform state
+ * @build: firmware build id for the API version
+ * @guest_count: the number of guest currently managed by the firmware
+ * @tcb_version: current TCB version
+ */
+struct sev_user_snp_status {
+	__u8 api_major;		/* Out */
+	__u8 api_minor;		/* Out */
+	__u8 state;		/* Out */
+	__u8 rsvd;
+	__u32 build_id;		/* Out */
+	__u32 rsvd1;
+	__u32 guest_count;	/* Out */
+	__u64 tcb_version;	/* Out */
+	__u64 rsvd2;
+} __packed;
+
+/**
+ * struct sev_data_snp_config - system wide configuration value for SNP.
+ *
+ * @reported_tcb: The TCB version to report in the guest attestation report.
+ * @mask_chip_id: Indicates that the CHID_ID field in the attestation report
+ *  will always be zero.
+ */
+struct sev_data_snp_config {
+	__u64 reported_tcb;	/* In */
+	__u32 mask_chip_id;	/* In */
+	__u8 rsvd[52];
+} __packed;
+
 /**
  * struct sev_issue_cmd - SEV ioctl parameters
  *

From patchwork Fri Apr 30 12:37:58 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233309
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 0EE8EC433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:45 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id DEACF6147D
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:44 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232667AbhD3Mkb (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:40:31 -0400
Received: from mail-bn8nam12on2044.outbound.protection.outlook.com
 ([40.107.237.44]:33505
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232621AbhD3MkH (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:40:07 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=CTyUm2miM+AwaRQ8zbKP4Q4/xtnzSz9vSkvP5sInDG+NUfAJgMVuaNlaIXPJzjvyR1SpRhk5v37G15KEIpM8J8fC70sEv0VDlCtLHWI+Wjj4LxAtWReRc3ZGg+zt2qbEVhD90RmYJxli5n6vdrSEu60U7W7M59IJsgimngwdqUcJ0vNk8GCAcJk6hEf2VAyqXSDdtPFR7Tip+JNHceIZIAypEWHqNe9uLkz/fBzJfnQ9lGMLeHJqFJXEXZY8QC3Uc44BY2XmxDlcPi8o/+h/5+vzPR28aEouZfpeznTbVqlAI62GxCNpEgAu2UsW/ISLL5cPQjzNzNflcHav0jw0Kg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=RSvLT5c4c8Rex9ju7Ee2TBu8M+BEnYf3VBY0VkT0DCY=;
 b=Zt8L2C192vmfxLkwtw+37yqdDqZnL6hCw201xadbCLFAm2fH/wHP7PKs2kYNGFg5XKNPGl6fafrVOMv9TN0A+mnbGm9MA3sLdzDVVP9P5xDtYOY+sJXPl4EF5GZVqAyU47XhsPGyV95hfGWirJyXpimisJT4hukLGDjTdVjwlXUFiJ0LaR+wu9C1DLT3JOW0pa/mf4V6uW+Jp/14igHNPs0BmyusFE6pweNhlnJvVetsvQKAQRlARqyEN0CMWaxtHdVgiNWLeivqZIDEhVJxA/nrMdpxLKqiWBXfBwhmuMyGG0Qt0loyk1ml46HWoYVvxc470AJ01bHq3lcFOCjMNw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=RSvLT5c4c8Rex9ju7Ee2TBu8M+BEnYf3VBY0VkT0DCY=;
 b=dt3G/7Y07c4JHJoCm60G6N6y1cIxdZlQaw4UifogPeKR8zCwFnWclicXpzBIEYzNtGc5yC32aA5yURBkK5e0/TVl9DIk35mlxNqEEOUum4+uUVP+O7fl73XD1NW2xQabZXh9N7uH9pMMOtiCA+RDJymMVuaJUvvJEgUxX2NhhZQ=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:03 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:03 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 13/37] crypto: ccp: Add support to initialize the
 AMD-SP for SEV-SNP
Date: Fri, 30 Apr 2021 07:37:58 -0500
Message-Id: <20210430123822.13825-14-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:02 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: b7516c5e-a1bb-4785-1c2c-08d90bd4efa9
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB28325719598CF6C12E15F062E55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:7691;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 dlnj5p24ANdQP3gk66up4XD82XptTtwPKAvJV12sY73p5r+UmG6NkDH7NDyXN233Y+Ip8vKXZ7eL2jOBK1x2Kh+SXOEQV+gNhgqEOHZ4wn/CebcKkbT3G6Lbek4hDW+qGiTEfqpihMjYMjNLZ1FbppDmh+84NZRFfPWiy+210irjg30J1GICMgkqdQ5gXPHhnnRhXOEF3UuYdA+uzBDbYY4xJDccVyB/HH1deUeTvA4hrZY0GmrnX07R8u7C+OiRHRarKtp7V17GXpqWPyCxNtKjox+s+dd1cT8OfVa8uKuUP4gDPsjbPFls6DJIrq0/6H+E1x0VCMa6cQq8Jh9/vgy+q0WiEOoG5/wqsYNCny0D+fLIhmqz9ZUxm1SlaW5I7CmwJ1xva1k4lVF2mj1MklilTM1C1IeI6WTuEvOvSkLqSDvn6+MgzS0TugcfNRYx/u4kb+hdbLxdzN/U8uNjo2PsSCOU/dlptcv7lMJBO78WAOr8VbQWVYHTHgSBpx5+lXOxsNGYIEhVxLDYDd/YTQzHp6uv5NBIGEOi7Ww5s8HQ+1rfpD0L6RQJGQ1FBNqcyZhWFFw6j4ULSLWQ6v24FkEh5PZuJM+C1oE9SZ4POVITDqmscCrF8aaeffaidUseXW0yODX0RMjHGpSBBhLBtwNFm0v70SqC8uimx+g6h/5tCMi+pT/q5p6A/jnc5hlt
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(6666004)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(83380400001)(86362001)(38350700002)(134885004);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 1RbICn2AeONVTon9dKXJfPQ7CwURv8iSrGI3txhmQOUu+TIf6UNOHCDxZZ8zx0zuz1co4ug3m5glU3zkwtp2Vzs7jvTXeevtakMEeTyR1wr6RZE3lS1JMW5+lyuX5mGOKgNHEv5C2CzyYyZA6K49MIHmWa+f2oyKtd5b7H6lSZXSJEbhmYkg3/4F9HH0mO8RNwQrfywQdLZIr+BF9Bn9WKjFR3KlKuyymcqtCDC6ur5IUrFPoVKjhU684zgXbKbs7zMH4NSDUeZdXLWGOI8IQW2ky++J+krR/tmw/axDe0wA56ykjpWFvkk/pt/zFDJCuk4SbTPqeSRwg1aRJa5ExKylGPlFjuoQ26IkI0fjMjMWX+GmMXPRqs4X08zLXDYtuOKvanO594N94uNCJaO3fs0FmpZJgUKBom7J08jqPASm/b8pJ1W90FTPNU0jb2zu7b/1tyujz1QM5QJXFShlZLcFUdtCi3BYla6AYFP459N4YiTBgByL/F4xvdEj9eUii5CAAHg2KI+2RHh85b5Cs1VMEBq6Tu3OFa5Fn1FvYaNdtfaazrBvmQiLuvhetcFYNINmS5sxbUVy2weCv+aXYLb2g2UuJNY4KawgklASuW8h+GSLpim83TJ6LGB0w7Qr83ctkkulUsXeCeuauIQXH9rsAMjKxwrmVgHDIN5Gry5AnAMB7bavxftQ4DJAedz3t/GYKPMbA8OfwMWY44NNh1wF3N5xPt7sA8+hw/BhEiBWoCKhQy6eiHnaqy1nLxmXCFQNFKLEid0Ajd4OEe+awsouLMaWfQj+OzlrI22xHTDOr5BCyKZdZZt4snHNG9KD5t8Jtx9cMTC2Gv9t92IkNhee5NDdmHP8MlGU2APem98A/ZDlojz74RARL8m3mxn7Ytj78+K8EKySSJTgv8omxrNpWFr4ehFNkTkTNXSfOa6if2lht6G98a/XVsBt1JQR8ttcDtYYiqjrcwPMRl8v/h2LSPvThdTYfo+Na/3iVl5dorPC9c2Sot9xeNuFeS6oD1TWXF+f0n1LudjypQZP1QF+f3euQfhsKvJsKZ7riX40T+j6xPX3rIrTifqv9Row/GP4IP8K8R7QVqPiC3bS8sRsB/H4YMsnrUccJjo46tNz6djEYnzaKqZxcPt4ru9+Q45BL9b7pI6QHU7UTMDqdWoSSLCp2xPz68hdoPD+J/0Oag20AmcBeElOOhyNZ05OMFWLFAg4DajsVlit40JXSf7qu39N1/RIdZWGhVLQxFbj4EuvcODMkB5enjCIRvdjdd4f+frIcKhgGkSRkD7F9UgGOM5zuC48h+pADHKMShDCHnpuxB4KL/jbgYWzobtG
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 b7516c5e-a1bb-4785-1c2c-08d90bd4efa9
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:03.3174
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 srTKXhwqqt5hXPP72q381uN8JsLbmzrrJhPCV4IdnSqbim06iI/6nuZgCzB2dEWM1UkzvtAKkzoLroilfqZDvg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Before SNP VMs can be launched, the platform must be appropriately
configured and initialized. Platform initialization is accomplished via
the SNP_INIT command.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 drivers/crypto/ccp/sev-dev.c | 107 ++++++++++++++++++++++++++++++++++-
 drivers/crypto/ccp/sev-dev.h |   2 +
 include/linux/psp-sev.h      |  16 ++++++
 3 files changed, 123 insertions(+), 2 deletions(-)

diff --git a/drivers/crypto/ccp/sev-dev.c b/drivers/crypto/ccp/sev-dev.c
index 09d117b99bf5..852bbeac1019 100644
--- a/drivers/crypto/ccp/sev-dev.c
+++ b/drivers/crypto/ccp/sev-dev.c
@@ -590,6 +590,92 @@ static int sev_update_firmware(struct device *dev)
 	return ret;
 }
 
+static void snp_set_hsave_pa(void *arg)
+{
+	wrmsrl(MSR_VM_HSAVE_PA, 0);
+}
+
+static int __sev_snp_init_locked(int *error)
+{
+	struct psp_device *psp = psp_master;
+	struct sev_device *sev;
+	int rc = 0;
+
+	if (!psp || !psp->sev_data)
+		return -ENODEV;
+
+	sev = psp->sev_data;
+
+	if (sev->snp_inited)
+		return 0;
+
+	/* SNP_INIT requires the MSR_VM_HSAVE_PA must be set to 0h across all cores. */
+	on_each_cpu(snp_set_hsave_pa, NULL, 1);
+
+	/* Prepare for first SEV guest launch after INIT */
+	wbinvd_on_all_cpus();
+
+	/* Issue the SNP_INIT firmware command. */
+	rc = __sev_do_cmd_locked(SEV_CMD_SNP_INIT, NULL, error);
+	if (rc)
+		return rc;
+
+	sev->snp_inited = true;
+	dev_dbg(sev->dev, "SEV-SNP firmware initialized\n");
+
+	return rc;
+}
+
+int sev_snp_init(int *error)
+{
+	int rc;
+
+	if (!cpu_feature_enabled(X86_FEATURE_SEV_SNP))
+		return -ENODEV;
+
+	mutex_lock(&sev_cmd_mutex);
+	rc = __sev_snp_init_locked(error);
+	mutex_unlock(&sev_cmd_mutex);
+
+	return rc;
+}
+EXPORT_SYMBOL_GPL(sev_snp_init);
+
+static int __sev_snp_shutdown_locked(int *error)
+{
+	struct sev_device *sev = psp_master->sev_data;
+	int ret;
+
+	if (!sev->snp_inited)
+		return 0;
+
+	ret = __sev_do_cmd_locked(SEV_CMD_SNP_SHUTDOWN, NULL, error);
+	if (ret)
+		return ret;
+
+	wbinvd_on_all_cpus();
+
+	ret = __sev_do_cmd_locked(SEV_CMD_SNP_DF_FLUSH, NULL, error);
+	if (ret)
+		dev_err(sev->dev, "SEV-SNP firmware DF_FLUSH failed\n");
+
+	sev->snp_inited = false;
+	dev_dbg(sev->dev, "SEV-SNP firmware shutdown\n");
+
+	return ret;
+}
+
+static int sev_snp_shutdown(int *error)
+{
+	int rc;
+
+	mutex_lock(&sev_cmd_mutex);
+	rc = __sev_snp_shutdown_locked(NULL);
+	mutex_unlock(&sev_cmd_mutex);
+
+	return rc;
+}
+
 static int sev_ioctl_do_pek_import(struct sev_issue_cmd *argp, bool writable)
 {
 	struct sev_device *sev = psp_master->sev_data;
@@ -1089,6 +1175,21 @@ void sev_pci_init(void)
 			 "SEV: TMR allocation failed, SEV-ES support unavailable\n");
 	}
 
+	/*
+	 * If boot CPU supports the SNP, then let first attempt to initialize
+	 * the SNP firmware.
+	 */
+	if (cpu_feature_enabled(X86_FEATURE_SEV_SNP)) {
+		rc = sev_snp_init(&error);
+		if (rc) {
+			/*
+			 * If we failed to INIT SNP then don't abort the probe.
+			 * Continue to initialize the legacy SEV firmware.
+			 */
+			dev_err(sev->dev, "SEV-SNP: failed to INIT error %#x\n", error);
+		}
+	}
+
 	/* Initialize the platform */
 	rc = sev_platform_init(&error);
 	if (rc && (error == SEV_RET_SECURE_DATA_INVALID)) {
@@ -1108,8 +1209,8 @@ void sev_pci_init(void)
 		return;
 	}
 
-	dev_info(sev->dev, "SEV API:%d.%d build:%d\n", sev->api_major,
-		 sev->api_minor, sev->build);
+	dev_info(sev->dev, "SEV%s API:%d.%d build:%d\n", sev->snp_inited ?
+		"-SNP" : "", sev->api_major, sev->api_minor, sev->build);
 
 	return;
 
@@ -1132,4 +1233,6 @@ void sev_pci_exit(void)
 			   get_order(SEV_ES_TMR_SIZE));
 		sev_es_tmr = NULL;
 	}
+
+	sev_snp_shutdown(NULL);
 }
diff --git a/drivers/crypto/ccp/sev-dev.h b/drivers/crypto/ccp/sev-dev.h
index 666c21eb81ab..186ad20cbd24 100644
--- a/drivers/crypto/ccp/sev-dev.h
+++ b/drivers/crypto/ccp/sev-dev.h
@@ -52,6 +52,8 @@ struct sev_device {
 	u8 build;
 
 	void *cmd_buf;
+
+	bool snp_inited;
 };
 
 int sev_dev_init(struct psp_device *psp);
diff --git a/include/linux/psp-sev.h b/include/linux/psp-sev.h
index c3755099ab55..1b53e8782250 100644
--- a/include/linux/psp-sev.h
+++ b/include/linux/psp-sev.h
@@ -748,6 +748,20 @@ struct sev_data_snp_init_ex {
  */
 int sev_platform_init(int *error);
 
+/**
+ * sev_snp_init - perform SEV SNP_INIT command
+ *
+ * @error: SEV command return code
+ *
+ * Returns:
+ * 0 if the SEV successfully processed the command
+ * -%ENODEV    if the SEV device is not available
+ * -%ENOTSUPP  if the SEV does not support SEV
+ * -%ETIMEDOUT if the SEV command timed out
+ * -%EIO       if the SEV returned a non-zero return code
+ */
+int sev_snp_init(int *error);
+
 /**
  * sev_platform_status - perform SEV PLATFORM_STATUS command
  *
@@ -855,6 +869,8 @@ sev_platform_status(struct sev_user_data_status *status, int *error) { return -E
 
 static inline int sev_platform_init(int *error) { return -ENODEV; }
 
+static inline int sev_snp_init(int *error) { return -ENODEV; }
+
 static inline int
 sev_guest_deactivate(struct sev_data_deactivate *data, int *error) { return -ENODEV; }
 

From patchwork Fri Apr 30 12:37:59 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233313
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id B606BC433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:40:18 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 8DCEA61468
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:40:18 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233145AbhD3MlE (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:41:04 -0400
Received: from mail-bn8nam12on2041.outbound.protection.outlook.com
 ([40.107.237.41]:60768
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232761AbhD3MkT (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:40:19 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=aGCO9A9lp2vRWb0pht09BQMq8vtlb3CAW58Tq5RVJDeMOR79TMifzrq023UhiArBeJ9Qq468j07KN58QopAIlNYfY816a5vi9ekcciZNQJ62uQEoQMvAJYFsVC7pfM9sF6iyguFtvMI3XDOGMX6NG48QBp5U9UPBFibMQ4BIcflqinqe9a1dvQj9ZZvLL1IFjT3tNjyNVEhYOvdmtYg8nAwIgN7Mss0loap7nUGmdAyccVTkd+j4rYJiZ7lxdPDsXO7FZKKGx9V3/vJcDus/K31iqS6Q1Sjlu8J+D2rauAwkyGmKgC7AdF4hFl8akuFZyD62BOrPf5HQw+B7dzF85Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=1w0L6EGb1S7ha7zRDf2sE/cGRpglkxWktLSVr9pwXjw=;
 b=XgbyeV7v3j4TxOoeGYTGMIRrMVfrWUg7nXsXStu62zJpaEsDDgHtMSC8cYaNlG/Bd+NGa96o0byiuPT0LmsCBev1waQxWJJOBoop6f5zyMwuzllL2px9TGxD/qFlZ2hOOu/za3m6r5Od+Vb4DyvnFF1olz/OA0vaH15lhfA9mJQO4osreqSExbRbnjZ+TrN2Ek1MwJpJIVBslGEjtGOEhsqMq54p2vM6bN9Pk5/3dyE4Y/lRSAfatf0aFEppQDqpnFnkgLpN4/Rk6AnrMBEojZo1kTh+8HRR9F3MsZ54UnYBqp9ls57CKxn9LQnMC1lU3HElAowtsMsJAaF6rhcrxA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=1w0L6EGb1S7ha7zRDf2sE/cGRpglkxWktLSVr9pwXjw=;
 b=VgJ8Kdfhpyg8H1nqWbXiNjJ/dskWAoYTr4m8gqppw441poYVK4Q8NZnUre7i0nbmtkp+mp0lJHV8uAf+eMDMjTC5oegLvsT9Bj+EaBPKQKbU43A0vZkpET/9bnYOJqfyec8LFKy+yTUcutNwmAFtYuHfYe9peXO5qFPTOWsEkHE=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:04 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:04 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 14/37] crypto: ccp: Shutdown SNP firmware on
 kexec
Date: Fri, 30 Apr 2021 07:37:59 -0500
Message-Id: <20210430123822.13825-15-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:03 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 1bc75369-9861-4247-6a4b-08d90bd4f023
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB283271DA53B1D663C8923F43E55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:5516;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 7yFO/99glprbPfT3WRb1ZGOEfQOD/svc5Ize7C7LlECqLfxDmEy+s73yPgzcHXN4VGxEwNd5f3pKsryuTDpb0P4zDMkN77gp7hmtvMoZTUccN1hMykbwRifDFInlHdOhxW0Xme+N3IEGYYkkljYAbXMDLseVtcfoW5ayhZH+fJdHSqKOvJecWevpDzSS2m6X3lYIp5Epj3EDT8XTboBZnnWMGHdIUF6gcpfUkuYKRuPCI89YQI52t7RQ3CiJ3KfcgUDp5FuL0mdr1D6euoxz3+zmxr+DfSARC0+shIOxHnDQ77o38FmX5zOi3P2kxyPTsdJJojgHkz1oOdVKTlThMb0g8Ei73LCazTFfl3vLMurDkr0dpJ3xy8Ho52jP2f7s47+Lw8UTTYPBrIjg7faAWnR3VuAzoBoVGfaBIV1zLBZcb4bVFdJDd25freXq1RQ5zhgMWNYygYGZC8d/qqu2aJxYX3gFaGzXTDR503xnWBIHX/IZ4NXL3+kNlyAbqmgYorTSF5bvEMSjIoQbWDd1rA2n4I/qy05VGk3bRfENe9NtbviuR9RlnG1Xk1z9gEPSb+hVbiWBn5f7KpidGm21J6tu5szOP04POrInkalVp6TfNe7fee4eOazTQ3oTdBQHOc8CvDvu8pWgroMMNvMt0Q==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(6666004)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 ey8MhoGcDaOkXCG0lrL3e1OOt3rahShbESBRwCevG5PbCQefb9OMaFhFIa9NkQiqig/nchGp0NYOic1nFgpBrYb7L1JwLH09yfgkkJ7umNymHapFjVrXPBdEyqiRScLGWu0OPnD0KUt2eZb50FLPlzt6Wq9TwFUOurDaJPofV1LAiDz//KL8aqONjvjzqb2PNndNO0OnjMW9EtYYiMjN6RNsom/IsW4iI3ACFEZ2CvyFvmwYoBRGgWzno49a+lFSv/7sJ0VR6zNzjSXZaqwZdfLq2lwf2W0xZSz4mcOeMyD5El9dg4dalr4QsVnOc7VYwKJAfn+rNXPogtCk3ppTbeEnFqTcQe6xciqqzTvIbZwGXsHF9zK7xiRRBuFzaSg8/GsXsvOeIMltw3ceOorD8k9pwV+cMc+HjP+NaTw8LyWZA0/dBSaluFZo2LJKe3kdjIV+bKOdatzFoL8rxnYsnr7ZIJtsF2XrG0WO42c60opQOJFkuQlEKdr9XmkPm5LiqiQrbI8eOFdza7cNN7RFuUJ8xFdKCcEP+jWVjeaHbK1FmAZS+Ly21+GQ94yb7UaGmDIauHAqRfau/334tG3/zKq5pkJNVEI5+o5yUOdEMJirH34OeF7GPlJZRxyN5yN3AcesN09r32YtWRi81DtP5SJw6HPZPGFywbLSzZ3hofGs452ncG9Q2W7nTqetpVpOuB2GKC/NBbGfqImS7siSE4lJxGsawEsNpj7S3XkO2+w6VcYS4sETy2zO/sJH7jDIyiu/UV/rhiFgKKay1nYsyxRxoE4jhgUk9o5ufP01o/d4L6YhNWUe/nCYsW++e/oyM5LCll/pOoa5lzUVzHPns+kxhBcpHQ0jPgz8Xg94HtUzfo+eNypxci13/6goJhQr+3by92epK069bGZ8l2986gryqU16MoJQ4o3ow/nVfK9eQaSYyg0k+/IORdl5MkUBJ0yAS9+7v/BIMzvc1Ew8nL0PDDHA86Sqd0foaLgGZTKhzr8cyWvfk85tPG/h3AmudyvuQUkGL9wg3Yr7s11xGG2dQa8t3kIbH+Seoh6UxSFmavnN8V3ndS/zxyPXjnSBr1o86arql0Mm5FX3vf+sH3VBr1002LJWqR4Qs/DsiPFLkUOWDnumQSzgmzLIr6fx610FMZkR3F7YSxwJj69KULOuN2Z3Yd8y2vJmQQOO2lSD4GH2TSlxhi0gClxwSoKhHWMxK8hKY8tPxhVZDMEFDwzQgUlG0/Kpi6DNis1NZPg00Pq8zIs4gCpl3AbNv1+g97hIFYxa7S/KMP9TsqTDtYMjx/vReJhVyQ9v0UshQkn9brRHhIibLR/lk7EeRM6U
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 1bc75369-9861-4247-6a4b-08d90bd4f023
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:04.1479
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 6e1vc0JpGJ+ppDDiDFw/2eiMoodDmGqyNdXUxL0fVJO7NnEi2PxTgPwfLkIlUGMXCgS8jCjz5jXntQpZgLSaQQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

When the kernel is getting ready to kexec, it calls the device_shutdown() to
allow drivers to cleanup before the kexec. If SEV firmware is initialized
then shut it down before kexec'ing the new kernel.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 drivers/crypto/ccp/sev-dev.c | 50 ++++++++++++++++--------------------
 drivers/crypto/ccp/sp-pci.c  | 12 +++++++++
 2 files changed, 34 insertions(+), 28 deletions(-)

diff --git a/drivers/crypto/ccp/sev-dev.c b/drivers/crypto/ccp/sev-dev.c
index 852bbeac1019..23ad6e7696df 100644
--- a/drivers/crypto/ccp/sev-dev.c
+++ b/drivers/crypto/ccp/sev-dev.c
@@ -1109,6 +1109,22 @@ int sev_dev_init(struct psp_device *psp)
 	return ret;
 }
 
+static void sev_firmware_shutdown(struct sev_device *sev)
+{
+	sev_platform_shutdown(NULL);
+
+	if (sev_es_tmr) {
+		/* The TMR area was encrypted, flush it from the cache */
+		wbinvd_on_all_cpus();
+
+		free_pages((unsigned long)sev_es_tmr,
+			   get_order(SEV_ES_TMR_SIZE));
+		sev_es_tmr = NULL;
+	}
+
+	sev_snp_shutdown(NULL);
+}
+
 void sev_dev_destroy(struct psp_device *psp)
 {
 	struct sev_device *sev = psp->sev_data;
@@ -1116,6 +1132,8 @@ void sev_dev_destroy(struct psp_device *psp)
 	if (!sev)
 		return;
 
+	sev_firmware_shutdown(sev);
+
 	if (sev->misc)
 		kref_put(&misc_dev->refcount, sev_exit);
 
@@ -1146,21 +1164,6 @@ void sev_pci_init(void)
 	if (sev_get_api_version())
 		goto err;
 
-	/*
-	 * If platform is not in UNINIT state then firmware upgrade and/or
-	 * platform INIT command will fail. These command require UNINIT state.
-	 *
-	 * In a normal boot we should never run into case where the firmware
-	 * is not in UNINIT state on boot. But in case of kexec boot, a reboot
-	 * may not go through a typical shutdown sequence and may leave the
-	 * firmware in INIT or WORKING state.
-	 */
-
-	if (sev->state != SEV_STATE_UNINIT) {
-		sev_platform_shutdown(NULL);
-		sev->state = SEV_STATE_UNINIT;
-	}
-
 	if (sev_version_greater_or_equal(0, 15) &&
 	    sev_update_firmware(sev->dev) == 0)
 		sev_get_api_version();
@@ -1220,19 +1223,10 @@ void sev_pci_init(void)
 
 void sev_pci_exit(void)
 {
-	if (!psp_master->sev_data)
-		return;
-
-	sev_platform_shutdown(NULL);
-
-	if (sev_es_tmr) {
-		/* The TMR area was encrypted, flush it from the cache */
-		wbinvd_on_all_cpus();
+	struct sev_device *sev = psp_master->sev_data;
 
-		free_pages((unsigned long)sev_es_tmr,
-			   get_order(SEV_ES_TMR_SIZE));
-		sev_es_tmr = NULL;
-	}
+	if (!sev)
+		return;
 
-	sev_snp_shutdown(NULL);
+	sev_firmware_shutdown(sev);
 }
diff --git a/drivers/crypto/ccp/sp-pci.c b/drivers/crypto/ccp/sp-pci.c
index f471dbaef1fb..9210bfda91a2 100644
--- a/drivers/crypto/ccp/sp-pci.c
+++ b/drivers/crypto/ccp/sp-pci.c
@@ -239,6 +239,17 @@ static int sp_pci_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	return ret;
 }
 
+static void sp_pci_shutdown(struct pci_dev *pdev)
+{
+	struct device *dev = &pdev->dev;
+	struct sp_device *sp = dev_get_drvdata(dev);
+
+	if (!sp)
+		return;
+
+	sp_destroy(sp);
+}
+
 static void sp_pci_remove(struct pci_dev *pdev)
 {
 	struct device *dev = &pdev->dev;
@@ -368,6 +379,7 @@ static struct pci_driver sp_pci_driver = {
 	.id_table = sp_pci_table,
 	.probe = sp_pci_probe,
 	.remove = sp_pci_remove,
+	.shutdown = sp_pci_shutdown,
 	.driver.pm = &sp_pci_pm_ops,
 };
 

From patchwork Fri Apr 30 12:38:00 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233317
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 3268DC43460
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:40:38 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 07CAA61468
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:40:38 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232827AbhD3MlZ (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:41:25 -0400
Received: from mail-bn8nam12on2074.outbound.protection.outlook.com
 ([40.107.237.74]:41101
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232829AbhD3Mk0 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:40:26 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=k6CCGhIh9gqKDLYyeHJzYkr2jCkpDadWtz6yd5nm9xDsKFG6akCxmSfoYNrOJ9fux7wJoYLYQYOdLaa+VdTKOHPGnusYowRrHzx1j9ZwR7idFdiwpYSlJKmM7S1VnzHSDWsEAc/1rGF9PEgspYdSmZJCr85QvcqbQOe3tk/niXnTFOizZMz/SMFA5B0dtrbbquNc8+6Aa+M8rB0DdzmSJruVEhchVsxa1zGPlZsjBtmgMEHg+j1SZOJK2DOfbHe3xBGHnXCb0eqEVKN6z/92CbtE/azVqLOuAebiHUg2EgSKn5mhFhEIc0JP6sa5fyS23us1SKBT7uleSHA7afG2MQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=1RT1+J9qLZY4BDfPR+RqA5g0B40GtvlEPYK5anVAg6c=;
 b=I57eKeettnH1Tyq678LaJhprrzQgq0raeYX7egwpdh/wdL0lCpCYdLN51smg95gD7M5WnhW2aOh7Dx4kNam5grQVHC7FvAscrsMZT92YXXeWbfgIJrl/U/8DXNflP1NVMEMbv5lNrfZ5kVQgrelI5GyR7WmG8iR2XlFEqi89Nkx164v7QbWu498b0FP/B5PHX20NuOKBH8DfSx1EF4a3KQMyCqnm0winxjx9pd4o+gNzVUlGVMLlH/Dexj8behFtLoWkaiXXdeywV52GGSSUpGlxM15tEwfKh2b8GuM+RGA5Nj5vVOZr5ODh5LVE1+wJ8sZ7yWTPBkL8fLcIymvB8g==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=1RT1+J9qLZY4BDfPR+RqA5g0B40GtvlEPYK5anVAg6c=;
 b=e7sX7rdgDBojQakT+2uhh3VKATBDb1WhZLXIpuWwEgN4PkDhyuEYQIcMA0M6f17nRs+ELP9EoakUJikrAmh+11kG8USgdeGGEyX9IhwkVKshodAfGwU6C0bXoc+dNr6Ie88PICysZPlg3MeE6vIyjy9+UREwwKakhlBeo3w8lKQ=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:05 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:05 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 15/37] crypto:ccp: Provide APIs to issue SEV-SNP
 commands
Date: Fri, 30 Apr 2021 07:38:00 -0500
Message-Id: <20210430123822.13825-16-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:04 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: d38fa0e3-871d-4dc5-07c8-08d90bd4f08c
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB283278B5825FC187F51C77D7E55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6790;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 B5Y+DInIFKwtUQCJI/12zxBbqOc7EcstLo6XnTo75wUoKqHtMr18QkfN1kmHJq8iYCK02D/xHiE/RcgluQnCFYvf3t3NvzcWWbFgu3iGTj4FbKQj0lG49mNr9A9PSWJ+RIWx31rxFn1kfxFoijLckS8Lks4BiRaO680oSUd6Qb52fp+pOTrmvgJEh/IQdtNZu4gvq0EBGAE4YFfzpfMXRrWeuTfwLxSs4onIpO5YWaXgs+QKUiLVCEspvypwxCtCjbzh8KWojmVpg+2HB3V0T2v0UZ6SJuB2FJqbkZxVlgkWOkiQQEoR+Pv8Ygd6InyZKOiO+gX5uy2TB9Oxwme3dN1xj2ZUiAxDiSFsptQstWuHZqHHJjURp+S/YVR0hoOoDWFGZkSDBDABZICfEHPzJ1L5aRcy0gjqR7jgxdGULOcWmd7+zOVTUfDY+Ugg25iiGaGZEnX9J5Lump7P0ms/gaCsHf7m6obY0LcF5vu0LnwQgX+tojN0vhufCM6j3UQ2/jNbuWpAW1dqqRIrHq79Lrj52V1XRVo0IBU84N1wm+S3dthmQrcfidd47l3XafiBuPTjyj8+obKbsHcQcpVgQ8lUWS6xFe/XPtKxwMMo0Gxnn3Qu2bGhIf9Ms6LbfSVDXeT6uAT22P1VtWhoQKhwVKUCabuVLMHymKNySrzXCn2AfOQTVMe9PM7y33GyEg5v
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(6666004)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(86362001)(38350700002)(134885004);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 27iyU0brGfo2Odhyd8eXtLv0v43audoTH1urEQmxUdXjVaFkSf6zdxmuD/YRE/bmUs0YkirpgLT9HfhR+T/1kvcIVgZ6d4E0bg9LVVZBPDicZ2y6NAiRmF407+up2WSWuOcO7oqc5JJJaLmofiNAZfA1miEJ47LgQYM052jJQx9oWkxVVDe5NGyhqT3NsKsnE0HByjjm7m9kNL65EwC9XJ0SJlxpOWVrGbi030qPniIRfplT3mzVXalcDrwCwjxKVGJeqIWTuwBCmuMC5kaXQxBmzzUbpayfkjRXJVc9DSAfMhhUAkJnhmoa60j0lKnvLv392DnFmaG3711/eNieFoopQATvtLia0e2xzWss+q1SkGddqkpDLoVRDtlktoSBcs6kIXoe7D4BQ0vjOBxhxJGY4oLNEoLwK5+mn+mgyZ62pPpb2rX0cFL2fKvdJwhELlECOalQoppF2Aun0uwP/iHtVoBi9jT4yaCv2WDU5cUY5/pBo67oSAPBAgkbMw3b7qdQdwMeVtXlyhEqB4cCElA1fZB6TnmvBhr27D+b29s9E+LgpBYIC/OE/s5xVOZ90qG8AgvaKsPNiuYTEuvSzWyKp7NpkHcJzf19vqICpZ+SaIzZY5CpIym77LdUWArz8890DV3mULMKsfF62dGWLdDiV/VV9+VuZNuwNyU8TJ6aE+sCutj4xsmNVZqdin3ZVyQRL655nDR0Zwq4uTZ7t7s0p4sHxZfWAIgDdGM4czHt/2za1dWMq+H09fr/MY4voq5YifOCSTYB58SoQrFusu4ySnHLhph0NNTaWkCZ+AGCeC7LtK3dJnL+1HSyvHSx5dKJYugWewz34JGEnlSSr5ysPdx4mEJnoQ/GySHdGiZ4/CGEXYNsHGk8SybHy/6E7fuoMbbZYtFYPHhP1zKKLiAa1tcwFvfiKjN+CgMOe0F61//g1inLYyyMhYD9nEkKo3SVhIEtJx+wv7w6MA6PbN07qd9ixKEMUF5VivWsqzbCukwb4k5Xxx+JYI9itlkVl0eQtsGmj8b2NqOjeJaCjouliuNtz3gokihPUBHel5ffC8cE7AeHx6mB7Qr4s1uNxunHybvAWDqbh5pHjW6zqxerhUXByzsrhOBZhPRtu9+abVBT1MGSEG1/Ojfa0aDMzfzBtH3ou3mlOGdVqi55SaNmUtSrI5ieExH9zQNZHcpbKsLs/pXLonPvWtB0HmIg+PiVXtEpJk1T99CdYcL6lljy+o7YTISTAxIekyyCsULzXmtbSgg/ty/mCYWoqqo++uzIfyoLNeloy95f2TDNqLlwIlxOp9EH3iGMHOJuoi0ufM75i88dL+QkyTtEObXN
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 d38fa0e3-871d-4dc5-07c8-08d90bd4f08c
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:04.8505
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 rfQwZgh4lb8MgdPAWmnjliKIq/2CwE4zLI29oDH0L/B2GfCD/Y1QvHiNZIy5Mh8wuFksRUGeoZeE4RsjdAzhAw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Provide the APIs for the hypervisor to manage an SEV-SNP guest. The
commands for SEV-SNP is defined in the SEV-SNP firmware specification.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 drivers/crypto/ccp/sev-dev.c | 24 ++++++++++++
 include/linux/psp-sev.h      | 74 ++++++++++++++++++++++++++++++++++++
 2 files changed, 98 insertions(+)

diff --git a/drivers/crypto/ccp/sev-dev.c b/drivers/crypto/ccp/sev-dev.c
index 23ad6e7696df..75ec67ba2b55 100644
--- a/drivers/crypto/ccp/sev-dev.c
+++ b/drivers/crypto/ccp/sev-dev.c
@@ -1010,6 +1010,30 @@ int sev_guest_df_flush(int *error)
 }
 EXPORT_SYMBOL_GPL(sev_guest_df_flush);
 
+int snp_guest_decommission(struct sev_data_snp_decommission *data, int *error)
+{
+	return sev_do_cmd(SEV_CMD_SNP_DECOMMISSION, data, error);
+}
+EXPORT_SYMBOL_GPL(snp_guest_decommission);
+
+int snp_guest_df_flush(int *error)
+{
+	return sev_do_cmd(SEV_CMD_SNP_DF_FLUSH, NULL, error);
+}
+EXPORT_SYMBOL_GPL(snp_guest_df_flush);
+
+int snp_guest_page_reclaim(struct sev_data_snp_page_reclaim *data, int *error)
+{
+	return sev_do_cmd(SEV_CMD_SNP_PAGE_RECLAIM, data, error);
+}
+EXPORT_SYMBOL_GPL(snp_guest_page_reclaim);
+
+int snp_guest_dbg_decrypt(struct sev_data_snp_dbg *data, int *error)
+{
+	return sev_do_cmd(SEV_CMD_SNP_DBG_DECRYPT, data, error);
+}
+EXPORT_SYMBOL_GPL(snp_guest_dbg_decrypt);
+
 static void sev_exit(struct kref *ref)
 {
 	misc_deregister(&misc_dev->misc);
diff --git a/include/linux/psp-sev.h b/include/linux/psp-sev.h
index 1b53e8782250..63ef766cbd7a 100644
--- a/include/linux/psp-sev.h
+++ b/include/linux/psp-sev.h
@@ -860,6 +860,65 @@ int sev_guest_df_flush(int *error);
  */
 int sev_guest_decommission(struct sev_data_decommission *data, int *error);
 
+/**
+ * snp_guest_df_flush - perform SNP DF_FLUSH command
+ *
+ * @sev_ret: sev command return code
+ *
+ * Returns:
+ * 0 if the sev successfully processed the command
+ * -%ENODEV    if the sev device is not available
+ * -%ENOTSUPP  if the sev does not support SEV
+ * -%ETIMEDOUT if the sev command timed out
+ * -%EIO       if the sev returned a non-zero return code
+ */
+int snp_guest_df_flush(int *error);
+
+/**
+ * snp_guest_decommission - perform SNP_DECOMMISSION command
+ *
+ * @decommission: sev_data_decommission structure to be processed
+ * @sev_ret: sev command return code
+ *
+ * Returns:
+ * 0 if the sev successfully processed the command
+ * -%ENODEV    if the sev device is not available
+ * -%ENOTSUPP  if the sev does not support SEV
+ * -%ETIMEDOUT if the sev command timed out
+ * -%EIO       if the sev returned a non-zero return code
+ */
+int snp_guest_decommission(struct sev_data_snp_decommission *data, int *error);
+
+/**
+ * snp_guest_page_reclaim - perform SNP_PAGE_RECLAIM command
+ *
+ * @decommission: sev_snp_page_reclaim structure to be processed
+ * @sev_ret: sev command return code
+ *
+ * Returns:
+ * 0 if the sev successfully processed the command
+ * -%ENODEV    if the sev device is not available
+ * -%ENOTSUPP  if the sev does not support SEV
+ * -%ETIMEDOUT if the sev command timed out
+ * -%EIO       if the sev returned a non-zero return code
+ */
+int snp_guest_page_reclaim(struct sev_data_snp_page_reclaim *data, int *error);
+
+/**
+ * snp_guest_dbg_decrypt - perform SEV SNP_DBG_DECRYPT command
+ *
+ * @sev_ret: sev command return code
+ *
+ * Returns:
+ * 0 if the sev successfully processed the command
+ * -%ENODEV    if the sev device is not available
+ * -%ENOTSUPP  if the sev does not support SEV
+ * -%ETIMEDOUT if the sev command timed out
+ * -%EIO       if the sev returned a non-zero return code
+ */
+int snp_guest_dbg_decrypt(struct sev_data_snp_dbg *data, int *error);
+
+
 void *psp_copy_user_blob(u64 uaddr, u32 len);
 
 #else	/* !CONFIG_CRYPTO_DEV_SP_PSP */
@@ -887,6 +946,21 @@ sev_issue_cmd_external_user(struct file *filep, unsigned int id, void *data, int
 
 static inline void *psp_copy_user_blob(u64 __user uaddr, u32 len) { return ERR_PTR(-EINVAL); }
 
+static inline int
+snp_guest_decommission(struct sev_data_snp_decommission *data, int *error) { return -ENODEV; }
+
+static inline int snp_guest_df_flush(int *error) { return -ENODEV; }
+
+static inline int snp_guest_page_reclaim(struct sev_data_snp_page_reclaim *data, int *error)
+{
+	return -ENODEV;
+}
+
+static inline int snp_guest_dbg_decrypt(struct sev_data_snp_dbg *data, int *error)
+{
+	return -ENODEV;
+}
+
 #endif	/* CONFIG_CRYPTO_DEV_SP_PSP */
 
 #endif	/* __PSP_SEV_H__ */

From patchwork Fri Apr 30 12:38:01 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233315
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id D3E7CC433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:40:36 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id A834B61477
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:40:36 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233231AbhD3MlX (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:41:23 -0400
Received: from mail-bn8nam12on2044.outbound.protection.outlook.com
 ([40.107.237.44]:33505
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232834AbhD3Mk0 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:40:26 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=EV6XHxUHugOBCHxzZ17/5RJ3RcUdlubyjfSr6GoK3QobsheyWj9H45A3MNM8fM5UqB5NDg2/RFlaQ6KpIL8mHshrFuP/n4fM5kimggxtuv89a+gQjWp/TmMcXlbZp44/Vg9ryJ3OnwcP/oTxxkL90T20f0va08phPgzDoaCOTMNNU60ZQbqqeY2i520sykkWGGrUiE8sRzXXnD2MnVVtDCoWtsjh4ozw/FlYmMDO0Uqxr7tEZm5OhWJw67RjrmwJOOKrj7qjNdvFhbuMd5S3VXDrJUhvlJgsOqIDZ5TMb0WtD16c5i5kTW/rT3Mist9yQ+VwLNhS2EnGxcR22elMkQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=a8sXDfQdXi6R8XUjIbg5/MM7nQb/5bgMWCmUfGjfFqE=;
 b=L47M0lEdYmyeBwqsPxlMfvq9X/czgaU4jlQfSg2TLI0fGULoNVeTCaa7lFlEW/rxyKTYkBHfpfACmXQ7gt4hi7uD9pWuevrouYBdEsA2Sb1FESRBX68bQ01fpiJzvhTtQg/LD0LnvOvZ07A79TKelB31swLVmcltF8ERDTFTXCFQ+oq/pcB2ycOccvEBfJKmfbj8Yb80AXCKrSF//dTBhq7wNnRsUP7HwZI4xjtjwGRjxKWWbnFrvJvN+K0peU4lsYKr54jFKmexfuQ57VkhTU+JsluKAZ8MsNf2r1te/S6UVfhpkw5a9BUr+P/ixEekrGZqEWduhQups568yCK5HA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=a8sXDfQdXi6R8XUjIbg5/MM7nQb/5bgMWCmUfGjfFqE=;
 b=AH9CxQRQ3Z8Ko8EoV3I3+BpiCS3/NKcfiyEEBY3jEWK6/YGbMQ/0fkHWPqK/iBcYDgPcQBAr7cB15xoUzWBtGZIL8t48xxjRZoFi1M3qKmZ8o5GfKDcTfxEiGEaRnVO8neUpWfqaijZ4UApXYhkb5WpnbXt7fk4PNws/kM81z8w=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:05 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:05 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 16/37] crypto: ccp: Handle the legacy TMR
 allocation when SNP is enabled
Date: Fri, 30 Apr 2021 07:38:01 -0500
Message-Id: <20210430123822.13825-17-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:05 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 10311aee-1f60-4ec8-85e4-08d90bd4f102
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB283268A7B543A24ED3DFB0CCE55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:9508;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 W+1+YwD0couEwcqZx/iSRi7kL3pCq2oA0oUcL78MNWcLquH/2dnYPlGsbg0SXPtbrSY5n1luzwky/9XvvkLD3UB9wbvShPGGWAbMdbnqHd8zZnwSwhJKtLDM24dsb/oM0U1xY9dAOQZmU+hhcMYlDSxDxqlicq2hS+x+fX8iulE+83M+CsnwKOq7+hRYMjW18HW8yP5mC9bSZJDLG+QvSlR3KUKxxAbcF7N1lECwEVxBDx0g2ePoSqHrRmzkJmqTKL/UvpnJFAMYQcNxFzHwKWKVOBRvQmo/lM/4rJbCQDmopA/8J5EmHB5kodIurwn0h9KcQMgAbLbfQyE7Z1kgt/f61eBShJlWNchxOoyf2MZqkRyFFcE1ZgmsAQrEM8ybIwZTMfMlwOwL8kVgbFWhSq59vHN6EvEaN63vSiq0PI8lY2/c4rfsHIVf44tXzdb21vMZMELZHojRer3CFbn4aM0Zw4005w0VoVq23FhiED0aTExsWi3BJtVlULwWq2+UIgsMAMQTgTBr3Rhnde73BX8GHFKtZr9McD1L7hUSYPCkQjgaHFs1UMorfKkuZ5ta3+ahGhdqZGWYqWQGClm2rg9IEl8e3RjRKapVsetHgrSEOfNT6CyEO6xPHneCIEcR0Pcb34wGP0atOtGVhUNwRw==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(6666004)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 JC9Ap7mTfh/tlg4tgM/O+wFShCYhIYWi0taSkQBkedQxoQaunlsTLDDuAgHGfJGyaQXdOS3myIR3lvuzyY1jcGRoIzuihBy5/xygLR7xsvD1hZbeeWTbl0+FdmL5lQuRCC3xpv8keeWKlNBkyUPh8vc5zxrE3FfvXoXv927PD7NpaD8/B8p2zMul9baBbvZt4zKPOxqCqSuujAER6u7R+kaaR1FaqUo9fWPrFvCNx1kcLQTZL7RGr/wMbEB+LsaZboNaLeHFwhf2z28Wl0vuoG3PaMpEQCf9N4bZTmlO8oSseZGvBrgY70JQI1LZamJSNMbDd4+jElsX350CsuGenoi3Q4dze4obhe0W72KUSRlb37GN9uSrb+IlHL+RL1c/u9OkGf9iKA/F46fQDYDlkHB0GAcV0tA1pZZK8y5lGdk9/DJs8Xwc/0q7WenU6Cl87bFg9Q+9W1XTI9iTa03tVwgBRIVfeIYGvIq5KzFwmgYd2EC+f+m2/uwnoeViOuBRLjMkQtT1FEdOsDX7l8YmheYJ9Q5CIj+TQqYXg9t7VqAZ5N9BKvZdfwp2doWNzVUSIA3ivn1BnyBQqZE8k8pI5TWeT4X46wtaOL/MGw24fLigrE8xs+tJjYTYNJSJm9X6M2IdMWyKJbdtNxv5pK+5lQeCCl8ktilIpyAb00Y7m/GtfiYO3yJUpejiF0aNBS9FSny19/cbUMkZmXGANGnFU/5KJq5XXEwOg+h8fivg3qLdKizund0b8nFpPujN94+8FHiGq/yYoibLxJGHRUSrinVD3O3KSSPT2zRWoTVdSOY7M2UTziHfLrTQsVYF7duSCG1iQryViI9lqVqsBpgvHlCsQm7G0bH2S3BPx7UCj5pZge3/bR2ddlfDNdr3l99DncKF81F/0uTKbC9QKczyY06ypfRwLAA4JA08A7FPIvwkD7tG/v15muePs/hIBLNeAG/+4A2DWHSQMssf+s4vHhBJBu0ntgwjNCXODjhIW1HmpkCPDVGxfEyv7+rPm3G7KytE2EDjJrc4qSKn7Vutbcm9sMn1YD5hSvZJDnwrqGt2BZjREEtrQUo1eWOzxKBArmJr6pNC+iHLMlYrL/xk6lq4eXqhMJ0afzx8kJgkELe8iGCxB+g2N0Sii5wyjbbJrp63xpyVu1U+Rc2DO9HU21dBJdJWFwpGT8UNA5hButppfoBLU6hrLFVd3m4ADU5vLHuOCy89XLDb5nclmOuneg+axEs3pAZPKdyHgASkIhxheM6myuODbuOvOGsFHPjwGi5ABj3JzHxlQsgJObSIMeQRUJ7YKF4Ijacys2AYFShhmNPso+4UNOjzrcey6GI1
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 10311aee-1f60-4ec8-85e4-08d90bd4f102
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:05.6171
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 FuYdWFZsgbfPhLD8rw0zIyVB9/BuN3qSQ5meFYayoyRFfBkiWcDVqk1SFsRIsCEKlSR0Qjri8vv6aZYz09Oiyw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The behavior and requirement for the SEV-legacy command is altered when
the SNP firmware is in the INIT state. See SEV-SNP firmware specification
for more details.

When SNP is INIT state, all the SEV-legacy commands that cause the
firmware to write memory must be in the firmware state. The TMR memory
is allocated by the host but updated by the firmware, so, it must be
in the firmware state.  Additionally, the TMR memory must be a 2MB aligned
instead of the 1MB, and the TMR length need to be 2MB instead of 1MB.
The helper __snp_{alloc,free}_firmware_pages() can be used for allocating
and freeing the memory used by the firmware.

While at it, provide API that can be used by others to allocate a page
that can be used by the firmware. The immediate user for this API will
be the KVM driver. The KVM driver to need to allocate a firmware context
page during the guest creation. The context page need to be updated
by the firmware. See the SEV-SNP specification for further details.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 drivers/crypto/ccp/sev-dev.c | 130 +++++++++++++++++++++++++++++++----
 include/linux/psp-sev.h      |  11 +++
 2 files changed, 128 insertions(+), 13 deletions(-)

diff --git a/drivers/crypto/ccp/sev-dev.c b/drivers/crypto/ccp/sev-dev.c
index 75ec67ba2b55..fe104d50d83d 100644
--- a/drivers/crypto/ccp/sev-dev.c
+++ b/drivers/crypto/ccp/sev-dev.c
@@ -53,6 +53,14 @@ static int psp_timeout;
 #define SEV_ES_TMR_SIZE		(1024 * 1024)
 static void *sev_es_tmr;
 
+/* When SEV-SNP is enabled the TMR need to be 2MB aligned and 2MB size. */
+#define SEV_SNP_ES_TMR_SIZE	(2 * 1024 * 1024)
+
+static size_t sev_es_tmr_size = SEV_ES_TMR_SIZE;
+
+static int __sev_do_cmd_locked(int cmd, void *data, int *psp_ret);
+static int sev_do_cmd(int cmd, void *data, int *psp_ret);
+
 static inline bool sev_version_greater_or_equal(u8 maj, u8 min)
 {
 	struct sev_device *sev = psp_master->sev_data;
@@ -150,6 +158,100 @@ static int sev_cmd_buffer_len(int cmd)
 	return 0;
 }
 
+static int snp_reclaim_page(struct page *page, bool locked)
+{
+	struct sev_data_snp_page_reclaim data = {};
+	int ret, err;
+
+	data.paddr = page_to_pfn(page) << PAGE_SHIFT;
+
+	if (locked)
+		ret = __sev_do_cmd_locked(SEV_CMD_SNP_PAGE_RECLAIM, &data, &err);
+	else
+		ret = sev_do_cmd(SEV_CMD_SNP_PAGE_RECLAIM, &data, &err);
+
+	return ret;
+}
+
+static int snp_set_rmptable_state(unsigned long paddr, int npages,
+				  struct rmpupdate *val, bool locked, bool need_reclaim)
+{
+	unsigned long pfn = __sme_clr(paddr) >> PAGE_SHIFT;
+	unsigned long pfn_end = pfn + npages;
+	int rc;
+
+	while (pfn < pfn_end) {
+		if (need_reclaim)
+			if (snp_reclaim_page(pfn_to_page(pfn), locked))
+				return -EFAULT;
+
+		rc = rmpupdate(pfn_to_page(pfn), val);
+		if (rc)
+			return rc;
+
+		pfn++;
+	}
+
+	return 0;
+}
+
+static struct page *__snp_alloc_firmware_pages(gfp_t gfp_mask, int order)
+{
+	struct rmpupdate val = {};
+	unsigned long paddr;
+	struct page *page;
+
+	page = alloc_pages(gfp_mask, order);
+	if (!page)
+		return NULL;
+
+	val.assigned = 1;
+	val.immutable = 1;
+	paddr = __pa((unsigned long)page_address(page));
+
+	if (snp_set_rmptable_state(paddr, 1 << order, &val, false, true)) {
+		__free_pages(page, order);
+		return NULL;
+	}
+
+	return page;
+}
+
+void *snp_alloc_firmware_page(gfp_t gfp_mask)
+{
+	struct page *page;
+
+	page = __snp_alloc_firmware_pages(gfp_mask, 0);
+
+	return page ? page_address(page) : NULL;
+}
+EXPORT_SYMBOL_GPL(snp_alloc_firmware_page);
+
+static void __snp_free_firmware_pages(struct page *page, int order)
+{
+	struct rmpupdate val = {};
+	unsigned long paddr;
+
+	if (!page)
+		return;
+
+	paddr = __pa((unsigned long)page_address(page));
+
+	if (snp_set_rmptable_state(paddr, 1 << order, &val, false, true))
+		return;
+
+	__free_pages(page, order);
+}
+
+void snp_free_firmware_page(void *addr)
+{
+	if (!addr)
+		return;
+
+	__snp_free_firmware_pages(virt_to_page(addr), 0);
+}
+EXPORT_SYMBOL(snp_free_firmware_page);
+
 static int __sev_do_cmd_locked(int cmd, void *data, int *psp_ret)
 {
 	struct psp_device *psp = psp_master;
@@ -272,7 +374,7 @@ static int __sev_platform_init_locked(int *error)
 
 		data.flags |= SEV_INIT_FLAGS_SEV_ES;
 		data.tmr_address = tmr_pa;
-		data.tmr_len = SEV_ES_TMR_SIZE;
+		data.tmr_len = sev_es_tmr_size;
 	}
 
 	rc = __sev_do_cmd_locked(SEV_CMD_INIT, &data, error);
@@ -623,6 +725,8 @@ static int __sev_snp_init_locked(int *error)
 	sev->snp_inited = true;
 	dev_dbg(sev->dev, "SEV-SNP firmware initialized\n");
 
+	sev_es_tmr_size = SEV_SNP_ES_TMR_SIZE;
+
 	return rc;
 }
 
@@ -1141,8 +1245,8 @@ static void sev_firmware_shutdown(struct sev_device *sev)
 		/* The TMR area was encrypted, flush it from the cache */
 		wbinvd_on_all_cpus();
 
-		free_pages((unsigned long)sev_es_tmr,
-			   get_order(SEV_ES_TMR_SIZE));
+
+		__snp_free_firmware_pages(virt_to_page(sev_es_tmr), get_order(sev_es_tmr_size));
 		sev_es_tmr = NULL;
 	}
 
@@ -1192,16 +1296,6 @@ void sev_pci_init(void)
 	    sev_update_firmware(sev->dev) == 0)
 		sev_get_api_version();
 
-	/* Obtain the TMR memory area for SEV-ES use */
-	tmr_page = alloc_pages(GFP_KERNEL, get_order(SEV_ES_TMR_SIZE));
-	if (tmr_page) {
-		sev_es_tmr = page_address(tmr_page);
-	} else {
-		sev_es_tmr = NULL;
-		dev_warn(sev->dev,
-			 "SEV: TMR allocation failed, SEV-ES support unavailable\n");
-	}
-
 	/*
 	 * If boot CPU supports the SNP, then let first attempt to initialize
 	 * the SNP firmware.
@@ -1217,6 +1311,16 @@ void sev_pci_init(void)
 		}
 	}
 
+	/* Obtain the TMR memory area for SEV-ES use */
+	tmr_page = __snp_alloc_firmware_pages(GFP_KERNEL, get_order(sev_es_tmr_size));
+	if (tmr_page) {
+		sev_es_tmr = page_address(tmr_page);
+	} else {
+		sev_es_tmr = NULL;
+		dev_warn(sev->dev,
+			 "SEV: TMR allocation failed, SEV-ES support unavailable\n");
+	}
+
 	/* Initialize the platform */
 	rc = sev_platform_init(&error);
 	if (rc && (error == SEV_RET_SECURE_DATA_INVALID)) {
diff --git a/include/linux/psp-sev.h b/include/linux/psp-sev.h
index 63ef766cbd7a..b72a74f6a4e9 100644
--- a/include/linux/psp-sev.h
+++ b/include/linux/psp-sev.h
@@ -12,6 +12,8 @@
 #ifndef __PSP_SEV_H__
 #define __PSP_SEV_H__
 
+#include <linux/sev.h>
+
 #include <uapi/linux/psp-sev.h>
 
 #ifdef CONFIG_X86
@@ -920,6 +922,8 @@ int snp_guest_dbg_decrypt(struct sev_data_snp_dbg *data, int *error);
 
 
 void *psp_copy_user_blob(u64 uaddr, u32 len);
+void *snp_alloc_firmware_page(gfp_t mask);
+void snp_free_firmware_page(void *addr);
 
 #else	/* !CONFIG_CRYPTO_DEV_SP_PSP */
 
@@ -961,6 +965,13 @@ static inline int snp_guest_dbg_decrypt(struct sev_data_snp_dbg *data, int *erro
 	return -ENODEV;
 }
 
+static inline void *snp_alloc_firmware_page(gfp_t mask)
+{
+	return NULL;
+}
+
+static inline void snp_free_firmware_page(void *addr) { }
+
 #endif	/* CONFIG_CRYPTO_DEV_SP_PSP */
 
 #endif	/* __PSP_SEV_H__ */

From patchwork Fri Apr 30 12:38:02 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233325
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 725AEC43460
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:41:19 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 473D76147F
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:41:19 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233361AbhD3MmG (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:42:06 -0400
Received: from mail-bn8nam12on2060.outbound.protection.outlook.com
 ([40.107.237.60]:34272
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S233085AbhD3Mk7 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:40:59 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=DL9d199ob8NAx46a7G/qrSNK9OmVeH+FeCc7ECuKJ3JgzAGkcMzn2uf8wAd3ufL2uET5vB2QccB/PJk5bfP3VOrkNUbATkHO4STrZ5g52nTZvX7ll8Bd3/WSVvJ7bgIo/PR/HY4w0wUEDu3Jl+EHAvisGAZ3KnI986oK7GhnVy0D7oBGrRM5ms/YpULkIudxzHlhid5opSh89rFjzWuDa7M2Mx0gFTWTlqoCqefpJjxuNXzPZh1NAp3e67W/qSGKpFonnNtaFqg0ep0/dsVpJmLpxb9yRpZA7scNxHLlQvcIncKWAkcZuNhX1TTuIRJSvi5L4I8xlWg9kGUma7qvEA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=qZE2CcOYFhZt4yJzG5OKU21ZrwkSbwJlmkaR/S3PFbA=;
 b=U5DqTnkO/7XKw/N1HSQqn5Wvec5QzCS8twRV8P0oD6bwQSMU8DSo/EMxKCFJ68UMQjmmhy0dNxDeg6Jr2DJ528WcqwWfbguRGOA1F6Llbb7sW0t6F4Z9iZQUL58IHRCAqhW3G6P282SjGtksp8XeV9Iva7PB2DdsPur0bNaZOchlKVacnSSMg759olflh2KCOge9xew7y0WNDaZphB+CWK6rRdwdPtMB6GoJFSWeLC+7AvhqqMhJq0LhAPmTb38nDm1ncMY2jQWKssjviRYn3ZEo2Ix/Wc7Mb3UxvIA6gqCiXMhT4s0bOvfnPCljVHvUwxF+m0zsk2goOmLaR7hFAA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=qZE2CcOYFhZt4yJzG5OKU21ZrwkSbwJlmkaR/S3PFbA=;
 b=Fz+dsPClmM/l9QYC+lV1pOk9A7DmLFrrswtFMfeiW0vrG2l/yCqxNwYJmZVLxwQUiYE0Y5g93B7tewK2jE2ERde1F0bjK52GRmqFi7RgRpoGqtx4WlXuP/dOlAzML7xcWvQqlYdy7A/+EEqkTD4bkzSoCmP1PdFxUSOkWgo70Pw=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:06 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:06 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 17/37] crypto: ccp: Handle the legacy SEV command
 when SNP is enabled
Date: Fri, 30 Apr 2021 07:38:02 -0500
Message-Id: <20210430123822.13825-18-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:05 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 2d9a8cd6-ea6a-4b41-3c5c-08d90bd4f17a
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB28327681C414B8C48A34DB2BE55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:1468;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 tRw+H1ZrnTj5RS9hTPqxzLAVbBDEVjZB1QBWvL0MeBNgRHF/qMwLffFxDjBMIATQuhy+qKXg6ZGrxhYjnMwYH1JJE4u2nelzLHBy2YOW+fBw78LpooYoaQqe74d9gjSJSe0/j8QxHMQvNoLQ1ZkxLDFefVqZnYzNuw2hXmpKYOWj++1s0jNbNyCJkHYeX7/xfbwQwo4wJ1SFEEfAzrApC1+xcGV0zJDgmndaMPEXmwxgMbOj6BefzhQpz6PkUn6YYHEAvHk9qBc2VU1GUwEsfzifXxqAsdzClnDr05s1ULYK4Fay/hAaqXFlXSX7/HlntjzR0WmmANAFoMkDPn2LAUqrYYvw9yfPaeJLPCPg0dC9+L3d0151jKFx9lTij4NcsFSQzL0dvhN8pjbllWlKNNxI90X+8GvsbVLaqjL2hdS7+BmLt4JPNRQye8jBdb+oE14QG1WRwDZzE/nyUjVJiWIyG0ZGGKjnDsdPJWglO/pDkkde68s+7Vk1RwIjTYOIEhsU5zF9mGQ7SXLfjUI7A3BbNQw017aUjDvroD4I92Yy/2xEJWYs8PS6PFSj5mVH4Xf+1sygh+LOA8MoYGlYDKLi4YvZN2Rm31yAKy4JTjgV7PncOSGBmbxEa1Fs3GrXqCPnAlvkObbHz46RYIsZ1g==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(6666004)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(30864003)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 OSWyrs1AuaObJRA7rIn8Y6sUXvU0g+JaBZfPfTMhmvNGOsrLrWsh/Aef9vrDHKN3hdubb/qmUP7fW8c2zuj9V5tay9UF/PTgl8ib3qQUAVIflPIyywBQ2KVDgAZRx94RkQaFNwn7jhlBW0FvQhYfFKAZd/VsZtiGBdbnki249rJq2rMuxftKcGMfBBYk9THWqZxCwp0o1GAz33aSywWijIz/T8czv1xwIA36Me/tPsOvjP4OI3Nb/caqhj8YXFvoZ7pMRcQHcbobX4BKGawPQ/Vk3xOZq9Vf0LpLuTGvpXPAUSbmfPDdK6FF73zhzXz8xBueSKS1MiEzPe6SA8kR1jHJiXCTmDturUwErW6pxgiWQ0+cNcpGt0jZc8hn3/BnsDA7ejrdM67pLuvFcBZOfcwdp0t3EAlTQXcdGdc6zJAqlIOrXjZymkXobOJDrrWtDqV9jnNGNvDEPmIcqmrypm8iCyx8yizlKI5NdLiM6PWE0uJPJybKE/lsYR8QZ6AAWJmhtKZ4qdN55aZ7+lu5VFY/i0bK9sLUUvSqsjGUq0I3TN3CkiIy1ycriUUAFYgQak68GHfGjmKKoOE4Bk/zxSTyLiGgmoOEGT6HAPCFJJFHPXP7u6aWi6+tFYvTXXCAnRBjUW8Cxg2KX3PxU+mYaOvbIY17YonhOhds79ETEs70073Bm7xMrV6ZAlFlCj7pdIC+WOffqgfsbLaZw8XZSTSsbMwzxGBa4T9o89lSv0iojz+wmAH78NRZWBVYIl7HmH0JVMuK39znz+weKGQXNypheVTGnAWnSCDbMmWtYLL4ftnRYyX7aLckcktdcCI5lyvjtU//n/qmkx3Wfo2JijmnQdpvmd2oV8gDTS/K+4Iu176a+cQXS8tl/vAropBGpDUkUazaK0Wrw2WbnDFlLZSjYTfd3ACmFZzIL8s2zE1A0Ks3zVBjvaFCnQtGvT3mpMge8jHOVjcWkB4SWAm9UG2VsPBr1V9bBiM3RRCHA/Z+4yNzMnogqwqVgKeybNL07mKZ7hL/ZjQz3igDwBH4fwDHD4r+Qq64TDeVp+Xk+/HJKZb6OnxwIBVJhGdh7Skp5se1sa5ZE+uP37c7JeZYuCFMKpPNNR/oDjX41cIPmlu2VofdO1dqDfsPSlGwRBBwrLYL2Eg+nhr/bBRM6HFpZsCPbbOD1YSwj1IH6tPa0VJ1CeQTZigYPCYsmQ4L9qaxdjg5MOm1NGDjFUsVdukpck6DlwuItmIUMa9skTqZvULL+g3JkuG47VFadoU0QPHTckb8fKDFWZLDmNgStN1KqKoeL4K2fYqL6WU7WR5HPFjfjCJzWTHE6qaPMqF+meEz
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 2d9a8cd6-ea6a-4b41-3c5c-08d90bd4f17a
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:06.3457
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 eYfEAY4JbpgzgQRc1Wbibs2Ff09nyY6WueXaAaVVTKjsWlcGbK1kY0DsWPpo/MGzeIk5tfYVT9Q2gOCKgiauKQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The behavior of the SEV-legacy commands is altered when the SNP firmware
is in the INIT state. When SNP is in INIT state, all the SEV-legacy
commands that cause the firmware to write to memory must be in the
firmware state before issuing the command..

A command buffer may contains a system physical address that the firmware
may write to. There are two cases that need to be handled:

1) system physical address points to a guest memory
2) system physical address points to a host memory

To handle the case #1, map_firmware_writeable() helper simply
changes the page state in the RMP table before and after the command is
sent to the firmware.

For the case #2, the map_firmware_writeable() replaces the host system
physical memory with a pre-allocated firmware page, and after the command
completes, the unmap_firmware_writeable() copies the content from
pre-allocated firmware page to original host system physical.

The unmap_firmware_writeable() calls a __sev_do_cmd_locked() to clear
the immutable bit from the memory page. To support the nested calling,
a separate command buffer is required. Allocate a backup command buffer
and keep reference count of it. If a nested call is detected then use the
backup cmd_buf to complete the command submission.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 drivers/crypto/ccp/sev-dev.c | 348 ++++++++++++++++++++++++++++++++++-
 drivers/crypto/ccp/sev-dev.h |  12 ++
 2 files changed, 350 insertions(+), 10 deletions(-)

diff --git a/drivers/crypto/ccp/sev-dev.c b/drivers/crypto/ccp/sev-dev.c
index fe104d50d83d..5b3f3f718cfb 100644
--- a/drivers/crypto/ccp/sev-dev.c
+++ b/drivers/crypto/ccp/sev-dev.c
@@ -252,12 +252,299 @@ void snp_free_firmware_page(void *addr)
 }
 EXPORT_SYMBOL(snp_free_firmware_page);
 
+static int alloc_snp_host_map(struct sev_device *sev)
+{
+	struct page *page;
+	int i;
+
+	for (i = 0; i < MAX_SNP_HOST_MAP_BUFS; i++) {
+		struct snp_host_map *map = &sev->snp_host_map[i];
+
+		memset(map, 0, sizeof(*map));
+
+		page = __snp_alloc_firmware_pages(GFP_KERNEL_ACCOUNT,
+						  get_order(SEV_FW_BLOB_MAX_SIZE));
+		if (!page)
+			return -ENOMEM;
+
+		map->host = page_address(page);
+	}
+
+	return 0;
+}
+
+static void free_snp_host_map(struct sev_device *sev)
+{
+	int i;
+
+	for (i = 0; i < MAX_SNP_HOST_MAP_BUFS; i++) {
+		struct snp_host_map *map = &sev->snp_host_map[i];
+
+		if (map->host) {
+			__snp_free_firmware_pages(virt_to_page(map->host),
+						  get_order(SEV_FW_BLOB_MAX_SIZE));
+			memset(map, 0, sizeof(*map));
+		}
+	}
+}
+
+static int map_firmware_writeable(u64 *paddr, u32 len, bool guest, struct snp_host_map *map)
+{
+	unsigned int npages = PAGE_ALIGN(len) >> PAGE_SHIFT;
+	int ret;
+
+	map->active = false;
+
+	if (!paddr || !len)
+		return 0;
+
+	map->paddr = *paddr;
+	map->len = len;
+
+	/* If paddr points to a guest memory then change the page state to firmwware. */
+	if (guest) {
+		struct rmpupdate val = {};
+
+		val.immutable = true;
+		val.assigned = true;
+		ret = snp_set_rmptable_state(*paddr, npages, &val, true, false);
+		if (ret)
+			return ret;
+
+		goto done;
+	}
+
+	if (unlikely(!map->host))
+		return -EINVAL;
+
+	/* Check if the pre-allocated buffer can be used to fullfil the request. */
+	if (unlikely(len > SEV_FW_BLOB_MAX_SIZE))
+		return -EINVAL;
+
+	/* Set the paddr to use an intermediate firmware buffer */
+	*paddr = __psp_pa(map->host);
+
+done:
+	map->active = true;
+	return 0;
+}
+
+static int unmap_firmware_writeable(u64 *paddr, u32 len, bool guest, struct snp_host_map *map)
+{
+	unsigned int npages = PAGE_ALIGN(len) >> PAGE_SHIFT;
+	int ret;
+
+	if (!map->active)
+		return 0;
+
+	/* If paddr points to a guest memory then restore the page state to hypervisor. */
+	if (guest) {
+		struct rmpupdate val = {};
+
+		ret = snp_set_rmptable_state(*paddr, npages, &val, true, true);
+		if (ret)
+			return ret;
+
+		goto done;
+	}
+
+	/* Copy the response data firmware buffer to the callers buffer. */
+	memcpy(__va(__sme_clr(map->paddr)), map->host, min_t(size_t, len, map->len));
+	*paddr = map->paddr;
+
+done:
+	map->active = false;
+	return 0;
+}
+
+static bool sev_legacy_cmd_buf_writable(int cmd)
+{
+	switch (cmd) {
+	case SEV_CMD_PLATFORM_STATUS:
+	case SEV_CMD_GUEST_STATUS:
+	case SEV_CMD_LAUNCH_START:
+	case SEV_CMD_RECEIVE_START:
+	case SEV_CMD_LAUNCH_MEASURE:
+	case SEV_CMD_SEND_START:
+	case SEV_CMD_SEND_UPDATE_DATA:
+	case SEV_CMD_SEND_UPDATE_VMSA:
+	case SEV_CMD_PEK_CSR:
+	case SEV_CMD_PDH_CERT_EXPORT:
+	case SEV_CMD_GET_ID:
+	case SEV_CMD_ATTESTATION_REPORT:
+		return true;
+	default:
+		return false;
+	}
+}
+
+#define prep_buffer(name, addr, len, guest, map)  \
+	   func(&((typeof(name *))cmd_buf)->addr, ((typeof(name *))cmd_buf)->len, guest, map)
+
+static int __snp_cmd_buf_copy(int cmd, void *cmd_buf, bool to_fw, int fw_err)
+{
+	int (*func)(u64 *, u32, bool, struct snp_host_map *);
+	struct sev_device *sev = psp_master->sev_data;
+	struct rmpupdate val = {};
+	bool from_fw = !to_fw;
+	int ret;
+
+	/*
+	 * After the command is completed, change the command buffer memory to
+	 * hypervisor state.
+	 *
+	 * The immutable bit is automatically cleared by the firmware, so
+	 * no not need to reclaim the page.
+	 */
+	if (from_fw && sev_legacy_cmd_buf_writable(cmd)) {
+		ret = snp_set_rmptable_state(__pa(cmd_buf), 1, &val, true, false);
+		if (ret)
+			return ret;
+
+		/* No need to go further if firmware failed to execute command. */
+		if (fw_err)
+			return 0;
+	}
+
+	if (to_fw)
+		func = map_firmware_writeable;
+	else
+		func = unmap_firmware_writeable;
+
+	/*
+	 * A command buffer may contains a system physical address. If the address
+	 * points to a host memory then use an intermediate firmware page otherwise
+	 * change the page state in the RMP table.
+	 */
+	switch (cmd) {
+	case SEV_CMD_PDH_CERT_EXPORT:
+		if (prep_buffer(struct sev_data_pdh_cert_export, pdh_cert_address,
+				pdh_cert_len, false, &sev->snp_host_map[0]))
+			goto err;
+		if (prep_buffer(struct sev_data_pdh_cert_export, cert_chain_address,
+				cert_chain_len, false, &sev->snp_host_map[1]))
+			goto err;
+		break;
+	case SEV_CMD_GET_ID:
+		if (prep_buffer(struct sev_data_get_id, address, len,
+				false, &sev->snp_host_map[0]))
+			goto err;
+		break;
+	case SEV_CMD_PEK_CSR:
+		if (prep_buffer(struct sev_data_pek_csr, address, len,
+				    false, &sev->snp_host_map[0]))
+			goto err;
+		break;
+	case SEV_CMD_LAUNCH_UPDATE_DATA:
+		if (prep_buffer(struct sev_data_launch_update_data, address, len,
+				    true, &sev->snp_host_map[0]))
+			goto err;
+		break;
+	case SEV_CMD_LAUNCH_UPDATE_VMSA:
+		if (prep_buffer(struct sev_data_launch_update_vmsa, address, len,
+				true, &sev->snp_host_map[0]))
+			goto err;
+		break;
+	case SEV_CMD_LAUNCH_MEASURE:
+		if (prep_buffer(struct sev_data_launch_measure, address, len,
+				false, &sev->snp_host_map[0]))
+			goto err;
+		break;
+	case SEV_CMD_LAUNCH_UPDATE_SECRET:
+		if (prep_buffer(struct sev_data_launch_secret, guest_address, guest_len,
+				true, &sev->snp_host_map[0]))
+			goto err;
+		break;
+	case SEV_CMD_DBG_DECRYPT:
+		if (prep_buffer(struct sev_data_dbg, dst_addr, len, false,
+				&sev->snp_host_map[0]))
+			goto err;
+		break;
+	case SEV_CMD_DBG_ENCRYPT:
+		if (prep_buffer(struct sev_data_dbg, dst_addr, len, true,
+				&sev->snp_host_map[0]))
+			goto err;
+		break;
+	case SEV_CMD_ATTESTATION_REPORT:
+		if (prep_buffer(struct sev_data_attestation_report, address, len,
+				false, &sev->snp_host_map[0]))
+			goto err;
+		break;
+	case SEV_CMD_SEND_START:
+		if (prep_buffer(struct sev_data_send_start, session_address,
+				session_len, false, &sev->snp_host_map[0]))
+			goto err;
+		break;
+	case SEV_CMD_SEND_UPDATE_DATA:
+		if (prep_buffer(struct sev_data_send_update_data, hdr_address, hdr_len,
+				false, &sev->snp_host_map[0]))
+			goto err;
+		if (prep_buffer(struct sev_data_send_update_data, trans_address,
+				trans_len, false, &sev->snp_host_map[1]))
+			goto err;
+		break;
+	case SEV_CMD_SEND_UPDATE_VMSA:
+		if (prep_buffer(struct sev_data_send_update_vmsa, hdr_address, hdr_len,
+				false, &sev->snp_host_map[0]))
+			goto err;
+		if (prep_buffer(struct sev_data_send_update_vmsa, trans_address,
+				trans_len, false, &sev->snp_host_map[1]))
+			goto err;
+		break;
+	case SEV_CMD_RECEIVE_UPDATE_DATA:
+		if (prep_buffer(struct sev_data_receive_update_data, guest_address,
+				guest_len, true, &sev->snp_host_map[0]))
+			goto err;
+		break;
+	case SEV_CMD_RECEIVE_UPDATE_VMSA:
+		if (prep_buffer(struct sev_data_receive_update_vmsa, guest_address,
+				guest_len, true, &sev->snp_host_map[0]))
+			goto err;
+		break;
+	default:
+		break;
+	}
+
+	/* The command buffer need to be in the firmware state. */
+	if (to_fw && sev_legacy_cmd_buf_writable(cmd)) {
+		val.assigned = true;
+		val.immutable = true;
+		ret = snp_set_rmptable_state(__pa(cmd_buf), 1, &val, true, false);
+		if (ret)
+			return ret;
+	}
+
+	return 0;
+
+err:
+	return -EINVAL;
+}
+
+static inline bool need_firmware_copy(int cmd)
+{
+	struct sev_device *sev = psp_master->sev_data;
+
+	/* After SNP is INIT'ed, the behavior of legacy SEV command is changed. */
+	return ((cmd < SEV_CMD_SNP_INIT) && sev->snp_inited) ? true : false;
+}
+
+static int snp_aware_copy_to_firmware(int cmd, void *data)
+{
+	return __snp_cmd_buf_copy(cmd, data, true, 0);
+}
+
+static int snp_aware_copy_from_firmware(int cmd, void *data, int fw_err)
+{
+	return __snp_cmd_buf_copy(cmd, data, false, fw_err);
+}
+
 static int __sev_do_cmd_locked(int cmd, void *data, int *psp_ret)
 {
 	struct psp_device *psp = psp_master;
 	struct sev_device *sev;
 	unsigned int phys_lsb, phys_msb;
 	unsigned int reg, ret = 0;
+	void *cmd_buf;
 	int buf_len;
 
 	if (!psp || !psp->sev_data)
@@ -277,12 +564,26 @@ static int __sev_do_cmd_locked(int cmd, void *data, int *psp_ret)
 	 * work for some memory, e.g. vmalloc'd addresses, and @data may not be
 	 * physically contiguous.
 	 */
-	if (data)
-		memcpy(sev->cmd_buf, data, buf_len);
+	if (data) {
+		if (unlikely(sev->cmd_buf_active > 2))
+			return -EBUSY;
+
+		cmd_buf = sev->cmd_buf_active ? sev->cmd_buf_backup : sev->cmd_buf;
+
+		memcpy(cmd_buf, data, buf_len);
+		sev->cmd_buf_active++;
+
+		/*
+		 * The behavior of the SEV-legacy commands is altered when the
+		 * SNP firmware is in the INIT state.
+		 */
+		if (need_firmware_copy(cmd) && snp_aware_copy_to_firmware(cmd, sev->cmd_buf))
+			return -EFAULT;
+	}
 
 	/* Get the physical address of the command buffer */
-	phys_lsb = data ? lower_32_bits(__psp_pa(sev->cmd_buf)) : 0;
-	phys_msb = data ? upper_32_bits(__psp_pa(sev->cmd_buf)) : 0;
+	phys_lsb = data ? lower_32_bits(__psp_pa(cmd_buf)) : 0;
+	phys_msb = data ? upper_32_bits(__psp_pa(cmd_buf)) : 0;
 
 	dev_dbg(sev->dev, "sev command id %#x buffer 0x%08x%08x timeout %us\n",
 		cmd, phys_msb, phys_lsb, psp_timeout);
@@ -323,15 +624,24 @@ static int __sev_do_cmd_locked(int cmd, void *data, int *psp_ret)
 		ret = -EIO;
 	}
 
-	print_hex_dump_debug("(out): ", DUMP_PREFIX_OFFSET, 16, 2, data,
-			     buf_len, false);
-
 	/*
 	 * Copy potential output from the PSP back to data.  Do this even on
 	 * failure in case the caller wants to glean something from the error.
 	 */
-	if (data)
-		memcpy(data, sev->cmd_buf, buf_len);
+	if (data) {
+		/*
+		 * Restore the page state after the command completes.
+		 */
+		if (need_firmware_copy(cmd) &&
+		    snp_aware_copy_from_firmware(cmd, cmd_buf, ret))
+			return -EFAULT;
+
+		memcpy(data, cmd_buf, buf_len);
+		sev->cmd_buf_active--;
+	}
+
+	print_hex_dump_debug("(out): ", DUMP_PREFIX_OFFSET, 16, 2, data,
+			     buf_len, false);
 
 	return ret;
 }
@@ -1195,10 +1505,12 @@ int sev_dev_init(struct psp_device *psp)
 	if (!sev)
 		goto e_err;
 
-	sev->cmd_buf = (void *)devm_get_free_pages(dev, GFP_KERNEL, 0);
+	sev->cmd_buf = (void *)devm_get_free_pages(dev, GFP_KERNEL, 1);
 	if (!sev->cmd_buf)
 		goto e_sev;
 
+	sev->cmd_buf_backup = (uint8_t *)sev->cmd_buf + PAGE_SIZE;
+
 	psp->sev_data = sev;
 
 	sev->dev = dev;
@@ -1250,6 +1562,12 @@ static void sev_firmware_shutdown(struct sev_device *sev)
 		sev_es_tmr = NULL;
 	}
 
+	/*
+	 * The host map need to clear the immutable bit so it must be free'd before the
+	 * SNP firmware shutdown.
+	 */
+	free_snp_host_map(sev);
+
 	sev_snp_shutdown(NULL);
 }
 
@@ -1309,6 +1627,14 @@ void sev_pci_init(void)
 			 */
 			dev_err(sev->dev, "SEV-SNP: failed to INIT error %#x\n", error);
 		}
+
+		/*
+		 * Allocate the intermediate buffers used for the legacy command handling.
+		 */
+		if (alloc_snp_host_map(sev)) {
+			dev_notice(sev->dev, "Failed to alloc host map (disabling legacy SEV)\n");
+			goto skip_legacy;
+		}
 	}
 
 	/* Obtain the TMR memory area for SEV-ES use */
@@ -1340,12 +1666,14 @@ void sev_pci_init(void)
 		return;
 	}
 
+skip_legacy:
 	dev_info(sev->dev, "SEV%s API:%d.%d build:%d\n", sev->snp_inited ?
 		"-SNP" : "", sev->api_major, sev->api_minor, sev->build);
 
 	return;
 
 err:
+	free_snp_host_map(sev);
 	psp_master->sev_data = NULL;
 }
 
diff --git a/drivers/crypto/ccp/sev-dev.h b/drivers/crypto/ccp/sev-dev.h
index 186ad20cbd24..fe5d7a3ebace 100644
--- a/drivers/crypto/ccp/sev-dev.h
+++ b/drivers/crypto/ccp/sev-dev.h
@@ -29,11 +29,20 @@
 #define SEV_CMDRESP_CMD_SHIFT		16
 #define SEV_CMDRESP_IOC			BIT(0)
 
+#define MAX_SNP_HOST_MAP_BUFS		2
+
 struct sev_misc_dev {
 	struct kref refcount;
 	struct miscdevice misc;
 };
 
+struct snp_host_map {
+	u64 paddr;
+	u32 len;
+	void *host;
+	bool active;
+};
+
 struct sev_device {
 	struct device *dev;
 	struct psp_device *psp;
@@ -52,8 +61,11 @@ struct sev_device {
 	u8 build;
 
 	void *cmd_buf;
+	void *cmd_buf_backup;
+	int cmd_buf_active;
 
 	bool snp_inited;
+	struct snp_host_map snp_host_map[MAX_SNP_HOST_MAP_BUFS];
 };
 
 int sev_dev_init(struct psp_device *psp);

From patchwork Fri Apr 30 12:38:03 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233327
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 02D3BC433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:41:49 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id D0F6461468
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:41:48 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232894AbhD3Mme (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:42:34 -0400
Received: from mail-bn8nam12on2044.outbound.protection.outlook.com
 ([40.107.237.44]:33505
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232813AbhD3MlV (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:41:21 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=a198KZhO3nitFWinbFE4b+qH8U3Ny5uy1ACmGz77W8vHvdr0P81QF0YK3RBE6fZZhD4TA969dlbBr+bM6f8X1bZyUU8VStvOlYn0KV2ao5DjfXkLcb0s/0K3OrLlv002/FLHfWFTLcUEcVBEe7tPDds9xSyNbxVwvgav0qF3fLzSJKMBalQC53Y0hKr8+srPMpIVJUILCQK4Tcbq32W/tE/UtNjW29hvKZ5MEr0x5yL2JJC7AQVu03NnWOiEkb0FHRM5xMI340+GR76VkTAY0DVANo7oOkJQeZ3f5Bro8+GUiPSfq20BRvXWute2a42joKl2zPeXi8ePI57DqspbyQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=+Ifh8ZX/B/CMwX7nWhsjmsJ9swM7UDJIRvcVNjt3ou4=;
 b=lfH4q0a2MTDui13w+2fVjutgrwAO4eo/J5yuqXE3Ecn0jWhzHKnBVpetNOEFwKrAkf39PauSiWOmqtho56P3tKnLfIi7uEtrknfA//oVY4Iu2RvX9PmaJ2OOt0FRX2CBjpDI3icISfyf0W1OS5YvKjr7saZynZZWJaaeOiuGgqT8ej29z5RKJpdD5evmrw5mQjwiEghX6qnL8Y53UqKai9rtlEZAnTvk/nSOSXIiXpr1IpIBTlbQAEPx16FkcrV2W+2sVULOkBFsxO8A27GCDGE3FK07NS95ZRYcLnfpXdJ5f5dxhtM9s98Tw+/sKA/c82FGDSSK9cmPI3O1Rxzqag==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=+Ifh8ZX/B/CMwX7nWhsjmsJ9swM7UDJIRvcVNjt3ou4=;
 b=eEYC1nbsbAmga7wlX/U6XSdjtYHFClFkQhBaH9DHnqa//kTwjoV5Qj7bZCMX1DDdhLfvopLxoIjKjs1QvDEH/rCE4PqvISJWzeET3UolczbUJFGJ1UL63U4Pl+M5cP18178vzqCZwip+g+7nNPhsU7srIZYb2lu0DqJGIerREdQ=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:07 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:07 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 18/37] KVM: SVM: make AVIC backing,
 VMSA and VMCB memory allocation SNP safe
Date: Fri, 30 Apr 2021 07:38:03 -0500
Message-Id: <20210430123822.13825-19-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:06 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 22f2ca94-b83a-4ee7-27ea-08d90bd4f1e3
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB2832047ADF8EFDCB8568016BE55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:8273;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 DhQLuYsGVYKWmRkdLg/PI/u3zlZYVyIInkpSpkmXxkTrmGLddrRUgRi9tjZ1Kdg532DSLgXT50fwwXZ4meI6LkspWbWJ1P5j/asE/hbADfDJvpMovwkBO3d1AqPzvbE1GMTyTcPJnflKuwvi0k149GnJAc4MBIHmb8vpZocck+Dl4HQ+ZBrbiYJZw+WQHTmM5QAxpnivsRMVcl7OoBlewzx0zJmhyk11v7GC+8WacGahBZ0nN52Pl2bTPKMEzYHheIBEBO+WQwu97uaCJ4A/C92Ib/qJgrAbvPc/eZIiscNBqsATi5d1L0H5hs2jM+CU2lD79DcLyDganIXWhxyDGXEAX33xKHmb679BC+Vu+IbW8VNLG3b3uLsJXRSHceY5I8F7fBASbV+eUogeG9c1eE+Q1wTVPNhI8tsAynWrSuurO6RLdvMTyJOQjc7yD+TrOeEp4mr+37REn+fjKqhCR0rSo3v2jYzM1bdxMQaSuZiYfKXRzUR/IrZ8mcbCWVde6qn2ujtcAxpx1D1exEVenHYNWutRvxsUYJYrTNBV4kamePlkVIB6MzBbK+cd+sn2eYJjODV2mgdBb5V4fCZpF05mBUUS2cv6Z5wS/+CN3sX+CgB1POzM2D6CzM0wfkEvpaFgHUzyrx509O76D5kT6A==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(6666004)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 Sxqr0lsepIZH1a53CZhnMOMrIOaEXCWeaNvaFkSENw0X/lZZAYy6Vb6tRClV82ajWQdCQQPsY6cXPGqeG+CHtsSq6K5Aqowt6RKSGJeoKspXVpb+tkNWZ+xFpOXJWIqwIo8qiDSHX5/eyYk3wzqUUCfeozIYHzQGRVDbeRKsgrWpwgKX8dFRVSg9X3yLu4bmQkH1AowhTrwFQy3RdMVeg2U6dX0GKk9jXBHNxk64MK5e0UHHYzn6ePBLMToQKSHlZnCtOMvcwQ8B7/6prVh3gxsTsoiWq5IeeNy7oOoTtIBELIpKcLx5UR08c8qOVYcBv0cEOIzI7SRamgnZuKFYO49DBonxwPslx4Mc2QBR06SNrzCt7yXmwtPLEK5mqjLW5vLTkuZCe3uXagiiL47NV6iaeYZpxanHjghQWmViKbMSxuxzw5JGj49nYfZjX4GAf3NikZdkOrQ9AI5RTVllZd9YmhRgUYOPOu6Q2oEEdqMj2OI9e7CbFz/staxv9oHsv+wEqvqnC1bZa9UaKWOGB9B/UN/7PELXNXxX8wFJpW67fxSBjluq5cFibUkgOvi1SvB7O8MmViEiBNxW72at75UqmYYpO+rX2e+mJRVz5XvS0YkAa2OM+6lfZ2WTvN0uFh8iIPUY+78FkTGcqf4ivN6PRAUCzUE0MR4j0p2OWelAexEj7n0RCeVu80QiFdVuPHOgA2GnJDR9SrKleqsf6fx6Vk1d9xukoeUpcTF+5Uiwy5OmQwoDxoKv04VifsWAqFO9BJywJBS07zsl5t3bGMHpHzy7BDn2ACulqI5I0gkeg2yYjKUoHIrBBD82SmNftT47OWkxZbwF3xqGkv07qp1NWTuBOClBKdT6bChEOHQbdkfnvQk2zY3RzgU7g+9Nil8anPF0khm9uhKIY8Lw7q+3p3zPUEbD8zL4wTBPiasV318J3arj0dY0p98y5iw/W281LqYIV7Z9NdYn1n1K9sDRz7oK4HqA127dUnQdIo1kOsUNBEhSgzJv/vCmPGvcvnrCXwy1RGyADiv94DIYjDW+8mP39SnNV9WCk4GR84nyUUZI5PlTrCj2Ik9ye/fdn7DlzUSD42gfhzuubBatEnVN7TrS8gnTw9c+05XyM3DLKpPPO14KuNRc719Az+WzWLPzgy509rcdmLaF6pF91QiScheFx+dA13jubyemH4Ch9dljbGnu9Id3w5nUTbaald8ivFyu3tQ2VV7rlHmBDnRxkCtY3CmM/v9yGdY0UO8pL2cNbRpCCImKYBikAAHMPtsAznyPAg3wA50E8K/wM3/G8plVGC+e7NO8Igv9E1+NhG4af3tV7MELUqSwpvx0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 22f2ca94-b83a-4ee7-27ea-08d90bd4f1e3
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:07.0722
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 Od5QoALLHSygoy7ID93fwTjvcFLrBmbQjuQq84TuamcojcFAOTxWqyk/UnQxZjlEBtLkGx1zlOjNOH4akuXoLQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

When SEV-SNP is globally enabled on a system, the VMRUN instruction
performs additional security checks on AVIC backing, VMSA, and VMCB page.
On a successful VMRUN, these pages are marked "in-use" by the
hardware in the RMP entry, and any attempt to modify the RMP entry for
these pages will result in page-fault (RMP violation check).

While performing the RMP check, hardware will try to create a 2MB TLB
entry for the large page accesses. When it does this, it first reads
the RMP for the base of 2MB region and verifies that all this memory is
safe. If AVIC backing, VMSA, and VMCB memory happen to be the base of
2MB region, then RMP check will fail because of the "in-use" marking for
the base entry of this 2MB region.

e.g.

1. A VMCB was allocated on 2MB-aligned address.
2. The VMRUN instruction marks this RMP entry as "in-use".
3. Another process allocated some other page of memory that happened to be
   within the same 2MB region.
4. That process tried to write its page using physmap.

If the physmap entry in step #4 uses a large (1G/2M) page, then the
hardware will attempt to create a 2M TLB entry. The hardware will find
that the "in-use" bit is set in the RMP entry (because it was a
VMCB page) and will cause an RMP violation check.

See APM2 section 15.36.12 for more information on VMRUN checks when
SEV-SNP is globally active.

A generic allocator can return a page which are 2M aligned and will not
be safe to be used when SEV-SNP is globally enabled. Add a
snp_safe_alloc_page() helper that can be used for allocating the
SNP safe memory. The helper allocated 2 pages and splits them into order-1
allocation. It frees one page and keeps one of the page which is not
2M aligned.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/kvm_host.h |  1 +
 arch/x86/kvm/lapic.c            |  5 ++++-
 arch/x86/kvm/svm/sev.c          | 27 +++++++++++++++++++++++++++
 arch/x86/kvm/svm/svm.c          | 16 ++++++++++++++--
 arch/x86/kvm/svm/svm.h          |  1 +
 5 files changed, 47 insertions(+), 3 deletions(-)

diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index ad22d4839bcc..71e79a1998ad 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -1381,6 +1381,7 @@ struct kvm_x86_ops {
 	int (*complete_emulated_msr)(struct kvm_vcpu *vcpu, int err);
 
 	void (*vcpu_deliver_sipi_vector)(struct kvm_vcpu *vcpu, u8 vector);
+	void *(*alloc_apic_backing_page)(struct kvm_vcpu *vcpu);
 };
 
 struct kvm_x86_nested_ops {
diff --git a/arch/x86/kvm/lapic.c b/arch/x86/kvm/lapic.c
index 152591f9243a..897ce6ebdd7c 100644
--- a/arch/x86/kvm/lapic.c
+++ b/arch/x86/kvm/lapic.c
@@ -2441,7 +2441,10 @@ int kvm_create_lapic(struct kvm_vcpu *vcpu, int timer_advance_ns)
 
 	vcpu->arch.apic = apic;
 
-	apic->regs = (void *)get_zeroed_page(GFP_KERNEL_ACCOUNT);
+	if (kvm_x86_ops.alloc_apic_backing_page)
+		apic->regs = kvm_x86_ops.alloc_apic_backing_page(vcpu);
+	else
+		apic->regs = (void *)get_zeroed_page(GFP_KERNEL_ACCOUNT);
 	if (!apic->regs) {
 		printk(KERN_ERR "malloc apic regs error for vcpu %x\n",
 		       vcpu->vcpu_id);
diff --git a/arch/x86/kvm/svm/sev.c b/arch/x86/kvm/svm/sev.c
index 5f0034e0dacc..b750e435626a 100644
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@ -2696,3 +2696,30 @@ void sev_vcpu_deliver_sipi_vector(struct kvm_vcpu *vcpu, u8 vector)
 		break;
 	}
 }
+
+struct page *snp_safe_alloc_page(struct kvm_vcpu *vcpu)
+{
+	unsigned long pfn;
+	struct page *p;
+
+	if (!cpu_feature_enabled(X86_FEATURE_SEV_SNP))
+		return alloc_page(GFP_KERNEL_ACCOUNT | __GFP_ZERO);
+
+	p = alloc_pages(GFP_KERNEL_ACCOUNT | __GFP_ZERO, 1);
+	if (!p)
+		return NULL;
+
+	/* split the page order */
+	split_page(p, 1);
+
+	/* Find a non-2M aligned page */
+	pfn = page_to_pfn(p);
+	if (IS_ALIGNED(__pfn_to_phys(pfn), PMD_SIZE)) {
+		pfn++;
+		__free_page(p);
+	} else {
+		__free_page(pfn_to_page(pfn + 1));
+	}
+
+	return pfn_to_page(pfn);
+}
diff --git a/arch/x86/kvm/svm/svm.c b/arch/x86/kvm/svm/svm.c
index 392d44a2756d..ede3cf460894 100644
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@ -1323,7 +1323,7 @@ static int svm_create_vcpu(struct kvm_vcpu *vcpu)
 	svm = to_svm(vcpu);
 
 	err = -ENOMEM;
-	vmcb01_page = alloc_page(GFP_KERNEL_ACCOUNT | __GFP_ZERO);
+	vmcb01_page = snp_safe_alloc_page(vcpu);
 	if (!vmcb01_page)
 		goto out;
 
@@ -1332,7 +1332,7 @@ static int svm_create_vcpu(struct kvm_vcpu *vcpu)
 		 * SEV-ES guests require a separate VMSA page used to contain
 		 * the encrypted register state of the guest.
 		 */
-		vmsa_page = alloc_page(GFP_KERNEL_ACCOUNT | __GFP_ZERO);
+		vmsa_page = snp_safe_alloc_page(vcpu);
 		if (!vmsa_page)
 			goto error_free_vmcb_page;
 
@@ -4480,6 +4480,16 @@ static int svm_vm_init(struct kvm *kvm)
 	return 0;
 }
 
+static void *svm_alloc_apic_backing_page(struct kvm_vcpu *vcpu)
+{
+	struct page *page = snp_safe_alloc_page(vcpu);
+
+	if (!page)
+		return NULL;
+
+	return page_address(page);
+}
+
 static struct kvm_x86_ops svm_x86_ops __initdata = {
 	.hardware_unsetup = svm_hardware_teardown,
 	.hardware_enable = svm_hardware_enable,
@@ -4605,6 +4615,8 @@ static struct kvm_x86_ops svm_x86_ops __initdata = {
 	.complete_emulated_msr = svm_complete_emulated_msr,
 
 	.vcpu_deliver_sipi_vector = svm_vcpu_deliver_sipi_vector,
+
+	.alloc_apic_backing_page = svm_alloc_apic_backing_page,
 };
 
 static struct kvm_x86_init_ops svm_init_ops __initdata = {
diff --git a/arch/x86/kvm/svm/svm.h b/arch/x86/kvm/svm/svm.h
index 053f2505a738..894e828227d9 100644
--- a/arch/x86/kvm/svm/svm.h
+++ b/arch/x86/kvm/svm/svm.h
@@ -553,6 +553,7 @@ void sev_es_init_vmcb(struct vcpu_svm *svm);
 void sev_es_create_vcpu(struct vcpu_svm *svm);
 void sev_vcpu_deliver_sipi_vector(struct kvm_vcpu *vcpu, u8 vector);
 void sev_es_prepare_guest_switch(struct vcpu_svm *svm, unsigned int cpu);
+struct page *snp_safe_alloc_page(struct kvm_vcpu *vcpu);
 
 /* vmenter.S */
 

From patchwork Fri Apr 30 12:38:04 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233329
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 216DFC43462
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:41:50 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 0784961574
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:41:50 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233209AbhD3Mmg (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:42:36 -0400
Received: from mail-bn8nam12on2074.outbound.protection.outlook.com
 ([40.107.237.74]:41101
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S233237AbhD3MlY (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:41:24 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=dXRLuqpUHg8sNLdnnjsIYrIKlsF0zWwdvT9m4Xm6fy8aqISm9U5/1oGY60atnie7fVECMXDt12lZK/VwP2AJiITvC0zkocYeLpzuAWIOrHSzv+i9P7INNj3Wkcr7rlCNDidCXr6p8Hn8b9zw3rJ9oXXn9wLi/QQR9yTiS2t9TCSTINueKTPdXsuatUAC5gNJw7td5njegvW9nN23HR6tFH5hevGnJqGd7v8g+W868xtUuTb5ajkvQaAhmb09SGvFTtNWMca9YmWFaU88z7Uhk9DFtNMnTl2oSP6wxp+fCtsXRI3bncTQQF/+0W4yqGOQlRq6fnNnSu2ypn27gPeq1A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=AyvB6OnFxDA3FMZa9lz50v/vprWkE6Bze0Khl2JScwI=;
 b=InrAeabHx0ZnTfusApv/6jLpqMTfo1wmAqrLSouNAXYbvNl7uvmplrostEVCuE/NbzgoEjVBluRntF1fBs9QJBeX12N7EJoQK2rzGl5MHi+oHYsL+u/d9B5gLUsOALvM7xGSUO6wtQPkFxtb69uoTr5Vt944iVupnjQKbppelzFeMsbNSoaoGFteeWCz8Yui4TuyosUkIhh8rw25BuZxmNn5DpzN/y+hkbu0Ds8DnKMwQ1PK1jZBMm/PUDkFSglUk3sOFAELM9CPL/nY3OHPNrvAUEgmm5Wv8qX+6uXRsuVkJyIQTobCcolXXd7e9yizCLUG2artzKJhUGpeGiwZjg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=AyvB6OnFxDA3FMZa9lz50v/vprWkE6Bze0Khl2JScwI=;
 b=Imx5LsF44Nst0za6b2Stj4wmMt48fKuocIoLx5ariuSjLdxAHVbc2bsdaglbnjtz9GNLVlS4o/LiWeMVQiP8vBmMTQMrpzGZYgVBpUdonInbV/hM3yl9c0WMFzh0Fujw6TfEiTOWdtsR9lIj08lMbwFVFKAYXCOz/aN17VoDBak=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:07 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:07 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 19/37] KVM: SVM: Add initial SEV-SNP support
Date: Fri, 30 Apr 2021 07:38:04 -0500
Message-Id: <20210430123822.13825-20-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:07 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: adbbbe28-cdb0-43cd-d0e7-08d90bd4f260
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB2832CD686B0C355ACCAB5460E55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:2733;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 5RPmWOthSyrJV14V1g/3NHtEoNDw/9mnxbHZVl9jTYNyA3oiBp1iMzGdS/unY+xagH6UZ5Xo4lchJ8PJ3iF1HdDLIvCEB7nsfD06FISOy2YoCZ6siaxLeH/seUejXxS4HhxWdLCHU+J9uS4xslC7j513DwI7oFUTE+2kTz9235t+CEBynGRiwLeYn+o/PtjjledUaGUcKAxvKDDNaAS3KqY/PaCa3WCbZ/5pBGYQvFXq0M5Acr0eMQhmQVuOuLqWtQ2zUu8pIjGx7A6dvWuL/8uTrTqhymkW0Khza+U4ALsWrRiNEzuJ9JOFyHx5nXZDq9nbjAtKvpqNJuQT+vjxEhlDUOGRkFxvh2GxJU21GuQ2DxxkuyZWlFBs3ZWE4bV33l6wQtBIP6WpoPQESqtQZ+WiekrjJ1sBOE4DUkni79rvLvOk8sWAw73RM216lcUeTkil46fIQltZWn/FlXCDsmKV88Wn6iIOKpQJq1Es7LGZmS+Jahs8YC8ovSiU++mI8EY37npLzARN+Fm/rsspVFrw3yf4UBuWx8RbsVyJfsOK4AGP2R6KUXRahHz+L/sQkQJGzLDmt4QkKb5tcup62DU/dKIhZ0idFeuhnXwK/p8C14j7GXTa/BgUDO+pw2flQLnDUV1jXRmHhT1lQUYjqQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(6666004)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 Xu9GIyKGec+Nl8/wjELYLXnDKd9URnn7SehkDt1fFD8cQg5Hp+eefrKjH3suu4RV8VUiVGWzJMe6r/RJCMCczesnGZX27NH11YI1+JNU0H7MbBwzxBVBVuHUHtNpqj7kYu6YDbFUhIsKu3CykYDnJIlGnVxwN9yKEYLt5FiZ8Apv+JP4Mk8ZtDnsQm/xxhf7c1AJzEROOGiyrl2hlHWXuB1aM/84wN5dFnGmiJUrV55K+EEvP+BuEPesgIH+4ZrE+ZQJLKNkHV9SsV+nSeNqyq56jceCO+te5FLyHnlm+CxJ4fwE+oGUrL35igz/9h7t7Y2JCtqzOWAKEMrmVwA66Y10sg+tF18FUOF1VUWK5IK3t/MR+UtqGAqQeHHCBFte1rOGgV8eHWVlQu95w8Pi4wzCzSJtYCHCCy0BlxI4DQpmdZK325l9SNlmRlzrE78YOgF+Y8Qjgovr7oPRIPrZrd9VfIwdkv5ZNi8eN8RWsP05fUx6474lia6hT9YkiiTi7Yqq4AS4/q15KzOjtWw06pa/jn4NpIdHBScgml4FENy5nNuYhSqhG+ZLBJ3FCJZsM1697KNF7ASxlZsoEW65S0W/WZvXgoH8a3mMWumVjK7juXAAkpEKstwfeZqdjqcDNPxUey8HI/+Qg3bHH04YfOcAeV4CxuxLiVnxUMTXHQxZeSq6wvmCY4/1wkek054ujYhFr0zkuivaT29pbbZs0rIO8q/sgjz/4DrrrNhWAMZmiAvO+uK65z1jKfJ4X/A2pcW/80vOvgpQD7/1w5KqWKvCMp51WOacWZxqLeTPl0NDT4CO+4r7xzcb/IiKM7Dm6evpTaqu9FNhll089zN6msjOwhb+wOI35qIsYmkzUAJyImSjSZu/trBo4v4Cl6fIJ8SooxvacL3HMQmkoOqv1QuJJRZ5GfifTYJyjaNoIce7sNC1Cr5j1FsiJnTcChLUrvkK0im1yiwNuyZRxVZcdusyEJCwDYezU7s965LlG6XS2HrLbHXTgWjEhc8PgOa6+jOyD1M2BO8d/L3g0Ezh6ifSKyfpTH9XOA9HAdEK2YqsbEYaB+XHFYOQN5A09Zi/lk56x+zDwFeR+ElytbswZ410qJuEJdtwEq91lhECgF50GOabym+bxKLXyKRQo5+7KAXmg6N83LHd6Vk15dVAOSi0vWa+l9gnnyWVJ12P2ACeaBT/bVq+53lnotGwljvu9FmKIs1cHKFxR45OZadVhJF/AszA25IZ2TKoIN7KQknUqtdZf2d2otAiXFsS121svIw+gewC46Yc3CUiZePL8T13IbR2shGmYv5pxKOaIOhPJlL6DswPoUtTokOaBGu9
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 adbbbe28-cdb0-43cd-d0e7-08d90bd4f260
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:07.8448
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 +bE/7CdhVydKmJ2/A13w3uqWOmPOptP1Sx0vioD6E2xs3qISKlWVj37uE/rKSXdih3GOPDnZegNWcNnGb4D8uA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The next generation of SEV is called SEV-SNP (Secure Nested Paging).
SEV-SNP builds upon existing SEV and SEV-ES functionality  while adding new
hardware based security protection. SEV-SNP adds strong memory encryption
integrity protection to help prevent malicious hypervisor-based attacks
such as data replay, memory re-mapping, and more, to create an isolated
execution environment.

The SNP feature can be enabled in the KVM by passing the sev-snp module
parameter.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/svm/sev.c | 18 ++++++++++++++++++
 arch/x86/kvm/svm/svm.h | 12 ++++++++++++
 2 files changed, 30 insertions(+)

diff --git a/arch/x86/kvm/svm/sev.c b/arch/x86/kvm/svm/sev.c
index b750e435626a..200d227f9232 100644
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@ -52,9 +52,14 @@ module_param_named(sev, sev_enabled, bool, 0444);
 /* enable/disable SEV-ES support */
 static bool sev_es_enabled = true;
 module_param_named(sev_es, sev_es_enabled, bool, 0444);
+
+/* enable/disable SEV-SNP support */
+static bool sev_snp_enabled = true;
+module_param_named(sev_snp, sev_snp_enabled, bool, 0444);
 #else
 #define sev_enabled false
 #define sev_es_enabled false
+#define sev_snp_enabled  false
 #endif /* CONFIG_KVM_AMD_SEV */
 
 #define AP_RESET_HOLD_NONE		0
@@ -1826,6 +1831,7 @@ void __init sev_hardware_setup(void)
 {
 #ifdef CONFIG_KVM_AMD_SEV
 	unsigned int eax, ebx, ecx, edx, sev_asid_count, sev_es_asid_count;
+	bool sev_snp_supported = false;
 	bool sev_es_supported = false;
 	bool sev_supported = false;
 
@@ -1889,9 +1895,21 @@ void __init sev_hardware_setup(void)
 	pr_info("SEV-ES supported: %u ASIDs\n", sev_es_asid_count);
 	sev_es_supported = true;
 
+	/* SEV-SNP support requested? */
+	if (!sev_snp_enabled)
+		goto out;
+
+	/* Is SEV-SNP enabled? */
+	if (!cpu_feature_enabled(X86_FEATURE_SEV_SNP))
+		goto out;
+
+	pr_info("SEV-SNP supported: %u ASIDs\n", min_sev_asid - 1);
+	sev_snp_supported = true;
+
 out:
 	sev_enabled = sev_supported;
 	sev_es_enabled = sev_es_supported;
+	sev_snp_enabled = sev_snp_supported;
 #endif
 }
 
diff --git a/arch/x86/kvm/svm/svm.h b/arch/x86/kvm/svm/svm.h
index 894e828227d9..85a2d5857ffb 100644
--- a/arch/x86/kvm/svm/svm.h
+++ b/arch/x86/kvm/svm/svm.h
@@ -58,6 +58,7 @@ enum {
 struct kvm_sev_info {
 	bool active;		/* SEV enabled guest */
 	bool es_active;		/* SEV-ES enabled guest */
+	bool snp_active;	/* SEV-SNP enabled guest */
 	unsigned int asid;	/* ASID used for this guest */
 	unsigned int handle;	/* SEV firmware handle */
 	int fd;			/* SEV device fd */
@@ -232,6 +233,17 @@ static inline bool sev_es_guest(struct kvm *kvm)
 #endif
 }
 
+static inline bool sev_snp_guest(struct kvm *kvm)
+{
+#ifdef CONFIG_KVM_AMD_SEV
+	struct kvm_sev_info *sev = &to_kvm_svm(kvm)->sev_info;
+
+	return sev_es_guest(kvm) && sev->snp_active;
+#else
+	return false;
+#endif
+}
+
 static inline void vmcb_mark_all_dirty(struct vmcb *vmcb)
 {
 	vmcb->control.clean = 0;

From patchwork Fri Apr 30 12:38:05 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233339
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-13.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_PATCH,
	MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,SPF_PASS,
	USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 3558FC433B4
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:42:41 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 0D7A16147D
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:42:41 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233070AbhD3Mn1 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:43:27 -0400
Received: from mail-bn8nam12on2054.outbound.protection.outlook.com
 ([40.107.237.54]:58881
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S233310AbhD3Ml7 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:41:59 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Ha46fyYv0VCikiznudGiZeN6znVACKvg7oTmSiOomm4G8NUOv9ZEoJe0WDQ2SyQOMVH14V8jwQqXWEF+WJCJr5mia8MeYQ+F/N137Mm4tBQVrMb/tx5D1w6OC4zAbupqmqOJayO66exC1aOE5zQMdfGYIQ04tp658sNQtPKtcLtJS/+2KKR6pRjHvjXZi64G1Qoiciwg83zQqHlj1FYdR3GTyh9S2pzCzx3ZATXuX5jRBatWKAgL1tl5F7ktMHdjsS+j7RIyyR52l3dN9W1ZExE9CyBHmRI7A2hqdlYQTcj/0LviwPG9yqBeAPK5ZmtXTMNTfiKJPlPBLFffLqMREg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=abYCMZAMD//6ueJlDs7Peo0qXXO5JGxNaccYluRezJk=;
 b=MvFBSPGOE9Yb++mS0TwdJjqjxEAW81DvM7phGn4ouON/fMN3gnYMU3rxEsj1FUTjb/UR/wKFsmnyqMXagTFvpQoh2AITUotyo4s+A5F8snpBVtErC7FqHp1yvYGsTKUYVQU6qKiJLqOvoXAqhgRctCiEm+WRhM7+eM0Kg6Xq7uZUjsKjkkgVBWNLZT5J85FqQ/qVBz83Ye7SKy6lf2Cc592vnQcc0/m6cL4707NsuAVT1ubdz/vCF5YW0M8eydioWBXOA/UfsmyJZ9AkX3N8dfUzbhTIpWHjg1QCrRVZQAKRe3uyyLGQT+Sv2Cq79f8xUkzPNkjxU4JXohBD9tJXHw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=abYCMZAMD//6ueJlDs7Peo0qXXO5JGxNaccYluRezJk=;
 b=TLzGDAG8/eGOdEypwRfntm8Flu38QE59EQKpGvKjn5BQ386IYM6+jB8+vBVJxoIDj0J/mnVtCMjK64v/9HVOja5K8s1MBDjvNiWK9FlDbsrHixkGGtvBOXLkzMqUUR6GPnYvGOThcmkYjjbZANcB7VWFvocwOeTzkLArRIPybss=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:08 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:08 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 20/37] KVM: SVM: define new SEV_FEATURES field in
 the VMCB Save State Area
Date: Fri, 30 Apr 2021 07:38:05 -0500
Message-Id: <20210430123822.13825-21-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:08 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 0f35ffee-1ab1-494f-e7fc-08d90bd4f2c7
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB2832F35899E70D698ECF449EE55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:7691;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 tDwQYsXb6XU6mjH+qWwtY65pBulO+i/tJoQe/ygiM/0jDcOYH9iYLQoAKwLrN+6Y/9ZuVhZ1qTYwod2xVcFyJqtvvU5SJLQRczhX55KS+d/l06g38KmdPXMWyne5BDHQPAqePzcXBJD7hWrV43HiZnJa7A1MwfELGTVcDqyH4GlRj348A5UudpQ1pfmKLbI+jH8Wa42OkeTfvL8IAyQzXkApfKdZ4F3iC6ju94GghwD5E0CQR8gpu+LLAvRnkdlH2h/135xXFWfij7kamPOFSmGyNTgtT7n5Uu5KA96x5VLUlBeMeDegVao+C6Y8f2hHkyq5SZ8BRMU8xvRdRxdyuq+GDmvkckSlmLoW+/KIfIOeYF3pkLhF2VrBoe8+ZOO4AuUXSMYBbymCztjVhMxN8G2jpqF6n72ML41HFyXLX/3XLYSZAkpKdPMZbRTgkoH2bmUlh8W/rD1W2vn4CgV6wdCJ5YdZy5KiPEnohmMpbSNA9SUViu/XbGebna8UVMcZzKxzbF9kaWRbnNNiOhP9izyR+chKuWmvxyO3aMtb/3M1J9GntwvnI92CKdsAaMAygnLvmzDQTuGKNv0HUKKwW1GYZmCpeKeVo2qdspu9k1noBUnolgauKm7eLYRmBJoLdTmzS0zh5rD57AvtxbP3bw==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(6666004)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 u+h8JxwtQISEIqQnohVaNXUx6Swe8spI00s5oHnBU730CoFucsOVILL1YXnl8YhUTIN686+AiMYZQ28w5w7gXnfezzlLCKpluQZHOZQ91OYAnizpzUjeEKdJ5BMI+cHcKEX0ifEg5OVBTvsgmvgW2wuW8Uqw31Qy31E3730pRODfqoC7V4jr0up/X7bJOTAFa+T5vjooKYFMToPkIzKTtjEYC4nahnpuxqQAI0fxRYO2KS8Zjc9Gr5TieIClWjmj/Tj+AvfezHW/lBu4Ow1X/q/0MhbYhjdCyRIIfWymQegOgxJorL22inXWB/5/Fr+LZSB7Y7MIEi3VZ5hV0VvJQXWEaARnFRudLpgXYxjeGeYryTdoie5OmS+8wR5eY0jpvuYRj3mnJpGDRETKy4HanTNeDcRcx4EM48Sn6YBVeH9Kv+VryUe9EJZ1Jm7U5rjkQyLBwoYWcGu69GW3cdEA0lREZ9uEDRNXqG0jz2LbSyMF3WgKO3cdXcFTP6sZkKOHztwuNEjYmPBO8LbyLQQAITEa7v5nFfoTmNKvE3mozsGQVoY2UQPnoNB0bAGO5Mh8dVUULGdmArQnpkXxH5sM1o81g63LR70nFVhfLGG5EqotM9pMspNhMl077jkyIgsS7qbz0bsyNJ9cXj5I422Mknnut4zyZqSGURVKTqGjGy8I3YyUmeJvCqVZCmvaT2zE+Alf+g1YXDm/HUp4hAsgtKGcvhDMG2+xDGXxw+9wrmE+qgNeX58/xEUaAZus6CIwB7Ayvmbs0+V80nIBSxKy88jv5dS7VYsCMO7gEzJjP0S844A+uA5qqiArD9UcidK2T7L7t9dlq/UUJQPemtA+7awWYGGhqAmqDEe+zn5kjF0kfO/Svtv7ZVlJylgZCl/zUsWI0dfRtZCmFHoNtxOZF0ckmL7kHTgq10ClF3x2q+ptU9gs1KiAP7pn5CUKcnKI5yTXQUV5XsCXTRec3VUCPmKcNO8aXNnj8+zgTCjLp7CuXCG2fZlT8yL+cuSeEWmyPqVwqVvs0bwRla9P5r30U8+3ZZogPnAXNBqFzYMuT9wxHrnySx9L2x3Q38xIRE/4OPNRHn1KAwZqIqrOKhCFr/Kz/DfKovmJcdM9Zmq3dF5xhW/jYjvWz12IeYpkkhe7CrRiK8kAbcYxAoVbTNXn5UjNpCrZyT6zttIdHcudXHUEf8IBHqGwzzg408W9aj9Zu/KEtMKjGw1W639vX50P/wmAuvck/4I6ipLz8+VyurIsx7eichxnzsQNkIpMB3ZZgHdMwuO7iRXJDtQGY9dsJCmDLHX0SRNUyJKLen/uJPF9exHVCapCLRxhFfR9tUDX
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 0f35ffee-1ab1-494f-e7fc-08d90bd4f2c7
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:08.5324
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 cyuDUIBgyQen1jcXFc51cFiMNN0Gex3xvGWApCQygaARxvllRPe2xjAIPdgRhoVC1IMVVdfWoFtfkzi+MvIH2g==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The hypervisor uses the SEV_FEATURES field (offset 3B0h) in the Save State
Area to control the SEV-SNP guest features such as SNPActive, vTOM,
ReflectVC etc. An SEV-SNP guest can read the SEV_FEATURES fields through
the SEV_STATUS MSR.

While at it, define the VMPL field and update the dump_vmcb().

See APM2 Table 15-34 and B-4 for more details.
---
 arch/x86/include/asm/svm.h | 15 +++++++++++++--
 arch/x86/kvm/svm/svm.c     |  4 ++--
 2 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/arch/x86/include/asm/svm.h b/arch/x86/include/asm/svm.h
index 772e60efe243..ff614cdcf628 100644
--- a/arch/x86/include/asm/svm.h
+++ b/arch/x86/include/asm/svm.h
@@ -212,6 +212,15 @@ struct __attribute__ ((__packed__)) vmcb_control_area {
 #define SVM_NESTED_CTL_SEV_ENABLE	BIT(1)
 #define SVM_NESTED_CTL_SEV_ES_ENABLE	BIT(2)
 
+#define SVM_SEV_FEATURES_SNP_ACTIVE		BIT(0)
+#define SVM_SEV_FEATURES_VTOM			BIT(1)
+#define SVM_SEV_FEATURES_REFLECT_VC		BIT(2)
+#define SVM_SEV_FEATURES_RESTRICTED_INJECTION	BIT(3)
+#define SVM_SEV_FEATURES_ALTERNATE_INJECTION	BIT(4)
+#define SVM_SEV_FEATURES_DEBUG_SWAP		BIT(5)
+#define SVM_SEV_FEATURES_PREVENT_HOST_IBS	BIT(6)
+#define SVM_SEV_FEATURES_BTB_ISOLATION		BIT(7)
+
 struct vmcb_seg {
 	u16 selector;
 	u16 attrib;
@@ -230,7 +239,8 @@ struct vmcb_save_area {
 	struct vmcb_seg ldtr;
 	struct vmcb_seg idtr;
 	struct vmcb_seg tr;
-	u8 reserved_1[43];
+	u8 reserved_1[42];
+	u8 vmpl;
 	u8 cpl;
 	u8 reserved_2[4];
 	u64 efer;
@@ -295,7 +305,8 @@ struct vmcb_save_area {
 	u64 sw_exit_info_1;
 	u64 sw_exit_info_2;
 	u64 sw_scratch;
-	u8 reserved_11[56];
+	u64 sev_features;
+	u8 reserved_11[48];
 	u64 xcr0;
 	u8 valid_bitmap[16];
 	u64 x87_state_gpa;
diff --git a/arch/x86/kvm/svm/svm.c b/arch/x86/kvm/svm/svm.c
index ede3cf460894..1b9091d750fc 100644
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@ -3191,8 +3191,8 @@ static void dump_vmcb(struct kvm_vcpu *vcpu)
 	       "tr:",
 	       save01->tr.selector, save01->tr.attrib,
 	       save01->tr.limit, save01->tr.base);
-	pr_err("cpl:            %d                efer:         %016llx\n",
-		save->cpl, save->efer);
+	pr_err("vmpl: %d   cpl:  %d               efer:          %016llx\n",
+		save->vmpl, save->cpl, save->efer);
 	pr_err("%-15s %016llx %-13s %016llx\n",
 	       "cr0:", save->cr0, "cr2:", save->cr2);
 	pr_err("%-15s %016llx %-13s %016llx\n",

From patchwork Fri Apr 30 12:38:06 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233341
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id BD8A0C433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:42:46 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 92A406147E
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:42:46 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232911AbhD3Mnd (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:43:33 -0400
Received: from mail-bn8nam12on2060.outbound.protection.outlook.com
 ([40.107.237.60]:34272
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S233348AbhD3MmF (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:42:05 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=W6VC3uWX1/gcM9A0yXzq02g7Fp0Kmig2/yxSShtsTaumAsfoagt+BMdgfYX0iYC0iZM3NIO8DlQLbnnCFFwIZv479DH9WmPfi7dW5sctYiiUGordQcMgmE9G9QO3zqC1Cx+V3A1ide3NOM+SFF7pjlxAcl1KovbFp6xWkJ2x6t4gscVc4jTw82s04DKKFR+yWcDhM3u/X08qK5aEJ1JHjaWgoN6eQ2CtFxKVYTIZjBhhQKXnWczuVptpezayyGn6RW2svO9rUNSFQpa0VXetdtsv0fpyeotblRm5bvOwIX9EXnmq3Qe8cHVkLp5z3oKWnlWGIiYYBpH26ArDEJ745w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=EpZ41z5iwQYEDhEO9+u95WqpO0KTNQelmlqlOU53LXE=;
 b=SQnFnVveGE81syRRUdOowM3TVJ6WXh7o749UVhPprrdBtNmFF4fiyVSa/KsN86CX/+SxAZWjmH4RgQSX9Pvfc4mmEcdpEBpSn9wKVw4rrPjYN7gUYPmMFfwi9mMG+jijscw7YyPv/or6MLX2UphnOJJgYnvSS7Q1g869kR9vhDeqopdeVMTufOulvGUv31smBCKGh/S6nSuV6TOa4rECuzNARz/Y6ZeORn33wdcrJJvJEn7rPzDiUAaSReWaoTwtKsVVNjBhQxNFxv3xFld7Dw0HTmwWpqN59XzlUG3V9eBG0j82E3Z1U0GvVfPmU2YlDb7/AdxdV2gMxEFfzoEO1Q==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=EpZ41z5iwQYEDhEO9+u95WqpO0KTNQelmlqlOU53LXE=;
 b=TM2DU9U+rtQlB4+igPuDwsXRLn2TP5K3dwEhk+Wzcvz/8DMI4QIWZqUmeooKkmHqD7O+F4V0NROzdkM2jSoDeMXLrgJCmQfBsZHFhZ/+vv52hAa8H6Uzh5fOo8KjSu41jghA0mJHWWaSKOEvI9/VqJdgVfFXYJBM8OoJMjkbQF0=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:09 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:09 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 21/37] KVM: SVM: Add KVM_SNP_INIT command
Date: Fri, 30 Apr 2021 07:38:06 -0500
Message-Id: <20210430123822.13825-22-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:08 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 4394f92d-f035-4393-84d3-08d90bd4f339
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB2832D4776F8AB101F3A330D6E55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:3513;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 106025hRZa9O5T49UCLc/lQrtq7Ctv0NeEpunl7KTvALQkdphrIv1a8LyiMgVAgQd1pkXRal0z17kv/f9F+GypBMY7QVm0HDm/7WNeBPjgmca+Ov0LFtR9c4/isCeK+yrqJ3ffTUrklBkZ7DH2l8Mm0pCzzi6+bh8vkDNfLWE6cFxymlg1J79iFKnKqeGRYmj9cUH+OQPpUVEsKFkKjjDxDMUHsy1uHn05iKoM3IGIKsNTI+6yCFQgOV+wgQ7xx5WRYLjvn78iDbAXhKb7T4KY/xLHTnmn41tNp6wZRy9BNul1iVW1x3AlhOJRSm/vMslEI5+aOfYXh6PtOXFJAOfcnMqpW/vxrNyQ0YLTDrRPWaydNTBy2jOaAvRSB/V0Og155UY3nTfDIBEnCDlw11Of7a7Mqm93C7AHH/wXXFRmBgS9u6cuOI+irW3+oGppNSOFvHJtxfF3iYx34cx6AW4M6qi4bxKhUnGuTLfzuj+sjBzFErDkSe0FDu+VthbiWEHtVUw6gHCFev7V3Fupr7cuF+HZflKjPBZQ81w0O4nwsCc7JXpYJXaFl/imQqRsfgLSHhNCCMHxAVFr2za4sc1yqfCrUYfJNGZfn8/BsfFn3lvKp8lFKQzXJ9tanp+H518ET8c1oYQnwLwqb5rROLbw==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 ZdduA1WnReu/9uEHoYrvcBSOo5ndb/NXT2hCl4UJiRQBKUexFyEVKvKrF4RSNEZcYEXCYuohVAJ6cuJpfGdxjygQtXFQdWNFe0TcZkwMChXv5T7KiIMQLWZhTa3Lhfipq5orMo0XkfpWN2oN/pB81s57Fwq6xma1QyrLLJbO79AGKx9h1KjqUeIdUOttk/GuIbAy7tAtk6CrMPF2CxR+pcauzNlYlieY6ng0g57Mj7MkMFCBLLMQcR7nR6TUor1Dl3ei+olvupoMhADDvu3iGv0Y6Wej4Meo3E6JcvfPUjL7vMhRzXFDXzoQ+FZGaQ8SHN/ZTJjVjnZNB6Tr2SXDNXmU/XijkeDs5i9R9mAVUrhw3QzLGAmtQxBVloA7enuiSaNS/iD9Qa8c93yfV7d0wansKOvc9nR5yGyzyLPr/67QRoAeXA3Jzz0Ovz93D5uKNIWuIT6LvSJjwwJwcadO30SLhzSdVEv6nnXvLutSEyiA51D50FH0ipwaVHovTu1quOSzlhVYgfQV9cePsGjhB6aAIEZY0XTZXLkrHfLmSPbn5dn6EjajykXQ7z651lh+vdoGKQvugStlYZHrdb+Ie6q8psM/+vAOlizCIcDnn30Zl4WdK5IiglhRBrQtv92sw6F9k75oi81SStqxTWrE4egaP6c8XUQcXPtsg+NuH6xGb6U5gWYOfDR+j7UBOxyCTpG+M2zpoCvpD64Rhvlgm220/kX5svSpd6W32vjWfFa36aAPIa97SDv7pTutjRil1+1RbxWmcNPp7Sgm/4N5PGVlAEmHR6QhDUKjvHRCasaq5NnYMJA+82Kn9tFDMoDtit8T6Iimxt6Gw+sHtu24ZvUSndgdeHXSRfG9rthGFyTVCkEkpAD7KCQ5HSWO1ILcxTKVmbavFJ0pL+mb683SpzpaVUH9cd9ZpZeGX0OMLEZj35np0LSdWvBCSDsFziOIMKKDUoGV5Yf5l92ITgAFOcmVD7zY6+PfcJgHjLPEVRF4yOGDMq3msPfAQC47eTod8IYu7kHI2AVNCWoiCXPOIpuLt0SVE1XFn/BKl6YX95inLn4n3RY5tn82odT80yqucKwnnQEfX+mxQ3qNYy/2tcFLFQRtkv9BvvTnHgzArVsy9UroutESrVfovQX7p9FlcRA0j6yjBJO7S75AXbf7GXSykDaTAl6QjtBQ1JBMSYfnx0qoc+HTETiTM9lr42NZhdoe6ekpzTgT928n3LPiOeGlFJxxL7Jxu7TwCJ3Nh9uROEzuUiVJSYnlNOhnc1dE+iVxeOHPUjKVzOA3vRpjThDgObvDS8IQ6Um8Qbz5YxI9P7pp6KML7pV/BxQ9cF0l
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 4394f92d-f035-4393-84d3-08d90bd4f339
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:09.3010
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 zZaB7RZ+muUJKYD8laMGV1U7+WDwuASa62fMJy6/HhHZT1V6SV9BlmxPQiCngrP9/msG8zcdj228JQDqMNr5Hw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The KVM_SNP_INIT command is used by the hypervisor to initialize the
SEV-SNP platform context. In a typical workflow, this command should be the
first command issued. When creating SEV-SNP guest, the VMM must use this
command instead of the KVM_SEV_INIT or KVM_SEV_ES_INIT.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/svm/sev.c   | 18 ++++++++++++++++--
 include/uapi/linux/kvm.h |  3 +++
 2 files changed, 19 insertions(+), 2 deletions(-)

diff --git a/arch/x86/kvm/svm/sev.c b/arch/x86/kvm/svm/sev.c
index 200d227f9232..ea74dd9e03d3 100644
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@ -230,8 +230,9 @@ static void sev_unbind_asid(struct kvm *kvm, unsigned int handle)
 
 static int sev_guest_init(struct kvm *kvm, struct kvm_sev_cmd *argp)
 {
+	bool es_active = (argp->id == KVM_SEV_ES_INIT || argp->id == KVM_SEV_SNP_INIT);
 	struct kvm_sev_info *sev = &to_kvm_svm(kvm)->sev_info;
-	bool es_active = argp->id == KVM_SEV_ES_INIT;
+	bool snp_active = argp->id == KVM_SEV_SNP_INIT;
 	int asid, ret;
 
 	if (kvm->created_vcpus)
@@ -242,12 +243,16 @@ static int sev_guest_init(struct kvm *kvm, struct kvm_sev_cmd *argp)
 		return ret;
 
 	sev->es_active = es_active;
+	sev->snp_active = snp_active;
 	asid = sev_asid_new(sev);
 	if (asid < 0)
 		goto e_no_asid;
 	sev->asid = asid;
 
-	ret = sev_platform_init(&argp->error);
+	if (snp_active)
+		ret = sev_snp_init(&argp->error);
+	else
+		ret = sev_platform_init(&argp->error);
 	if (ret)
 		goto e_free;
 
@@ -583,6 +588,9 @@ static int sev_es_sync_vmsa(struct vcpu_svm *svm)
 	save->pkru = svm->vcpu.arch.pkru;
 	save->xss  = svm->vcpu.arch.ia32_xss;
 
+	if (sev_snp_guest(svm->vcpu.kvm))
+		save->sev_features |= SVM_SEV_FEATURES_SNP_ACTIVE;
+
 	/*
 	 * SEV-ES will use a VMSA that is pointed to by the VMCB, not
 	 * the traditional VMSA that is part of the VMCB. Copy the
@@ -1525,6 +1533,12 @@ int svm_mem_enc_op(struct kvm *kvm, void __user *argp)
 	}
 
 	switch (sev_cmd.id) {
+	case KVM_SEV_SNP_INIT:
+		if (!sev_snp_enabled) {
+			r = -ENOTTY;
+			goto out;
+		}
+		fallthrough;
 	case KVM_SEV_ES_INIT:
 		if (!sev_es_enabled) {
 			r = -ENOTTY;
diff --git a/include/uapi/linux/kvm.h b/include/uapi/linux/kvm.h
index 3fd9a7e9d90c..aaa2d62f09b5 100644
--- a/include/uapi/linux/kvm.h
+++ b/include/uapi/linux/kvm.h
@@ -1678,6 +1678,9 @@ enum sev_cmd_id {
 	/* Guest Migration Extension */
 	KVM_SEV_SEND_CANCEL,
 
+	/* SNP specific commands */
+	KVM_SEV_SNP_INIT,
+
 	KVM_SEV_NR_MAX,
 };
 

From patchwork Fri Apr 30 12:38:07 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233361
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 29492C43460
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:43:13 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 04D9D61477
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:43:12 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232846AbhD3Mn7 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:43:59 -0400
Received: from mail-bn8nam12on2044.outbound.protection.outlook.com
 ([40.107.237.44]:33505
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S231984AbhD3Mmg (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:42:36 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=TsC+e0gkFYJLQQ219/WufJKl4PQdPoZbL4+BNr7xSNSQrfwPPUkn2AF+F6/bbr8NHrcbN/FXGodpnpKTk8rjL6POhMGsaysYEoL6NEh2mTDkQiKoU3xOxapT97T9r0PzZd89PD9D1IDEwRR6AEPScMusSeZQ104EFRpp320upwKkH82z5izDWjlRoQz2it+ogWVcfHFZon4tQFG8bpSt1hxlu50pScvi62Ci5AxbVKj0+K3ScfOvaT8YPebI8nFCrWjDcz/SFNaBAXiF9veF31dIKVKHExVOkPNftVk0tIhdDisYP3XRN4o5AF6khZG6M+lG/nu5EuTSCN0k11y4PQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=J7O3x/zHDKj7dzsdcsRJAGUDAkiTNK8ITfL26ZIDyw4=;
 b=cZxsIwNwmXTWxN6uY3+ReF/dUE6LMiYVSMFaxILKrqfq3zlGBoX89FA3VHLvh+QRp5KUTQ7KhXna5gOkNu259U1eeqPX73dg6vt1xGU1oNdQug7iipXBlvU3j3Ccz+7rOpFQlD2IrZ3wYvdUmtBWfkW+kdC0V8YoTKNUKjnu9EbemE13y+DIaNFzWznUvPemMDVisU5ahAAgp6CXJGcfdxk0ckRSFOBmOJmQvmTCfuqlg6F40KZ6ZpGRSpAj1YwXBK+elSoz7EyvSM6+4fuT/9RfQLpfpKFQmISZzkRlI5HpFEXP+HvelW9Qonh5KQ9XwS3LqP2w5F/9ju91MVi/7w==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=J7O3x/zHDKj7dzsdcsRJAGUDAkiTNK8ITfL26ZIDyw4=;
 b=1tTyrcKAuVRA24goPnlutkzhMF+sKi9GcuGkWEkFPRoduEc6Xi35izpT+qL8FFwZN/9sm4sI3SJn4B/6yOf1Pz1RDnSYfnz6dTmyX1UKvrhoAY/bbie4RV7qvUQ2vQ6WxD55gIXsyWK0v0JzmkJ7B9xqGjesbDkvbyYPOgr6mFs=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:10 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:10 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 22/37] KVM: SVM: Add KVM_SEV_SNP_LAUNCH_START
 command
Date: Fri, 30 Apr 2021 07:38:07 -0500
Message-Id: <20210430123822.13825-23-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:09 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 66e5f7c0-9d78-4260-ff1d-08d90bd4f3a8
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB2832A52E7D216D9A74AEC128E55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:4941;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 Il8WM+o7XfQi7A/1X2mHnWRtQi9ZOjO9K6XxOmrXZYFZs50FAJhHoTThygBlnURvDErHkLMHRC2aIowzc/cMFZk9ZzcH//aNZJnhdB9r1aje1dVbzIA/yQys3mKt+O7l9tX5rK0IGK8QnsWO1QdD8KrsBerAGgsb18f7Cd4krlaFLzX9Vqhsu9ymc5EKDoUlLmpChdvEXlYyhQPMr9zExLTFmheekZE999sKwyj5gjSMfPTmukBrYLJ4nRGIfVH+lkvyjRaTKflh/6TbLt0FJmx+u0A12TkcxV4Hq1Ke6ZP+iDuTYxqb0P6rPhBWf1XK9hPiTQFroQsVb/7DcIfc0/psA8GUSjInnI4Jz6rK1CsCTjIGSSV//RS1wo3arrVHbH/cqm13L2db3CbD44JbGThCAjrEhw8YHWcq9rnkUEcp289aDHFCVyHeVwurE5mobBP0U8n1IJO/LY1EbM8WDlwuljRNlELRpl0iPqS+3SsRvSkf+cekJDoqzeQxFwwGcv7Rl38qRdOxXsLZ71/8ZpOngi09+Q0bWhv900BLFI87+RyV0YtnG7X7pucv9a7YpfN5M9UdOkAC6PlAOHymAWGGsXzelaEsxlMacEUgTJViycxiR8xcKrgwY0e9LJcLN+hAMjg4J96okg+1JNgodQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 3FvzbVgGUBQMt5CjEktBKGgNkrCSX4LbbEDWzxPAqol4TPNvwKRg7EN7YWPXzK4M9v3yUAGd5+Gy0vsIErYoHczd7BhvRNLKb1fj1aewxb+ctBxQ55/wghoAZJiv3spihes4nXZaLxDRNJvGqTShADt3CB6J5wQErcwoqYwkMKttO+EBTTyaXZkdgOlcH0rT0SRMqlBZgnfLRJR11293qsgvASAS8lI66xRSuOT5/yhFNaxFGrObdie/mTPjPcCX1i9fXygYR3Re4yNnxJH1sNnMHT/G6+5op/G/VA38ecdtRcY34JQdy4qaa3muOFYLkBMhLFBrRcowj15e7pOXAZB/0N5y7waMLolcHHFa/CuqpPHj9a9ZiJQ1OEg5tYg95m50v7b+uz58YBpqQ7qrIpiWVUV3jqS7GYQsW5rJ9KPQICEy6RrGyX5B16vpIPkcEDevcVha05ddr5qbIPL9FwKvyx6G86CtRB7Uw+snMzHoXDb+r/h0zVwpRexxD4Cx3Z/zQH0o3iUgR557UbFensFj+g7nhojrMOb53uvIjO2UgJGXPOj28VrMl06r3ZWpSk+YGGoBUSahhiuR1RVCwtrA1271lIHUg4P8UgmSTPo7lOlz4kcUT+FJGx+U4LrgAjgOl+reZ9GAV2yBqImRMZmwXAY+xLKTp9IzHq4fLJ4zVGOFjDzCGKRO7m/LYgdToW3JSh1RUk2KmwvjnGUSV+q3TYpTZe6qMe34XX8v4kE4mx4cFCJH+JTfpXtkFa5VLkjQ4LukN5jXhJv+5BISpzqBgc2iSbf5j2/3DO7JqZynXiZHHTc5ED/P3A0GcWZdVr7UzwYNvYAynV0AzFJiacGekrXxpRyyxNWjkRylrIWvAGDlhitnYYtISz9jFpwdQswAZObWwtNmh6bQYoOJ4XlqTJ0WLl5jXrzK1/VMbDh77Q+QD92lgQOom1Um1GwNz+YkeX8gkxIyaMZUs8l58GOi40ASjpnu6Wzwna+h1S9pr+q78w9CjQ/qREOB8ApKPQpzJJNa1RkPSjtuK+ipypU82OZffU8twjM8rcCeV1H349QG2G8dPAxzEdvMDT352NPliDfHqtTAY4Z+LkdTni2hKzy/Qjs0a4CaFbrfXgl3C+lhf7MEB5SZQVDnXXpeenMC7/PtGKQq0Z9i2P1N4cB9eavE1lq/7ZLy0O/SmuTUqiyInNGCGRJHfx5l/pWthOKwrCLufFWy4PjwmGptjgWlokZWSiW2aVctj8wyYo8iqZPhvg1ZfYdHKIqDGxGPd4TBxeDHBDGl+1PsCyzvGAFT7vTD2hLlCUmCIM5ZU5HY+aPuKNXhTPfCcl1bTn9P
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 66e5f7c0-9d78-4260-ff1d-08d90bd4f3a8
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:09.9806
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 2emZaHVrUkTHS5XaJ7onDvA3uVd0EDlhoF7f9Q0H9+WWeAdBtELohsFWVGhL2oladAbwRToYJjzVtnCn5eUjbw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

KVM_SEV_SNP_LAUNCH_START begins the launch process for an SEV-SNP guest.
The command initializes a cryptographic digest context used to construct
the measurement of the guest. If the guest is expected to be migrated,
the command also binds a migration agent (MA) to the guest.

For more information see the SEV-SNP specification.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/svm/sev.c   | 132 ++++++++++++++++++++++++++++++++++++++-
 arch/x86/kvm/svm/svm.h   |   1 +
 include/uapi/linux/kvm.h |   9 +++
 3 files changed, 141 insertions(+), 1 deletion(-)

diff --git a/arch/x86/kvm/svm/sev.c b/arch/x86/kvm/svm/sev.c
index ea74dd9e03d3..90d70038b607 100644
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@ -20,6 +20,7 @@
 #include <asm/fpu/internal.h>
 
 #include <asm/trapnr.h>
+#include <asm/sev.h>
 
 #include "x86.h"
 #include "svm.h"
@@ -75,6 +76,8 @@ static unsigned long sev_me_mask;
 static unsigned long *sev_asid_bitmap;
 static unsigned long *sev_reclaim_asid_bitmap;
 
+static int snp_decommission_context(struct kvm *kvm);
+
 struct enc_region {
 	struct list_head list;
 	unsigned long npages;
@@ -1510,6 +1513,100 @@ static int sev_receive_finish(struct kvm *kvm, struct kvm_sev_cmd *argp)
 	return sev_issue_cmd(kvm, SEV_CMD_RECEIVE_FINISH, &data, &argp->error);
 }
 
+static void *snp_context_create(struct kvm *kvm, struct kvm_sev_cmd *argp)
+{
+	struct sev_data_snp_gctx_create data = {};
+	void *context;
+	int rc;
+
+	/* Allocate memory for context page */
+	context = snp_alloc_firmware_page(GFP_KERNEL_ACCOUNT);
+	if (!context)
+		return NULL;
+
+	data.gctx_paddr = __psp_pa(context);
+	rc = __sev_issue_cmd(argp->sev_fd, SEV_CMD_SNP_GCTX_CREATE, &data, &argp->error);
+	if (rc) {
+		snp_free_firmware_page(context);
+		return NULL;
+	}
+
+	return context;
+}
+
+static int snp_bind_asid(struct kvm *kvm, int *error)
+{
+	struct kvm_sev_info *sev = &to_kvm_svm(kvm)->sev_info;
+	struct sev_data_snp_activate data = {};
+	int asid = sev_get_asid(kvm);
+	int ret, retry_count = 0;
+
+	/* Activate ASID on the given context */
+	data.gctx_paddr = __psp_pa(sev->snp_context);
+	data.asid   = asid;
+again:
+	ret = sev_issue_cmd(kvm, SEV_CMD_SNP_ACTIVATE, &data, error);
+
+	/* Check if the DF_FLUSH is required, and try again */
+	if (ret && (*error == SEV_RET_DFFLUSH_REQUIRED) && (!retry_count)) {
+		/* Guard DEACTIVATE against WBINVD/DF_FLUSH used in ASID recycling */
+		down_read(&sev_deactivate_lock);
+		wbinvd_on_all_cpus();
+		ret = snp_guest_df_flush(error);
+		up_read(&sev_deactivate_lock);
+
+		if (ret)
+			return ret;
+
+		/* only one retry */
+		retry_count = 1;
+
+		goto again;
+	}
+
+	return ret;
+}
+
+static int snp_launch_start(struct kvm *kvm, struct kvm_sev_cmd *argp)
+{
+	struct kvm_sev_info *sev = &to_kvm_svm(kvm)->sev_info;
+	struct sev_data_snp_launch_start start = {};
+	struct kvm_sev_snp_launch_start params;
+	int rc;
+
+	if (!sev_snp_guest(kvm))
+		return -ENOTTY;
+
+	if (copy_from_user(&params, (void __user *)(uintptr_t)argp->data, sizeof(params)))
+		return -EFAULT;
+
+	/* Initialize the guest context */
+	sev->snp_context = snp_context_create(kvm, argp);
+	if (!sev->snp_context)
+		return -ENOTTY;
+
+	/* Issue the LAUNCH_START command */
+	start.gctx_paddr = __psp_pa(sev->snp_context);
+	start.policy = params.policy;
+	memcpy(start.gosvw, params.gosvw, sizeof(params.gosvw));
+	rc = __sev_issue_cmd(argp->sev_fd, SEV_CMD_SNP_LAUNCH_START, &start, &argp->error);
+	if (rc)
+		goto e_free_context;
+
+	/* Bind ASID to this guest */
+	sev->fd = argp->sev_fd;
+	rc = snp_bind_asid(kvm, &argp->error);
+	if (rc)
+		goto e_free_context;
+
+	return 0;
+
+e_free_context:
+	snp_decommission_context(kvm);
+
+	return rc;
+}
+
 int svm_mem_enc_op(struct kvm *kvm, void __user *argp)
 {
 	struct kvm_sev_cmd sev_cmd;
@@ -1599,6 +1696,9 @@ int svm_mem_enc_op(struct kvm *kvm, void __user *argp)
 	case KVM_SEV_RECEIVE_FINISH:
 		r = sev_receive_finish(kvm, &sev_cmd);
 		break;
+	case KVM_SEV_SNP_LAUNCH_START:
+		r = snp_launch_start(kvm, &sev_cmd);
+		break;
 	default:
 		r = -EINVAL;
 		goto out;
@@ -1791,6 +1891,28 @@ int svm_vm_copy_asid_from(struct kvm *kvm, unsigned int source_fd)
 	return ret;
 }
 
+static int snp_decommission_context(struct kvm *kvm)
+{
+	struct kvm_sev_info *sev = &to_kvm_svm(kvm)->sev_info;
+	struct sev_data_snp_decommission data = {};
+	int ret;
+
+	/* If context is not created then do nothing */
+	if (!sev->snp_context)
+		return 0;
+
+	data.gctx_paddr = __sme_pa(sev->snp_context);
+	ret = snp_guest_decommission(&data, NULL);
+	if (ret)
+		return ret;
+
+	/* free the context page now */
+	snp_free_firmware_page(sev->snp_context);
+	sev->snp_context = NULL;
+
+	return 0;
+}
+
 void sev_vm_destroy(struct kvm *kvm)
 {
 	struct kvm_sev_info *sev = &to_kvm_svm(kvm)->sev_info;
@@ -1829,7 +1951,15 @@ void sev_vm_destroy(struct kvm *kvm)
 
 	mutex_unlock(&kvm->lock);
 
-	sev_unbind_asid(kvm, sev->handle);
+	if (sev_snp_guest(kvm)) {
+		if (snp_decommission_context(kvm)) {
+			pr_err("Failed to free SNP guest context, leaking asid!\n");
+			return;
+		}
+	} else {
+		sev_unbind_asid(kvm, sev->handle);
+	}
+
 	sev_asid_free(sev);
 }
 
diff --git a/arch/x86/kvm/svm/svm.h b/arch/x86/kvm/svm/svm.h
index 85a2d5857ffb..a870bbb64ce7 100644
--- a/arch/x86/kvm/svm/svm.h
+++ b/arch/x86/kvm/svm/svm.h
@@ -67,6 +67,7 @@ struct kvm_sev_info {
 	u64 ap_jump_table;	/* SEV-ES AP Jump Table address */
 	struct kvm *enc_context_owner; /* Owner of copied encryption context */
 	struct misc_cg *misc_cg; /* For misc cgroup accounting */
+	void *snp_context;      /* SNP guest context page */
 };
 
 struct kvm_svm {
diff --git a/include/uapi/linux/kvm.h b/include/uapi/linux/kvm.h
index aaa2d62f09b5..00427707d053 100644
--- a/include/uapi/linux/kvm.h
+++ b/include/uapi/linux/kvm.h
@@ -1680,6 +1680,7 @@ enum sev_cmd_id {
 
 	/* SNP specific commands */
 	KVM_SEV_SNP_INIT,
+	KVM_SEV_SNP_LAUNCH_START,
 
 	KVM_SEV_NR_MAX,
 };
@@ -1777,6 +1778,14 @@ struct kvm_sev_receive_update_data {
 	__u32 trans_len;
 };
 
+struct kvm_sev_snp_launch_start {
+	__u64 policy;
+	__u64 ma_uaddr;
+	__u8 ma_en;
+	__u8 imi_en;
+	__u8 gosvw[16];
+};
+
 #define KVM_DEV_ASSIGN_ENABLE_IOMMU	(1 << 0)
 #define KVM_DEV_ASSIGN_PCI_2_3		(1 << 1)
 #define KVM_DEV_ASSIGN_MASK_INTX	(1 << 2)

From patchwork Fri Apr 30 12:38:08 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233359
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-15.9 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,UNWANTED_LANGUAGE_BODY,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham
	autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 618F0C433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:43:11 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 24A1461477
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:43:11 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232817AbhD3Mn5 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:43:57 -0400
Received: from mail-bn8nam12on2074.outbound.protection.outlook.com
 ([40.107.237.74]:41101
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232441AbhD3Mmg (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:42:36 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=EGJpVBWVfT58f8fMg1p5gnZVuoeqAVoBTkLrkl39MP0ExIoIIqsaiVhN7p5r/9uExlkTrXJvvZptcjkLM2gSen3Z2PsM5ae0G8mPM3VoROimtalZQ16E3CesylH6DA39bM8OKiuwA66s9seNi71EM5A+Osi3YieVvYGXt5rfL+h1hbIAse4IC5Npb6a18Kapxme31eCdGE4tXfrQgl+699RQ9Z0kELBngK54WKUm1MXNSzyA4mjcB48UtI2QPi8al1CRa/UfybHkTqXLdkcNRKVYXDbWeIfaGTkWCPyo0FU+90xOShq/jqW3eB55WMFN9vZaFr73mJ0S9MS47xg00Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=fiJEiN0MDAnMJXmc07sfCitsrSw8RPaedeW1YFszWOE=;
 b=QEGPVC1EAKJMK3C+0meeNb/Uy6voxrec6vbhgIPfmoI4Smp89T8D1raK4AQ8/KMmzZBtApeb2oFfD9yHIHvfvaVDHWSlprsU8dn24iVogP1J+CPbjqbE4kuXiupKQfS+8VXo20ZUVEsrCmuUqQSQzb0Rs9bl2l+JDsI7EZ844I3BJV2ONPCop5YIhTUegQruDrtJwVbtPnOd5wneI4RxJ5fc5MBeL62+msT6ndgQ91cwS23DMW/iD2nCX5OYSK6qQdl1uBFCeE1O5ntQdR5yxJzo2vjSZm7wwaa4VbMLjD00ZEucCsrcO/RMQPkOq7GNVMZVw/3rHEenP7duVtazGw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=fiJEiN0MDAnMJXmc07sfCitsrSw8RPaedeW1YFszWOE=;
 b=qTDGBrUDaJp2Zy1SRTdo20MXypM/Tn09zdxibMJVhpBooc16+H+6fEBeA8FvBEWjlwPhxv7jHOQIK/dprwOUK5qhtngUs5W28wbGUjQsNyeXoWUilxsNn5ARLfm+2T7rpn2SrBDDsPdovcRkmxQcY5jVmU687F6ZVJOTIosW8BA=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:10 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:10 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 23/37] KVM: SVM: Add KVM_SEV_SNP_LAUNCH_UPDATE
 command
Date: Fri, 30 Apr 2021 07:38:08 -0500
Message-Id: <20210430123822.13825-24-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:10 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 07ad746d-3541-46e8-0de0-08d90bd4f40b
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB28321FF261B5C17FFCBE6C99E55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:3173;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 NMJhy+M/0mB3Zu2IA1K9YnhNlFnA74kOyb6s5Iz5vCh8CoVTeb2r56SSyOwAcmGizZsCDRJDi/Mjudwaev8gnXo/cTJWEzNjzsFnr37mS2IrB5CP9Qd62uXBIsnLD3xWjSb4Aw1xFMDchFFfSKl77cLtJfgpg9UPbODppP+RNAAq4toEsj5uSbXUcOVF7eGG4Md4Hy6zeKk+fJJBbBqkSH6iBPDu/QzubHCOzGPiuF23ONG1ViNWNwmQLzCKswufPjhBtd/Yyf2kTjgendndxhNldQ2zNJQnkLM7Od4goxluVYVt7i9C6kJdr763hmlUOR0eitZaZmBXkdbKe4vR8bFqDeYaLYmjTK6ZMOYeWI5tNE2OJUfPsBuylyb+Oa4RhkvmmVKZ897vtIRAmpDtkM/Ypu/ruoaq7ePLQ+k8Tg/3+e5nv49SfIia7xP6h1NV1EBs+3GONXZclunkR75k7bJ7T32cNEw/vpfX59oNaJlv1gxFShTXuEq6ylMU0c68wUgEzjmKx6sjJWJCGtFx7Jxit4qLaH1aDNgEaW2JlknhdqP+Ypdl2vIP+hnkgL9+k/UG8penZZMNFd89PNJ1u7c9hGJOMa82DMCPKa/fL9jfBh3w7kHdv4Nb34kR/brdhaX1Iiolqjq3GHhwb6wk+A==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 by1PALNaVqnCItOfCpjVMfI/AeJ8Su60ypM07VIp09uTea7WtQo6VcmbCDWMMnreQkOiTsoOlLAYPgaZgDbEXlPNmoAOeUyHHUFHReJs9T9CoBvjTr5EAE6ZTQCZac/5ojGcjrG7QrV3uSZpq2U3j6mw4FF1p24re6I+xcLn/GgrNeIgWBoNKcDNzc5gJSwea97hXHXulaAZU1Y9JEPRm7wlKP/iCWpbdi++c3DqO5pysuNZbwkh3O1TdcikuTEMpN3Cn2+b6tWMElHXRVYyOJLcVeUtCkID20XGR/5Ip/Pqx48ZBGwFqwGu9VRsqO03vfE1Bg17a04nL2ABSq+dcThAK3tYiD863ihkry8T5DrGDD2tPz+1WXX6+smotw3gm1EdaqRF+YJWnCuhmiwZp9rL0SLejAy7G5+IF0bRTDWg6I05Q/fnkS41VjPOQvciNHv/VvEF3r6xDjVMMpakCY0TCkugcDNEOyjL9iWWptuqUaaCTQJOZFobbcA+P5wRxiRae4FhWfIfbTMsNxB+xnNYzOKgp6yChbucpaRFzFqJHZTvAke0hqSWDmS5k1W/huCw3X4l8uq3JigmqCzm2ECKZ4PjqytoPw7hAAnqmHlzSOIk9BFU9sERqffZgN0GhBBVzkuPWBZ/qTsbFIQdhYZaSCz9KH/emrF1Oc/2Q9cRO5f5sV9EUMJ8ibAESSxlsytVgFF6aIqnva5CQ1TqBXct8ML3rHMumqdjWuN6HCq5dV6txH/jG540gn8Sf6XYZ8oLBSI4Y2Vp1Y3Q+E4t0CZP4RsAdX4LZDF2KjidEAHJjdCLLB/LJuVDc6dGnXiYkWLLQdkl9hUAqZNleKDbTdCcOc+liIc+oCk+kJ/YJbztZLaMH/RQPkpbVfPZTxePDHl7N2rX+9pjwLUszSYs1nvCqTOg8DCkPbd84W/fxN/twP/eZv18N+ZYfJ2yXTrEalIEVkUHEYfamoThqcp6WZLjl3FeSMKZC2aI2Y5ZDM9G/YFCh7lKmkNBcN9X3rZpKg7EZM5mmKiIVa9KMlNeZ3hUqaD8nYWNvUl+9EGNOVM47NmIbnDg8NoIBsLqIUhalvxJasmOTy2e6G7livpN898AXCHwjGLv7rnNFEcRFiqTGlLdEzcCDFCg+TL82jnExOxgpB+LeD9+orTMjPft6/lZ7sCdOlG5G0VzXidVmpUdJoPdK1Nvwfc9VLwl/x3+6j/XvDClqNPS2vRDqkLNvRT9QM54n68JMdbJwJZAplS0foC0B8W1R1Hf2LwNrWzfzThYZudyuRWzFXYu2ieHdIY3UrNUAef1OnyjuhAL6zZwgw34yitm2mJHH0MzWJ8R
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 07ad746d-3541-46e8-0de0-08d90bd4f40b
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:10.6582
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 F6vFigq9ANOxPRjRSmk0heaxQdiTlxS2eDG2GT1yiXbNqlsSuUXwnYYR4nAmc09nBNq+IeXghNNAlxfkARrxPQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The KVM_SEV_SNP_LAUNCH_UPDATE command can be used to insert data into the
guest's memory. The data is encrypted with the cryptographic context
created with the KVM_SEV_SNP_LAUNCH_START.

In addition to the inserting data, it can insert a two special pages
into the guests memory: the secrets page and the CPUID page.

For more information see the SEV-SNP specification.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/svm/sev.c   | 139 +++++++++++++++++++++++++++++++++++++++
 include/uapi/linux/kvm.h |  18 +++++
 2 files changed, 157 insertions(+)

diff --git a/arch/x86/kvm/svm/sev.c b/arch/x86/kvm/svm/sev.c
index 90d70038b607..d97f37df1f3b 100644
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@ -17,6 +17,7 @@
 #include <linux/misc_cgroup.h>
 #include <linux/processor.h>
 #include <linux/trace_events.h>
+#include <linux/sev.h>
 #include <asm/fpu/internal.h>
 
 #include <asm/trapnr.h>
@@ -1607,6 +1608,141 @@ static int snp_launch_start(struct kvm *kvm, struct kvm_sev_cmd *argp)
 	return rc;
 }
 
+static struct kvm_memory_slot *hva_to_memslot(struct kvm *kvm, unsigned long hva)
+{
+	struct kvm_memslots *slots = kvm_memslots(kvm);
+	struct kvm_memory_slot *memslot;
+
+	kvm_for_each_memslot(memslot, slots) {
+		if (hva >= memslot->userspace_addr &&
+		    hva < memslot->userspace_addr + (memslot->npages << PAGE_SHIFT))
+			return memslot;
+	}
+
+	return NULL;
+}
+
+static bool hva_to_gpa(struct kvm *kvm, unsigned long hva, gpa_t *gpa)
+{
+	struct kvm_memory_slot *memslot;
+	gpa_t gpa_offset;
+
+	memslot = hva_to_memslot(kvm, hva);
+	if (!memslot)
+		return false;
+
+	gpa_offset = hva - memslot->userspace_addr;
+	*gpa = ((memslot->base_gfn << PAGE_SHIFT) + gpa_offset);
+
+	return true;
+}
+
+static int snp_page_reclaim(struct page *page, int rmppage_size)
+{
+	struct sev_data_snp_page_reclaim data = {};
+	struct rmpupdate e = {};
+	int rc, err;
+
+	data.paddr = __sme_page_pa(page) | rmppage_size;
+	rc = snp_guest_page_reclaim(&data, &err);
+	if (rc)
+		return rc;
+
+	return rmpupdate(page, &e);
+}
+
+static int snp_launch_update(struct kvm *kvm, struct kvm_sev_cmd *argp)
+{
+	unsigned long npages, vaddr, vaddr_end, i, next_vaddr;
+	struct kvm_sev_info *sev = &to_kvm_svm(kvm)->sev_info;
+	struct sev_data_snp_launch_update data = {};
+	struct kvm_sev_snp_launch_update params;
+	int *error = &argp->error;
+	struct kvm_vcpu *vcpu;
+	struct page **inpages;
+	struct rmpupdate e;
+	int ret;
+
+	if (!sev_snp_guest(kvm))
+		return -ENOTTY;
+
+	if (!sev->snp_context)
+		return -EINVAL;
+
+	if (copy_from_user(&params, (void __user *)(uintptr_t)argp->data, sizeof(params)))
+		return -EFAULT;
+
+	data.gctx_paddr = __psp_pa(sev->snp_context);
+
+	/* Lock the user memory. */
+	inpages = sev_pin_memory(kvm, params.uaddr, params.len, &npages, 1);
+	if (!inpages)
+		return -ENOMEM;
+
+	vcpu = kvm_get_vcpu(kvm, 0);
+	vaddr = params.uaddr;
+	vaddr_end = vaddr + params.len;
+
+	for (i = 0; vaddr < vaddr_end; vaddr = next_vaddr, i++) {
+		unsigned long psize, pmask;
+		int level = PG_LEVEL_4K;
+		gpa_t gpa;
+
+		if (!hva_to_gpa(kvm, vaddr, &gpa)) {
+			ret = -EINVAL;
+			goto e_unpin;
+		}
+
+		psize = page_level_size(level);
+		pmask = page_level_mask(level);
+		gpa = gpa & pmask;
+
+		/* Transition the page state to pre-guest */
+		memset(&e, 0, sizeof(e));
+		e.assigned = 1;
+		e.gpa = gpa;
+		e.asid = sev_get_asid(kvm);
+		e.immutable = true;
+		e.pagesize = X86_TO_RMP_PG_LEVEL(level);
+		ret = rmpupdate(inpages[i], &e);
+		if (ret) {
+			ret = -EFAULT;
+			goto e_unpin;
+		}
+
+		data.address = __sme_page_pa(inpages[i]);
+		data.page_size = e.pagesize;
+		data.page_type = params.page_type;
+		ret = __sev_issue_cmd(argp->sev_fd, SEV_CMD_SNP_LAUNCH_UPDATE, &data, error);
+		if (ret) {
+			snp_page_reclaim(inpages[i], e.pagesize);
+			goto e_unpin;
+		}
+
+		next_vaddr = (vaddr & pmask) + psize;
+	}
+
+e_unpin:
+	/* Content of memory is updated, mark pages dirty */
+	memset(&e, 0, sizeof(e));
+	for (i = 0; i < npages; i++) {
+		set_page_dirty_lock(inpages[i]);
+		mark_page_accessed(inpages[i]);
+
+		/*
+		 * If its an error, then update RMP entry to change page ownership
+		 * to the hypervisor.
+		 */
+		if (ret)
+			rmpupdate(inpages[i], &e);
+	}
+
+	/* Unlock the user pages */
+	sev_unpin_memory(kvm, inpages, npages);
+
+	return ret;
+}
+
 int svm_mem_enc_op(struct kvm *kvm, void __user *argp)
 {
 	struct kvm_sev_cmd sev_cmd;
@@ -1699,6 +1835,9 @@ int svm_mem_enc_op(struct kvm *kvm, void __user *argp)
 	case KVM_SEV_SNP_LAUNCH_START:
 		r = snp_launch_start(kvm, &sev_cmd);
 		break;
+	case KVM_SEV_SNP_LAUNCH_UPDATE:
+		r = snp_launch_update(kvm, &sev_cmd);
+		break;
 	default:
 		r = -EINVAL;
 		goto out;
diff --git a/include/uapi/linux/kvm.h b/include/uapi/linux/kvm.h
index 00427707d053..dfc4975820d6 100644
--- a/include/uapi/linux/kvm.h
+++ b/include/uapi/linux/kvm.h
@@ -1681,6 +1681,7 @@ enum sev_cmd_id {
 	/* SNP specific commands */
 	KVM_SEV_SNP_INIT,
 	KVM_SEV_SNP_LAUNCH_START,
+	KVM_SEV_SNP_LAUNCH_UPDATE,
 
 	KVM_SEV_NR_MAX,
 };
@@ -1786,6 +1787,23 @@ struct kvm_sev_snp_launch_start {
 	__u8 gosvw[16];
 };
 
+#define KVM_SEV_SNP_PAGE_TYPE_NORMAL		0x1
+#define KVM_SEV_SNP_PAGE_TYPE_VMSA		0x2
+#define KVM_SEV_SNP_PAGE_TYPE_ZERO		0x3
+#define KVM_SEV_SNP_PAGE_TYPE_UNMEASURED	0x4
+#define KVM_SEV_SNP_PAGE_TYPE_SECRETS		0x5
+#define KVM_SEV_SNP_PAGE_TYPE_CPUID		0x6
+
+struct kvm_sev_snp_launch_update {
+	__u64 uaddr;
+	__u32 len;
+	__u8 imi_page;
+	__u8 page_type;
+	__u8 vmpl3_perms;
+	__u8 vmpl2_perms;
+	__u8 vmpl1_perms;
+};
+
 #define KVM_DEV_ASSIGN_ENABLE_IOMMU	(1 << 0)
 #define KVM_DEV_ASSIGN_PCI_2_3		(1 << 1)
 #define KVM_DEV_ASSIGN_MASK_INTX	(1 << 2)

From patchwork Fri Apr 30 12:38:09 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233369
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id D4749C433B4
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:43:45 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id BAB9061468
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:43:45 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233437AbhD3Mob (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:44:31 -0400
Received: from mail-bn8nam12on2062.outbound.protection.outlook.com
 ([40.107.237.62]:59489
        "EHLO NAM12-BN8-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232564AbhD3MnK (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:43:10 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Baf3S7CS3IAW/StD5VsnUUT2O+Qfi5CRu07SLfkpZ6k4cPYsToAEi2xRUNcyGIDQZWGLtxmEFI4bqj1ixcuvHPBvhpva30EXMLP5NKPZzG4hrpskvOnxwhDsrr6JdLzUzUWsSLCacvCA4yw9IphssbOyfPB3sogSKrxu0c+xPHWDl4YCiL/qi2oRdRI2o9PNF9JKGlcNjuSX+pjc/9kpECtaKkS1iu4eBlei85BBSgIrw110iDfdhKkEtTXqy7WyApJgKmINfvwsguMKf4grcExdCZ+Ry5l1LadjbpxeHEDwMDsXqK6Agtwg+jltEHVsNYYmWM5JZhRLBI0thiKNrA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=OhJaM/GEz7s6ckHdSpaLerRzElrAVnFK5Y17gIMAoCY=;
 b=X3lliPbp3a0ov1gdWf5jdmD9sTywTjV+n38AePYnPxGQVi/RQjPS1uDa1cokhVbjFbEhhJFAr/hHlt7IPQZ/hQzGfr9LtjYpJQNuTtrkdh0ye33j5EeYvmsobua1bup9y9xAlEcD8mOBB+Vh666Ma6OlrCF8jCefzh8557P660K65qDMYLqTg67rRuVl3iGqR1oYFBSQWsQ0147CeRufFXhlHk5Lzg/rxPDGORWq05d0HPuR2XmxEtIyY0aZFwhR3pIuC1uYEnAKjPR73UNtrRr5Njra0jRkOlpzO3hox/Eg+daHNxG7iF+AFY06qPQkA6lxPispY/vPW7N43bFfEQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=OhJaM/GEz7s6ckHdSpaLerRzElrAVnFK5Y17gIMAoCY=;
 b=IDTaE4zTkILwGeiOdbMnu6Cnmex4tqYSx2zLJXe0cC5shLZmgVMXdjh5wmX3E018+egcDiGyWBZbdZpbQuH5Xu313RW7VghI0zqZlzIg0Qr2BFXM6vEFDILwR3xtXd/XnlK516qZ1B8Zhybw08Dudy/EcE+oFDfJIupgtG5seVs=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2832.namprd12.prod.outlook.com (2603:10b6:805:eb::30) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4065.24; Fri, 30 Apr
 2021 12:39:11 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:11 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 24/37] KVM: SVM: Reclaim the guest pages when
 SEV-SNP VM terminates
Date: Fri, 30 Apr 2021 07:38:09 -0500
Message-Id: <20210430123822.13825-25-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:10 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 8ccd6fb5-7afa-4d9a-28c7-08d90bd4f479
X-MS-TrafficTypeDiagnostic: SN6PR12MB2832:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB2832D270829177CA976B8CC4E55E9@SN6PR12MB2832.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:7219;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 9jy366vrO3EHvgbehwE2Xid269BaTwmRSldC2lYr86oLzVarpCyQPvoxo8428YmtFfVzApWeFPFTHH2hZUe5LjJ5HytojWz8H2QolXc7UNhVJbyCCPMhlDPwiXjJFSIAI19JyNuKTuPVTNepIQ8FvUay8+1wweXIsVqlJG8BkkEvvd5LmdDXDgy0F7OsB9Om/Ut/BseUWu4+Yg4nxwRsJ9ZwE2BgNxMrJeDTjd8n9MLqwiwf5F+5pZ8WSpB3BdSyxcBEgACtyvam3KotCCcsGhQ98bxJUxMnnVh8+BlZqIEKYhk+9M4jwBPZRLv4yG7W9MBjIHLM19O0Ui/eRnO47y7tKzKqGFJCAtoRy9C3QgiS62lMc7zUdqUfkr9hynKIS5KT1dvcYk8VdJOj3j5cmccT7hls3WxX6FAzo8vShSBohoNJ9fF29xMXCVsfF++88KigbPvOUco4aSti/huVfPCVIR0Hv84LBZJv5eZaSf8tAHStOLN7Hg3sDORGGMps4M3i4n13Dzy9wXP70LyM7gaCDyCFVronK+BrGXOHCg5jNpfJ+7pOvkhU9nFpikCEjYukBa6qqWbgKPEB3NN6bVoqQPyg+AER+F9cv302H/YvFyWQPLqrn9/AaohEScuXh80wg1nHQhO7XetTGXgpLA==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(396003)(136003)(376002)(346002)(66556008)(956004)(7696005)(66476007)(2906002)(7416002)(66946007)(1076003)(52116002)(38100700002)(186003)(16526019)(4326008)(2616005)(6486002)(5660300002)(44832011)(8676002)(26005)(316002)(8936002)(36756003)(478600001)(83380400001)(86362001)(38350700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 O+rijlrRp5EzsANXAilamwWgzwJMqwv540cCck/V5DptxycDzvvD/kN7cSYgFVR36l2t9nQHNhDkbNRZwVY9eWr1VoyfqPuHHewRK6SvBWpYcKJ/zEOUNz6nIlVrCtK6QGdtVOyqW9I46eNuCxIiKuvSuGYCtilfz6r1RqrNJHpv+yujJ5nED5lJPIVZ6vJPCY5BRfs4feVpR34/yuUt6mBbWwfjWHlbu+ilapgCK9Y5rqWIUphNaj8m70pP9aLid16TySowmfBjSjMxi5w5kV0I7kUYx0tom3YmICDrnS+SUPD1KrdhalAle1TS6K6Cu5+HPHaAet4q3ZLlDzB2ngUr+k675OHyGxM8q/YrOSqP35j0zKsur13BkhRuxnvWsEnVYOWboIsxEhNWX9nntpnnaawmOAxmGR24zvFAl16HTd6JxcHTrTa2Y5BuTEk+ANXdac2N8UDZ2iyHSFpyMTs4F2zjEaCA6hTTY//r3IL5DejEvsKabY9dj29blKwUGirGc0Yo7BtTlKkrJRKi0a+N2mi4V14Bdg9yya//8PbibKH9ohfS9J3hohDFPjsoGNhI43CQEQFJjdb5tGKFElEHfjrhD2qpTL0ADnO1zFQ8WkIkkb3mT/6XUoc08i/g/LyOxm/RwVsX7gNLLYjcCLMPVGzX3qnBl1+67C8QvXT35vqufmBwuwq+qPGwCqcQW4yAgBEm8K4aSsECXlXyyrfdir4yE9xlrBCqV3eXA8wkZHGe7S1YP0x1ILhO/fkfk7H2OdSa8nyP7C8Ewigp2js52OerU3kBrzT8VCs2+UsbYrphyps4G5X20xbTC8zB2pENy4srH7QS+myht9cVomKBwl5jmIdDfnxWJGC3zmZ1swQ2jCVSQn+IMBVXchjiG8Pw0RjBr16VFuCYnNagtSDXkDDviCIJlQknWl21IyKp9mkeDPhP7TO6HXF6TdNbjMSPditzvTQCoa/wQRh7j9W7W55TAKKaGeCGx/n0dSouWB3XZ8tUp6JMMTrZ5l5sBNalWJDXWvztVDh67gtoakgI0g7AIXE0QBBj+K3ef+QBWgzQCC+hr4mO3G14LEGR/CdaSIYIEMLPAJFEo4E9LLpwYCpKMhgnV9iYeawWFR2T/BpflJ7YmJMq5w86MPfMM2NGkKYjyucfhIozr3kZyL7ScocOTv37pCk+tZoPvE8hGwuFTsXtg8WzZDi6KCF2iok6zpqoYZSd/eb6NDlVMn68lUPX1oNUzJvBX+pn+28GkozWGMFcBenXdZSMuCoDodlkCVfYCbs6E9S4dol8YfA2r5Ax04aCBQssiA8UFp8ZmRPlyTYbjBUyd9yeQkHv
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 8ccd6fb5-7afa-4d9a-28c7-08d90bd4f479
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:11.3598
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 glGq7LFJ7jyRG/3t4yHpomwtvMPnKt1AGRz4KEf0895/0kIhCOVl5FUroL7EFhu0Bq4bcScAToWpayDVUGNSkA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2832
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The guest pages of the SEV-SNP VM maybe added as a private page in the
RMP entry (assigned bit is set). The guest private pages must be
transitioned to the hypervisor state before its freed.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/svm/sev.c | 39 +++++++++++++++++++++++++++++++++++++++
 1 file changed, 39 insertions(+)

diff --git a/arch/x86/kvm/svm/sev.c b/arch/x86/kvm/svm/sev.c
index d97f37df1f3b..4ce91c2583a3 100644
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@ -1920,6 +1920,45 @@ find_enc_region(struct kvm *kvm, struct kvm_enc_region *range)
 static void __unregister_enc_region_locked(struct kvm *kvm,
 					   struct enc_region *region)
 {
+	struct rmpupdate val = {};
+	unsigned long i, pfn;
+	struct rmpentry *e;
+	int level, rc;
+
+	/*
+	 * The guest memory pages are assigned in the RMP table. Unassign it
+	 * before releasing the memory.
+	 */
+	if (sev_snp_guest(kvm)) {
+		for (i = 0; i < region->npages; i++) {
+			pfn = page_to_pfn(region->pages[i]);
+
+			if (need_resched())
+				schedule();
+
+			e = snp_lookup_page_in_rmptable(region->pages[i], &level);
+			if (unlikely(!e))
+				continue;
+
+			/* If its not a guest assigned page then skip it. */
+			if (!rmpentry_assigned(e))
+				continue;
+
+			/* Is the page part of a 2MB RMP entry? */
+			if (level == PG_LEVEL_2M) {
+				val.pagesize = RMP_PG_SIZE_2M;
+				pfn &= ~(KVM_PAGES_PER_HPAGE(PG_LEVEL_2M) - 1);
+			} else {
+				val.pagesize = RMP_PG_SIZE_4K;
+			}
+
+			/* Transition the page to hypervisor owned. */
+			rc = rmpupdate(pfn_to_page(pfn), &val);
+			if (rc)
+				pr_err("Failed to release pfn 0x%lx ret=%d\n", pfn, rc);
+		}
+	}
+
 	sev_unpin_memory(kvm, region->pages, region->npages);
 	list_del(&region->list);
 	kfree(region);

From patchwork Fri Apr 30 12:38:10 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233303
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id BB75FC43460
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:32 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 912166147D
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:39:32 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232758AbhD3MkS (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:40:18 -0400
Received: from mail-co1nam11on2082.outbound.protection.outlook.com
 ([40.107.220.82]:56928
        "EHLO NAM11-CO1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232529AbhD3MkC (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:40:02 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=VXKCyFBwzjWK3F26A6O1SXA69i3b4A946F3vwee4X5NZDqDzrZaunVx7gOKZz5RogFYqrlM4xYPJJkF3buLyHeM8Zg/6HDl9KMhKABGitqxU9D+ioQbhf1uXRn34LyWTQn50+uymuCOhaMGTt89M0Ev/iL9lhZTyJ6ALl+4dDFtb0S2uyefIagbT4TNSrLHyXQkcwYqDD4DIvx0DuOWgIuQNSu22rFHAwxL21YE0ovTbtzsAjGZzVwxBxbBv+avbaZkKyoOpsZMT0b3ue0vJ1IIZVXw2fgj1cjhM0Z4wu6E++Ztb2NlIlDbPm6z7cvPPoRQYTwqMTnomfwOIkdLV3Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=w/nBt5GAj6xuog3fGhsnBODL187PjubD3Ke4LT5LX84=;
 b=axlE2iWdjzjDATTOUxC6bSAdEmen80Ws5DiUI4F2KGCbKGUsS4dhloEHwnSHQEfk2CkYrw3/cqTgYRHcypWpdNUzVrxolnLAAqykm9dqwJs/SKEm2S/Ocq1czOBM7HQU7rSmTNnOhqsYAAR9QsN9Blpay6eJFnvHrYMgcyo9fTKkBbeiva9rPCcZNO9721QF+HatK8DMR2mqv7BGjIYBbNNgus+LJ9qR2cDFGyrUt0NJIafJWIDf1mvQlYTaLnsYKUk/a/M5Y2nX4ZC2x7zxdGMLtlZ5yvqASqA+jP5j7BJxeFMZunCCZ1QTKiM92gNmIYkCZgNeLLiSM/lgpaYd7A==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=w/nBt5GAj6xuog3fGhsnBODL187PjubD3Ke4LT5LX84=;
 b=V80173IPoFCKQttRghVsk5Qp7wf+dLmeg+QfQDEjvuokbviUKXOOA0xA/NP5PinqTQKlc4qZAMbi+D0vLz5nlPa32i2C+cdcbECcI0OYonB01yonmfEGYKoBAigxHiff/OizszT5V+ccRUKC1xFQtE7FtKTey19JK4k2qqgTVzs=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2688.namprd12.prod.outlook.com (2603:10b6:805:6f::29) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.35; Fri, 30 Apr
 2021 12:39:12 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:12 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 25/37] KVM: SVM: Add KVM_SEV_SNP_LAUNCH_FINISH
 command
Date: Fri, 30 Apr 2021 07:38:10 -0500
Message-Id: <20210430123822.13825-26-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:11 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 4cd1d19d-ea5b-404b-126d-08d90bd4f4fd
X-MS-TrafficTypeDiagnostic: SN6PR12MB2688:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB268888EDADDFA9F99724B933E55E9@SN6PR12MB2688.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:5236;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 xX3aIWNHQw9qvhojz5JGztvWQWMhakEpv/KLxIZI+PVcfhKYcOvl6g32rqogEQOPV2m+iCuTLTZcwqFKHqWHG3wuH4c3IzwUh/wHBHcSC7ZGhxz3F1+fQ4e8BN7RlUIYLmWQZ4dES2izzj69tiPnTe/9yl7AkJVq026XiXkh79pM29tfAW2hv09R8iPeVFFF3x1plB//b4V6ALspsJayAamORdrXW2V58RbV1MdHhQa6ATbebVirzF8NUsOog2iEmpWmPDgQ8HtcAgDr58g46h1vQMuWJrG8TtX7dlMTcacaz87D48ziYps8bUmKRZQ+rddSIQJ4v8s8ZYjL0ly4fYp+t7TMscl1S2NO0dljz7TDUORbn2MS51ZblmS60NYCGNzgshQf4THoTpdvDBKvKdwIbdE7FImoHtWINW2ezxha7UYyvv+jIcm4YiYPi4oQ3yXUDyXxISF0EnwxRDB29NKaI2y0bfh9hDDmihjVb9YUtwHJr7emmm+1MrBFg/qnjWBo7D0fcvFVjg8GUYn2IWzfr6l7IAmMPcLRIzHJfkAQ2tPgszNu7Z8dmDPiKxh76G0D5PetyPVOTpYxKc4MVXjkLlDH67VQRzazavwgSBKTD9O3trTdQ374ULy4ozzWqPNpccUkWGKWr6wxz5nR5g==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(366004)(136003)(396003)(346002)(26005)(8936002)(86362001)(478600001)(52116002)(8676002)(1076003)(66946007)(66556008)(2906002)(7696005)(83380400001)(36756003)(66476007)(44832011)(5660300002)(956004)(38350700002)(38100700002)(7416002)(2616005)(16526019)(186003)(316002)(6486002)(4326008);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 Sx0JbA+uWysLgc1BWUtUT36QlWOcXpISdS/wdOW/Fz5p3ijzZToENlwzRI8Z/1mCCavBnVyAW8rco43PxQDHry4we4MSVkpBTFaMPTCg3DNbJT/1OvJ9uPpWtdFwW1KUCbKa8XzCzs1MeMY+rsoYZsSoBHlCN+Or7SowBuCMRKHzQKAVtvpnxsdHMiLlVsQkaUZtnFdYAHsCQHBn1zfATUA639it/+E+p/8z3V6PdQNCQQyeoHm8d2KC0LDZlRXc0pKYFt2TfrRW2MQnhHcmt7Xj8V7qVE7W+CPX3cS/sbTj4xStCwLZ0k9M93oRFPSRdluV7QbhiHx+AbSqrwlTpg9HxKtjNgG6LXB4KDox3LFGAM9UnXdMNEJL78PIa8yks3/t6iZDlon3FtZ3B3lJWYMKv9dVy3QA5an9wNr8JuL8+BXzecn9ajj0Ggf8bk7PZt3oMbAAcA4MP7YE6r4GNkLkErrRPVWbshs0Bete4PxtM4r6LPAjlvBE4k9XyxIVgXp7ohNppNAbqd5aaYcRuLpQvBLrVo3a9sfStlTtkxIqCQHDkAEu8GrJPpQwbEHukA2Ck58npbggRLrcm0w8dC25iatFa9tF1/BxdaUV2pizDlDVzjjr4Bde+nmZgCNnR3N6rgTHagX5Z2fsbxvoBCQlVO+6/ZE83rPoV89xtLRUDBUyMG1zaWKLwYXXr2TvilYXM1OnDjuKat1O0IEivkRKuHLffmFc/Tj6wImjjLcmK+9ri4cw4NEsMgcse8eXej+t3zw0S4cc/IaMiZs3TNysGebUApWhN0+Wj+2YDwBh2NE971D9lpe9/OCBkWWK2WKilnLu2VwUajeygqELmGbRwho6YRNyDabjjn0n5xtoYQcoexN1Le4n0mu5htWKlOczFNMZpRt+QiL6FCqg0fpST0o0RwyTqA2AURGkymExOnHJ+1aP4OGYN75TFdIEBQ+F3AezD+5O2OIi/1LfW0rpdEh5J24FwriZp+qL5WeT/noc9RzPp20Z5GiR1kN3Rcg13cRKFJV9+n07f8tpkai9mj97oOh+lYncb+Byh5XtbB4ZlYlGIejpd3W6fQpL/IS5Cn/puEnyJ9I5YkAw2CKtRtxgFBvK3C3MPiTxzfteyfAl+3baZecBS0OJBnXhv1FyDDm7xaKPFQT8tc42JciOvUkZ+Ya0cgx8v0Tm94gVR+NkykrY4QWG4QKMcFXa6n/9wkphHLhwK6ZTYZOSJjiF1DRgUHNf+yruauJld+cjlBvByALFcdBRm+yYe/xJXn+2ahRbmh7WtJgNlAn48Oz1IHrui/pb9ci3nB943DfX3F7wUFoiotvO6SWKyRll
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 4cd1d19d-ea5b-404b-126d-08d90bd4f4fd
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:12.2473
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 hO5ED2e5ri+0lcPQfuZUCTp1VCtVwHDSkXD/TCfusTQEOwWReweFn9iXRPVGxSQaAIvUHlPqV5rLbP4fRGfsFg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2688
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The KVM_SEV_SNP_LAUNCH_FINISH finalize the cryptographic digest and stores
it as the measurement of the guest at launch.

While finalizing the launch flow, it also issues the LAUNCH_UPDATE command
to encrypt the VMSA pages.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/svm/sev.c   | 125 +++++++++++++++++++++++++++++++++++++++
 include/uapi/linux/kvm.h |  13 ++++
 2 files changed, 138 insertions(+)

diff --git a/arch/x86/kvm/svm/sev.c b/arch/x86/kvm/svm/sev.c
index 4ce91c2583a3..7da24b3600c4 100644
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@ -1743,6 +1743,111 @@ static int snp_launch_update(struct kvm *kvm, struct kvm_sev_cmd *argp)
 	return ret;
 }
 
+static int snp_launch_update_vmsa(struct kvm *kvm, struct kvm_sev_cmd *argp)
+{
+	struct kvm_sev_info *sev = &to_kvm_svm(kvm)->sev_info;
+	struct sev_data_snp_launch_update data = {};
+	int i, ret;
+
+	data.gctx_paddr = __psp_pa(sev->snp_context);
+	data.page_type = SNP_PAGE_TYPE_VMSA;
+
+	for (i = 0; i < kvm->created_vcpus; i++) {
+		struct vcpu_svm *svm = to_svm(kvm->vcpus[i]);
+		struct rmpupdate e = {};
+
+		/* Perform some pre-encryption checks against the VMSA */
+		ret = sev_es_sync_vmsa(svm);
+		if (ret)
+			return ret;
+
+		/* Transition the VMSA page to a firmware state. */
+		e.assigned = 1;
+		e.immutable = 1;
+		e.asid = sev->asid;
+		e.gpa = -1;
+		e.pagesize = RMP_PG_SIZE_4K;
+		ret = rmpupdate(virt_to_page(svm->vmsa), &e);
+		if (ret)
+			return ret;
+
+		/* Issue the SNP command to encrypt the VMSA */
+		data.address = __sme_pa(svm->vmsa);
+		ret = __sev_issue_cmd(argp->sev_fd, SEV_CMD_SNP_LAUNCH_UPDATE,
+				      &data, &argp->error);
+		if (ret) {
+			snp_page_reclaim(virt_to_page(svm->vmsa), RMP_PG_SIZE_4K);
+			return ret;
+		}
+
+		svm->vcpu.arch.guest_state_protected = true;
+	}
+
+	return 0;
+}
+
+static int snp_launch_finish(struct kvm *kvm, struct kvm_sev_cmd *argp)
+{
+	struct kvm_sev_info *sev = &to_kvm_svm(kvm)->sev_info;
+	struct sev_data_snp_launch_finish *data;
+	void *id_block = NULL, *id_auth = NULL;
+	struct kvm_sev_snp_launch_finish params;
+	int ret;
+
+	if (!sev_snp_guest(kvm))
+		return -ENOTTY;
+
+	if (!sev->snp_context)
+		return -EINVAL;
+
+	if (copy_from_user(&params, (void __user *)(uintptr_t)argp->data, sizeof(params)))
+		return -EFAULT;
+
+	/* Measure all vCPUs using LAUNCH_UPDATE before we finalize the launch flow. */
+	ret = snp_launch_update_vmsa(kvm, argp);
+	if (ret)
+		return ret;
+
+	data = kzalloc(sizeof(*data), GFP_KERNEL_ACCOUNT);
+	if (!data)
+		return -ENOMEM;
+
+	if (params.id_block_en) {
+		id_block = psp_copy_user_blob(params.id_block_uaddr, KVM_SEV_SNP_ID_BLOCK_SIZE);
+		if (IS_ERR(id_block)) {
+			ret = PTR_ERR(id_block);
+			goto e_free;
+		}
+
+		data->id_block_en = 1;
+		data->id_block_paddr = __sme_pa(id_block);
+	}
+
+	if (params.auth_key_en) {
+		id_auth = psp_copy_user_blob(params.id_auth_uaddr, KVM_SEV_SNP_ID_AUTH_SIZE);
+		if (IS_ERR(id_auth)) {
+			ret = PTR_ERR(id_auth);
+			goto e_free_id_block;
+		}
+
+		data->auth_key_en = 1;
+		data->id_auth_paddr = __sme_pa(id_auth);
+	}
+
+	data->gctx_paddr = __psp_pa(sev->snp_context);
+	ret = sev_issue_cmd(kvm, SEV_CMD_SNP_LAUNCH_FINISH, data, &argp->error);
+
+	kfree(id_auth);
+
+e_free_id_block:
+	kfree(id_block);
+
+e_free:
+	kfree(data);
+
+	return ret;
+}
+
 int svm_mem_enc_op(struct kvm *kvm, void __user *argp)
 {
 	struct kvm_sev_cmd sev_cmd;
@@ -1838,6 +1943,9 @@ int svm_mem_enc_op(struct kvm *kvm, void __user *argp)
 	case KVM_SEV_SNP_LAUNCH_UPDATE:
 		r = snp_launch_update(kvm, &sev_cmd);
 		break;
+	case KVM_SEV_SNP_LAUNCH_FINISH:
+		r = snp_launch_finish(kvm, &sev_cmd);
+		break;
 	default:
 		r = -EINVAL;
 		goto out;
@@ -2325,8 +2433,25 @@ void sev_free_vcpu(struct kvm_vcpu *vcpu)
 
 	if (vcpu->arch.guest_state_protected)
 		sev_flush_guest_memory(svm, svm->vmsa, PAGE_SIZE);
+
+	/*
+	 * If its an SNP guest, then VMSA was added in the RMP entry as a guest owned page.
+	 * Transition the page to hyperivosr state before releasing it back to the system.
+	 */
+	if (sev_snp_guest(vcpu->kvm)) {
+		struct rmpupdate e = {};
+		int rc;
+
+		rc = rmpupdate(virt_to_page(svm->vmsa), &e);
+		if (rc) {
+			pr_err("Failed to release SNP guest VMSA page (rc %d), leaking it\n", rc);
+			goto skip_vmsa_free;
+		}
+	}
+
 	__free_page(virt_to_page(svm->vmsa));
 
+skip_vmsa_free:
 	if (svm->ghcb_sa_free)
 		kfree(svm->ghcb_sa);
 }
diff --git a/include/uapi/linux/kvm.h b/include/uapi/linux/kvm.h
index dfc4975820d6..33f8919afac2 100644
--- a/include/uapi/linux/kvm.h
+++ b/include/uapi/linux/kvm.h
@@ -1682,6 +1682,7 @@ enum sev_cmd_id {
 	KVM_SEV_SNP_INIT,
 	KVM_SEV_SNP_LAUNCH_START,
 	KVM_SEV_SNP_LAUNCH_UPDATE,
+	KVM_SEV_SNP_LAUNCH_FINISH,
 
 	KVM_SEV_NR_MAX,
 };
@@ -1693,6 +1694,18 @@ struct kvm_sev_cmd {
 	__u32 sev_fd;
 };
 
+#define KVM_SEV_SNP_ID_BLOCK_SIZE	96
+#define KVM_SEV_SNP_ID_AUTH_SIZE	4096
+#define KVM_SEV_SNP_FINISH_DATA_SIZE	32
+
+struct kvm_sev_snp_launch_finish {
+	__u64 id_block_uaddr;
+	__u64 id_auth_uaddr;
+	__u8 id_block_en;
+	__u8 auth_key_en;
+	__u8 host_data[KVM_SEV_SNP_FINISH_DATA_SIZE];
+};
+
 struct kvm_sev_launch_start {
 	__u32 handle;
 	__u32 policy;

From patchwork Fri Apr 30 12:38:11 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233311
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 5FF55C433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:40:15 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 2EC3F61468
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:40:15 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233090AbhD3Mk6 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:40:58 -0400
Received: from mail-co1nam11on2082.outbound.protection.outlook.com
 ([40.107.220.82]:56928
        "EHLO NAM11-CO1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232756AbhD3MkR (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:40:17 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=h98DAqboqgVwcXrNXUj5fJxpSryAKpZPGmqyRyHw21ZItU48J9Bph8mqfFCq6eJyIoW0S5ZTMZ4WdsQOhXLwGp6Jm3+Y3AZeYyIJkLAaliIZdalaim6OjHwvsSXurxufYLnTRuusp4q26crAp+q1SycZNeDB6zyoFx0a6R55ijdSiU1J6C2hjBiVZNaok0a/o2SYqITYBfYR0iyNJqsShpczMFYn1SDt5oyBmqnmpqeo/wo6rkNfqDBj6Akbx250VkTJFWo0lmwPvOfKiRzLKYAulNMXIOeR6MQ0lCNqF8nOyQjzd5DoV+YJwRPiQUKFuothioS9c8eI3mX5eDYcVQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=FpKNtrI4wPJGS/F2I+MzU2QNP6Jzxn1gV6zI+j2Te4Q=;
 b=c8CDRuHC+x3NhrzxVcmtSesyd/aaCrIHWV4OK5abjj1gMwZAAPKM5heR84jgxbbnhhV9qm9Oi4RYMA4h29EoLnNn3RcvPjQ7J3e1eGXAxwdEp8meRGlKPpsqQ/F+2oIzAdql/FemdkmOUWLebWpyJnSeesT1RvsBdPoVZdTPEkU5kh6zbWrvlGBEv6DsxrsMLhjELSYMCLFZosys4SseWFeqLq5hjkU87xJhqjiw30qcv16WM6n33WBRim84a0jj0WRMk0hql+ONSQlkCAzczzmawdfFwjTdfQfscj1wuh/EcPyTgE875dGiQ6JYebNlO7Yaj2ba/PIb7N2m1ICMOg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=FpKNtrI4wPJGS/F2I+MzU2QNP6Jzxn1gV6zI+j2Te4Q=;
 b=OZupImQh3mfIIbLXw5/jsZlEjOmobIJXNxDpxwZN1NYpFeN4Sch81D5TEoiyOsYa2PasQWMwaSthkIKnNG2rxkGJDdjZHTo/A2Ymbfd+9bpurkHX9hpgfRfU4uHBsNwfySWypTo5u32JoFGKkbSQksyv1CCh+4omEP4VPjnLkOA=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2688.namprd12.prod.outlook.com (2603:10b6:805:6f::29) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.35; Fri, 30 Apr
 2021 12:39:13 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:13 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 26/37] KVM: X86: Add kvm_x86_ops to get the max
 page level for the TDP
Date: Fri, 30 Apr 2021 07:38:11 -0500
Message-Id: <20210430123822.13825-27-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:12 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 21b2d423-bea4-4ea1-0f47-08d90bd4f567
X-MS-TrafficTypeDiagnostic: SN6PR12MB2688:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB268888E491714F07FC472B8FE55E9@SN6PR12MB2688.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:8273;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 fqhnBIe8/vyH00zc12uAZKO9rvbNVX67EL9EhCkaL5eX9x0Y3BQutCUoAKaahL/y7TWZqw0dfz21nSpxeI/QwkXQorC93Fi8XCDUX2yJRFSNPvdXS85VvbP3UdaeIMEoBdE/FSF3lebumiIAskxFGaB9Ol7nx7jcQYiC8FVdhs9U9JLGAQXEtOyBaAYEd+iH4GDZQrygZtyKnnRBVhPk4hdZkdZ6/hGAfke/vVR7k4mFNDKjsJ0XyW+fLMUTNfnf1JnQ/Wf5GLfmc2PgqQ5cx9Zc63WfJZB8aZVyeRJpUb2KADER5T3cDAQvus4aPKtTxl0Tsp7GKsRF5fd/j8Gy0c9BT1PGplT62T2IbSHwTq+z4LYeb05y50dRJeyAfo6ekmA9CgNwk81NVwjjuoN9aQhqjYm3/h5QKAPeml8JlqYz6MdIFYnWKPqTfN8WadOD+11TV/qA0YVsLUPEGGHCDIdhfGq9ZrIbMC0erbBktL7KMxqFN/9wKvyRB/GsN2uwxqUg/n6wDNd/SiWku82/6qMbCKMR3Z30MCHVn4nRZMM+hHVs/k5VMmzUvYVW2utT1IV3Ppf6ldIKFJCUaMmSgKadc53JOBSrj10FTKkpZML5q2RCu40JUBXFnu9EIXxIgJcoA6j+pqBpF4aNyb/xnVzr3hrPeIflYUe3rPFlTzw=
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(366004)(136003)(396003)(346002)(26005)(8936002)(86362001)(478600001)(52116002)(8676002)(1076003)(66946007)(66556008)(2906002)(7696005)(83380400001)(36756003)(66476007)(44832011)(5660300002)(956004)(38350700002)(38100700002)(7416002)(2616005)(16526019)(186003)(316002)(6486002)(4326008)(15583001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 O7xpLd2lvI3kkgFCRZbwDNJpAN6XSs2sHwlS86cdkcdEM5zoK+Ol6r0TDQXC1ZX72yiTHPPmKgOhv/wohI6d35m5GVq2EVh0/6kipR+d5J4HvyZ+FF5relG+rc6RRUpIJNhFv3YT9QNQQxHq/ohEfxZb8zUrvL/1y9BWrE/aQX83bWxJK+M/lrBORWwofSUvz8EtCu52+ZJE2tWpy39dnsbc9D1MuCDYoirKK9sI6kgB/R0OjyrjXLy1WpBi9YMMlONkqSkCVCYXqvEX83CMqTZgJjphiZ9otOWRWmsLJOMP94aO0xIkdLm+xWEjYHuARpZUGwKZ1bJbR9nZiyrEYygvax1sjAL9tAh/Xghek8S2BOuROTXxQp8yymvwL9CtMWh49ZroCpx6PpRsA3tWkLn95XdpUbEsB6YfqidQKeRYo3IwcchUZjKnP9TAZ1/L9IMqUlQ4WAqh13X9FJzvD8pX0HJxWMOP7xiSxbynRRbLGuHjUtKxOZzJI7l69C2r8uk5Rhb7kcj1QuIkUCZBlpJ9ksI0XXK+k/3EL3o2Eu8n5HW0Sw9476AWFzuPjj0h5iYDB2o2Zed6b/EBSDkeUK369hULZhp3biihE6M6isJdSA97im6wSHXCVjj5eGqYDEKcgIts1dcr1ashxdRERZrPfqLjiQ7eCRwvrOrZpzkBsSElafBbzAIvuHetPM3Iuh7XZMr6rmODHCPhJaa6x2LII2HPbpr3FXcwNOqDIFE2y6LMvTyfAZjzYeV11dP8XjsLcYS5a+CXjQ7Tmnod2OTrtpAEXorFwe3bJBIFVuG3rUoiaxrntm6iz1Gw8bpZ0GjNEgvKEzo/2xt6wUqvygnWu3/xD92mIyLzU5typFTLdz++xYeyV2NL3GQK2OXW0vVTlV3126D0GRW6p92XVSFpBMN46d9msW0zZMJcC7sL0hMjQw69JiwW9TfwZn99UFDN8pcSe+9qgv03MZXbII7TaJ/cId4txmrzLs7aNrCU49v65C9jAPAgnr7ZB3nLabDOmtPd8bBCXQC3LnrN+MU7VmdaGifug2knyErb91JqwRNSLvCpBPtkfob6MTTn5jw/RFu7N7SDiIzHK1CQ/eP0afv5RSzVax0Ls9ERdZGylsc3qm45JH8uoRjX1He+eRseWMTgjHT5cxDN9W3LyAX54g0ADwgGDheEZws/Af8aZpwYoZpprxcRU4skLn6JB/23PKgZtCPSgnJAja1UmKNXjWWhGA5qvrV+BT0LjVAhMdGOYufvzMt3uzGYlPDlR8Ld47X2JSZenzB+Wl5Zn7KSZU7IHXjuf35i9lYEbDxKHI6g2OnGDe2CxRgU/ZXp
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 21b2d423-bea4-4ea1-0f47-08d90bd4f567
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:13.0118
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 h3wHyFisLVhMlV7m16Aq04cN/vExMJTOskaZnxSnyFzZFT56sQrEM05FkglnIJ9DWgw7OXBI9C1JQk/ulACFGQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2688
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

When running an SEV-SNP VM, the sPA used to index the RMP entry is
obtained through the TDP translation (gva->gpa->spa). The TDP page
level is checked against the page level programmed in the RMP entry.
If the page level does not match, then it will cause a nested page
fault with the RMP bit set to indicate the RMP violation.

To keep the TDP and RMP page level's in sync, the KVM fault handle
kvm_handle_page_fault() will call get_tdp_max_page_level() to get
the maximum allowed page level so that it can limit the TDP level.

In the case of SEV-SNP guest, the get_tdp_max_page_level() will consult
the RMP table to compute the maximum allowed page level for a given
GPA.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/kvm_host.h |  1 +
 arch/x86/kvm/mmu/mmu.c          |  6 ++++--
 arch/x86/kvm/svm/sev.c          | 20 ++++++++++++++++++++
 arch/x86/kvm/svm/svm.c          |  1 +
 arch/x86/kvm/svm/svm.h          |  1 +
 arch/x86/kvm/vmx/vmx.c          |  8 ++++++++
 6 files changed, 35 insertions(+), 2 deletions(-)

diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index 71e79a1998ad..88033147a6bf 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -1382,6 +1382,7 @@ struct kvm_x86_ops {
 
 	void (*vcpu_deliver_sipi_vector)(struct kvm_vcpu *vcpu, u8 vector);
 	void *(*alloc_apic_backing_page)(struct kvm_vcpu *vcpu);
+	int (*get_tdp_max_page_level)(struct kvm_vcpu *vcpu, gpa_t gpa, int max_level);
 };
 
 struct kvm_x86_nested_ops {
diff --git a/arch/x86/kvm/mmu/mmu.c b/arch/x86/kvm/mmu/mmu.c
index 930ac8a7e7c9..fe2c5a704a16 100644
--- a/arch/x86/kvm/mmu/mmu.c
+++ b/arch/x86/kvm/mmu/mmu.c
@@ -3781,11 +3781,13 @@ static int direct_page_fault(struct kvm_vcpu *vcpu, gpa_t gpa, u32 error_code,
 static int nonpaging_page_fault(struct kvm_vcpu *vcpu, gpa_t gpa,
 				u32 error_code, bool prefault)
 {
+	int max_level = kvm_x86_ops.get_tdp_max_page_level(vcpu, gpa, PG_LEVEL_2M);
+
 	pgprintk("%s: gva %lx error %x\n", __func__, gpa, error_code);
 
 	/* This path builds a PAE pagetable, we can map 2mb pages at maximum. */
 	return direct_page_fault(vcpu, gpa & PAGE_MASK, error_code, prefault,
-				 PG_LEVEL_2M, false);
+				 max_level, false);
 }
 
 int kvm_handle_page_fault(struct kvm_vcpu *vcpu, u64 error_code,
@@ -3826,7 +3828,7 @@ int kvm_tdp_page_fault(struct kvm_vcpu *vcpu, gpa_t gpa, u32 error_code,
 {
 	int max_level;
 
-	for (max_level = KVM_MAX_HUGEPAGE_LEVEL;
+	for (max_level = kvm_x86_ops.get_tdp_max_page_level(vcpu, gpa, KVM_MAX_HUGEPAGE_LEVEL);
 	     max_level > PG_LEVEL_4K;
 	     max_level--) {
 		int page_num = KVM_PAGES_PER_HPAGE(max_level);
diff --git a/arch/x86/kvm/svm/sev.c b/arch/x86/kvm/svm/sev.c
index 7da24b3600c4..3203abbd22f3 100644
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@ -3188,3 +3188,23 @@ struct page *snp_safe_alloc_page(struct kvm_vcpu *vcpu)
 
 	return pfn_to_page(pfn);
 }
+
+int sev_get_tdp_max_page_level(struct kvm_vcpu *vcpu, gpa_t gpa, int max_level)
+{
+	struct rmpentry *e;
+	kvm_pfn_t pfn;
+	int level;
+
+	if (!sev_snp_guest(vcpu->kvm))
+		return max_level;
+
+	pfn = gfn_to_pfn(vcpu->kvm, gpa_to_gfn(gpa));
+	if (is_error_noslot_pfn(pfn))
+		return max_level;
+
+	e = snp_lookup_page_in_rmptable(pfn_to_page(pfn), &level);
+	if (unlikely(!e))
+		return max_level;
+
+	return min_t(uint32_t, level, max_level);
+}
diff --git a/arch/x86/kvm/svm/svm.c b/arch/x86/kvm/svm/svm.c
index 1b9091d750fc..81a83a7c1229 100644
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@ -4617,6 +4617,7 @@ static struct kvm_x86_ops svm_x86_ops __initdata = {
 	.vcpu_deliver_sipi_vector = svm_vcpu_deliver_sipi_vector,
 
 	.alloc_apic_backing_page = svm_alloc_apic_backing_page,
+	.get_tdp_max_page_level = sev_get_tdp_max_page_level,
 };
 
 static struct kvm_x86_init_ops svm_init_ops __initdata = {
diff --git a/arch/x86/kvm/svm/svm.h b/arch/x86/kvm/svm/svm.h
index a870bbb64ce7..cf9f0e6c6827 100644
--- a/arch/x86/kvm/svm/svm.h
+++ b/arch/x86/kvm/svm/svm.h
@@ -567,6 +567,7 @@ void sev_es_create_vcpu(struct vcpu_svm *svm);
 void sev_vcpu_deliver_sipi_vector(struct kvm_vcpu *vcpu, u8 vector);
 void sev_es_prepare_guest_switch(struct vcpu_svm *svm, unsigned int cpu);
 struct page *snp_safe_alloc_page(struct kvm_vcpu *vcpu);
+int sev_get_tdp_max_page_level(struct kvm_vcpu *vcpu, gpa_t gpa, int max_level);
 
 /* vmenter.S */
 
diff --git a/arch/x86/kvm/vmx/vmx.c b/arch/x86/kvm/vmx/vmx.c
index 10b610fc7bbc..6733f1557016 100644
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@ -7670,6 +7670,12 @@ static bool vmx_check_apicv_inhibit_reasons(ulong bit)
 	return supported & BIT(bit);
 }
 
+
+static int vmx_get_tdp_max_page_level(struct kvm_vcpu *vcpu, gpa_t gpa, int max_level)
+{
+	return max_level;
+}
+
 static struct kvm_x86_ops vmx_x86_ops __initdata = {
 	.hardware_unsetup = hardware_unsetup,
 
@@ -7800,6 +7806,8 @@ static struct kvm_x86_ops vmx_x86_ops __initdata = {
 	.complete_emulated_msr = kvm_complete_insn_gp,
 
 	.vcpu_deliver_sipi_vector = kvm_vcpu_deliver_sipi_vector,
+
+	.get_tdp_max_page_level = vmx_get_tdp_max_page_level,
 };
 
 static __init int hardware_setup(void)

From patchwork Fri Apr 30 12:38:12 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233319
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 7CA7CC433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:40:58 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 4CD9F61477
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:40:58 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232418AbhD3Mlm (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:41:42 -0400
Received: from mail-dm6nam12on2047.outbound.protection.outlook.com
 ([40.107.243.47]:61889
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232709AbhD3Mkj (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:40:39 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=U+nBav39Wr/MAY5+w30pPd2biYzbLvOxkjMFndVvdJ48ZDhSGm4FJnqZRci4RQ8YIJjNJyM6nmyj19qvtOkL1ZO0/MV3jynRRpd09ViPLzhYyz4bwxt90NpglD7XM4/qLQWrBHJ6Yl6nf9XfygVCZSVE43ihSAsuTcg7SLfupBcLlrfxIRedtSDU/yaciZxKiwHCtO9H5xpB9T+ZGNSk24qPrui4J9yFgXeDw6r7SueT4yEVRyElLlpau6ezu6U0htycow/lv6/qowFpUrh7uMVNyCIEbczSvkiX20IVLKF8g6c5GkERn3qrQRIvMMIM69pdsbV1Kho0a7tHNkrgpw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=jHxPvT2mceaCDwGApkBfMPFYPhBf1kKunh9+nlibH5U=;
 b=HUYl4cOHGx9wQCQOTNRXGxFyt8tZLU2IjzNFJw5y8yE9Hk17xtsKo+UXhpoSemTOa+qtdf4+oq4j0zA1Sz6espWsxxd3N/JL0uqAep2d1y8kJI0B35D3jIvhukiL0mrXMPQIh1a7Akq/3GhENC7rAq3FGkjyqqtjTx9askh9OlH7wy1Tz2o61hGN6p4jHB5fr8mGIZ+jmWUdvgb4M/8RgU9a8l+70VpGlFHX8pMtHXFikQtrTQJ89mXFG9xpZ6MXQhCvyRGIwdSP3fPiFuby3AgZcqt+UzpA4ecUY6K9U1U/7mW8RTe8u+CJfs5JRhCp+wQYis3oiobviS4lJlt1ag==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=jHxPvT2mceaCDwGApkBfMPFYPhBf1kKunh9+nlibH5U=;
 b=IK+NtHzG2+/NXAeucwnMfLHyoKeF4Hanipi5W353dWOgy/ZvnyfrABMJRjW6K3UxUpHHjQp2M4lzjtZ/Wx7tWFdVQ0plrY1pNPKvMH7pG87WENbeF5lP8tjc7E/7SVfPNOTpZn9FjtK9FUd6h9qjTXcQu5YViFk4hX9sxgU4Kd4=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2688.namprd12.prod.outlook.com (2603:10b6:805:6f::29) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.35; Fri, 30 Apr
 2021 12:39:13 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:13 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 27/37] KVM: X86: Introduce kvm_mmu_map_tdp_page()
 for use by SEV
Date: Fri, 30 Apr 2021 07:38:12 -0500
Message-Id: <20210430123822.13825-28-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:13 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 9f27436c-6eef-40c9-0b75-08d90bd4f5da
X-MS-TrafficTypeDiagnostic: SN6PR12MB2688:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB268843F40E9A7B3A05FFFFD5E55E9@SN6PR12MB2688.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:8273;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 7XQQsTOViNPlYvkwXgUizkIBVHfznYxYRFSNibsc0ueWVYMC7tENIdTpPc3ZEW6Xsx4L+NtnQPMlQZtxMwPyo+YhxFCR9wqDAfL7F+ONcGEskb7yDgzs6vJ5yCRL+252KymJR/pYdGklQo/dTwf+bftji618Vgco5lSaQj1+IR9xIzN7cpcy2nwkPxAJuxGKoJX1uV+S44iGduH4lN8avpcS2TZGe+ZPeDdsOmjYDV89UNCEOxqfLziJdppCghciy0b3Gc4sJtzG6UaO32kVN77cwf4vGeeTKQlbbnUyNhE39LCVTP480S5HzAcFnGD2oVOFVWmBFn4TXhOMglLnemIi09ALNgYF+2jgRZ1n+q/isue20G5iDh1JiLLhppWo92ZeTkwbpLnUIryhGn7d20N5jCtgkBXMDNSpp+tnHrDrgNA7n30ydoLDf7YFBus6mkTCLhEz3RmfKN5J+yg1BkVDn29Q8YfGJIr/gx2CXLpdGD2UrWARgsKyVtA9HVSlK9Fq4VjrTHcjv5KYjrI6P0Vl8Uj++2SD6gIwAx6+E48LzS7+QTvg57P7V1ZVj6Ex/vDSKDzjFEWGpUePg+ia8b3MEft04ZcrAZ0ar7p0AZprkCmDEQQzCowpACZ52k4A++KbOBL6xQ1OmIa7A4lIpQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(366004)(136003)(396003)(346002)(26005)(8936002)(86362001)(478600001)(52116002)(8676002)(1076003)(66946007)(66556008)(2906002)(7696005)(83380400001)(36756003)(66476007)(44832011)(5660300002)(956004)(38350700002)(38100700002)(7416002)(2616005)(16526019)(186003)(316002)(6486002)(4326008);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 iBM2oknEn7Z8sppps+bSjRgsmj0+nXrHB28zd54nuZ+aC8woHEmQR1/d5xnfduXQNZ74G8YvZLQlXG1o5YrEB9OdFBdpfjHxexxYNcuw8JJDx1NV4POmALVfa/FbiF9oQqY6wvNyssvL0Il41eP1H/BdddUsvuWoydlqa1t2YS6XtMZdyloyNqiKq1v3okZsvupmM32g82JvcGMEirH8oHV/qW/cTQxwTOilFbvRHBVbqUf5RuV53Cow1rs5AI30unvPFk1HoS8WyjmzYu18otMlfBHkVWag20VTq1o36nUp9uqhEkWCJEVhm7Ch4PZ2kdS08xztbabfNgTmDQfz0YanzGTlXTMTbOtif0l6C0X2GmgZRXEORaKJTdDIPsCy2URa1GFttu0FJV0STEh3YUvU06CftmHUlr61sxFCLi3El/UQB5pGAnZIYMwzhEVwKhuiN/9QxIlJJ2NsEDLSUKF4ZOS8To7P6eV8fodv/cyGxkfrAnQi5FtaqwcNHOA/OLZ8o/txunRCUz7S4I48b10km2eOw2lMh9ZPA4EBaLFKe2GIs79YKtpPxV1U7BgZbRzUQqq4cns/1Z23oomDwf3YcMiaOI6mDF4ZYJCZFsbCDxsMhFzWaRGmTchYZMTWCVzY1FuGsU1RcTJLA0/KeztChFpnv8pSD8EdCKY3iE/lSR5BQ6e0yhuxAyn5d/VPJ/I/Z+Dy9a5c9Zzu/dE5JqYgIpoXs284xhXUehUV49PIIY4R72dw6SshF5xcH01RHJG2954+xV8YsjvMzq/H3XoLIPNiOAskG2Wr/g5rwanycUyBGcKRIXUdPXsAKOeY8TGeN3gl/1O6fq3xo4fGwoN6gPggghj9yyhHLOqa5vagdGICPyED+yQbX/4vZq1FC4k7vvXdFuW7bBwGjGvAWw3IIJjc21excTHkEE7zb/FFga6QrvB9iC0ldPkdjUHL6TKo2xtMfzsQ72DHhC3sqmrpoHoDD7wP81i0YabBJXrto1PGBe1KP4dt/WAem9Y55GcCj+zGGydoF9htUNWQf/7Y7EbXTVMCgKq3Zg0L8Byng6p0gqMe4d1g+cFtlUSBbtE8MB7C3jfJj61NCOjeWxAxfnmyJm+kWCO7YyMOECgiPQVM77BrwIboBjE/6D9oSTwyPgMpw34VYn0fBbtWuIz4tpga0I4zu+fo8k+T2xYy/4LbE6LOrvstN0CEqIh4yCV3XM4wt1/MNDBalSVM0i20vIcs9dFkfjN61H7j1wlFF6fbmtZC5xkHt0Wdb0vL7TAfBaH5PFMZDv7I/XAOYd4UnK3qQ2x372IQUaYQGFQH4FGACBvBP6ayc+JoJu4r
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 9f27436c-6eef-40c9-0b75-08d90bd4f5da
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:13.8204
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 xMf1nX1+ozugPj8BViO81zFTImd7lVkSMhtbhnfJwsxsmA8DBTYj5ZOxOd4DrI5X1jxtek/r8VkpjA657lm2zw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2688
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Introduce a helper to directly fault-in a TDP page without going through
the full page fault path.  This allows SEV-SNP to build the netsted page
table while handling the page state change VMGEXIT. A guest may issue a
page state change VMGEXIT before accessing the page. Create a fault so
that VMGEXIT handler can get the TDP page level and keep the TDP and RMP
page level in sync.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/mmu.h     |  2 ++
 arch/x86/kvm/mmu/mmu.c | 20 ++++++++++++++++++++
 2 files changed, 22 insertions(+)

diff --git a/arch/x86/kvm/mmu.h b/arch/x86/kvm/mmu.h
index 88d0ed5225a4..005ce139c97d 100644
--- a/arch/x86/kvm/mmu.h
+++ b/arch/x86/kvm/mmu.h
@@ -114,6 +114,8 @@ static inline void kvm_mmu_load_pgd(struct kvm_vcpu *vcpu)
 int kvm_tdp_page_fault(struct kvm_vcpu *vcpu, gpa_t gpa, u32 error_code,
 		       bool prefault);
 
+int kvm_mmu_map_tdp_page(struct kvm_vcpu *vcpu, gpa_t gpa, u32 error_code, int max_level);
+
 static inline int kvm_mmu_do_page_fault(struct kvm_vcpu *vcpu, gpa_t cr2_or_gpa,
 					u32 err, bool prefault)
 {
diff --git a/arch/x86/kvm/mmu/mmu.c b/arch/x86/kvm/mmu/mmu.c
index fe2c5a704a16..d150201cf10c 100644
--- a/arch/x86/kvm/mmu/mmu.c
+++ b/arch/x86/kvm/mmu/mmu.c
@@ -3842,6 +3842,26 @@ int kvm_tdp_page_fault(struct kvm_vcpu *vcpu, gpa_t gpa, u32 error_code,
 				 max_level, true);
 }
 
+int kvm_mmu_map_tdp_page(struct kvm_vcpu *vcpu, gpa_t gpa, u32 error_code, int max_level)
+{
+	int r;
+
+	/*
+	 * Loop on the page fault path to handle the case where an mmu_notifier
+	 * invalidation triggers RET_PF_RETRY.  In the normal page fault path,
+	 * KVM needs to resume the guest in case the invalidation changed any
+	 * of the page fault properties, i.e. the gpa or error code.  For this
+	 * path, the gpa and error code are fixed by the caller, and the caller
+	 * expects failure if and only if the page fault can't be fixed.
+	 */
+	do {
+		r = direct_page_fault(vcpu, gpa, error_code, false, max_level, true);
+	} while (r == RET_PF_RETRY);
+
+	return r;
+}
+EXPORT_SYMBOL_GPL(kvm_mmu_map_tdp_page);
+
 static void nonpaging_init_context(struct kvm_vcpu *vcpu,
 				   struct kvm_mmu *context)
 {

From patchwork Fri Apr 30 12:38:13 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233321
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 623AAC433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:41:03 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 3019661477
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:41:03 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232916AbhD3Mlr (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:41:47 -0400
Received: from mail-dm6nam12on2072.outbound.protection.outlook.com
 ([40.107.243.72]:56448
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232936AbhD3Mko (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:40:44 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=HOWRCKDs4q4p/9IpVGoVoz7HJGNL08Uc2x27+SXIJ88rixuAsUsLgeV/sGlE2OzpTVF4S+RWlLaVHq/ise0MCt3w2bZDpKZ2hYL3U5HF7VL+mSTsYhBuX+6d6Akq0fxAD0T3uVvCZdq3BIFXXSIluOymN/wRNps+VSfDtABx2V04iMPZD4GfTX64prG0t0+gusWe6BgZTD4F4MfSpiI6fVPZ3jGkjckaZs3CGuvvDWNo+JtHqQPvtkp0Abi4qV2wmPkxnAHxvXg7iD8zvwaUUpWpIfFY571KQPPiMqLFv3MXsgvEtjGz0yBkRHjRg62sI3SxLwrL9Sg09d7OOjz2eg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=+orhr5GX3Q6RqGeyQHlODP8C6fwgfg9iszjhTmrz3OQ=;
 b=aOxfo9pPEOGcBN/JoeLJC6CCnp6+u2IzrlPvCLcOlzOVVzVeVyE88cOgUIM5dWlMdwAED/XWEV/L1h4rRU0AqsuZsIob+CVa6SmwLEMMat4ue+mXmi6fZEFJWdLxAiwriR3PUGfFlCHM1PL5fYiW4nXXHiGlfiBj0ASES6M7xIjOKKN1iM1b4Cnh9zQz+zJrmF9PTQ9tloPw8EkfLBQ/knYRkl/Z71LJE22FtTSX+6MbteUQNXWoKoBRFdx62YSFT6fzF2TpDsSrb7kzL3K4NBrakx8eKleyyfuDb2kM0dGK2bofsiIv7TJYqLaEW3cIg9ZyR55ilJKZCWdr2/qJkA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=+orhr5GX3Q6RqGeyQHlODP8C6fwgfg9iszjhTmrz3OQ=;
 b=b35HLcgywRKF7aS5ETny19OlIMJevyOI1ZphddnKpZD3DrMobN+is1FmDFY9PYltooKWphKOUqq84V0mZQBLLGGQnZq0x/yGB5tnMWiD/TkVbSViIlgG9Y8e0Loi8ZcfN541rUpNZ0qrbzmnl00Mi7dCG4zjuABUxmlxVMlYlYc=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2688.namprd12.prod.outlook.com (2603:10b6:805:6f::29) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.35; Fri, 30 Apr
 2021 12:39:15 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:15 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 28/37] KVM: X86: Introduce kvm_mmu_get_tdp_walk()
 for SEV-SNP use
Date: Fri, 30 Apr 2021 07:38:13 -0500
Message-Id: <20210430123822.13825-29-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:14 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: ea22ed2c-2ec6-4395-ba42-08d90bd4f680
X-MS-TrafficTypeDiagnostic: SN6PR12MB2688:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB2688F89646F1AAFEEDE773F0E55E9@SN6PR12MB2688.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:8882;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 FNqP4+eSVgcv+BVpwn3BXDF0QiV3F9vJv8VSt/cTBkol4cwq5ipC4gCcmYOcZ5+7VSsRtDDnVbulvL8zlvix0TiWapL94/fQrqzPsU5tW4Uaka0rHuXYeYMdreb/MN6sKk51jDMz2KbXws7C1AAKoeOzW1jU7dr4U3dgR2CMNXdGJhjBa5Uoln/QwcX7h5jQwrEAQFaw/X3CaOrKKyEjfXb6QWIHaH0JgmqQ1QwnwMQ8EzlmQYYLI+kfOIrkjX54E7OwuF0Uhf49CAMVJYu8x5+Xe2Pta5iGpTRm+a73in4bOrvwaIO4CjrnO/lL7MRT10nHTYumxjXDpUTQ2nJIOwU2a1xlx5Kskpb3VoIA+eHd40PwLv20wuaCOt6qYhdFIrYCaAIl0u0+Kz65Y0fqmwhP3tH9SOo6ekZXpw4wS9pPR1WLZUy9nf8RWcPXyl/2x8Fse6sgUESvf81aas+QkzriOhkAmBLFXThu6nRgoBn9CCu2PVqnz+z4xxisnUDFWYeiXzaTyp8nE/qROeFL6I0O+YbpH/QkAw2TL82vIFeie05sUkroTHYEgOQ18Bnw4gTHpFYc/z+5blHE11hXFMY22hknF8kB3V1KL/t0bP/d6j78J2CFhtD6KiE4jTqgx8KhbZoiOlkey9KWEk7lpQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(366004)(136003)(396003)(346002)(26005)(8936002)(86362001)(478600001)(52116002)(8676002)(1076003)(66946007)(66556008)(2906002)(7696005)(83380400001)(36756003)(66476007)(44832011)(5660300002)(956004)(38350700002)(38100700002)(7416002)(2616005)(16526019)(186003)(316002)(6486002)(4326008);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 DSp62iNQIVzHpvBtXX38jsmUaBtoZw7Bk2nHeTdiU5GLosgeFScfK+BPTeMi6giKZbgfP7Gm6zBzppBejlMYHUDy7UryooOeeYO+/k8OOkZD7os8uwX6cjeSrJE9XAJYdzqICB3Hx73Ortsf8thibBD+LBqqfgxUczCiNlNKAGK5ozuX5AO1jtZROrMB3rTa1AzLQSGss1ckPu77EXtNB/+TtpeIaW5XSJwF6onsUeN0ICDv0/c3o16CbWWZYC3chIg2seENmz577tlCBhqDfJwGkGRgon17S0o/+M4YM0bEaanSMQFtv0AAJnf8yy+WLZixa7Ub7AO8fU7H/mvhBPilwl2WZUHi4GVxrmsaHO3Fa7gJGFO/KS7rFdf0i6NvGzHtZK3hRQB2/ccSbbuGHstCC44z48WqpxDJiUCuKGSXC6WHi1PozuxVgF1Qu/u6Vr2CMNNNyvcLP2J7SYODx41GQntHUr32lVi1RLizg5hDHf+PvGVH0Uo6kxfUOqAcKoDJiIKejVkwTCjtGBxiOPxBpRMsVUaGh5Jpzldy66wv8V3vlWSn3Q14mTo3uiOz54yX2emq7IkM7VDFc3o++bMoKlePlYkaK/w5XZ2k1pAwnZDU/8AEPn/t02cxfBwuechak2M8d9jPbKp9jCL+EM+a4383TC7RPAqyv/cxJFGO+Yt6rRoEMzFqjZPEOrr4eXO2J9PNJmzUpyey98UQMCruJPwAMCq0fgwot0/WyGcqL6+2NeT8xLJ+IkuLJ0Epvg8w9yECAZqtpHiTiBPz4thhI5sToz2KdEdHES6UNCkEppXuwr24JfwoYV1qspJlufMYROJY4JlmMbPUREZXhgWF5GYTekuUmWeGKJacHzNza1IVkvuPTjNlEpfYJbNRIjAR3tsdIUs6xNzYLzzZ6bZ5SOWznCf0Ety91/9KbU9vRTeWdrAXthyI68SvYtJN0HBc06QqHPcmyrqyDrtsY9eGve57EpO65dp54ePXh/+vB3eo8jGaDevsVrCCSYtw5uhopm7FbKbJbOGNrX4b1YJHcEwUD7sB2mjMiKgH4WzXIEmaVqEy6bM0gdeBOePWpIZBsWgCtStxAV7Wr9+j01pz69yE7OeG4ExKPawIppYsCmkPWig0KLSXxgnNsyNCtuIGwEn96wGVKgE7C55jESg3K6XDEVjE4+wKHuWUxEi2QGsa4RPJXHnHRyClXkxFLD6O0wXK0yHaDvCpvNktnyNIkaHka1+RxTEqJ14hWNeSSK5MIXZP3gnF84QeKHdW8QJLu+AOVozuWa5MAZRSuEOgP73LTx+lqrkdijGEaZe1UzlLh8Gf+/hSVHSw6nHS
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 ea22ed2c-2ec6-4395-ba42-08d90bd4f680
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:14.9857
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 cliChkMZfXHCCZkUlz22qC8PR6ZCK6hNl470PLYfoNmenkTXViQsEJMfedid77c63nqOQe+91JeQxD0j0K0sxg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2688
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The SEV-SNP VMs may call the page state change VMGEXIT to add the GPA
as private or shared in the RMP table. The page state change VMGEXIT
will contain the RMP page level to be used in the RMP entry. If the
page level between the TDP and RMP does not match then, it will result
in nested-page-fault (RMP violation).

The SEV-SNP VMGEXIT handler will use the kvm_mmu_get_tdp_walk() to get
the current page-level in the TDP for the given GPA and calculate a
workable page level. If a GPA is mapped as a 4K-page in the TDP, but
the guest requested to add the GPA as a 2M in the RMP entry then the
2M request will be broken into 4K-pages to keep the RMP and TDP
page-levels in sync.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/mmu.h     |  1 +
 arch/x86/kvm/mmu/mmu.c | 29 +++++++++++++++++++++++++++++
 2 files changed, 30 insertions(+)

diff --git a/arch/x86/kvm/mmu.h b/arch/x86/kvm/mmu.h
index 005ce139c97d..147e76ab1536 100644
--- a/arch/x86/kvm/mmu.h
+++ b/arch/x86/kvm/mmu.h
@@ -115,6 +115,7 @@ int kvm_tdp_page_fault(struct kvm_vcpu *vcpu, gpa_t gpa, u32 error_code,
 		       bool prefault);
 
 int kvm_mmu_map_tdp_page(struct kvm_vcpu *vcpu, gpa_t gpa, u32 error_code, int max_level);
+bool kvm_mmu_get_tdp_walk(struct kvm_vcpu *vcpu, gpa_t gpa, kvm_pfn_t *pfn, int *level);
 
 static inline int kvm_mmu_do_page_fault(struct kvm_vcpu *vcpu, gpa_t cr2_or_gpa,
 					u32 err, bool prefault)
diff --git a/arch/x86/kvm/mmu/mmu.c b/arch/x86/kvm/mmu/mmu.c
index d150201cf10c..956bbc747167 100644
--- a/arch/x86/kvm/mmu/mmu.c
+++ b/arch/x86/kvm/mmu/mmu.c
@@ -3862,6 +3862,35 @@ int kvm_mmu_map_tdp_page(struct kvm_vcpu *vcpu, gpa_t gpa, u32 error_code, int m
 }
 EXPORT_SYMBOL_GPL(kvm_mmu_map_tdp_page);
 
+bool kvm_mmu_get_tdp_walk(struct kvm_vcpu *vcpu, gpa_t gpa, kvm_pfn_t *pfn, int *level)
+{
+	u64 sptes[PT64_ROOT_MAX_LEVEL + 1];
+	int leaf, root;
+
+	if (is_tdp_mmu_root(vcpu->kvm, vcpu->arch.mmu->root_hpa))
+		leaf = kvm_tdp_mmu_get_walk(vcpu, gpa, sptes, &root);
+	else
+		leaf = get_walk(vcpu, gpa, sptes, &root);
+
+	if (unlikely(leaf < 0))
+		return false;
+
+	/* Check if the leaf SPTE is present */
+	if (!is_shadow_present_pte(sptes[leaf]))
+		return false;
+
+	*pfn = spte_to_pfn(sptes[leaf]);
+	if (leaf > PG_LEVEL_4K) {
+		u64 page_mask = KVM_PAGES_PER_HPAGE(leaf) - KVM_PAGES_PER_HPAGE(leaf - 1);
+		*pfn |= (gpa_to_gfn(gpa) & page_mask);
+	}
+
+	*level = leaf;
+
+	return true;
+}
+EXPORT_SYMBOL_GPL(kvm_mmu_get_tdp_walk);
+
 static void nonpaging_init_context(struct kvm_vcpu *vcpu,
 				   struct kvm_mmu *context)
 {

From patchwork Fri Apr 30 12:38:14 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233323
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id D3BFCC433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:41:10 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id AC8826147E
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:41:10 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233045AbhD3Ml4 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:41:56 -0400
Received: from mail-co1nam11on2082.outbound.protection.outlook.com
 ([40.107.220.82]:56928
        "EHLO NAM11-CO1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232745AbhD3Mk5 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:40:57 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=f1tm2DEVFM3i59aYn6tuk7lzXF5stJ2ZbDQKiDR3ZvVgfV/nb4v2pFHJJntdt0SKmb1N6xkxj7Mo+m6/HOfTCFWRCgpyX0oz2sMNiOjUZ5TvBFGO5yBCBZy6ha5IOpIS99aKwCcYombmE0C30SuMPYgDOHqZ7w06FU3ssuZNYehIVoeBucwFLhCHGWzKCodJA+icXmNUpTuTBy7f3v4lW+5pDX+d5g3GkAOJFbn0SAX6RivDKFyqB3I6BnqbN7lwsQMEHgShR1L+OZVQcsUGtVBJrq5sGaxkR0vfuaICeyAsQKJc/axyvC89tY0Hc1L50tVCpnmXgSzOmarfiIbmsA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=LjQAgRyMgOw+mtC7y0kLgIdnWcgpPFw68Dvc4o0vM80=;
 b=Vr7DluXn+7TsfGy3XEGwVRc1r/SNGoTITG8ErGI6CNtG70rNU8CuwTrgsL9k6h1BX8GIeLP0yUZzbeRRJ50+TjLRKJw52OlyM31v8TVO3ouAjogJ3YfSpWvPom0j56UrWQmUAeGeKXCo3IyRBLAky0BQP3SacSat/TwTsFT5+LnocCCg4OQ1gBkpwAvH3H8RArM99NCHI3Kgsfb7j07fgr0t/RQkkT7UZnuokJ2FVRoJL+ZH0TOV/7nWMK7gLWnQD9TjmJ/A676ThtrxKipItzK46WrWGsTusuEfXS/+RPsW3DZDOaS2GqmMU/oS0PPiI2GSUXSL1PBBjX/yXeC/7Q==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=LjQAgRyMgOw+mtC7y0kLgIdnWcgpPFw68Dvc4o0vM80=;
 b=O3avIEfysiIdc0XR5eh6Yf+hPz/Ye71gFH5oXWiUFjqO732+F3rkBg56M+ajr6vV7eEtfQH9Z5zQcp8W/oJK6SzVgVPTpjbnynfBHebhCK7imoUl173nzLPuvcV8ScodfN1grZCRZgrVqQ1cioSk7S2r/dlV7sjwznvhE93cA7c=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2688.namprd12.prod.outlook.com (2603:10b6:805:6f::29) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.35; Fri, 30 Apr
 2021 12:39:15 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:15 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 29/37] KVM: X86: Define new RMP check related
 #NPF error bits
Date: Fri, 30 Apr 2021 07:38:14 -0500
Message-Id: <20210430123822.13825-30-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:15 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 094800a3-a37f-435d-b00b-08d90bd4f710
X-MS-TrafficTypeDiagnostic: SN6PR12MB2688:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB268830DCDC75D908C2ABA625E55E9@SN6PR12MB2688.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:3513;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 KqGe/K5xAEDwk7I/vaKAk336tgtlXwb/adZpytTQZVB6u8D5K4HlPW2bZkX+LEMe8D5q+KSk+jPtbP1mYB8oCqDgoy2jnDmtJu3Sil3cSSbgutu3K0UMEFVcHSVObiEXk+YY69lqunK1ap8NOOJK4JdsYhQ3H4hC5vYvKPi1MWzYpYGAe65vj/ig4XgDohYkp+Qwb8e1rAsh5aO3klo85ewMFvFR0KpyC8FVFyZl7py9bprW7vSmcXCIIuiNdHZsH6u4+jlOrwqgniZEQrOSJw63Yhj5gu8jjqJG2YpJWI5Ku+6OleRlW593S4KKmbYXHeRJ/6dh19do8ZYNoUm8ultD1CW61kb7r29aKjDjXLzdbrwHqqw4Wj4q8+6i6KjxST7UXcpUaCWfbRIjEp9bjVpXcdlTxksXCOeetUDn16oMsyjOef7BR+agq879Q5M4/TDi3HEZLKKJ7FIJQFgLMxHwykeThhBKhq9n2Cp0ARsSwrIXbfsEwTsnxkYFEeSDHHLNfFcmHsC5u7nZ9ZDb+dTLsK4BPr+1mTMdXNH8BuIk85fX+j5+XF60JXc5Ta0/HeY5PPSERnLBY7iAhuuN5t6QYN+JaBxygAaoPK/49jLDuE2j7QSn8fBUtCpIwaWwW25v4SlFRql+awjKanyK+g==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(366004)(136003)(396003)(346002)(26005)(8936002)(86362001)(478600001)(52116002)(8676002)(1076003)(66946007)(66556008)(2906002)(7696005)(83380400001)(36756003)(66476007)(44832011)(5660300002)(956004)(38350700002)(38100700002)(7416002)(2616005)(16526019)(186003)(316002)(6486002)(4326008);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 4PWhMzi6axe6AsOM7nhew6h0ff9VYPWKYz9h6JYTJRPEc47NXfZjUS52WfDkgqSBgeFvuanamQjf7ihJ1LHaw1nTDIV2o2RmUV2hellUG86T5GJpT430lFExvzAJ72VSmboGXa2Q8syW8mpqwqZNLvZO8Dx/+hAzXybWdARzVqCzRi4PlTyCVw5Z9mn0cR8CJ4lcRT/vAzXC8MFP8Mo57434iQyWAqURBqQibf/cmT4hyHJtB8uVeAW35Uda7D0th+Uha64rN3HYGy2CyZ0J5DhLRk+FCpDczXQxGCV9f6a+ip7+MNxCIJPc2j0Bi/YcdeV6UkNxa2dE6IwECAaJHb9ARhxZyma3Mzh/7kDJ80UGNB6sayiOjnkKwf3JJ7OKI10OUJ8s5PP6fu4jWN3JP7mxyMd3Wb6mnHlgbAMtau73wI+0/uDOuZoRW2EBvdWX8HjNGNsoSkN2GFUntVAsOdFvTHmqJszZDghXe4Il5SPjerFnJeoPN62DsyCGo9Nwhlo+SlKuIKZiRMfUbVqvLKsGJCgOJreAFO9i/d5MRhlMSlLwGUim99uB8ddexQKtZYQL6FFBhYGLl3EcDrTnqj/vp3pQdN4fO2cZLrHCWfW9c/o+5VurkkvrEivG011XPHGDfuz8r01ad0BQ1z24B0pg5iW8tONAoD1cWt4vhr8Bi+z9Kkqapt/W2mGyLHfHutoQZewxPX0l7kwsLSSdggkju2vBL8i6+I6YgZY2HWGjFjTMCzC8jK8GFAE0m2Uj9RHYUphfe7dvigIjhnkvv/L8tueMHfXqriA8B1B14uqJxo9ObBNFhNZ3Z7QCfyFkxnO8i+ofpkN+b7tPryM07g43NIpxWQA4CGNTXH22qIxA5OMPLYmY1aTjKde/L21cDwiOgp4sEWrffJnc5x031iB61OBkc9gaV8s+dYajt1ZVGf3xzcFszSPLLidIROeMc74DDMoamNnyZul+LmIWyisf5snUMEg0pTNrgb8CDwMPobZQoND3AoclKnHFSBZ02JSqf6nSGiX16j0glxXylMGRisTRsLDCXgopw6hfrkZJnXRi1EfqoLXzLIaiucXxG5AAC8lvGezjMKtHyxZmB+o9Es/eDosdirL3TQsydFvKJePhVV+77CLsdfUjaFKYPisLYGH1/4Y2Bz96YWVhFeYg0ITj7F0gmf0twm2qYex33pRuCkODZ0NxgAyOhUIa8HktQZRg1nnBtAwiD8LG+Dl2M4D/XfFK6I6IlOBfyP/v1JxDwERPcu3ALWTdC/ppYBa2PRIZ/NxLkdXMM4zsEv0BCxLXuDBMytEQfYkSVVCq9nfVf8fonOXITWolzYsm
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 094800a3-a37f-435d-b00b-08d90bd4f710
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:15.7213
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 ApNh8wq+OHA08baAsjsQzrO3jx0XHnR4/iuYRJuyrZoP8aJV9LJJblEdbtSqUGMwUc41un/Jkmyx9IaVFiyfyw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2688
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

When SEV-SNP is enabled globally, the hardware places restrictions on all
memory accesses based on the RMP entry, whether the hyperviso or a VM,
performs the accesses. When hardware encounters an RMP access violation
during a guest access, it will cause a #VMEXIT(NPF).

See APM2 section 16.36.10 for more details.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/kvm_host.h | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index 88033147a6bf..ad01fe9f4c43 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -237,8 +237,12 @@ enum x86_intercept_stage;
 #define PFERR_FETCH_BIT 4
 #define PFERR_PK_BIT 5
 #define PFERR_SGX_BIT 15
+#define PFERR_GUEST_RMP_BIT 31
 #define PFERR_GUEST_FINAL_BIT 32
 #define PFERR_GUEST_PAGE_BIT 33
+#define PFERR_GUEST_ENC_BIT 34
+#define PFERR_GUEST_SIZEM_BIT 35
+#define PFERR_GUEST_VMPL_BIT 36
 
 #define PFERR_PRESENT_MASK (1U << PFERR_PRESENT_BIT)
 #define PFERR_WRITE_MASK (1U << PFERR_WRITE_BIT)
@@ -249,6 +253,10 @@ enum x86_intercept_stage;
 #define PFERR_SGX_MASK (1U << PFERR_SGX_BIT)
 #define PFERR_GUEST_FINAL_MASK (1ULL << PFERR_GUEST_FINAL_BIT)
 #define PFERR_GUEST_PAGE_MASK (1ULL << PFERR_GUEST_PAGE_BIT)
+#define PFERR_GUEST_RMP_MASK (1ULL << PFERR_GUEST_RMP_BIT)
+#define PFERR_GUEST_ENC_MASK (1ULL << PFERR_GUEST_ENC_BIT)
+#define PFERR_GUEST_SIZEM_MASK (1ULL << PFERR_GUEST_SIZEM_BIT)
+#define PFERR_GUEST_VMPL_MASK (1ULL << PFERR_GUEST_VMPL_BIT)
 
 #define PFERR_NESTED_GUEST_PAGE (PFERR_GUEST_PAGE_MASK |	\
 				 PFERR_WRITE_MASK |		\

From patchwork Fri Apr 30 12:38:15 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233331
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id A88CAC433B4
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:41:54 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 858B161468
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:41:54 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233278AbhD3Mmk (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:42:40 -0400
Received: from mail-dm6nam12on2079.outbound.protection.outlook.com
 ([40.107.243.79]:17504
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S233284AbhD3Ml3 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:41:29 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=WrwzZxrW9tUK6Os5BWgBfbs9mmpuTxk/8J9ZVgUibM7U8UW59wLYABFAODK52t16tidFO+gIwQBufvx3KLqQrZ9o3+EO4QrIPK530bMAzGoX8xxLgp2BkGVtBazQvUhNAVZu1DLonxWOaxRstvKA9wvinShjbVMxJDCAvYvc9nEl/7x2+KL3vTWow+4qhl8NRAXPOla/E5dwW04gDMSo0VcuxRW/6EMrQ2ryLHyYQ6KHRpRgjO5IuBpZU+7zQzUJ4uqnNcvv6zB+kShR49FMGv686ljHdx1GQUwpSRr0CDm1fJwGUC6DFST8xI3is6INf7o//kBVgal8uRPN4d7NPg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=zJsHY8n2NA4exO9t0dViCB784NHvK8fDVYNzRX7Qd/g=;
 b=NSSSTrzkACnAbUxlkP8UGXynaDY6ZmVwCc8oqnoYkKn//IDwj4insDRxXb0gRzSuI/38kIjVOsG2jTPQJ9jkvbXphF7C5EO3npf/DpPkSSAIGruvbQIS/UOfDl1z/pLu48Nc5sKDgkXSopihvype/acq4HohCg+FLFcZQm3p+qVQIGqJGnoV1Q8cFH1U150K/9OHjKKzbAObijIouZ2XK3Lx59247UYAj2xve8UfQLqk00V4lGRQbGYgfVSYimz3oEQ6gi4rYjnTaLmPCiRV/1GLr+0xsWvj0jlR75GgI+/dGcx2a5kVz94mxnRCUcpQr4Ygk199fRXwniHwmAl0Aw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=zJsHY8n2NA4exO9t0dViCB784NHvK8fDVYNzRX7Qd/g=;
 b=SquzaKHpxdat2EB4RKKD760nxt+PM7WOhusw5HMDmT88Az3n9OHGs1iMu+BwCI6u+A2+v5ysv1bp+gz5KzVCsffUrs3YIM9miSvBwG8wRKf3WbQgppAC0Sa53/WHdmakA3RHMNvlGQoqgFIWSy6jxFZOlXngK9DVahc63fv0MG0=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2688.namprd12.prod.outlook.com (2603:10b6:805:6f::29) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.35; Fri, 30 Apr
 2021 12:39:46 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:46 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 30/37] KVM: X86: update page-fault trace to log
 the 64-bit error code
Date: Fri, 30 Apr 2021 07:38:15 -0500
Message-Id: <20210430123822.13825-31-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:15 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 3cf173de-a802-4d0e-40b9-08d90bd4f776
X-MS-TrafficTypeDiagnostic: SN6PR12MB2688:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB2688957DA612002D979FC8D7E55E9@SN6PR12MB2688.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:5797;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 +q1p0Xt7Uj2/nqZsJtfFoNsKSOJw7e2BpDrzIAnFtpDXv7s8X/faCg/MHnHo+Rey8zjxv34/wAEtJ6iXAyO3DSWPIfW/zF6S58M1EwyzH6n/jXoHalmdZTrkOr4lXJn2SXzp1ga05YnMCVZnQGFP8jv60fSncg+v45Q6OlfseiDDJdCm0NWpYZQLxSP8ZLDDbUPfsofV6HZ2yfUnVs8MYEho7auuLiXwvDVMIJKaqs/TW8VW0FYi3fzyTjeAWgILt0dinzMfM2tbk/2L8NQ4S6S+VhDQOkHDDKiZR4MvBzSdqrSgYnCfoW5A9+YSAYGyw4eUsFvonI2OUnXZWCIPRd5k5xz4v4i3EWaISB6eUFSNlpjunCS2cwYsRiAo1F5L/t3kRPHsRf8VuswQloU0j0T5dIOkZp1zVMBKqciIXeDrrTY3PZQeJFnWK/s9hRh2tSqiZXWNmMOk1uHrUlgCobY+EBeuaRMtlgjcK44+XkHD2H8Hdj14Y81C+IybFTCQnythodpP1q0Rd5sY0JxWphxLJA48vpu1XzCYBgnha1lCs2YWCjRqbc9h1v/HoBQ81qUu2coGJYHVo1iUBwCaeMPRzfH7DR5f85zxKAFx9QcErsr07lDV+ZVWfnSEDCEVZgoXqPTQkv6N2Jyyg5QPHA==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(366004)(136003)(396003)(346002)(26005)(8936002)(86362001)(478600001)(52116002)(8676002)(1076003)(66946007)(66556008)(2906002)(7696005)(83380400001)(36756003)(66476007)(44832011)(5660300002)(956004)(38350700002)(38100700002)(7416002)(2616005)(16526019)(186003)(316002)(6486002)(4326008);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 o5No8qrilln7rG5Qnsxabv5K5Zcka62idTw0eDrgnb0f8/1rf/EYclrC+dzwdbdbVzx61SDaufB/to31CWc1R23b1aHcRKDrsdPkQfR4LtCd/J1iZVJBsZA3i6uTliDCb4I8isqnK0QveOwUFub7WnQtMmbDMydyLEof2nEUbWSoO/scuqdf478zq2sbaVfsNFYR1z5/XUgr/ndTaukgQtmeVdSZNy8KIluAJAIcMved5tmX0EvUmxcyB7jzW3sk11p5cM+rNfCbypA9EsxtnUmDid+/laV8M10X8Iw7Sh+pA6GiPJCz6aBm4gboZFriGydA7OozpTDExQqMXBJrIF4cX2vOsjIFvAPr6Xdbc96J6BeNJIW05sj8q/kVTfxZc5RWch3NwLvt1wKNzPGSyuWJuCSNNreFa3SgcQEshZdC9EhtzfXZovUA4TR2FOTaBWpToWvVVB2Q79S72q2cpMsuxqj5xi3cs1zVe5wnRFA+HHU8YKiPVlD6rMat1ZqbcuLf2AEeh0HPF7m6YmOEwmESs+khkT461GvooEsRClxr1DjGhvZeFZPtd01Q1v73pvPqyUtCbA/1HY/gHAZl5Le9DLKTaWIPwRwBXYbzUwGa2x9gQDEkWcROf7Mq1mcWYSrRnledgpj123+Oe1IAggkEZmHnPdqv7Wr6XaarzqmqGAlxT//DZrPVHOQunz+bwMWrj6ONoA5MxgXLbeg0aw+Uo8gHK7+jZv8zMfNHqWXv5Qyqlhqx1joNLxfs6qnb7Y3wuGp90maXhpeUWiBh43KtJQlPMdGplXjt9Z+glGJ6692lQCAFGTjoXLuSOzmlf5/zfM/zf/S4oqq1zlvMGQPQmjVd2tlceZHXpiRkevHFaZtwv/a1FfcECgHD+SDGurw68AV0QmHaGs+gHqdigagOy8+BVu4ZnuNcr4TrZZh2dzZ4EJrJ62e0NLQO/wOZ091qjTHN7Upv8nATEjvNJJLUTxXvoc9qEb65chs/fUo2J30O1Zk7BH+14ERbTnE91+CZ+yAoOdoJIWtb+O6xetEHD7MqnwH8J7TV+ZQBh3NzkbtShtruJ47/mBIaxGWiGTMk1IIkseeqZ3WMXT0wfw+NMb99mZfPyfLa5cOtSaDct31pJ5e5NKerYM5zIcOlkztSg/QO91HzxzIo1BdP3OYbucxIEnKuUB8cc2JCd8V/jKpU+9zAxU2NeJbWOVq/T6/INLs+xMvZ6Fzf1Qkp7rkZTbvWAVGC8S0O6VpDWLZMqO6kx5paIhGfqEd7Ui4WkkMrvMelM2KFgIQZKX2TXsbQpjUGzbVC3mMtYQzTBMtdbn7j67O18i9y20WP9MxF
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 3cf173de-a802-4d0e-40b9-08d90bd4f776
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:16.3759
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 ckMlq0wJsGshKVB36Bh/aUMtNJmD1lFMGSXDz3Eq9K91UqHikwpjCxX5EJtJpdkV3GwGAfVkI4u10ezDE0A1Qg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2688
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

The page-fault error code is a 64-bit value, but the trace prints only
the lower 32-bits. Some of the SEV-SNP RMP fault error codes are
available in the upper 32-bits.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/trace.h | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/arch/x86/kvm/trace.h b/arch/x86/kvm/trace.h
index a61c015870e3..78cbf53bf412 100644
--- a/arch/x86/kvm/trace.h
+++ b/arch/x86/kvm/trace.h
@@ -365,12 +365,12 @@ TRACE_EVENT(kvm_inj_exception,
  * Tracepoint for page fault.
  */
 TRACE_EVENT(kvm_page_fault,
-	TP_PROTO(unsigned long fault_address, unsigned int error_code),
+	TP_PROTO(unsigned long fault_address, u64 error_code),
 	TP_ARGS(fault_address, error_code),
 
 	TP_STRUCT__entry(
 		__field(	unsigned long,	fault_address	)
-		__field(	unsigned int,	error_code	)
+		__field(	u64,		error_code	)
 	),
 
 	TP_fast_assign(
@@ -378,7 +378,7 @@ TRACE_EVENT(kvm_page_fault,
 		__entry->error_code	= error_code;
 	),
 
-	TP_printk("address %lx error_code %x",
+	TP_printk("address %lx error_code %llx",
 		  __entry->fault_address, __entry->error_code)
 );
 

From patchwork Fri Apr 30 12:38:16 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233333
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id DE544C433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:42:08 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id B91F061468
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:42:08 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232594AbhD3Mmy (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:42:54 -0400
Received: from mail-dm6nam12on2047.outbound.protection.outlook.com
 ([40.107.243.47]:61889
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232313AbhD3Mli (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:41:38 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=N2O/UyRxx5l2rFcTL+NE5HCOnLLbt/bKOs75CbeD4BO2wvsQSPhjfmqOBpXwsa8v54pVr5XqI113IIh3IaCJ6rshSvt8yeTKCXAJSsAe9DxFLvqCtCVFnAlGlaeAT3Flm8n5/nLA1jB3BV0n9B1Pd/L+sTaac7/9+6w1dS55R+QJsO7jlx+8AggjbEMhtz/JLIZDMQMLPKAt6wcL501lvIFSoG/zYVezmrNddmnzw6AL+Hef5RbmoSP9Kyu/+8L+s+BmkTNOlzpZhYclAcPdf0d1DVXF3ms4AjSudUMlerbA4URvdva/CoKqJLY9jC5yBd/BMeU68SUZoDXYMp3R8A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=wTfXibOv5pZ8sJjKJLbgCpZg6Xt/B6JOq4HjVOfH9MU=;
 b=ULPM32zLO/xKUrUvZZz+j6a/T6aCjwPLO+Znvhkez0lAR5BNR45si/BvUed5N8t+KLWicq9fOjUJdsQE4f0C1bw5dkn4M/zddsI935fX4oojermRvSJ6Duq383n/VG6BZRCp8MPq2tATrCyuk7OCUGXUzznxy6Esb/50G19J9Q+oLUsg49ydWPOgS9aLVw2x0aGi3F72YadJzBDPeqqUWvH3Qh8V28TVwKKzLdCxiOP/XGJkCJDYH9uV8iUAv7WqOSBx3ECadzxKQ47ZcWimjZzKp6kyoz4WsvaHaZL9ovonghU+QkEwzBSVfrY22xkH5WXw+amQ1rQHERlTG8Ey9A==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=wTfXibOv5pZ8sJjKJLbgCpZg6Xt/B6JOq4HjVOfH9MU=;
 b=eT/uWgrvt8GtiD+bJsa/c04XnDnOofxG+mTCM83ozBvLwWxy61pVdkNQEy8F0PHTqMO43iXKuKzXb/cdXabuOfa7yonh2KdYVIaE9RzB/Pu1hGoZuPMn0VG207KxbgoODhKw1vk58OtVPDbqp8bLEynjWxqNIHVplCiX0RhNZ1w=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2688.namprd12.prod.outlook.com (2603:10b6:805:6f::29) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.35; Fri, 30 Apr
 2021 12:39:46 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:46 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 31/37] KVM: SVM: Add support to handle GHCB GPA
 register VMGEXIT
Date: Fri, 30 Apr 2021 07:38:16 -0500
Message-Id: <20210430123822.13825-32-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:16 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: f56c63c3-60bd-4a68-0e35-08d90bd4f7db
X-MS-TrafficTypeDiagnostic: SN6PR12MB2688:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB2688DCA7B3D786660372E304E55E9@SN6PR12MB2688.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:7219;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 LIqrrVel5Cub79bqz9ZWcEtscF0anJdphUkRYjb1Q3fOWyXMyS5dk4RKagdXEsvw3Mi/7VNZM4ulXXGNwnRk43KG9C4cEcfiRfFREzmbANLdaNED2zrqu8o+C3Ix0bn3gHhzv+yGL73qk8gbXVlq359neK7zdFL7HHhNyd5bLcTHjMDOtDtl4cYfR0Tf2rYlNoWIJk8fxQJKZDvBmDZPLpGT+gNSD0LGJv3tblWskfqsr/patWlC+S2Gej2T0RYZ9Net+QveRPsWMuuvqMlvivrTuvcyS4yNOHUNx0kPVEAKTJjI0K8FOQSMQO790++xf4aYubzptF8DcyEUt5Gm166le3KuZYysNK+ScEwQLO4FwP4PbMR4VMhiF3LfJ+aeBqfiCfz0PZKWL8BFqGW28BwgUH7h0Cu3MY3EmfRpi2yiV9EbhY5zme/mKxdoG7E8DM4DNriO2NBUnk2SRYtuvBJ76osY7WSGsrTk9Uw9UZwmKxj/TRF/0XYuQl2z0XOrxqGvsGjOsbR38wbWldpRuoO3nZE3h1GfnXe7PSSOdHEN5tYGZN89SEvu9GBaPajKPU61vapnD3o/hwGDruysL1BnirU2QmDiJawAWvL0zgEabyo1SeqF8tV5Qu8yrOIc1IcSRD3YEMUNzNGwpesfEA==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(366004)(136003)(396003)(346002)(26005)(8936002)(86362001)(478600001)(52116002)(8676002)(1076003)(66946007)(66556008)(2906002)(7696005)(83380400001)(36756003)(66476007)(44832011)(5660300002)(956004)(38350700002)(38100700002)(7416002)(2616005)(16526019)(186003)(316002)(6486002)(4326008);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 DL48X5PPogF2uXtRIpjK8Xfm0zkcAdjrZ4ioKpH9B682UYae7eKZG7C+QGFHvGYO0RjdKkfQgFnhjfuQ3wsHx+jlyZe2eBj34QBSfQxE1Tv7sMpaAnstzRAF7Lw4ZJNIAdivLtlzrRsjiZXba+FLt0hs2UFk2p+UAu08bwiZIyehRiJbLP3GyTH7sokqqhdZdFgB+wpYK4EFLXHFJ+UKmdZv+RWs3IGkwN7P0Bqlpe8m/BEGE+GkK/aYcq1MHZ7bMuCUKGuVIWr2kk+IKUVrUqkKGDEiBcXv0og2HzsFbT1RPN8X4K/3JnPKcZ3QE79X4ib3k7A8B9yrdyKGkrenNRIVsXwI6apt7RL2qHKOfrVTzOncE8zvavvdyxNJQLQqYlNkkFVGhnSRo5fgn2H8/KASjH91KkCqj89B7KvU3jw+gih0PlPdtdDpiioJWg/y1RV5UuPApFzk45Zrrjk3k8ueiqwASN8pXY9w1WWS3A7MAdFZlDLOloQILCTOxIBKMrkm937diRMEQ9zqDcaV/0+vNvdZI1/k8FDnRmiTsQQC1eMbR0MPTScCseUrKveK+0US5w3+7W+j5qjHSnbMOaa8CCLKNEjTQdcXV8bu03R0t07qD3czEYEoZIAZLkMm0G4lNEre6Lx6depcCbmlslr/1RxCm118rGWiz4Lu0nFlQ1iDxvnzpwA8SZYtZFpW9Z7TftGu8+xpe53wIQSUrHwKGfXAdCemFXRFc1zxXlEDH/cI9PNK+8e+V/AWp2V6mUWLZ0WzFYf7scxyRO9PmW8S2rqKXW3qLnI1a9F+apkVfneEI04VEO9q2MkfVMYRJ4tVujLadvNeuTK+9OLnJOK6BwDEetXk5gcwfE0Ic1469NHPWy6vPhCMC+aSF2Wrgt0eNBaUHLWqCnDvLLVwKVuFGAA00mv7Ce8Cg3/pCxSzy0SSSKfyEJ5A0l80Ak70ui+bNqBDcj8NmYrEzsaWZRmqe1CIfWfCtBv+/HtFwQ3GlT4sB0Vu2yYj0kmb+h/WIWUBndcKhxu3HOZVQUt/aBoQJfg6Bn8nJCGdjBLA4l5vXm8IGGer8eTE9Gwl4LQMl7VwLYjdVu+7w8TLutWgOhbV99qO6EKRFo3ziVJ5zhZhEbtZtVPjvHk/4E1gywoeMVM3AJFMZWMZTlKAPQYgim5u/9Zvu0nS23ax3M0KnYcWSwrke9G6GfdDWxDZmKlaqgXM1YD+FhGak05QzZoAxVqu1msHoTrTPBtSVO4esb6ITPX64K1ftNk41IjOqeQbI25l4J9TG/WUWQWJTj2h2D6tJ+oY8XXej3wdeB11cU3f3a2K6MNxHiHuVD58dUw7
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 f56c63c3-60bd-4a68-0e35-08d90bd4f7db
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:17.0615
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 wRIf0NIcej3ORwXp8eMgGS4ml/FFQqCebVwlpprAScR9/yXTTZizXDQIfjZhr4crm/rYLrJbgqSZtUxKIvGlsg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2688
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

SEV-SNP guests are required to perform a GHCB GPA registration (see
section 2.5.2 in GHCB specification). Before using a GHCB GPA for a vCPU
the first time, a guest must register the vCPU GHCB GPA. If hypervisor
can work with the guest requested GPA then it must respond back with the
same GPA otherwise return -1.

On VMEXIT, Verify that GHCB GPA matches with the registered value. If a
mismatch is detected then abort the guest.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/svm/sev.c | 25 +++++++++++++++++++++++++
 arch/x86/kvm/svm/svm.h |  7 +++++++
 2 files changed, 32 insertions(+)

diff --git a/arch/x86/kvm/svm/sev.c b/arch/x86/kvm/svm/sev.c
index 3203abbd22f3..1cba9d770860 100644
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@ -2904,6 +2904,25 @@ static int sev_handle_vmgexit_msr_protocol(struct vcpu_svm *svm)
 				GHCB_MSR_INFO_MASK, GHCB_MSR_INFO_POS);
 		break;
 	}
+	case GHCB_MSR_GPA_REG_REQ: {
+		kvm_pfn_t pfn;
+		u64 gfn;
+
+		gfn = get_ghcb_msr_bits(svm, GHCB_MSR_GPA_REG_VALUE_MASK,
+					GHCB_MSR_GPA_REG_VALUE_POS);
+
+		pfn = kvm_vcpu_gfn_to_pfn(vcpu, gfn);
+		if (is_error_noslot_pfn(pfn))
+			gfn = GHCB_MSR_GPA_REG_ERROR;
+		else
+			svm->ghcb_registered_gpa = gfn_to_gpa(gfn);
+
+		set_ghcb_msr_bits(svm, gfn, GHCB_MSR_GPA_REG_VALUE_MASK,
+				  GHCB_MSR_GPA_REG_VALUE_POS);
+		set_ghcb_msr_bits(svm, GHCB_MSR_GPA_REG_RESP, GHCB_MSR_INFO_MASK,
+				  GHCB_MSR_INFO_POS);
+		break;
+	}
 	case GHCB_MSR_TERM_REQ: {
 		u64 reason_set, reason_code;
 
@@ -2952,6 +2971,12 @@ int sev_handle_vmgexit(struct kvm_vcpu *vcpu)
 		return -EINVAL;
 	}
 
+	/* SEV-SNP guest requires that the GHCB GPA must be registered */
+	if (sev_snp_guest(svm->vcpu.kvm) && !ghcb_gpa_is_registered(svm, ghcb_gpa)) {
+		vcpu_unimpl(&svm->vcpu, "vmgexit: GHCB GPA [%#llx] is not registered.\n", ghcb_gpa);
+		return -EINVAL;
+	}
+
 	svm->ghcb = svm->ghcb_map.hva;
 	ghcb = svm->ghcb_map.hva;
 
diff --git a/arch/x86/kvm/svm/svm.h b/arch/x86/kvm/svm/svm.h
index cf9f0e6c6827..243503fa3fd6 100644
--- a/arch/x86/kvm/svm/svm.h
+++ b/arch/x86/kvm/svm/svm.h
@@ -185,6 +185,8 @@ struct vcpu_svm {
 	bool ghcb_sa_free;
 
 	bool guest_state_loaded;
+
+	u64 ghcb_registered_gpa;
 };
 
 struct svm_cpu_data {
@@ -245,6 +247,11 @@ static inline bool sev_snp_guest(struct kvm *kvm)
 #endif
 }
 
+static inline bool ghcb_gpa_is_registered(struct vcpu_svm *svm, u64 val)
+{
+	return svm->ghcb_registered_gpa == val;
+}
+
 static inline void vmcb_mark_all_dirty(struct vmcb *vmcb)
 {
 	vmcb->control.clean = 0;

From patchwork Fri Apr 30 12:38:17 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233335
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 4AC82C433B4
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:42:14 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 267D261468
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:42:14 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232784AbhD3Mm5 (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:42:57 -0400
Received: from mail-dm6nam12on2072.outbound.protection.outlook.com
 ([40.107.243.72]:56448
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232718AbhD3Mln (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:41:43 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=PBP2Xz0lfeU8vihzE9w8vx9MlTc3SjcKxWkHzPVmUldn1HyQ7+8e5ZbWYNjU4EzydUSlgEE1v1MCIzLzA9VTs/VmRCh2jVk8LSS0fDBvuGXM/pU9bxadfbMR9WPHKsw6wX40xmiV4Vj9oFgEqUHXcaGsqT9P7xu1f/mR3Vg4wlaF2quEr988zP9EytLlzWQrZVQMGimSVaShzoPYN4MjgmGAstAkDSnwCMmP2WZe8nWwydsdV0Gkv4kG2Bw40EatjGZpLQYtSvO/D89jFeyNQUxlmMNc0N2tr4t9t88Cvw55BGsnBjZRJTE3OwPn4BdQeArqoFadJEfDgUu0gDvRYA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=XDrXWRS0Mr8SyYFVTPmqsB4jVYSoEmKEM7Yrm8+awDs=;
 b=KF8ezqmAIpLe12Zz5hBMl/8db17GViHXeW4XeJGp6Bl+RFJ5tcr++5KcFQrM5YacIGkIrWUTRs+UCsemJKRmOtESOlscNYOvGc9tIaQVWRESUeBXNZuT8P0XrRAAQGhl2F7L4Una1Z/SqPAdPdm7NE8rI1FpOGxFKIoWJ5n/V0rvqRoyQilLch1fZKhb/R6hHZ9TQsmr4oWw9NbkIcZjyT4b7s8Ak5rvDdtQg/8wC5zPKF8eTh1HybBMs4X7Dvq1dLTjb0GiKqJqrnsI1TGsWj/VxuRlFQCgolQwgFx3+cnzQ1pqQBwE4qRegFKWT+9yIAkNDmK61XOKijn/5x0yTA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=XDrXWRS0Mr8SyYFVTPmqsB4jVYSoEmKEM7Yrm8+awDs=;
 b=OslvHGV/doLJ9dVr/wHWdp8HWRbRyxfbXToz4ihqKnnPDOGoIIPzutCT7aoHkrFUBWdkPM3pGb0omg7G2T6/IArtsCNnt7wyEeQjXkvfe+K2zkdwTYWQkGvE/IkEr9PL/kL0IaKsEWIm9oQade96Qzqk7n6I6xOVuZM3Km8htPQ=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2688.namprd12.prod.outlook.com (2603:10b6:805:6f::29) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.35; Fri, 30 Apr
 2021 12:39:47 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:47 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 32/37] KVM: SVM: Add support to handle MSR based
 Page State Change VMGEXIT
Date: Fri, 30 Apr 2021 07:38:17 -0500
Message-Id: <20210430123822.13825-33-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:17 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: c5b0028f-5c4a-4b3b-20cc-08d90bd4f844
X-MS-TrafficTypeDiagnostic: SN6PR12MB2688:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB268819F3D73BE3730743D32DE55E9@SN6PR12MB2688.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:8882;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 o+MHFiUq0LnWmSBZCzH50O5zdjD5rZdBFqdWXUAP3NMLaU0FpKXDlaiXVQf4Frdsjo2ojFMTEqkeCxolpOehdNS2H4RlIK88sX0rqsZFlzJ25eLZYDDTRiCLaRa+T59YvtH6aMp2Kf9r6mLNfpyInO8j0K3snXYE0CXtUQ5MCtQ2fUvyjWyrxVgjk0b0hoOfo8YExwxrXN7EMfYxNEzxh8fnNjoqOt9oEi7ydaRdqEd5PKPJCUu8pjeMnvJA9n+zmcdh6Mbj9M7j2Z71bfKt8du8wj9Y0S02A3sHf4t4b8NIW5d4muZktkAPm97+mxBvLB8M7IPMf++bkVS56x03eOr/Fk8HZROqcERj7PhXEGTl6HRkswwLFzeZ2oayA/Ldtjn3uUs+hOMKkq49ZWNXHx7uZnx5rP1cJdcxzI5GHCPWCpTJX0oeAQFaJIgHjN8i/DOa/VLV7JpTLAKzZWG/vWrP/gd09lnQHIsrwBjik4DqIyZTIUVCCd8kfm/iSShXuMbSyuqRWvenBJ4O4TRk15SmBZSGgL47e/QMgCEMazOFEHet4DJPZf+bOMUs+7Cq6dV8fvUwO53Pv/aAF8eapjzLYq04PBTzANaQMx1IODp8iCF0uUPBR8nlXLv6COOyjpG7OOV/J8jSQHO8Qv4orQ==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(366004)(136003)(396003)(346002)(26005)(8936002)(86362001)(478600001)(52116002)(8676002)(1076003)(66946007)(66556008)(2906002)(7696005)(83380400001)(36756003)(66476007)(44832011)(5660300002)(956004)(38350700002)(38100700002)(7416002)(2616005)(16526019)(186003)(316002)(6486002)(4326008);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 latTE4Oqbsbfrh/fBpa6RMZGNObp1X97ur8LBEC7bqNqouVE7aVbAGUjd/h0MGH5IbNnX0rponG83BzkYRI04GqBOqfXhPZaCCL01hx2cbA0onm5AYCxd1tDxK8rExBSrbhDT0pxyHijhfGF7xW/rQPdmLYmnHfJ6h7wlxNB4ONiH2xWCxNOrJ1OPSVrp2sODavXHI49suTpXAHObvaH8wyorO2b7w1mn2LHII2j/q8Qd/NJcdfXoYAeLOEdel2NXStosxLL4GJOIPuQRy82A5WQWvMVBf8b1fiyAUd3MmWJCQVDwgH3ekjYlzyzLSja7BjbsxTdCNeZXBrzP0zWaigfGItzZV5VGkw5jCWFeMGh82En+oO+8n2rUQZeiAnoyVjGkdE5wb29gG0XviYSxpy9TBZjgi58fdZtLmuArY7gVcuNCyUHiG7d0xMxCGwqIdol3QNQZ4Mst8oXENjJrp5qMwWy5zLPD+/waIVhIGp5fPnPc4EnqvtYLKEE3L3o/I3LlgUFuFp1fJ4eUD54Fe1ngFmXcrnMZHT5Ze1bxPX09cCI9XUL1FXGVG5m3Y6siDftlGOHMGXoVzZTkv6W2bSDn8g+y9T77H2+C0W0xVLHJOH7S7pgCE+CMZ0U2TNVbJfnn7tusOboD8Ot9oVZz+slVM3W0DET4xwW5yKwJBuujrirKjT18wBxg5opGz2bamE/OoKtn6vspMb29BHAj+uXtGacjjodXXsAsov1CEsCg+S0MRriJvGBZldmp8SGNAIkIBw0w7nd96RiaxaNAoCbHifxbncrsBDDfBWkmfJoA3+QJriPH/s7EVMZH4rBOTRkSnIPhXzHwphZvUvKdIvDDntrbNWHAK6+i1U8rQHUUqxS6NMGKsRXXy5sQXBR4xJVkZVPpkcYvbkxy0NuuGWpy1b5Eb2Svh71G2p/y6d3WYhR9AQm3E816U9t7sjg9NmyArSvr6PyHCmgnBsfC4WZ5NvK2zHD9PCsrfgbePtK36B4+K50CXgIJ1yKLjdfCQph37Bv4dEdw+jRUz3enaFwU6M4AflwsF0BG2e7Je5PRfQ9uxPxEbHVrk1jwG6EzhF6nQo17hVaATGuDhC37ePndZLIuLbiBIoczwZhJz4wvcqajZEWCedKzgq6Ts7BrGHTaeDVUeV0+XtVzSWm2u88Kssiy/N4N8SsjA7BiF8ObdfLzx6uWi5WLeuUvDL5yPnAVgAu2tqkWTrMR5eVaUgx6Adt/2ftdx9kFii2LU9RH12HKjBe3h66qGi5sC0Db13weMb7D3hBOz4z3FDiFrxFE7J5O2n1jlnO9kc/Gd4g4Rw+AJ7yBpNJ6iQzejz3
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 c5b0028f-5c4a-4b3b-20cc-08d90bd4f844
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:17.7441
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 h04ze2wofgefGNcqH+h5O9FXP6ofB1Ej1JMlkn6QUHNjgbP0vqQ6LVORe2X8ujETHpviMs2BML+l2OI6HaUYZw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2688
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

SEV-SNP VMs can ask the hypervisor to change the page state in the RMP
table to be private or shared using the Page State Change MSR protocol
as defined in the GHCB specification.

Before changing the page state in the RMP entry, we lookup the page in
the TDP to make sure that there is a valid mapping for it. If the mapping
exist then try to find a workable page level between the TDP and RMP for
the page. If the page is not mapped in the TDP, then create a fault such
that it gets mapped before we change the page state in the RMP entry.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/svm/sev.c | 137 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 137 insertions(+)

diff --git a/arch/x86/kvm/svm/sev.c b/arch/x86/kvm/svm/sev.c
index 1cba9d770860..cc2628d8ef1b 100644
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@ -28,6 +28,7 @@
 #include "svm_ops.h"
 #include "cpuid.h"
 #include "trace.h"
+#include "mmu.h"
 
 #define __ex(x) __kvm_handle_fault_on_reboot(x)
 
@@ -2825,6 +2826,127 @@ static void set_ghcb_msr(struct vcpu_svm *svm, u64 value)
 	svm->vmcb->control.ghcb_gpa = value;
 }
 
+static int snp_rmptable_psmash(struct kvm_vcpu *vcpu, kvm_pfn_t pfn)
+{
+	pfn = pfn & ~(KVM_PAGES_PER_HPAGE(PG_LEVEL_2M) - 1);
+
+	return psmash(pfn_to_page(pfn));
+}
+
+static int snp_make_page_shared(struct kvm_vcpu *vcpu, gpa_t gpa, kvm_pfn_t pfn, int level)
+{
+	struct rmpupdate val;
+	int rc, rmp_level;
+	struct rmpentry *e;
+
+	e = snp_lookup_page_in_rmptable(pfn_to_page(pfn), &rmp_level);
+	if (!e)
+		return -EINVAL;
+
+	if (!rmpentry_assigned(e))
+		return 0;
+
+	/* Log if the entry is validated */
+	if (rmpentry_validated(e))
+		pr_debug_ratelimited("Remove RMP entry for a validated gpa 0x%llx\n", gpa);
+
+	/*
+	 * Is the page part of an existing 2M RMP entry ? Split the 2MB into multiple
+	 * of 4K-page before making the memory shared.
+	 */
+	if ((level == PG_LEVEL_4K) && (rmp_level == PG_LEVEL_2M)) {
+		rc = snp_rmptable_psmash(vcpu, pfn);
+		if (rc)
+			return rc;
+	}
+
+	memset(&val, 0, sizeof(val));
+	val.pagesize = X86_TO_RMP_PG_LEVEL(level);
+	return rmpupdate(pfn_to_page(pfn), &val);
+}
+
+static int snp_make_page_private(struct kvm_vcpu *vcpu, gpa_t gpa, kvm_pfn_t pfn, int level)
+{
+	struct kvm_sev_info *sev = &to_kvm_svm(vcpu->kvm)->sev_info;
+	struct rmpupdate val;
+	struct rmpentry *e;
+	int rmp_level;
+
+	e = snp_lookup_page_in_rmptable(pfn_to_page(pfn), &rmp_level);
+	if (!e)
+		return -EINVAL;
+
+	/* Log if the entry is validated */
+	if (rmpentry_validated(e))
+		pr_err_ratelimited("Asked to make a pre-validated gpa %llx private\n", gpa);
+
+	memset(&val, 0, sizeof(val));
+	val.gpa = gpa;
+	val.asid = sev->asid;
+	val.pagesize = X86_TO_RMP_PG_LEVEL(level);
+	val.assigned = true;
+
+	return rmpupdate(pfn_to_page(pfn), &val);
+}
+
+static int __snp_handle_page_state_change(struct kvm_vcpu *vcpu, int op, gpa_t gpa, int level)
+{
+	struct kvm *kvm = vcpu->kvm;
+	int rc, tdp_level;
+	kvm_pfn_t pfn;
+	gpa_t gpa_end;
+
+	gpa_end = gpa + page_level_size(level);
+
+	while (gpa < gpa_end) {
+		/*
+		 * Get the pfn and level for the gpa from the nested page table.
+		 *
+		 * If the TDP walk failed, then its safe to say that we don't have a valid
+		 * mapping for the gpa in the nested page table. Create a fault to map the
+		 * page is nested page table.
+		 */
+		if (!kvm_mmu_get_tdp_walk(vcpu, gpa, &pfn, &tdp_level)) {
+			pfn = kvm_mmu_map_tdp_page(vcpu, gpa, PFERR_USER_MASK, level);
+			if (is_error_noslot_pfn(pfn))
+				goto out;
+
+			if (!kvm_mmu_get_tdp_walk(vcpu, gpa, &pfn, &tdp_level))
+				goto out;
+		}
+
+		/* Adjust the level so that we don't go higher than the backing page level */
+		level = min_t(size_t, level, tdp_level);
+
+		write_lock(&kvm->mmu_lock);
+
+		switch (op) {
+		case SNP_PAGE_STATE_SHARED:
+			rc = snp_make_page_shared(vcpu, gpa, pfn, level);
+			break;
+		case SNP_PAGE_STATE_PRIVATE:
+			rc = snp_make_page_private(vcpu, gpa, pfn, level);
+			break;
+		default:
+			rc = -EINVAL;
+			break;
+		}
+
+		write_unlock(&kvm->mmu_lock);
+
+		if (rc) {
+			pr_err_ratelimited("Error op %d gpa %llx pfn %llx level %d rc %d\n",
+					   op, gpa, pfn, level, rc);
+			goto out;
+		}
+
+		gpa = gpa + page_level_size(level);
+	}
+
+out:
+	return rc;
+}
+
 static int sev_handle_vmgexit_msr_protocol(struct vcpu_svm *svm)
 {
 	struct vmcb_control_area *control = &svm->vmcb->control;
@@ -2923,6 +3045,21 @@ static int sev_handle_vmgexit_msr_protocol(struct vcpu_svm *svm)
 				  GHCB_MSR_INFO_POS);
 		break;
 	}
+	case GHCB_MSR_PSC_REQ: {
+		gfn_t gfn;
+		int ret;
+		u8 op;
+
+		gfn = get_ghcb_msr_bits(svm, GHCB_MSR_PSC_GFN_MASK, GHCB_MSR_PSC_GFN_POS);
+		op = get_ghcb_msr_bits(svm, GHCB_MSR_PSC_OP_MASK, GHCB_MSR_PSC_OP_POS);
+
+		ret = __snp_handle_page_state_change(vcpu, op, gfn_to_gpa(gfn), PG_LEVEL_4K);
+
+		set_ghcb_msr_bits(svm, ret, GHCB_MSR_PSC_ERROR_MASK, GHCB_MSR_PSC_ERROR_POS);
+		set_ghcb_msr_bits(svm, 0, GHCB_MSR_PSC_RSVD_MASK, GHCB_MSR_PSC_RSVD_POS);
+		set_ghcb_msr_bits(svm, GHCB_MSR_PSC_RESP, GHCB_MSR_INFO_MASK, GHCB_MSR_INFO_POS);
+		break;
+	}
 	case GHCB_MSR_TERM_REQ: {
 		u64 reason_set, reason_code;
 

From patchwork Fri Apr 30 12:38:18 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233337
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id D4929C433B4
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:42:35 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id B35BC61449
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:42:35 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233102AbhD3MnR (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:43:17 -0400
Received: from mail-co1nam11on2082.outbound.protection.outlook.com
 ([40.107.220.82]:56928
        "EHLO NAM11-CO1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S233014AbhD3Mlx (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:41:53 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=GB1yxsPOkPxiWi9PRaXuIbViV1VqNj8FdRt7nPu1uM5BH9gk/AM0BBCteROv/rBNcoCB/tqUq/CvgxXuPEWKWiikbaHqwpz/pekcVx+PjZJZzMWU8NKSk52hclPQ6EbMr41EhGywBp9qJmgmWrOgrGHpxw7QuPTiZCZZNm7kiegoH9hO07J+7xwMHoyGJjelAOB9fXkpsK49rJ3ZpAeqdbzvONUUmMOi0fhBeWlM7nAgh0cMuZCW/daAx9IKPxi5iu1ZpuDy1DCCOZjWD960IO0E4/e14TjI24tfff2gLf0EKpcLS0gyLY4FFhJkkipPN7Ec0li81RefTRa7biuINw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=5ZJ3je2wPxh/fQFSMVgcp3662puay8fC0jHWjiSZ3ZM=;
 b=FtNqg0rr5631RDoOUutWYOOiE4DOP78IWUycQEEiJtjywN+C+rBTGioP9cnmHhdvIPL2lgubPsxPVSf8vSwkkEWBSzdMf1S6Zd054sdKKpDlyaYhAxPVVpPN4UpubiVHi3hVZDkTO64ITv+8UXjBTgSJ8aqyxTfgtC+FtKCCm/oTsoPV1NgAolxS2c2/Z+qgYuaVRdGJJRHCBGc6z+7H5aUsyTo+XGoBX1LXcQa+97Y6VdjzsuPDq1u4c9epv0bshVBaANz5Pnl38B47WHS9wvSS6RaC1sn1Z6RiW2XUvzImc5W+neBF6IF7tjX3XfPSJGc2EDB0/3VPBeTCpTLAPA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=5ZJ3je2wPxh/fQFSMVgcp3662puay8fC0jHWjiSZ3ZM=;
 b=a9a8VLdpQOMHTMt4h1cS+yrtmxkzhtb8g7cGSjniu+BI8t9nU5D62cbEUiYnHVPhTthJSrnYB24dqcSgkHvutm1EOmaJk90Uu1FFoGcVC5/VOPoKuo5k/knf6X3mBr34i3OK0RXb3adiWlBw+cNvPWbq3G7I0qL9d9VOA0KDEzI=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2688.namprd12.prod.outlook.com (2603:10b6:805:6f::29) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.35; Fri, 30 Apr
 2021 12:39:48 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:47 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 33/37] KVM: SVM: Add support to handle Page State
 Change VMGEXIT
Date: Fri, 30 Apr 2021 07:38:18 -0500
Message-Id: <20210430123822.13825-34-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:17 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: f63ccc21-a4a1-4406-e556-08d90bd4f8ac
X-MS-TrafficTypeDiagnostic: SN6PR12MB2688:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB26880E7F8C1E84D74F16543FE55E9@SN6PR12MB2688.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6108;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 x8tn9OFGzOt05bCYFXDOHWzz0YuFmAcX3T0K/l7b7MZEZbFNLz22K7L64ug2NjSNN15KQUbjD5lY7pLL3srKZpxaPvlt6dXtAp6MuhJ/5oKP0Bl3UfSQRyhq3mq4H1YNkSXjjkmW/a06VfUz6BheL10J6YyiwnDdCW5RajdldCiDK8ZY6Ii6LzjikDFDy4D45tMBwcFxJOPP7CGFoxWbvFfTZM2oSgTl/GFA95Gdj6oPsnrCKWHx9xg9FQ+RMYjdMMfZ2/AsEeu3wIqj79L//6QbvQLkrfHjhLFo166b73KwyM8IVEM4/kxKnl2tJ11KFt1gPV0xHxuQrC97hWzdJVYtYy2Y6+Bhf14BkjsmV2f5I3AscyD69DPVGxn277Z4UHLe0FbSdC6XgXVW3lomSKIGfyZNEwlvhg3AQWdo8Qbn4PdCxemsDbuHdf5YXvmWet/R9/rqpajHLVoa6iW6Xn2ni+PcFpPIvTwCxgWHreAko7dA1aFF+4HYhKOMaWXt4ygnbE14c8/yJ1MJR5OBAKM2mIM9UOawLAykQmSpugH1LcVGCKmOFDpqeHWh17w/Lcu0Q5Tk27eo6DLFPlNTbmk3c38LxYPTrZU/KBJ/XG1QxIPgaqC67u+GDW3KV8SQF+BX4nal+tX41VZqRdH19A==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(366004)(136003)(396003)(346002)(26005)(8936002)(86362001)(478600001)(52116002)(8676002)(1076003)(66946007)(66556008)(2906002)(7696005)(83380400001)(36756003)(66476007)(44832011)(5660300002)(956004)(38350700002)(38100700002)(7416002)(2616005)(16526019)(186003)(316002)(6486002)(4326008);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 Q1xwHglMZ6aPN/K3uTcWuaezBwk+pLXLgNwzrLGMjWZxkYJox3N9wF6C4o6cyYgw9KVY3TTgMGSYG25VSQfpH5wYUn9mepxhfDIOBOuxJflkk/ecIEy3D0krnp2qMLdRZwf7hJ1fiCyI4DUk3KSaF/2yURPq27HaJZ6YWo5qdn+aFoa1T79y2naSlgpH3YZxixBdK0u7A3zIuaPxUWUqvdXsOQve6nNFQI0fNwVd2T3qW/D/vvjGrihzZsXo+LMmTOtOfK3nn2h/1n83IUX9Cy+93UzKY9VyfHv8vm76ugeCxykweH0npXDBf/6m8E4/sECv0zxPROCH2dP0twWEH1djM/+1ET7XNtU1TY817reG83YJcyPmW0v/PBm4QU0a6uHt9pV4Lc9M91tM22sF3ajkE7y6t8/IgtDQ3ne6fjWy/1clwWygMPDcEUYJ7CFgSRje3yFQvHOkGnwJSclOQ4GCxkucPJCESnCSSHEr/Hp3nkfBm1dIvhBeoXxrkmtoYbk63tHKJ/JGtGH8u8diexXJ88CtWwXQ91UnmfRMYsQNJOoGyZ4wiNIvjOIP0y9i1VpzPBWdcnWrNNblfIeeiePXRfs5mSGcZHx5rNI7CcQJgfUAKtdcIBa/EHLBVPmzq0+9GI07l356iBXbuViFjKqsG8BMW8AjY7HozxthyDH7yTtRl9xABj4D7eLU8ROOkl1SXCcUTsdUQ7VNdl7F1RnFxZlxPrk2o1huh/XuyavVScYs4qrnJ3S9KWH3I7niVHn6B3EllPY5qJbn6tuJoK+OQyrrZsj2qkTP+CH+K5UKasfhC5i3996yuSBMbMfXAcQCNlv59nO3b5T+feRYSfQhnbZrUNh3LlCqL27/FqFUYHo77yLcX0Akmhg71eQSpOzmmGr1OJJjJvBBwRCp/BGByPC5H4zNVgkcFofS5a+weVMl3K5BwGf8OXxPYfjRs0Um/eO2o7jqbEYnBBgMt/+In6SWi3rLcU+ClNQmU3wFntjWVaZ6hqB3qwPU5Du0sSH5dwwciSopllLBZCbla52TEYG6cepjMP+rQNaB2HVaYQ9ejiVsyP0JTsRn4NO9N28WmjuxI+MGUP1T2hhIRMKtcXQ1ar1FUg1zzoN/uvRZzJ2Iws9lnSgFhaNXxNufK0JBZiyjKiOxce/r4fKIhh+KShksygWQaKcFuTZQozsyQyITmpH8iEZ3dCVXdGRTlScT8ooOeo8SSgV0yKh52GEpcV1F63bnRpXzC8NyCzMuVLlVDHO2HmeNHMKVbCH0IhmefdLos39Ll/OJkKMV96oxQoeCaYxBL/6y3teop77znflt5+qDkMY4H9yL1fEo
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 f63ccc21-a4a1-4406-e556-08d90bd4f8ac
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:18.5117
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 b5TAikzR2LXg8kxeiyJ2tWm+09iD808UKYnTJEvs+RPjiQFxcyzMJSY+qKUtEmUCwQ/+9/5INPZh9kJUbxyOug==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2688
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

SEV-SNP VMs can ask the hypervisor to change the page state in the RMP
table to be private or shared using the Page State Change NAE event
as defined in the GHCB specification section 4.1.6.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/svm/sev.c | 58 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 58 insertions(+)

diff --git a/arch/x86/kvm/svm/sev.c b/arch/x86/kvm/svm/sev.c
index cc2628d8ef1b..bd71ece35597 100644
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@ -2641,6 +2641,7 @@ static int sev_es_validate_vmgexit(struct vcpu_svm *svm)
 	case SVM_VMGEXIT_AP_JUMP_TABLE:
 	case SVM_VMGEXIT_UNSUPPORTED_EVENT:
 	case SVM_VMGEXIT_HYPERVISOR_FEATURES:
+	case SVM_VMGEXIT_SNP_PAGE_STATE_CHANGE:
 		break;
 	default:
 		goto vmgexit_err;
@@ -2927,6 +2928,7 @@ static int __snp_handle_page_state_change(struct kvm_vcpu *vcpu, int op, gpa_t g
 		case SNP_PAGE_STATE_PRIVATE:
 			rc = snp_make_page_private(vcpu, gpa, pfn, level);
 			break;
+		/* TODO: Add USMASH and PSMASH support */
 		default:
 			rc = -EINVAL;
 			break;
@@ -2947,6 +2949,53 @@ static int __snp_handle_page_state_change(struct kvm_vcpu *vcpu, int op, gpa_t g
 	return rc;
 }
 
+static unsigned long snp_handle_page_state_change(struct vcpu_svm *svm, struct ghcb *ghcb)
+{
+	struct snp_page_state_entry *entry;
+	struct kvm_vcpu *vcpu = &svm->vcpu;
+	struct snp_page_state_change *info;
+	unsigned long rc;
+	int level, op;
+	gpa_t gpa;
+
+	if (!sev_snp_guest(vcpu->kvm))
+		return -ENXIO;
+
+	if (!setup_vmgexit_scratch(svm, true, sizeof(ghcb->save.sw_scratch))) {
+		pr_err("vmgexit: scratch area is not setup.\n");
+		return -EINVAL;
+	}
+
+	info = (struct snp_page_state_change *)svm->ghcb_sa;
+	entry = &info->entry[info->header.cur_entry];
+
+	if ((info->header.cur_entry >= VMGEXIT_PSC_MAX_ENTRY) ||
+	    (info->header.end_entry >= VMGEXIT_PSC_MAX_ENTRY) ||
+	    (info->header.cur_entry > info->header.end_entry))
+		return VMGEXIT_PSC_INVALID_HEADER;
+
+	while (info->header.cur_entry <= info->header.end_entry) {
+		entry = &info->entry[info->header.cur_entry];
+		gpa = gfn_to_gpa(entry->gfn);
+		level = RMP_TO_X86_PG_LEVEL(entry->pagesize);
+		op = entry->operation;
+
+		if (!IS_ALIGNED(gpa, page_level_size(level))) {
+			rc = VMGEXIT_PSC_INVALID_ENTRY;
+			goto out;
+		}
+
+		rc = __snp_handle_page_state_change(vcpu, op, gpa, level);
+		if (rc)
+			goto out;
+
+		info->header.cur_entry++;
+	}
+
+out:
+	return rc;
+}
+
 static int sev_handle_vmgexit_msr_protocol(struct vcpu_svm *svm)
 {
 	struct vmcb_control_area *control = &svm->vmcb->control;
@@ -3187,6 +3236,15 @@ int sev_handle_vmgexit(struct kvm_vcpu *vcpu)
 		ret = 1;
 		break;
 	}
+	case SVM_VMGEXIT_SNP_PAGE_STATE_CHANGE: {
+		unsigned long rc;
+
+		ret = 1;
+
+		rc = snp_handle_page_state_change(svm, ghcb);
+		ghcb_set_sw_exit_info_2(ghcb, rc);
+		break;
+	}
 	case SVM_VMGEXIT_UNSUPPORTED_EVENT:
 		vcpu_unimpl(vcpu,
 			    "vmgexit: unsupported event - exit_info_1=%#llx, exit_info_2=%#llx\n",

From patchwork Fri Apr 30 12:38:19 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233357
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 421A5C433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:42:55 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 1C4E161449
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:42:55 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232788AbhD3Mnl (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:43:41 -0400
Received: from mail-dm6nam12on2060.outbound.protection.outlook.com
 ([40.107.243.60]:14433
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232664AbhD3MmZ (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:42:25 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=kIuPoXFueIiljBQQFxYBsLMHnVQUO7nRLvDtLaj/Sw8mIyw/A3SUjC/IYr9jp1HU1Nne0/Ios04mLY6OTNTCM5mc0EksizS+UVMae91TGNrGK0WK4GQ5wGHEZ1zzml5uoZvwvUy9sv8Zu+NlBcBIBJatf5LRJsaUMhS7e6JTb/s4eqeJ6vkxMB/jBnfl2YuH/fX09PxzHacOyvFHtlBWFDazXxF8k+YDjkvCj+FEpffpjce7iGQMUJaUs0pTScuHTh2NCXpHiHxeXfo9RRDSReUj5QaCuzC1LQt/t35E6Gn5tf4oCHmY/q1c/+PvaKXZzRpVVmQvbCrBRQQrQx+rdQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Gmdfe37WCZOmdDcwYzQwdb9iA1CX1Dn77JtUII7ehqk=;
 b=KsmXZJPN+hINz9Ry2Ll8sKAYnfQb8FyIPyvPEet39eq9yZp5hh6Q+6hpn7W1X3BWlzijUWBsPhOw/yLk8DUnI513zCoMC3Z1y64e4cux5kitNWhdqUlM2oj/zMm6c2bWkbBYaaJ7D34bzuzHAQ/6oxB4v7V1efFP4g8jaiuNjBTdpzJ4qtDUvg4QoBxx3X3fiMJvbLiWMibbDu0cNjM6TF7uvqLTo2YQVl6cXyFbSLVbEPYUo+M+PKmNs/p4uRLPlfFtyLEQgX0izuwJdSyRhY0Q4Z+gmq33HIgc0zEWHUMYPqRY1jUdAoH3T3/qjBEqvCw0OXRMYXHrouvDXtJ64Q==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Gmdfe37WCZOmdDcwYzQwdb9iA1CX1Dn77JtUII7ehqk=;
 b=1UFudHL5WcvaAHhALFr0Y8H7oCFo0YYMHyok5kb3qoTaP7vv9I0z8qZhqLgQ0gyTSMXdEDlwTDGJ85kcOlsOeoRj0i40KvL+jFECEo6pKnbP+IUGmpYnoIPx7NmrbyzYlMeK+3NTJIp6uE6or4SvOByjzWiNW1X8tfgNE8WMMwU=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2688.namprd12.prod.outlook.com (2603:10b6:805:6f::29) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.35; Fri, 30 Apr
 2021 12:39:49 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:49 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 34/37] KVM: X86: Export the kvm_zap_gfn_range()
 for the SNP use
Date: Fri, 30 Apr 2021 07:38:19 -0500
Message-Id: <20210430123822.13825-35-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:18 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 257f7f71-95f9-4601-e60d-08d90bd4f91d
X-MS-TrafficTypeDiagnostic: SN6PR12MB2688:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB2688CDBAF0D29BF9AF6B2223E55E9@SN6PR12MB2688.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:4303;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 1HNBjkmKedxDeo4GiLOW77GHWaSsQRMuY99B1pCs038Yav7Cz5tzXyj1QPjaOfP/fKr0Ln9zWdvqv0qNIw2BwHLlIXH4OUxcDoRVJ4Uos3gvwYgas9XwMFbPEkKZ24yjuV/3qCr06lIp7ecnBDZYUdyIAoVGLKHwCzAaBvt7UyJD9S5esXhBdMK3vB3IW+8VojXPGJnz9YpTUhE7gnIiDsznwxRtulrcU1w/Du47bN4aFyMNhb8QoyGdhdCWNIHRCNRG3i3uLeqyvly5p+esqC7eXKoi1aTvoU/EEaXaFSCEJtnJET+Q62CT+ZMcb3AoQmbkjQ8gg3ATOIVVxh093rTTl/gAyGkqAPtXmWINMYQ14gSaaHilfmANEBcOtjzCycUO5j0OA4nQxBnBc2bszEV+/5dLrG99Fxc7GGavMnDblO45/x9XmPyHZ9W0iti3rtxLmPTO9kssDWlYYLShSGAhdK9TnzA2asBdEy4pjs3Si9eEIBpHAC9WY2ueu51pe7kit7ivOUbEEHPI3MtDEPqNW/DqibmjA7Uu9AjwsXTE3iuAFgWojYgkc9YCBH0qbibSudNmqARYZ6jR+LFYFSvIA1GUY5LDONsQTAjOqmdFGHqNkVQi/WwahaNbH9+8v7oDODvSs3zmZAqt9CDLCg==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(366004)(136003)(396003)(346002)(26005)(8936002)(86362001)(478600001)(52116002)(8676002)(1076003)(66946007)(66556008)(2906002)(7696005)(83380400001)(36756003)(66476007)(44832011)(5660300002)(956004)(38350700002)(38100700002)(7416002)(2616005)(16526019)(186003)(316002)(6486002)(4326008);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 +qAQfwSYln8nXnQvdPwyeQJEjBUuMaONqY2mtB3bzjlnL0bZr/oyP9yYLgqN4kDQhaLHdYlh8cZr043rMUkpZU6SeLcpAkDbCGlvQBxUWN92VtjcYFUpd3SGUcn5Yz8Fo4OhsqxbKN7IlVfL3nUBgkhGii+GCS7paxM/FkKRtyggkjeHEK1T92vrYOt0ySuAjUnquKSts9W0O7BCL8YtAUda7iqc/sCx+RQlaQBn67F79jSZ/5GY9KCztLg4sH/bSXi5Fl3QxYCQi3LTqb6rBfksD1v/XNe1/vf5AcJjC6YCg03VppQdjSCymhX2Y2Q2wYapXI7TeQ5uIg/k03fOWa1CXfTubpKKMshe4yHPZPoi/aYsvlvvPXYV3pXxA+NeDod7ji2+j3yoYsSNE8+g7unTu+Lgxpe68NS6N52dshgCBQPjCHiTxRoQftdqMbPwwAji1AhkZ0dRzhsJ4lR8EJGy6J0Vx0dZQVjgWjX5y8qkqpKLk353f9Z+XuQQ3le6KALXyleUcntidZw2u4OfCXRIAnN3zO/rjFerM0opupA+f2SElvARHphgDxxEXbG2VIU7aq4aohB1uAp6+RZOuZWk+oQyA7EIP39r4ZG8bOjoDfco7TEu/slnIYT3oxld8Yvr9aKBLqw9oxaHiiO7VVRkRrzvTSdykARi2OMqan7hGuGFed9Jrt5wywCwOaCTF/zaYposi0K4S1t7tIW8nqCVULnObxlZ/SerIX+NlC26h8uS6pFrp5OP4nCRPbVw9hliiF48fwJABH0EA1km1TI7q4wpnPDn5GaEsWqbh8IkyEVC4lMqm+Al0NGDCQlY6CKozu4Cm7Ty9upVyv5V35hnKYY+ZoJiC2HfuVgP+D/ZsZrrn0B04pdlTVyJdzBb7OiHsKzp7MiFKUF7O+EMBVpmTAUub3ZAhser3uuzm/3V57VDPnJI7NCM7Uwa0UyWT68kUj3AW+6XT5lXbbYQ53dgowYtbsqWWiwlyNdSoObVYVNskxPJFXXUssxPaWunu6a4JMihQ/neFbBlTBeNkDBsC9vEfeaiaEGwA2DS+lvvpzo3qmTuQKbAGCDMn7QPb7S7kpu9DVqLqlNYbT7REReosMxaRqOQLv1vIKn45thOZ2KVTqN8HY60RXNY0SuMQzbAwISYwW88CRXMS2TDvYP4sO03/Rn9TdZCYbapiRmA7nsjzuk2b3UmIlxnu29UaqnvwwcnEsTsDHLq4gyu4EU/wuKb0LXKQDfW31LO6SMt3bbDp/El/ZpTI13BpRwPSCIpQZrARYohoVs7Da91yYuJQUBgPNHsa3XDb/d9PH8hnJIA/0Vfascl+/47MP3w
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 257f7f71-95f9-4601-e60d-08d90bd4f91d
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:19.2133
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 wTWmLG+LqckUMj+QQyX1iwMibOoifXY8RsdTnM+sDYnaqD4gI2IGprUYtSjYdL6nAPtYtT4Zh6SCLERX8YxYHA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2688
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

While resolving the RMP page fault, we may run into cases where the page
level between the RMP entry and TDP does not match and the 2M RMP entry
must be split into 4K RMP entries. Or a 2M TDP page need to be broken
into multiple of 4K pages.

To keep the RMP and TDP page level in sync, we will zap the gfn range
after splitting the pages in the RMP entry. The zap should force the
TDP to gets rebuilt with the new page level.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/kvm_host.h | 2 ++
 arch/x86/kvm/mmu.h              | 2 --
 arch/x86/kvm/mmu/mmu.c          | 1 +
 3 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index ad01fe9f4c43..7d4db88b94f3 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -1481,6 +1481,8 @@ void kvm_mmu_zap_all(struct kvm *kvm);
 void kvm_mmu_invalidate_mmio_sptes(struct kvm *kvm, u64 gen);
 unsigned long kvm_mmu_calculate_default_mmu_pages(struct kvm *kvm);
 void kvm_mmu_change_mmu_pages(struct kvm *kvm, unsigned long kvm_nr_mmu_pages);
+void kvm_zap_gfn_range(struct kvm *kvm, gfn_t gfn_start, gfn_t gfn_end);
+
 
 int load_pdptrs(struct kvm_vcpu *vcpu, struct kvm_mmu *mmu, unsigned long cr3);
 bool pdptrs_changed(struct kvm_vcpu *vcpu);
diff --git a/arch/x86/kvm/mmu.h b/arch/x86/kvm/mmu.h
index 147e76ab1536..eec62011bb2e 100644
--- a/arch/x86/kvm/mmu.h
+++ b/arch/x86/kvm/mmu.h
@@ -228,8 +228,6 @@ static inline u8 permission_fault(struct kvm_vcpu *vcpu, struct kvm_mmu *mmu,
 	return -(u32)fault & errcode;
 }
 
-void kvm_zap_gfn_range(struct kvm *kvm, gfn_t gfn_start, gfn_t gfn_end);
-
 int kvm_arch_write_log_dirty(struct kvm_vcpu *vcpu);
 
 int kvm_mmu_post_init_vm(struct kvm *kvm);
diff --git a/arch/x86/kvm/mmu/mmu.c b/arch/x86/kvm/mmu/mmu.c
index 956bbc747167..d484f9e8a6b5 100644
--- a/arch/x86/kvm/mmu/mmu.c
+++ b/arch/x86/kvm/mmu/mmu.c
@@ -5657,6 +5657,7 @@ static bool kvm_mmu_zap_collapsible_spte(struct kvm *kvm,
 
 	return need_tlb_flush;
 }
+EXPORT_SYMBOL_GPL(kvm_zap_gfn_range);
 
 void kvm_mmu_zap_collapsible_sptes(struct kvm *kvm,
 				   const struct kvm_memory_slot *memslot)

From patchwork Fri Apr 30 12:38:20 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233363
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 02289C43460
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:43:16 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id C4A8361477
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:43:15 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233282AbhD3MoB (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:44:01 -0400
Received: from mail-dm6nam12on2079.outbound.protection.outlook.com
 ([40.107.243.79]:17504
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232864AbhD3Mmk (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:42:40 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=WycweyI+TpATuASTjjxHYZI/VrBTQ9T/dRki9nHnCwpa+CM3dDEAbXYqLKWq0m5x9+f+DgWPNWgJL+CQ4WMKC3gK3zcGIK5FhXzfTakYUtGh0R7qz3sbSFZ6Zq6XJvy5Alimtki8whAI/CUUN7pcdzchHhDX98PDttvRx930DPtcSl0i0Wz/YoXqq1M3zd7EZ3vNZnA9pWpKjziw8wYcCFnp/YIZRKNxj3OVXcHgZPEfu1v4jBQegbRRJSMP6uF+oH8U/gogyr9CGY7MF4P8nMNX0hkuN4A6x6JkqfqGfiqXywLpXaF/2Db6yRalaSdjlYw5bICjQxKGCqowp7nouA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=MbWGvY0hZXrFV5m34YOWufHKOcUq09HoI4G2ygLUeX8=;
 b=Q1VD8Ob/ADhZE7Rkyj1jq6Z6z0rWAn5NHQNfMnlICoQU128NK7F7fXIwv2WZxqcHTskmi64fbyE1vVaPEr+ibtnkeV0Vllg318g6w6yUmg5EAEQYW+9hXUS4t4r/j7Dgism+81X81qxMVNOBwCohpbAdMZJq3GKsOllVFw6EH35/7ziymkQONM+64eTxJppIGIWcCqtWrf/FWHL5tCvUsFTE5rhzYUbRkESJZC0PJMRJgm0KHPWB9aVYOmd93lhzUz0GM6bWur5+a//fJ7DiyU8FOFa42+yVjxsSouskDpVxtCQqabDzrqEZV/dhZMLGXEly3SKVE/wXqJw/uKtvig==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=MbWGvY0hZXrFV5m34YOWufHKOcUq09HoI4G2ygLUeX8=;
 b=fHCFwqzacbGWjjrRa7uucjIUwfIfjYHQBINOSvg9gADkwQaJYOTeKR9BJnAH7QYAnS8Z1dkeSdi4c0UYkaxLRFZn8j589dMzH8R4oQ8e5O+K/JudsSc4i7TX4FYJJq444MVptCHHAGAiweA/zgWjD5xaZucQQ8rdiX1LScZWWHk=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2688.namprd12.prod.outlook.com (2603:10b6:805:6f::29) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.35; Fri, 30 Apr
 2021 12:39:49 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:49 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 35/37] KVM: SVM: Add support to handle the RMP
 nested page fault
Date: Fri, 30 Apr 2021 07:38:20 -0500
Message-Id: <20210430123822.13825-36-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:19 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 3b3d482f-7356-4729-1fa2-08d90bd4f987
X-MS-TrafficTypeDiagnostic: SN6PR12MB2688:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB26885C2CCC7FBC365A35D7FBE55E9@SN6PR12MB2688.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:7691;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 aK2VV5kvxV5b3os4EAhrj8QzQyW8oNHaHS1C6N1jqtP7crN+ft4rfl8zDj7U5rZMqnZnn37J2155L0wN4jXpNTI4uQEN1fWqFwaEyR43i1Ill8NFnYCOKXLI8GZ2uanw+q1odOw3SdsKp9dFWqP+fBq0mu7Q2wrDFniYmPxc1dFabnwUGbtz6h8iXeURBo1t92orzYflK4GKObMjHM/yNV0u0ypbiZYG1+piLU62wAuWWxIyLnxQSWzgblH+BKH0ABhQjo96pkmggdcF64GDpW84Vw12Z/bBrLR1Z9LJkNIB0Mbj8WZg7kg/5Z/cc3D/oYjkPkwrT0W/BA4hEwnrL8T9ilTQ+z74we6P09aJaKPt/J9Z9n3MoBAeZ2Nq4acGkMecaKaOTk65pCtO1VNAf4zWCvfmhDBHAetcQOZymv5Big+mIEVhTuX+6XkqkV2tKkWWzIk5oC2YGIe6OqMW5AOoWhaJev+Kr6OETN2BzhsM6pxOGfReuVC0ELCjqPVzii/I4iHhpqeMBgPC4ETha7o8dpjnJYyWpOndZXPCAg3MrSo5REr36mOjmnEKSNQiydrkLEnM1q4hcOBwJgYRfpHwDJCptmYrpWKQ1/+7WiovTuxaA1fOwkKdWdQ3zTSxD9d9O0aCaMdH7Ou2tiP51A==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(366004)(136003)(396003)(346002)(26005)(8936002)(86362001)(478600001)(52116002)(8676002)(1076003)(66946007)(66556008)(2906002)(7696005)(83380400001)(36756003)(66476007)(44832011)(5660300002)(956004)(38350700002)(38100700002)(7416002)(2616005)(16526019)(186003)(316002)(6486002)(4326008)(6666004);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 n/qvamZVrxWnqFcTSELUoJbTIk6386YGA6G1EfJF4okREteQGC4Aj/lKAw4KDYBCkwXn/+XS0IP+lPXqmljjks04DqtWSdkO8DVwtyX0CYouIaSioX2FhleHNF4LZF0Qpl9S+VkQrILpApXqHYt3cxmZZdNHGlkEhhIf9Pt6cIQxm81qQ+6mAKgUYDbcK8WVKOaPi1vEUy2ZOmFhVTnExyQJxirznTcoM+D+4l4Zpm1Epx+oFmuBOk1vDq03ZGin8MQ1j/7UD17F42/b7EOce0ny0OGR/724lvPi2CjPcwqNOBnKGhKpfhNtZp7TwqIwUK4UpCCQmtzkJCkwUZao4Y0sBejMCMAmlcMKAacTL99dxWV+FF3BzIN6PASWlYN3r3HqNz7X/1qDin2TkNcdov7e0HMgnjngWGl14U2HFbsW7zchY1FcBt1K4DNCoq+kJ+wtIdBzyQ7mxLlJsXZRUgA1Ex8k5eB04DeyX6k3dNdzOtG/QueQoAToKwPeFajwiDccvwDmpFVjrVRqg20tVqGTg34LfrqZD2AsCE76Q5tjyr6a8DzrE6+41a5hGIK02xq5rPeH+zvGg7iM82rCYHJ7Zkd4aX5zCJPlIRWFvEupsi2lbfTmRuLQjAXEIVTuPFkpfw08a6uXdEspyO+XAoKZX3M7vSct+nZbS4+B4IRDh58P3BejqE7F1S8ErHOaN0UvdbGaAU7UIHYblLQ7PFTPCjfUaYQc7v36i0pi3Qak5CNe9wh9+3EFXhcB4QvgcaU122eGXb3cUi1p6KFSwDc4Eo2bpjc1V1LarsiTUMKnIzZSPA+mfFUBwp+Q91jPEMiUtvjJd6n8E9oEu0+wHh0wFxuuULqXrgt1PeMro3poSuRDBIUD34M6f4Nxr50gEl4g5llk1FQhaEAfxE7P3Kht1l2Q7P2Fqrv+yR6DVARmyLthZCYm5ZFE27kOFqgVgYxxS+0WUgy03Ioe6i70xUWtLmXbVldeLm2iLs6llTeFUyVuSaFVZQ8iMdmQl/yEKl0E/SUaIiS9hTMOuD7JhC4nZHTi/l9alkiGL02xEVM3bDyxq3COJXMp4+GGxcQ11ekQmGnNol2y9/19PDFXXvCxh8BWlSFT0ox8O/fWv4jc27n/wrp7EXJwr7kcUb/2hnc+85lXtuYBA4SHFvAMRojmQz4pTl5kAB2A+FFA9SXSpGmwyv0FJJ2uKF7f/XQvCfDWsiFd/5iQQNzgcZKz7mLNWcZdH6sE5YO94nhcfYfrqtWRy1gSTyhe63EEwkbW0n7EHrFBzw8cS4g9VvYxL6OIsZagj+0CNmVr3Rr4VW3K49rKsQxM35COU+ySlfZx
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 3b3d482f-7356-4729-1fa2-08d90bd4f987
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:19.9209
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 URXLGAZcSUEv5PqmwbxLppchqoUo1jurhoROIbSKITXHvtg0y1bQvk7UcujiJ5Yy78LaA4FPtcHqLT5XqjFE8w==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2688
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Follow the recommendation from APM2 section 15.36.10 and 15.36.11 to
resolve the RMP violation encountered during the NPT table walk.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/include/asm/kvm_host.h |  2 ++
 arch/x86/kvm/mmu/mmu.c          | 20 ++++++++++++
 arch/x86/kvm/svm/sev.c          | 57 +++++++++++++++++++++++++++++++++
 arch/x86/kvm/svm/svm.c          |  1 +
 arch/x86/kvm/svm/svm.h          |  2 ++
 5 files changed, 82 insertions(+)

diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index 7d4db88b94f3..8413220f3a83 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -1391,6 +1391,8 @@ struct kvm_x86_ops {
 	void (*vcpu_deliver_sipi_vector)(struct kvm_vcpu *vcpu, u8 vector);
 	void *(*alloc_apic_backing_page)(struct kvm_vcpu *vcpu);
 	int (*get_tdp_max_page_level)(struct kvm_vcpu *vcpu, gpa_t gpa, int max_level);
+	int (*handle_rmp_page_fault)(struct kvm_vcpu *vcpu, gpa_t gpa, kvm_pfn_t pfn,
+			int level, u64 error_code);
 };
 
 struct kvm_x86_nested_ops {
diff --git a/arch/x86/kvm/mmu/mmu.c b/arch/x86/kvm/mmu/mmu.c
index d484f9e8a6b5..0a2bf3c2af14 100644
--- a/arch/x86/kvm/mmu/mmu.c
+++ b/arch/x86/kvm/mmu/mmu.c
@@ -5096,6 +5096,18 @@ static void kvm_mmu_pte_write(struct kvm_vcpu *vcpu, gpa_t gpa,
 	write_unlock(&vcpu->kvm->mmu_lock);
 }
 
+static int handle_rmp_page_fault(struct kvm_vcpu *vcpu, gpa_t gpa, u64 error_code)
+{
+	kvm_pfn_t pfn;
+	int level;
+
+	if (unlikely(!kvm_mmu_get_tdp_walk(vcpu, gpa, &pfn, &level)))
+		return RET_PF_RETRY;
+
+	kvm_x86_ops.handle_rmp_page_fault(vcpu, gpa, pfn, level, error_code);
+	return RET_PF_RETRY;
+}
+
 int kvm_mmu_page_fault(struct kvm_vcpu *vcpu, gpa_t cr2_or_gpa, u64 error_code,
 		       void *insn, int insn_len)
 {
@@ -5112,6 +5124,14 @@ int kvm_mmu_page_fault(struct kvm_vcpu *vcpu, gpa_t cr2_or_gpa, u64 error_code,
 			goto emulate;
 	}
 
+	if (unlikely(error_code & PFERR_GUEST_RMP_MASK)) {
+		r = handle_rmp_page_fault(vcpu, cr2_or_gpa, error_code);
+		if (r == RET_PF_RETRY)
+			return 1;
+		else
+			return r;
+	}
+
 	if (r == RET_PF_INVALID) {
 		r = kvm_mmu_do_page_fault(vcpu, cr2_or_gpa,
 					  lower_32_bits(error_code), false);
diff --git a/arch/x86/kvm/svm/sev.c b/arch/x86/kvm/svm/sev.c
index bd71ece35597..8e4783e105b9 100644
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@ -3428,3 +3428,60 @@ int sev_get_tdp_max_page_level(struct kvm_vcpu *vcpu, gpa_t gpa, int max_level)
 
 	return min_t(uint32_t, level, max_level);
 }
+
+int snp_handle_rmp_page_fault(struct kvm_vcpu *vcpu, gpa_t gpa, kvm_pfn_t pfn,
+			      int level, u64 error_code)
+{
+	struct rmpentry *e;
+	int rlevel, rc = 0;
+	bool private;
+	gfn_t gfn;
+
+	e = snp_lookup_page_in_rmptable(pfn_to_page(pfn), &rlevel);
+	if (!e)
+		return 1;
+
+	private = !!(error_code & PFERR_GUEST_ENC_MASK);
+
+	/*
+	 * See APM section 15.36.11 on how to handle the RMP fault for the large pages.
+	 *
+	 *  npt	     rmp    access      action
+	 *  --------------------------------------------------
+	 *  4k       2M     C=1       psmash
+	 *  x        x      C=1       if page is not private then add a new RMP entry
+	 *  x        x      C=0       if page is private then make it shared
+	 *  2M       4k     C=x       zap
+	 */
+	if ((error_code & PFERR_GUEST_SIZEM_MASK) ||
+	    ((level == PG_LEVEL_4K) && (rlevel == PG_LEVEL_2M) && private)) {
+		rc = snp_rmptable_psmash(vcpu, pfn);
+		goto zap_gfn;
+	}
+
+	/*
+	 * If it's a private access, and the page is not assigned in the RMP table, create a
+	 * new private RMP entry.
+	 */
+	if (!rmpentry_assigned(e) && private) {
+		rc = snp_make_page_private(vcpu, gpa, pfn, PG_LEVEL_4K);
+		goto zap_gfn;
+	}
+
+	/*
+	 * If it's a shared access, then make the page shared in the RMP table.
+	 */
+	if (rmpentry_assigned(e) && !private)
+		rc = snp_make_page_shared(vcpu, gpa, pfn, PG_LEVEL_4K);
+
+zap_gfn:
+	/*
+	 * Now that we have updated the RMP pagesize, zap the existing rmaps for
+	 * large entry ranges so that nested page table gets rebuilt with the updated RMP
+	 * pagesize.
+	 */
+	gfn = gpa_to_gfn(gpa) & ~(KVM_PAGES_PER_HPAGE(PG_LEVEL_2M) - 1);
+	kvm_zap_gfn_range(vcpu->kvm, gfn, gfn + 512);
+
+	return 0;
+}
diff --git a/arch/x86/kvm/svm/svm.c b/arch/x86/kvm/svm/svm.c
index 81a83a7c1229..fd58f7358386 100644
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@ -4618,6 +4618,7 @@ static struct kvm_x86_ops svm_x86_ops __initdata = {
 
 	.alloc_apic_backing_page = svm_alloc_apic_backing_page,
 	.get_tdp_max_page_level = sev_get_tdp_max_page_level,
+	.handle_rmp_page_fault = snp_handle_rmp_page_fault,
 };
 
 static struct kvm_x86_init_ops svm_init_ops __initdata = {
diff --git a/arch/x86/kvm/svm/svm.h b/arch/x86/kvm/svm/svm.h
index 243503fa3fd6..011374e6b2b2 100644
--- a/arch/x86/kvm/svm/svm.h
+++ b/arch/x86/kvm/svm/svm.h
@@ -575,6 +575,8 @@ void sev_vcpu_deliver_sipi_vector(struct kvm_vcpu *vcpu, u8 vector);
 void sev_es_prepare_guest_switch(struct vcpu_svm *svm, unsigned int cpu);
 struct page *snp_safe_alloc_page(struct kvm_vcpu *vcpu);
 int sev_get_tdp_max_page_level(struct kvm_vcpu *vcpu, gpa_t gpa, int max_level);
+int snp_handle_rmp_page_fault(struct kvm_vcpu *vcpu, gpa_t gpa, kvm_pfn_t pfn,
+			      int level, u64 error_code);
 
 /* vmenter.S */
 

From patchwork Fri Apr 30 12:38:21 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233365
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 6711DC433ED
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:43:29 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 33FBE61468
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:43:29 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232698AbhD3MoI (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:44:08 -0400
Received: from mail-dm6nam12on2047.outbound.protection.outlook.com
 ([40.107.243.47]:61889
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232089AbhD3Mmu (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:42:50 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=LrcWAQIA5qCUy1ii6RiGFLDL4C5i1v0StQYb1NH0ul5r2sgk8HboHt31jRDjYJbaoDrFkxQEL5hEY2g9CW8suuiZSSOqWMby+Q19dLv8ga0GsRihy9sPxi81xKnZdngYHnpeZdVwu+05xililSZq5BrtLtznbPShZFf88CxzfVxi4E5qqUrTpaFkGEnrfGDRmWef6n1uJxFkZDtm3kNP9EQcLwvytG3o+87IK1k5tllcBxhEOQth9MYj/5ayULiLlaon8lGfT7PzhZmg5O5Lu0j/if+6+Whw+ZuLhnXhfSYUc0vcTxl3+VO7SM7FPOmDv8Y6zoA+r6ezHOErJBCRLA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=rqTJ+4/ex3MLgKasUoFpH6uDaj077AlYKXy7A24qtZ8=;
 b=dcN3OqYfX0Wc/i/w5pQQ0lzqXXPQ7tvyG/tpj9GYDDO6HEDvb1qGnxCyZZTQDarjISaBkx7y3AjwrBi2jWv3Y1tKWk84e9Aw08Z7HV0PUgRQl3viI/QDl6TCjIO/v4Ttca1yutf87otYmLNsCzD74kxy01gHbn7AsCkB9mnyFpwxyqU3fveulhgH2tDPhyN/TASRNDepEq01P8L1McE97rre7YRHh7W6X1mZUBMr6HPeDdaq3ZHmtgTV1zUCxuXGKwewY9tRXR2faJUcmyI6X8zpPAQxInzCV/HDfvHMLjYQ5BXTDb9F7FOPLFPDLfF/JACwgqPpeCLDEmECmTMLvg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=rqTJ+4/ex3MLgKasUoFpH6uDaj077AlYKXy7A24qtZ8=;
 b=EkuIco5t/+Tf6Q6zDo74B/abKSglELRsRsVlWW8P1IxuoeNppMtKUzFG1A1Sxs9FmG61kJtIUuRJtK09Ykox4jgzM31A+eVxZjW6I/GY7D2G4cTwhUi7NDXHhKuQ7k4FUVB4BMK95ukDQMka7v61NCnXg8NP4nzXvknWU9+MBwQ=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2688.namprd12.prod.outlook.com (2603:10b6:805:6f::29) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.35; Fri, 30 Apr
 2021 12:39:50 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:50 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 36/37] KVM: SVM: Provide support for
 SNP_GUEST_REQUEST NAE event
Date: Fri, 30 Apr 2021 07:38:21 -0500
Message-Id: <20210430123822.13825-37-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:20 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 60b8c46a-73ac-4ba6-2947-08d90bd4f9f4
X-MS-TrafficTypeDiagnostic: SN6PR12MB2688:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB26884EEC133265C93CD69731E55E9@SN6PR12MB2688.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:9508;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 aUMFp7ZRCdbhutaRd9BBC594w72tsEqYnHPUdfvQd4RAYHmTv6AGfVC0dm+08BGnb+vi4ThwhP9+ame3EVsPGgmMpxappGyj8bLII1utHxtxpOQYeTUDMdFaz/4H+Uj2WPYFlCdcdF9ByW2gIK5RObywCigYebgoIzBQ7diOlJ6tnorONZjDh1jTHQnGYDKFlbNrI+ruyxgpwOkBmcd5DmT8ycHPZhX8AKcwuXt5825vssJZoHtL9Lp40iaI9PfETHVb5/VRSD/DPB+xPlS7YzQuIgUddCwYqp+9qkHcccszgsNYehzwRD8oSXkxROEItrwMDO1o8rNNjfk7X6CM2l/wkzKIF9c/5ADg3JuF+Sr8jqnmo4vQaSVcHB4wBwYVUjQLcqjxoLmaw31nsooxDPvlpqTB3ZXtw/CMzy0ZBke9SwnROLQoS721ViL6GG05x3RqD/3GhvcgMo0Zqbn3YUcP3gph58llSxo4KNu/gwfmEOoJHb+Crn25oDnmxP29z4Ik+tstMG8VIR1DkLT/qxOqpl6feJK2oVKTliNvwuC1MWixZ22vFOtuDi/mX8CkvyjVteqZhLfEcdmpKrZtj18YR4ZqWtrV4HI/iwxkdx8ghJsR4VNDVslrvdO5rxFcR25zuTdsrJQ8mzjmhkSmLw==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(366004)(136003)(396003)(346002)(26005)(8936002)(86362001)(478600001)(52116002)(8676002)(1076003)(66946007)(66556008)(2906002)(7696005)(83380400001)(36756003)(66476007)(44832011)(5660300002)(956004)(38350700002)(38100700002)(7416002)(2616005)(16526019)(186003)(316002)(6486002)(4326008);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 Swv9rZhmgFnc0SxzwWNDbPuk255SdUeIeXg+kboZ5lVU/OPk/yWD+Jn1phOlw5cDZQYmwgDa1duEAV/fc7bTCTaeCiYu4FWuArXggWAePQvXYWGtpWx9bnu7HTAnNp/Y0fdR00tbdpuvCoK6eg1d0ny9w29d+YX/AR24GZoNDE47EWt5ddEdSin5A0yM4Gsbb54q8oZVsE3JTfafCmKAKf9r99kETn/jO12VJ0noAx9iNsIHbDyvXIyxw+Ob4kB/E3hhREsDSRa5zpDAY5MuZjlcj9nTddYyz7eIAZHu77FbIYQwDepR6gEjq7g0DOIsjA3Ole0pnqmar8bWmfjlslppbGMNBCz42fC3NxFsctPyEu94UC9OipQEdfypYGY00mdrOcbsOiXXJKCBBs3taC0Ik7IpQlor4AF1UB0WJq1HHDDV20Us87QMZXs7sRdtT/UOMBlWFsPJ2qC/km+1UjgnwP+SH1rQUlZLigN33X+d1fmDV1GX3QYOjLQt/PPYByPff5SekrewR6eqliQnOmUSjqDHmom+/Qm/FFvMDN4Kkw4pJfbUdIMqkLT/SDqzsxD3jn/sRjuGRvbfnJn3xZJBy4/Zke8XGhoT4H7Y4Z+U/yOwppGvW8mFY58uqrXTyzReAzGQ+TZwj7PmVn0C2tcWPVV0TL9pkB/Mf/KzK/PjiupKD13NKUMhGBOk872lAsJvqf3hhQ0zkUm4hofAI5YoKogf+z6c+RHtiIKptVPVXv43JzYrbrfVLyFVW627CmZjTrHTb7y1kcsK+hek/AFuGf29GpGMYT1nc1WVQFIhxY3KzFm7wFM0czJfww6i9Eb9JhOoDAOlGCSydTTbnewg1udAU7S4lz5c9V5mPeO4bC01XeI3eeNEmqhbatmBDg3Zjo35uQQbhU4r2bGYvLaLCkiD7Sa/j0ibEaaOqy/t3jUZKv0XtXBwIjaitTFXOPx9kOaW90tUvnZHfSUiSZTwBHi9B+cOcJ5/uc91j0rasNjeUcoKo7T2YgUG2MYxOwTKLAlrIzPPby8WfdxJn7Xa+edPIf3n0ylsdP5Exeum95d2Xwc4bFuO4SZtclJqgEow9ENEKLeBX4eduliGGgpv3O9nrR92xNQwqZ0U6JNSHXJer71cx11mUmvWHSG/AvypGLAsic1H/fQayiPYO74HR9FbJk6a48a68M6jlLvD1AC71Yi2ua3pq45cgwhghB4x3IoDM35ikfemxWaInOBcHE4QpUmf0LEajvIajktGyuJHl8IBzVtQB4CyQkr0Yk/kTD3NAmy88Ti2PFgaPG/SGbwmbyy/HdR5VnGWgEHZe7OwMZYoRSXO0gsZKDEP
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 60b8c46a-73ac-4ba6-2947-08d90bd4f9f4
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:20.6145
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 7GvnWTv4rf1p5NNbbhyd6Eu103rp+7f/dhbOONAB3UctuHHQi1WuE3jvG2UeBy+R+TykUof11gzLM23/W/Q05g==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2688
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Version 2 of GHCB specification added the support SNP Guest Request Message
NAE event. The event allows for an SEV-SNP guest to make request to the
SEV-SNP firmware through hypervisor using the SNP_GUEST_REQUEST API define
in the SEV-SNP firmware specification.

The SNP_GUEST_REQUEST requires two unique pages, one page for the request
and one page for the response. The response page need to be in the firmware
state. The GHCB specification says that both the pages need to be in the
hypervisor state but before executing the SEV-SNP command the response page
need to be in the firmware state.

In order to minimize the page state transition during the command handling,
pre-allocate a firmware page on guest creation. Use the pre-allocated
firmware page to complete the command execution and copy the result in the
guest response page.

Ratelimit the handling of SNP_GUEST_REQUEST NAE to avoid the possibility
of a guest creating a denial of service attack aginst the SNP firmware.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/svm/sev.c | 106 +++++++++++++++++++++++++++++++++++++++--
 arch/x86/kvm/svm/svm.h |   3 ++
 2 files changed, 106 insertions(+), 3 deletions(-)

diff --git a/arch/x86/kvm/svm/sev.c b/arch/x86/kvm/svm/sev.c
index 8e4783e105b9..da4158da644b 100644
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@ -18,6 +18,7 @@
 #include <linux/processor.h>
 #include <linux/trace_events.h>
 #include <linux/sev.h>
+#include <linux/kvm_host.h>
 #include <asm/fpu/internal.h>
 
 #include <asm/trapnr.h>
@@ -1517,6 +1518,7 @@ static int sev_receive_finish(struct kvm *kvm, struct kvm_sev_cmd *argp)
 
 static void *snp_context_create(struct kvm *kvm, struct kvm_sev_cmd *argp)
 {
+	struct kvm_sev_info *sev = &to_kvm_svm(kvm)->sev_info;
 	struct sev_data_snp_gctx_create data = {};
 	void *context;
 	int rc;
@@ -1526,14 +1528,24 @@ static void *snp_context_create(struct kvm *kvm, struct kvm_sev_cmd *argp)
 	if (!context)
 		return NULL;
 
-	data.gctx_paddr = __psp_pa(context);
-	rc = __sev_issue_cmd(argp->sev_fd, SEV_CMD_SNP_GCTX_CREATE, &data, &argp->error);
-	if (rc) {
+	/* Allocate a firmware buffer used during the guest command handling. */
+	sev->snp_resp_page = snp_alloc_firmware_page(GFP_KERNEL_ACCOUNT);
+	if (!sev->snp_resp_page) {
 		snp_free_firmware_page(context);
 		return NULL;
 	}
 
+	data.gctx_paddr = __psp_pa(context);
+	rc = __sev_issue_cmd(argp->sev_fd, SEV_CMD_SNP_GCTX_CREATE, &data, &argp->error);
+	if (rc)
+		goto e_free;
+
 	return context;
+
+e_free:
+	snp_free_firmware_page(context);
+	snp_free_firmware_page(sev->snp_resp_page);
+	return NULL;
 }
 
 static int snp_bind_asid(struct kvm *kvm, int *error)
@@ -1601,6 +1613,9 @@ static int snp_launch_start(struct kvm *kvm, struct kvm_sev_cmd *argp)
 	if (rc)
 		goto e_free_context;
 
+	/* Used for rate limiting SNP guest message request, use the default settings */
+	ratelimit_default_init(&sev->snp_guest_msg_rs);
+
 	return 0;
 
 e_free_context:
@@ -2197,6 +2212,9 @@ static int snp_decommission_context(struct kvm *kvm)
 	snp_free_firmware_page(sev->snp_context);
 	sev->snp_context = NULL;
 
+	/* Free the response page. */
+	snp_free_firmware_page(sev->snp_resp_page);
+
 	return 0;
 }
 
@@ -2642,6 +2660,7 @@ static int sev_es_validate_vmgexit(struct vcpu_svm *svm)
 	case SVM_VMGEXIT_UNSUPPORTED_EVENT:
 	case SVM_VMGEXIT_HYPERVISOR_FEATURES:
 	case SVM_VMGEXIT_SNP_PAGE_STATE_CHANGE:
+	case SVM_VMGEXIT_SNP_GUEST_REQUEST:
 		break;
 	default:
 		goto vmgexit_err;
@@ -2996,6 +3015,81 @@ static unsigned long snp_handle_page_state_change(struct vcpu_svm *svm, struct g
 	return rc;
 }
 
+static void snp_handle_guest_request(struct vcpu_svm *svm, struct ghcb *ghcb,
+				    gpa_t req_gpa, gpa_t resp_gpa)
+{
+	struct sev_data_snp_guest_request data = {};
+	struct kvm_vcpu *vcpu = &svm->vcpu;
+	struct kvm *kvm = vcpu->kvm;
+	kvm_pfn_t req_pfn, resp_pfn;
+	struct kvm_sev_info *sev;
+	int rc, err = 0;
+
+	if (!sev_snp_guest(vcpu->kvm)) {
+		rc = -ENODEV;
+		goto e_fail;
+	}
+
+	sev = &to_kvm_svm(kvm)->sev_info;
+
+	if (!__ratelimit(&sev->snp_guest_msg_rs)) {
+		pr_info_ratelimited("svm: too many guest message requests\n");
+		rc = -EAGAIN;
+		goto e_fail;
+	}
+
+	if (!IS_ALIGNED(req_gpa, PAGE_SIZE) || !IS_ALIGNED(resp_gpa, PAGE_SIZE)) {
+		pr_err("svm: guest request (%#llx) or response (%#llx) is not page aligned\n",
+			req_gpa, resp_gpa);
+		goto e_term;
+	}
+
+	req_pfn = gfn_to_pfn(kvm, gpa_to_gfn(req_gpa));
+	if (is_error_noslot_pfn(req_pfn)) {
+		pr_err("svm: guest request invalid gpa=%#llx\n", req_gpa);
+		goto e_term;
+	}
+
+	resp_pfn = gfn_to_pfn(kvm, gpa_to_gfn(resp_gpa));
+	if (is_error_noslot_pfn(resp_pfn)) {
+		pr_err("svm: guest response invalid gpa=%#llx\n", resp_gpa);
+		goto e_term;
+	}
+
+	data.gctx_paddr = __psp_pa(sev->snp_context);
+	data.req_paddr = __sme_set(req_pfn << PAGE_SHIFT);
+	data.res_paddr = __psp_pa(sev->snp_resp_page);
+
+	mutex_lock(&kvm->lock);
+
+	rc = sev_issue_cmd(kvm, SEV_CMD_SNP_GUEST_REQUEST, &data, &err);
+	if (rc) {
+		mutex_unlock(&kvm->lock);
+
+		/* If we have a firmware error code then use it. */
+		if (err)
+			rc = err;
+
+		goto e_fail;
+	}
+
+	/* Copy the response after the firmware returns success. */
+	rc = kvm_write_guest(kvm, resp_gpa, sev->snp_resp_page, PAGE_SIZE);
+
+	mutex_unlock(&kvm->lock);
+
+e_fail:
+	ghcb_set_sw_exit_info_2(ghcb, rc);
+	return;
+
+e_term:
+	ghcb_set_sw_exit_info_1(ghcb, 1);
+	ghcb_set_sw_exit_info_2(ghcb,
+				X86_TRAP_GP |
+				SVM_EVTINJ_TYPE_EXEPT |
+				SVM_EVTINJ_VALID);
+}
+
 static int sev_handle_vmgexit_msr_protocol(struct vcpu_svm *svm)
 {
 	struct vmcb_control_area *control = &svm->vmcb->control;
@@ -3245,6 +3339,12 @@ int sev_handle_vmgexit(struct kvm_vcpu *vcpu)
 		ghcb_set_sw_exit_info_2(ghcb, rc);
 		break;
 	}
+	case SVM_VMGEXIT_SNP_GUEST_REQUEST: {
+		snp_handle_guest_request(svm, ghcb, control->exit_info_1, control->exit_info_2);
+
+		ret = 1;
+		break;
+	}
 	case SVM_VMGEXIT_UNSUPPORTED_EVENT:
 		vcpu_unimpl(vcpu,
 			    "vmgexit: unsupported event - exit_info_1=%#llx, exit_info_2=%#llx\n",
diff --git a/arch/x86/kvm/svm/svm.h b/arch/x86/kvm/svm/svm.h
index 011374e6b2b2..ecd466721c23 100644
--- a/arch/x86/kvm/svm/svm.h
+++ b/arch/x86/kvm/svm/svm.h
@@ -18,6 +18,7 @@
 #include <linux/kvm_types.h>
 #include <linux/kvm_host.h>
 #include <linux/bits.h>
+#include <linux/ratelimit.h>
 
 #include <asm/svm.h>
 #include <asm/sev-common.h>
@@ -68,6 +69,8 @@ struct kvm_sev_info {
 	struct kvm *enc_context_owner; /* Owner of copied encryption context */
 	struct misc_cg *misc_cg; /* For misc cgroup accounting */
 	void *snp_context;      /* SNP guest context page */
+	void *snp_resp_page;	/* SNP guest response page */
+	struct ratelimit_state snp_guest_msg_rs; /* Rate limit the SNP guest message */
 };
 
 struct kvm_svm {

From patchwork Fri Apr 30 12:38:22 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Brijesh Singh <brijesh.singh@amd.com>
X-Patchwork-Id: 12233367
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_GIT autolearn=ham autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id A150AC433B4
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:43:38 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 825BD61480
	for <kvm@archiver.kernel.org>; Fri, 30 Apr 2021 12:43:38 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232910AbhD3MoW (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Fri, 30 Apr 2021 08:44:22 -0400
Received: from mail-dm6nam12on2072.outbound.protection.outlook.com
 ([40.107.243.72]:56448
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S232589AbhD3Mmz (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 30 Apr 2021 08:42:55 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=VxIhrswjmNWfRG1IPgN6bhqJ/ilo9u3TZMvxWByRLyJaziSqirtqbXwSBiZcOJXS+MpiANFMMQxj+NtLcBgvbTEZpQd128hazH5RgK9sSBTjfsR6NcWlVldYPyYTeKObyj+1c8DE4jZYciLI4++jXf5KM3DF1iMDvEc5KQBU9LxtaL2rMmHI0JqMi8YQMhgguYcuObJVtx/3ZFTPTdcumKvGfLoSPbStOcWWBMQa4xOQi3v/13uh7PXYoexIBHzlNcgQmN7T98jPcxe1qy3UuTRGezQIg9cGoduAFV4gbp4VjZPo5CQ59MH4zoQ1g8auIVeSt7daAdcoaH6kwPrLsg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=toP1TudS4MH64jEVgKeCkjhDIQP+Nlel2boNMlLmBEE=;
 b=Tl6i2U23pc3U9AxsP/TUlmmAGp7IXLBdSHqQEZunV/qaZ5doNW4qd+1ZnJNTGkuNaJiaQOHQ5znUH7UgjmJGbgBrY11iW+VwrkdVOv+sL7pwZPTDehuDXP3zyjPKQ3N8d0W6mwlglVrrP6oZqKW6my3MjIEOSsmN3iLs0ITj4YZ8bybZLj0k36UDiB7xJqOok48mNn4rydKRsk2iYO5aeHfJ0tEzG4dx92GQPehzQDGgksMzK4gK9CObLfaRLkRVvtkDj/y4Fzr7HxSGYuDaF2dwhUZ8Vt8EA4SrpBYoV5TbZh382doYTwMPauXC7fVjfREIgQUkfXNq0ptFr4JCVw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=toP1TudS4MH64jEVgKeCkjhDIQP+Nlel2boNMlLmBEE=;
 b=rqMd7nqjLEkPHVhosBfm+yQAZGIAeiZykwoUdl65kDa5rWPe/f554kfXFfW3eN9e61fA/5f7tSvqLV2qvVzZqhD/LifEWIcchSzV1n1mgSKveefqyzIqic5eX2ErKe62zstFvmyGp0CqKBfOPjRooQxi8tueMLdm4b5b8yPL3Ww=
Authentication-Results: kernel.org; dkim=none (message not signed)
 header.d=none;kernel.org; dmarc=none action=none header.from=amd.com;
Received: from SN6PR12MB2718.namprd12.prod.outlook.com (2603:10b6:805:6f::22)
 by SN6PR12MB2688.namprd12.prod.outlook.com (2603:10b6:805:6f::29) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4087.35; Fri, 30 Apr
 2021 12:39:50 +0000
Received: from SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94]) by SN6PR12MB2718.namprd12.prod.outlook.com
 ([fe80::9898:5b48:a062:db94%6]) with mapi id 15.20.4065.027; Fri, 30 Apr 2021
 12:39:50 +0000
From: Brijesh Singh <brijesh.singh@amd.com>
To: x86@kernel.org, linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: tglx@linutronix.de, bp@alien8.de, jroedel@suse.de,
        thomas.lendacky@amd.com, pbonzini@redhat.com, mingo@redhat.com,
        dave.hansen@intel.com, rientjes@google.com, seanjc@google.com,
        peterz@infradead.org, hpa@zytor.com, tony.luck@intel.com,
        Brijesh Singh <brijesh.singh@amd.com>
Subject: [PATCH Part2 RFC v2 37/37] KVM: SVM: Advertise the SEV-SNP feature
 support
Date: Fri, 30 Apr 2021 07:38:22 -0500
Message-Id: <20210430123822.13825-38-brijesh.singh@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20210430123822.13825-1-brijesh.singh@amd.com>
References: <20210430123822.13825-1-brijesh.singh@amd.com>
X-Originating-IP: [165.204.77.1]
X-ClientProxiedBy: SN4PR0501CA0089.namprd05.prod.outlook.com
 (2603:10b6:803:22::27) To SN6PR12MB2718.namprd12.prod.outlook.com
 (2603:10b6:805:6f::22)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from sbrijesh-desktop.amd.com (165.204.77.1) by
 SN4PR0501CA0089.namprd05.prod.outlook.com (2603:10b6:803:22::27) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4108.8 via Frontend
 Transport; Fri, 30 Apr 2021 12:39:20 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 3abf4c1f-33b6-4440-b57d-08d90bd4fa5b
X-MS-TrafficTypeDiagnostic: SN6PR12MB2688:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <SN6PR12MB268836FB77FDBD130CE2034CE55E9@SN6PR12MB2688.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:4125;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 2xFj62jat9H6JRyN25bjnO3FXXh+bYKLEHYOeHb2jLOtNuCN1iRcq+ys5sZpElNVgNlvCIHsJXYjBBQ/U6c1j6eHHTfAAk6b9TLmBBjFk0eNkBJv2EMCGKRSI+aDDC9Ny3F6prR0Ui/DfHX7vVT/NIsjyvJe8UL0k435s/2lC7ZXux9TcQZ8gyilpSnXxYzx2fJtQjM+aNN08zDmXafrFebs/+iASuG6BoWOnBL23ux3CB3EbDRoHozBb46dO7ol2n+nfQNtq9TxfCkEkX6e73IkUxpsTwHmtsBwzbrdwq5JeDIxJYQCuCQfMY8Ynk4p2LPldfTa+/JUFWTKVvd6xbjWz4ZDaGqXYxv8wfC+XrUu4k+mS1kYgo3Rc+9OdWflQlt1MP9CLl8tQqsSFfpVHxbWzF0hIUxVzLd72bDDP3ot8Cw3NX2Ob0Glj7jQl+C6krdktE5sPVj/fhKzJW0E3y90+GlwJoI9c14UjqWvPnE+NY9vCroycVIcHbtCR0gUeJW4d9BGmKGe4/KcNr0S0sxpK4b33xuhdT+5oEB3ZylpEXIaFQX9YSNbXHYSziD2coDfkFvZYF5YTAkfLGSWF9CLIseYyGU3u3QKclwAW5IMmQxHUDPgnSCd23ODO7wgQ6yEVcH5FmwwUjsbQIh7cg==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR12MB2718.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(376002)(366004)(136003)(396003)(346002)(4744005)(26005)(8936002)(86362001)(478600001)(52116002)(8676002)(1076003)(66946007)(66556008)(2906002)(7696005)(83380400001)(36756003)(66476007)(44832011)(5660300002)(956004)(38350700002)(38100700002)(7416002)(2616005)(16526019)(186003)(316002)(6486002)(4326008);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 0OsLLUGZWoVTuSQddENzcx8ssZY72P+LfAdyfG+lih3dq7ydn7kTMZ15tpfkVgHKpWGEMRmAj0nB+z75/uC2PyKWSuBlx7fOqWsT7BsGVZI9Zcnn/ddNMFv+jyIPZvn8TFQP5Siuzh4v9pvsYtqXyG+LYkMLl4iKSC79R4onX2uV8Jpor7Vp0W/GZuCTL4QtRxbN+Jf3dhA8OlpPgWy9XNgnQUzkXxOHcsH997s+oykpH6qxwpbJaZN8JiCQo8D5ptj0ZK+TYHW31WGF8BTeTNQVFUc9HX8LPKAbiIT+BIPVNWxP3rw9M0uCpfjZv0GsJsjnaJlvV4fPdc/KncI38IJJbTeMVn3BSM8f38GCxp8hWkbGceO5aphCtJ42WIxYzLj244yi6Avt+MKvnH8/HsCtfkyCAode2zWKt7QhCwlchPnDLkJQbWUPqlrgHs1IG2nBKqyZkbjJZpeJdPCdVxhI87r+mAvjHQXgv+d0e/7jx/v4IFi04a/I6a6K/vvXpQev7O7qX36f1MyNBxy0XJWbWfagAA2kpoBWimO3y5gaf13QMcKCVH1GYf1dZA7HbEe/JKeMCKcPanDKB/biU06iKfEKWpUUTc95KeefuSKYZwUFwB6cPSBryUjzPzAmYswii8rtZX/AVorrXeVmyBK8MS9tyyluWyA2CkjsoYkzPEtzn1pPOp/P3zXeWjWD6aeYmq9TVWmgahCYhy1BM6fLgEcT/K840euttE7NFCvDjioTozBfAOWpETROo97mh9WRwh+YGiUfIWPF2DOh1x+eDWAeCKhDReW3HQ3eryj3gX9H9u/bhdwJMNalYK0KUDG0s5LuOO3C91j6Xd21rW+CUixqtWcmuNTQD/B9OBP60p/NtUvIc7YUQAeIvV2rmKNHg3knpvy8UpvBiSfqPi1n1qigir9a/gC2dv+NFncopQP+3NBBXRR7OmtrNDoMWA4FXWUOfVRmXx/QKiGbY2RMBEidbQ3XRQyuVeWUOKptIiLAIRC68b2Twuq9gni6jqdUqO+K+LMCefA17QeO/rJhDRI9SX4ZpJvIj0hEKItLf4OADYo6gtY3Yx7hEP7J1ELpQDNHLhENczzVyXxxTNJOWivLvuZUhHvyi1HNuCX5iJ7MxMQI38fLgWenHttHGq9OOVovZNj2A6PTC3E0drHGIZG3GgIv++7CbDSTaEB730Y7nLFd/Re+lcCwN8x6cNom/YnDjMcxCniJlhfPw0MsaQENhXKh4JysIjWkYLq0N6dIYEvXpLzekQrSQ1dfT5PqxaWv4HHn0b9quYt0UuwHbE3PyXy64ExD3VdW1BBHTgpehYVPhTNDnwL341A/
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 3abf4c1f-33b6-4440-b57d-08d90bd4fa5b
X-MS-Exchange-CrossTenant-AuthSource: SN6PR12MB2718.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Apr 2021 12:39:21.3281
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 OCginHdoLRC6aWTHbkAZNZza4hcUbwtlFFkUYNYSXUSzaEWxPgTe34zSt2ffoppFEu+aUJnB98KTYwas8Rgm2Q==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2688
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Now that KVM supports all the VMGEXIT NAEs required for the base SEV-SNP
feature, set the hypervisor feature to advertise it.

Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
---
 arch/x86/kvm/svm/svm.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/x86/kvm/svm/svm.h b/arch/x86/kvm/svm/svm.h
index ecd466721c23..f344ffd5afd6 100644
--- a/arch/x86/kvm/svm/svm.h
+++ b/arch/x86/kvm/svm/svm.h
@@ -553,7 +553,7 @@ void svm_vcpu_unblocking(struct kvm_vcpu *vcpu);
 #define GHCB_VERSION_MAX	2ULL
 #define GHCB_VERSION_MIN	1ULL
 
-#define GHCB_HV_FEATURES_SUPPORTED	0
+#define GHCB_HV_FEATURES_SUPPORTED	GHCB_HV_FEATURES_SNP
 
 extern unsigned int max_sev_asid;
 
