From patchwork Mon Mar  9 15:52:11 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Vitaly Kuznetsov <vkuznets@redhat.com>
X-Patchwork-Id: 11427471
Return-Path: <SRS0=BDOO=42=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 491C91800
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon,  9 Mar 2020 15:52:52 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 2A795208C3
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon,  9 Mar 2020 15:52:52 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (1024-bit key) header.d=redhat.com header.i=@redhat.com
 header.b="RgnK5S4O"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727125AbgCIPwt (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Mon, 9 Mar 2020 11:52:49 -0400
Received: from us-smtp-delivery-1.mimecast.com ([205.139.110.120]:56595 "EHLO
        us-smtp-1.mimecast.com" rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org
        with ESMTP id S1727124AbgCIPwc (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 9 Mar 2020 11:52:32 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
        s=mimecast20190719; t=1583769150;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:
         content-transfer-encoding:content-transfer-encoding:
         in-reply-to:in-reply-to:references:references;
        bh=3E4LIBi/eaTA+USlOTfstaQ+9ylrR99sJyL6v/S7Fzk=;
        b=RgnK5S4OCgxqO6Kh/A4QZ4z7op1FUFfSat1Ittg5vuPUPn9WUaANF97ml6bdntVLf5UsWH
        LchrrAkz48sR/zjiUOMfe7RT/RbCZrzwEHMYImHg4HZHlWx58XVekxaC2kezF2hcNVT0y/
        wmIGBBaSpnSldytrQmWCuRhlqRwHGQ0=
Received: from mail-wr1-f72.google.com (mail-wr1-f72.google.com
 [209.85.221.72]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-304-7uG4iJMsNrSZhcnKuntN5Q-1; Mon, 09 Mar 2020 11:52:23 -0400
X-MC-Unique: 7uG4iJMsNrSZhcnKuntN5Q-1
Received: by mail-wr1-f72.google.com with SMTP id p11so5383391wrn.10
        for <kvm@vger.kernel.org>; Mon, 09 Mar 2020 08:52:23 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=3E4LIBi/eaTA+USlOTfstaQ+9ylrR99sJyL6v/S7Fzk=;
        b=NWO2AWnUdmZvo1FflMDyWlNQBi7XbO8WyVQc2pkPK59ZknwHQiOT2/sjB62sksSMVP
         R3Ggy3RufWIN/bVYJ5FZmoWaqNl+PvrMcl9tnOcB30wHkayjsyeuwE4a9X+TjY4BrygW
         Vm4EIhFdjK+rxfHhIq7i4HMS9eG6oqDz6/1Oa36dWXrn78NcXO0TG/13Y9Ut5uP59Rpk
         ZZI1LSh1iNfDXmQ6079jIO1o7XTCZqBWMbfnO0ZcIskLsvdQ69ihM4icxQx9deMf9kpf
         CIR+CEPjwotuqOqSJzVnQXG9ASf2U0Orgm3t4jRuAmOtyKNCG42MMxPQ9mjzptoHR6/o
         HzAA==
X-Gm-Message-State: ANhLgQ3Wc7UKGviPXnhg7O9dJpPjp1r72lsTNd1sid+szZBHs0BaIJO9
        p8ThfScJMWg81WXGm+KsHs1DV01yJOTk9Vg4sdcpsjPDndxJ+PodQbwpHkE2uhi842wVrWZs8i3
        OusSexISJOHcf
X-Received: by 2002:a5d:5411:: with SMTP id g17mr20557077wrv.4.1583769142618;
        Mon, 09 Mar 2020 08:52:22 -0700 (PDT)
X-Google-Smtp-Source: 
 ADFU+vs9pNoq6eROQLSMnQjOi+/bC2QHYG7NKgj7y/VTWqWWzCnhRUMXrJkC1KQDPqK4jhMpsxv/EA==
X-Received: by 2002:a5d:5411:: with SMTP id g17mr20557054wrv.4.1583769142367;
        Mon, 09 Mar 2020 08:52:22 -0700 (PDT)
Received: from vitty.brq.redhat.com (nat-pool-brq-t.redhat.com.
 [213.175.37.10])
        by smtp.gmail.com with ESMTPSA id
 q4sm17294521wro.56.2020.03.09.08.52.19
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Mon, 09 Mar 2020 08:52:20 -0700 (PDT)
From: Vitaly Kuznetsov <vkuznets@redhat.com>
To: Paolo Bonzini <pbonzini@redhat.com>
Cc: Jim Mattson <jmattson@google.com>,
        Sean Christopherson <sean.j.christopherson@intel.com>,
        kvm@vger.kernel.org, linux-kernel@vger.kernel.org,
        Liran Alon <liran.alon@oracle.com>,
        Miaohe Lin <linmiaohe@huawei.com>
Subject: [PATCH 1/6] KVM: nVMX: avoid NULL pointer dereference with incorrect
 EVMCS GPAs
Date: Mon,  9 Mar 2020 16:52:11 +0100
Message-Id: <20200309155216.204752-2-vkuznets@redhat.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200309155216.204752-1-vkuznets@redhat.com>
References: <20200309155216.204752-1-vkuznets@redhat.com>
MIME-Version: 1.0
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

When an EVMCS enabled L1 guest on KVM will tries doing enlightened VMEnter
with EVMCS GPA = 0 the host crashes because the

evmcs_gpa != vmx->nested.hv_evmcs_vmptr

condition in nested_vmx_handle_enlightened_vmptrld() will evaluate to
false (as nested.hv_evmcs_vmptr is zeroed after init). The crash will
happen on vmx->nested.hv_evmcs pointer dereference.

Another problematic EVMCS ptr value is '-1' but it only causes host crash
after nested_release_evmcs() invocation. The problem is exactly the same as
with '0', we mistakenly think that the EVMCS pointer hasn't changed and
thus nested.hv_evmcs_vmptr is valid.

Resolve the issue by adding an additional !vmx->nested.hv_evmcs
check to nested_vmx_handle_enlightened_vmptrld(), this way we will
always be trying kvm_vcpu_map() when nested.hv_evmcs is NULL
and this is supposed to catch all invalid EVMCS GPAs.

Also, initialize hv_evmcs_vmptr to '0' in nested_release_evmcs()
to be consistent with initialization where we don't currently
set hv_evmcs_vmptr to '-1'.

Cc: stable@vger.kernel.org
Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
---
 arch/x86/kvm/vmx/nested.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/arch/x86/kvm/vmx/nested.c b/arch/x86/kvm/vmx/nested.c
index e920d7834d73..9750e590c89d 100644
--- a/arch/x86/kvm/vmx/nested.c
+++ b/arch/x86/kvm/vmx/nested.c
@@ -224,7 +224,7 @@ static inline void nested_release_evmcs(struct kvm_vcpu *vcpu)
 		return;
 
 	kvm_vcpu_unmap(vcpu, &vmx->nested.hv_evmcs_map, true);
-	vmx->nested.hv_evmcs_vmptr = -1ull;
+	vmx->nested.hv_evmcs_vmptr = 0;
 	vmx->nested.hv_evmcs = NULL;
 }
 
@@ -1923,7 +1923,8 @@ static int nested_vmx_handle_enlightened_vmptrld(struct kvm_vcpu *vcpu,
 	if (!nested_enlightened_vmentry(vcpu, &evmcs_gpa))
 		return 1;
 
-	if (unlikely(evmcs_gpa != vmx->nested.hv_evmcs_vmptr)) {
+	if (unlikely(!vmx->nested.hv_evmcs ||
+		     evmcs_gpa != vmx->nested.hv_evmcs_vmptr)) {
 		if (!vmx->nested.hv_evmcs)
 			vmx->nested.current_vmptr = -1ull;
 

From patchwork Mon Mar  9 15:52:12 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Vitaly Kuznetsov <vkuznets@redhat.com>
X-Patchwork-Id: 11427461
Return-Path: <SRS0=BDOO=42=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 469D8924
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon,  9 Mar 2020 15:52:30 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 1F7A621D56
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon,  9 Mar 2020 15:52:30 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (1024-bit key) header.d=redhat.com header.i=@redhat.com
 header.b="eDAG44KP"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727115AbgCIPw3 (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Mon, 9 Mar 2020 11:52:29 -0400
Received: from us-smtp-2.mimecast.com ([207.211.31.81]:52582 "EHLO
        us-smtp-delivery-1.mimecast.com" rhost-flags-OK-OK-OK-FAIL)
        by vger.kernel.org with ESMTP id S1727070AbgCIPw3 (ORCPT
        <rfc822;kvm@vger.kernel.org>); Mon, 9 Mar 2020 11:52:29 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
        s=mimecast20190719; t=1583769148;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:
         content-transfer-encoding:content-transfer-encoding:
         in-reply-to:in-reply-to:references:references;
        bh=mUjMf0pru97NKPn88I5joi0BdJ++OODXbfomnXreXCg=;
        b=eDAG44KP78M/zxqNDhx4NNYJFKpEXQvkUIPHAmhlkABR0wuUO18ZcUePqX6W0/EyHlKMe/
        M1w5katVatyVVH8HRo1t6DIwI5wjRCabALP+tggD9dtaUCUA/6KoHEBoAk3Xw6GeD6rA0F
        berXOs5eOhYdfucHa2kpqAxqwQCFDTk=
Received: from mail-wm1-f72.google.com (mail-wm1-f72.google.com
 [209.85.128.72]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-79-cumw2SrRMU-RxUmCaViUQg-1; Mon, 09 Mar 2020 11:52:26 -0400
X-MC-Unique: cumw2SrRMU-RxUmCaViUQg-1
Received: by mail-wm1-f72.google.com with SMTP id y7so5753wmd.4
        for <kvm@vger.kernel.org>; Mon, 09 Mar 2020 08:52:26 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=mUjMf0pru97NKPn88I5joi0BdJ++OODXbfomnXreXCg=;
        b=dYMwrr5ZCKZmzCV+2x16nADb7pEx2tKLjT4FL5MvofImrb/+ufkSWxw25Av5WzaSPz
         SFhOS4gmp64N088fOIq8JCSFHRrCdSM2UItPNJL8TIoDs/mbwvb6N+BkScILWJgTyb3J
         929p90le0JarptLc/3vaWBtYM3bXqYiusj/cdMh0IqRyh5LPaTTAKGMCNCZr7c0cjrLY
         ECkPrgNKBLNBBxXADZ47+h5uVOibREco0KsyWu/x+MxlUxrVTboHTknk6rhbaGkjmATN
         tL6lYvKdeFtx1hj1ApsjDoEHoKOkpTYvf2hIt2C4538SnQ5UHU7g2Fq6kKWHuzIHvSHa
         Q7iw==
X-Gm-Message-State: ANhLgQ0Ieqpv2GD7zGlrDk6D6406FnoV4ymlM3K7Jjxf27xmR3rgku3w
        Y3ZkcnVDpgFFoWA1QP98FWLBPg/ZVdit+XWMk3cg0q4DL+SbT93MQdUqYXAKA1pg9HEERGdhoDc
        QmpBfNhgH2SKw
X-Received: by 2002:adf:fa50:: with SMTP id y16mr22546600wrr.41.1583769145415;
        Mon, 09 Mar 2020 08:52:25 -0700 (PDT)
X-Google-Smtp-Source: 
 ADFU+vs+HzLTtazNgJbQdyRhXHpsKnoISFChWiFU93ZCJ5xdplETQI692if7cVEAxyLXeEoO6fSXXg==
X-Received: by 2002:adf:fa50:: with SMTP id y16mr22546578wrr.41.1583769145152;
        Mon, 09 Mar 2020 08:52:25 -0700 (PDT)
Received: from vitty.brq.redhat.com (nat-pool-brq-t.redhat.com.
 [213.175.37.10])
        by smtp.gmail.com with ESMTPSA id
 q4sm17294521wro.56.2020.03.09.08.52.22
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Mon, 09 Mar 2020 08:52:22 -0700 (PDT)
From: Vitaly Kuznetsov <vkuznets@redhat.com>
To: Paolo Bonzini <pbonzini@redhat.com>
Cc: Jim Mattson <jmattson@google.com>,
        Sean Christopherson <sean.j.christopherson@intel.com>,
        kvm@vger.kernel.org, linux-kernel@vger.kernel.org,
        Liran Alon <liran.alon@oracle.com>,
        Miaohe Lin <linmiaohe@huawei.com>
Subject: [PATCH 2/6] KVM: nVMX: stop abusing need_vmcs12_to_shadow_sync for
 eVMCS mapping
Date: Mon,  9 Mar 2020 16:52:12 +0100
Message-Id: <20200309155216.204752-3-vkuznets@redhat.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200309155216.204752-1-vkuznets@redhat.com>
References: <20200309155216.204752-1-vkuznets@redhat.com>
MIME-Version: 1.0
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

When vmx_set_nested_state() happens, we may not have all the required
data to map enlightened VMCS: e.g. HV_X64_MSR_VP_ASSIST_PAGE MSR may not
yet be restored so we need a postponed action. Currently, we (ab)use
need_vmcs12_to_shadow_sync/nested_sync_vmcs12_to_shadow() for that but
this is not ideal:
- We may not need to sync anything if L2 is running
- It is hard to propagate errors from nested_sync_vmcs12_to_shadow()
 as we call it from vmx_prepare_switch_to_guest() which happens just
 before we do VMLAUNCH, the code is not ready to handle errors there.

Move eVMCS mapping to nested_get_vmcs12_pages() and request
KVM_REQ_GET_VMCS12_PAGES, it seems to be is less abusive in nature.
It would probably be possible to introduce a specialized KVM_REQ_EVMCS_MAP
but it is undesirable to propagate eVMCS specifics all the way up to x86.c

Note, we don't need to request KVM_REQ_GET_VMCS12_PAGES from
vmx_set_nested_state() directly as nested_vmx_enter_non_root_mode() already
does that. Requesting KVM_REQ_GET_VMCS12_PAGES is done to document the
(non-obvious) side-effect and to be future proof.

Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
---
 arch/x86/kvm/vmx/nested.c | 24 +++++++++++++-----------
 1 file changed, 13 insertions(+), 11 deletions(-)

diff --git a/arch/x86/kvm/vmx/nested.c b/arch/x86/kvm/vmx/nested.c
index 9750e590c89d..72398e3bc92b 100644
--- a/arch/x86/kvm/vmx/nested.c
+++ b/arch/x86/kvm/vmx/nested.c
@@ -1997,14 +1997,6 @@ void nested_sync_vmcs12_to_shadow(struct kvm_vcpu *vcpu)
 {
 	struct vcpu_vmx *vmx = to_vmx(vcpu);
 
-	/*
-	 * hv_evmcs may end up being not mapped after migration (when
-	 * L2 was running), map it here to make sure vmcs12 changes are
-	 * properly reflected.
-	 */
-	if (vmx->nested.enlightened_vmcs_enabled && !vmx->nested.hv_evmcs)
-		nested_vmx_handle_enlightened_vmptrld(vcpu, false);
-
 	if (vmx->nested.hv_evmcs) {
 		copy_vmcs12_to_enlightened(vmx);
 		/* All fields are clean */
@@ -3053,6 +3045,14 @@ static bool nested_get_vmcs12_pages(struct kvm_vcpu *vcpu)
 	struct page *page;
 	u64 hpa;
 
+	/*
+	 * hv_evmcs may end up being not mapped after migration (when
+	 * L2 was running), map it here to make sure vmcs12 changes are
+	 * properly reflected.
+	 */
+	if (vmx->nested.enlightened_vmcs_enabled && !vmx->nested.hv_evmcs)
+		nested_vmx_handle_enlightened_vmptrld(vcpu, false);
+
 	if (nested_cpu_has2(vmcs12, SECONDARY_EXEC_VIRTUALIZE_APIC_ACCESSES)) {
 		/*
 		 * Translate L1 physical address to host physical
@@ -5905,10 +5905,12 @@ static int vmx_set_nested_state(struct kvm_vcpu *vcpu,
 		set_current_vmptr(vmx, kvm_state->hdr.vmx.vmcs12_pa);
 	} else if (kvm_state->flags & KVM_STATE_NESTED_EVMCS) {
 		/*
-		 * Sync eVMCS upon entry as we may not have
-		 * HV_X64_MSR_VP_ASSIST_PAGE set up yet.
+		 * nested_vmx_handle_enlightened_vmptrld() cannot be called
+		 * directly from here as HV_X64_MSR_VP_ASSIST_PAGE may not be
+		 * restored yet. EVMCS will be mapped from
+		 * nested_get_vmcs12_pages().
 		 */
-		vmx->nested.need_vmcs12_to_shadow_sync = true;
+		kvm_make_request(KVM_REQ_GET_VMCS12_PAGES, vcpu);
 	} else {
 		return -EINVAL;
 	}

From patchwork Mon Mar  9 15:52:13 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Vitaly Kuznetsov <vkuznets@redhat.com>
X-Patchwork-Id: 11427463
Return-Path: <SRS0=BDOO=42=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 391B8924
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon,  9 Mar 2020 15:52:34 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 10E6522525
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon,  9 Mar 2020 15:52:34 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (1024-bit key) header.d=redhat.com header.i=@redhat.com
 header.b="QmZmHQFK"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727179AbgCIPwc (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Mon, 9 Mar 2020 11:52:32 -0400
Received: from us-smtp-delivery-1.mimecast.com ([205.139.110.120]:23163 "EHLO
        us-smtp-1.mimecast.com" rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org
        with ESMTP id S1727146AbgCIPwb (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 9 Mar 2020 11:52:31 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
        s=mimecast20190719; t=1583769150;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:
         content-transfer-encoding:content-transfer-encoding:
         in-reply-to:in-reply-to:references:references;
        bh=IxoCj7ol2ys8Yu3qOzfjb+6i+I21gSxxhn+KMdZnqEM=;
        b=QmZmHQFKJ1ZVESAa7viSeHNJPbTWsIpiKiW8ml24w3k/ENmg/0x4eWWPLdPsp2Ty7sOmse
        42vfJKzxImRPikO/foWHEZd+c/FeFS3NJPePy2BPHMdTTepN9ooSh0vzZjIw8vVnmbSjtf
        c6QKWC9Rj6ZN3MDdAnGPwcXJHx/syM0=
Received: from mail-wr1-f69.google.com (mail-wr1-f69.google.com
 [209.85.221.69]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-300-tOAczm0gMd6XCplR06Yk6g-1; Mon, 09 Mar 2020 11:52:29 -0400
X-MC-Unique: tOAczm0gMd6XCplR06Yk6g-1
Received: by mail-wr1-f69.google.com with SMTP id j17so723159wru.19
        for <kvm@vger.kernel.org>; Mon, 09 Mar 2020 08:52:28 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=IxoCj7ol2ys8Yu3qOzfjb+6i+I21gSxxhn+KMdZnqEM=;
        b=ZfINAe5NFBIGh9TZnicDEVvPSfAfGBngtCh/+BaceRpmkHPOpY+wW2RL22i1JoyYRg
         RRk6Dxyt4LLKPmlUyqSJQm54H0RQY7ntsyP34OcfYz4kvsN+dn4ILjdpP+aRalhSTPzt
         VQsnIYXl9jhFqgnhnwf2kvC1bGKbqA94CrdueaeQaCEP9Py2Evj33L5PolWhQT59luUm
         NLgZHLoJB+xeI593ZKmpzPC33uZVFGv3lRPeMv137ivEYSxEH177Eg0+dSO2xWDPcZok
         PrccmQiMKnU7skyAgrQ0Yu00c+Ux2M/2TucHTvCGD+/bptdKweWGRdii9OtwvRK5vSLW
         kSmw==
X-Gm-Message-State: ANhLgQ1PYvL62B//dS1t12eRPIpdhz7R0PNJSIOKSvasbt49o346j3L7
        27R0dzO/sMD1yuKKB/1qBzC94wdKkdTlPqFT5Eq9KtBJzDiZf9X2U7B/WIjRxHAoEZr67B8WATu
        yl8+utOsWkqag
X-Received: by 2002:a5d:69c7:: with SMTP id s7mr8730237wrw.165.1583769147787;
        Mon, 09 Mar 2020 08:52:27 -0700 (PDT)
X-Google-Smtp-Source: 
 ADFU+vuxZwBEeKd41ZuDyKtmdkY8qKyyAAQOZ1rhXMhUYIQ36IGWq3i/Z2o/GbhrwKib2vpSgoZ30Q==
X-Received: by 2002:a5d:69c7:: with SMTP id s7mr8730220wrw.165.1583769147525;
        Mon, 09 Mar 2020 08:52:27 -0700 (PDT)
Received: from vitty.brq.redhat.com (nat-pool-brq-t.redhat.com.
 [213.175.37.10])
        by smtp.gmail.com with ESMTPSA id
 q4sm17294521wro.56.2020.03.09.08.52.25
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Mon, 09 Mar 2020 08:52:25 -0700 (PDT)
From: Vitaly Kuznetsov <vkuznets@redhat.com>
To: Paolo Bonzini <pbonzini@redhat.com>
Cc: Jim Mattson <jmattson@google.com>,
        Sean Christopherson <sean.j.christopherson@intel.com>,
        kvm@vger.kernel.org, linux-kernel@vger.kernel.org,
        Liran Alon <liran.alon@oracle.com>,
        Miaohe Lin <linmiaohe@huawei.com>
Subject: [PATCH 3/6] KVM: nVMX: properly handle errors in
 nested_vmx_handle_enlightened_vmptrld()
Date: Mon,  9 Mar 2020 16:52:13 +0100
Message-Id: <20200309155216.204752-4-vkuznets@redhat.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200309155216.204752-1-vkuznets@redhat.com>
References: <20200309155216.204752-1-vkuznets@redhat.com>
MIME-Version: 1.0
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

nested_vmx_handle_enlightened_vmptrld() fails in two cases:
- when we fail to kvm_vcpu_map() the supplied GPA
- when revision_id is incorrect.
Genuine Hyper-V raises #UD in the former case (at least with *some*
incorrect GPAs) and does VMfailInvalid() in the later. KVM doesn't do
anything so L1 just gets stuck retrying the same faulty VMLAUNCH.

nested_vmx_handle_enlightened_vmptrld() has two call sites:
nested_vmx_run() and nested_get_vmcs12_pages(). The former needs to queue
do much: the failure there happens after migration when L2 was running (and
L1 did something weird like wrote to VP assist page from a different vCPU),
just kill L1 with KVM_EXIT_INTERNAL_ERROR.

Reported-by: Miaohe Lin <linmiaohe@huawei.com>
Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
---
 arch/x86/kvm/vmx/evmcs.h  |  7 +++++++
 arch/x86/kvm/vmx/nested.c | 39 +++++++++++++++++++++++++++++----------
 2 files changed, 36 insertions(+), 10 deletions(-)

diff --git a/arch/x86/kvm/vmx/evmcs.h b/arch/x86/kvm/vmx/evmcs.h
index 6de47f2569c9..e5f7a7ebf27d 100644
--- a/arch/x86/kvm/vmx/evmcs.h
+++ b/arch/x86/kvm/vmx/evmcs.h
@@ -198,6 +198,13 @@ static inline void evmcs_sanitize_exec_ctrls(struct vmcs_config *vmcs_conf) {}
 static inline void evmcs_touch_msr_bitmap(void) {}
 #endif /* IS_ENABLED(CONFIG_HYPERV) */
 
+enum nested_evmptrld_status {
+	EVMPTRLD_DISABLED,
+	EVMPTRLD_SUCCEEDED,
+	EVMPTRLD_VMFAIL,
+	EVMPTRLD_ERROR,
+};
+
 bool nested_enlightened_vmentry(struct kvm_vcpu *vcpu, u64 *evmcs_gpa);
 uint16_t nested_get_evmcs_version(struct kvm_vcpu *vcpu);
 int nested_enable_evmcs(struct kvm_vcpu *vcpu,
diff --git a/arch/x86/kvm/vmx/nested.c b/arch/x86/kvm/vmx/nested.c
index 72398e3bc92b..65df8bcbb9c8 100644
--- a/arch/x86/kvm/vmx/nested.c
+++ b/arch/x86/kvm/vmx/nested.c
@@ -1910,18 +1910,18 @@ static int copy_vmcs12_to_enlightened(struct vcpu_vmx *vmx)
  * This is an equivalent of the nested hypervisor executing the vmptrld
  * instruction.
  */
-static int nested_vmx_handle_enlightened_vmptrld(struct kvm_vcpu *vcpu,
-						 bool from_launch)
+enum nested_evmptrld_status nested_vmx_handle_enlightened_vmptrld(
+	struct kvm_vcpu *vcpu, bool from_launch)
 {
 	struct vcpu_vmx *vmx = to_vmx(vcpu);
 	bool evmcs_gpa_changed = false;
 	u64 evmcs_gpa;
 
 	if (likely(!vmx->nested.enlightened_vmcs_enabled))
-		return 1;
+		return EVMPTRLD_DISABLED;
 
 	if (!nested_enlightened_vmentry(vcpu, &evmcs_gpa))
-		return 1;
+		return EVMPTRLD_DISABLED;
 
 	if (unlikely(!vmx->nested.hv_evmcs ||
 		     evmcs_gpa != vmx->nested.hv_evmcs_vmptr)) {
@@ -1932,7 +1932,7 @@ static int nested_vmx_handle_enlightened_vmptrld(struct kvm_vcpu *vcpu,
 
 		if (kvm_vcpu_map(vcpu, gpa_to_gfn(evmcs_gpa),
 				 &vmx->nested.hv_evmcs_map))
-			return 0;
+			return EVMPTRLD_ERROR;
 
 		vmx->nested.hv_evmcs = vmx->nested.hv_evmcs_map.hva;
 
@@ -1961,7 +1961,7 @@ static int nested_vmx_handle_enlightened_vmptrld(struct kvm_vcpu *vcpu,
 		if ((vmx->nested.hv_evmcs->revision_id != KVM_EVMCS_VERSION) &&
 		    (vmx->nested.hv_evmcs->revision_id != VMCS12_REVISION)) {
 			nested_release_evmcs(vcpu);
-			return 0;
+			return EVMPTRLD_VMFAIL;
 		}
 
 		vmx->nested.dirty_vmcs12 = true;
@@ -1990,7 +1990,7 @@ static int nested_vmx_handle_enlightened_vmptrld(struct kvm_vcpu *vcpu,
 		vmx->nested.hv_evmcs->hv_clean_fields &=
 			~HV_VMX_ENLIGHTENED_CLEAN_FIELD_ALL;
 
-	return 1;
+	return EVMPTRLD_SUCCEEDED;
 }
 
 void nested_sync_vmcs12_to_shadow(struct kvm_vcpu *vcpu)
@@ -3050,8 +3050,21 @@ static bool nested_get_vmcs12_pages(struct kvm_vcpu *vcpu)
 	 * L2 was running), map it here to make sure vmcs12 changes are
 	 * properly reflected.
 	 */
-	if (vmx->nested.enlightened_vmcs_enabled && !vmx->nested.hv_evmcs)
-		nested_vmx_handle_enlightened_vmptrld(vcpu, false);
+	if (vmx->nested.enlightened_vmcs_enabled && !vmx->nested.hv_evmcs) {
+		enum nested_evmptrld_status evmptrld_status =
+			nested_vmx_handle_enlightened_vmptrld(vcpu, false);
+
+		if (evmptrld_status == EVMPTRLD_VMFAIL ||
+		    evmptrld_status == EVMPTRLD_ERROR) {
+			pr_debug_ratelimited("%s: enlightened vmptrld failed\n",
+					     __func__);
+			vcpu->run->exit_reason = KVM_EXIT_INTERNAL_ERROR;
+			vcpu->run->internal.suberror =
+				KVM_INTERNAL_ERROR_EMULATION;
+			vcpu->run->internal.ndata = 0;
+			return false;
+		}
+	}
 
 	if (nested_cpu_has2(vmcs12, SECONDARY_EXEC_VIRTUALIZE_APIC_ACCESSES)) {
 		/*
@@ -3316,12 +3329,18 @@ static int nested_vmx_run(struct kvm_vcpu *vcpu, bool launch)
 	enum nvmx_vmentry_status status;
 	struct vcpu_vmx *vmx = to_vmx(vcpu);
 	u32 interrupt_shadow = vmx_get_interrupt_shadow(vcpu);
+	enum nested_evmptrld_status evmptrld_status;
 
 	if (!nested_vmx_check_permission(vcpu))
 		return 1;
 
-	if (!nested_vmx_handle_enlightened_vmptrld(vcpu, launch))
+	evmptrld_status = nested_vmx_handle_enlightened_vmptrld(vcpu, launch);
+	if (evmptrld_status == EVMPTRLD_ERROR) {
+		kvm_queue_exception(vcpu, UD_VECTOR);
 		return 1;
+	} else if (evmptrld_status == EVMPTRLD_VMFAIL) {
+		return nested_vmx_failInvalid(vcpu);
+	}
 
 	if (!vmx->nested.hv_evmcs && vmx->nested.current_vmptr == -1ull)
 		return nested_vmx_failInvalid(vcpu);

From patchwork Mon Mar  9 15:52:14 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Vitaly Kuznetsov <vkuznets@redhat.com>
X-Patchwork-Id: 11427469
Return-Path: <SRS0=BDOO=42=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id EEDCA924
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon,  9 Mar 2020 15:52:48 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id CFA29222C3
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon,  9 Mar 2020 15:52:48 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (1024-bit key) header.d=redhat.com header.i=@redhat.com
 header.b="GNGEwCDk"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727173AbgCIPwe (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Mon, 9 Mar 2020 11:52:34 -0400
Received: from us-smtp-2.mimecast.com ([207.211.31.81]:43262 "EHLO
        us-smtp-delivery-1.mimecast.com" rhost-flags-OK-OK-OK-FAIL)
        by vger.kernel.org with ESMTP id S1727180AbgCIPwd (ORCPT
        <rfc822;kvm@vger.kernel.org>); Mon, 9 Mar 2020 11:52:33 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
        s=mimecast20190719; t=1583769152;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:
         content-transfer-encoding:content-transfer-encoding:
         in-reply-to:in-reply-to:references:references;
        bh=x4pW19833p+fXxfsFrvmy67Ky5HT38eac4OMiKrYje0=;
        b=GNGEwCDkqyMJTEsy4OasSV6g2ugCYJHbvCBxmesyXBRhruQIjuGx6Q0gOGchq5LXmYZ84u
        WIHfQJmRXNdzUaXifmd78w8eMyS4e3WSG32xdLufkzbjMAiVZyXOkobGXTwNX/d3m4sU5P
        d1fW0xeNQRGgApkxQmwTYdXGUcNIKuw=
Received: from mail-wr1-f70.google.com (mail-wr1-f70.google.com
 [209.85.221.70]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-407-uEk_NJICNKS7Ws5vEPiizA-1; Mon, 09 Mar 2020 11:52:31 -0400
X-MC-Unique: uEk_NJICNKS7Ws5vEPiizA-1
Received: by mail-wr1-f70.google.com with SMTP id c6so5365069wrm.18
        for <kvm@vger.kernel.org>; Mon, 09 Mar 2020 08:52:30 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=x4pW19833p+fXxfsFrvmy67Ky5HT38eac4OMiKrYje0=;
        b=rQ9+qEim33FXrf3SEiOKaU6ttX4m+hlZ1XoEDaXZ0BDNlf+CcqOPclcStEj8FQ/ANw
         65fuJdNmk/82avVJO9K5LryiJb7IVxLbYqhz0Wd7lajdLyvNr2s29M/t2d34kuAmhpQp
         paGf9Vr2FppP/zyxr4Qnw18seuLz5xN1UB3fwKW6ock60vnWFxsi4+E4VQqWHx2Brzok
         FwxtzZ+jSBBOxfxUUY/CJ4q0vFNzXryX17t4a7J+qdy3qpv/b72HWqCaDzjITLSTMGL1
         nWpKFFpiC/qkmpRzDELinJnd68d5C+u49y0Q8yokGqUH75UZTLRZ1+QveafCryEL2e7f
         jw5g==
X-Gm-Message-State: ANhLgQ23Cg6O61S2BQRdzA+w/UGUA/LqWj8OWvA+9BO2ZF5M1sq+5MG+
        XJPDBzUk4tr9+rtVmMXfGwG2AiwywbWXF4yvuqaSNbqnxv+qozXBy2NqR/xL7iFiZ9pwyfhUWyj
        6IzsutHye2V9R
X-Received: by 2002:adf:ed86:: with SMTP id c6mr18930570wro.53.1583769149844;
        Mon, 09 Mar 2020 08:52:29 -0700 (PDT)
X-Google-Smtp-Source: 
 ADFU+vtNpfvkJjRTfTeKbLF72oykUGIlVbTuKMnR5vx+0KBXL7IxXEBsEWk1uSdTmYa4hf4LFzVGKg==
X-Received: by 2002:adf:ed86:: with SMTP id c6mr18930552wro.53.1583769149663;
        Mon, 09 Mar 2020 08:52:29 -0700 (PDT)
Received: from vitty.brq.redhat.com (nat-pool-brq-t.redhat.com.
 [213.175.37.10])
        by smtp.gmail.com with ESMTPSA id
 q4sm17294521wro.56.2020.03.09.08.52.27
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Mon, 09 Mar 2020 08:52:28 -0700 (PDT)
From: Vitaly Kuznetsov <vkuznets@redhat.com>
To: Paolo Bonzini <pbonzini@redhat.com>
Cc: Jim Mattson <jmattson@google.com>,
        Sean Christopherson <sean.j.christopherson@intel.com>,
        kvm@vger.kernel.org, linux-kernel@vger.kernel.org,
        Liran Alon <liran.alon@oracle.com>,
        Miaohe Lin <linmiaohe@huawei.com>
Subject: [PATCH 4/6] KVM: selftests: define and use EVMCS_VERSION
Date: Mon,  9 Mar 2020 16:52:14 +0100
Message-Id: <20200309155216.204752-5-vkuznets@redhat.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200309155216.204752-1-vkuznets@redhat.com>
References: <20200309155216.204752-1-vkuznets@redhat.com>
MIME-Version: 1.0
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

KVM allows to use revision_id from MSR_IA32_VMX_BASIC as eVMCS revision_id
to workaround a bug in genuine Hyper-V (see the comment in
nested_vmx_handle_enlightened_vmptrld()), this shouldn't be used by
default. Switch to using KVM_EVMCS_VERSION(1).

Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
---
 tools/testing/selftests/kvm/include/evmcs.h  | 2 ++
 tools/testing/selftests/kvm/lib/x86_64/vmx.c | 2 +-
 2 files changed, 3 insertions(+), 1 deletion(-)

diff --git a/tools/testing/selftests/kvm/include/evmcs.h b/tools/testing/selftests/kvm/include/evmcs.h
index 4912d23844bc..d8f4d6bfe05d 100644
--- a/tools/testing/selftests/kvm/include/evmcs.h
+++ b/tools/testing/selftests/kvm/include/evmcs.h
@@ -16,6 +16,8 @@
 #define u32 uint32_t
 #define u64 uint64_t
 
+#define EVMCS_VERSION 1
+
 extern bool enable_evmcs;
 
 struct hv_vp_assist_page {
diff --git a/tools/testing/selftests/kvm/lib/x86_64/vmx.c b/tools/testing/selftests/kvm/lib/x86_64/vmx.c
index 7aaa99ca4dbc..1efbfa18f184 100644
--- a/tools/testing/selftests/kvm/lib/x86_64/vmx.c
+++ b/tools/testing/selftests/kvm/lib/x86_64/vmx.c
@@ -191,7 +191,7 @@ bool load_vmcs(struct vmx_pages *vmx)
 		if (evmcs_vmptrld(vmx->enlightened_vmcs_gpa,
 				  vmx->enlightened_vmcs))
 			return false;
-		current_evmcs->revision_id = vmcs_revision();
+		current_evmcs->revision_id = EVMCS_VERSION;
 	}
 
 	return true;

From patchwork Mon Mar  9 15:52:15 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Vitaly Kuznetsov <vkuznets@redhat.com>
X-Patchwork-Id: 11427465
Return-Path: <SRS0=BDOO=42=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 449DB1800
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon,  9 Mar 2020 15:52:38 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 25179222C3
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon,  9 Mar 2020 15:52:38 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (1024-bit key) header.d=redhat.com header.i=@redhat.com
 header.b="GvZT5/J4"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727216AbgCIPwh (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Mon, 9 Mar 2020 11:52:37 -0400
Received: from us-smtp-delivery-1.mimecast.com ([207.211.31.120]:46697 "EHLO
        us-smtp-1.mimecast.com" rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org
        with ESMTP id S1727171AbgCIPwg (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 9 Mar 2020 11:52:36 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
        s=mimecast20190719; t=1583769155;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:
         content-transfer-encoding:content-transfer-encoding:
         in-reply-to:in-reply-to:references:references;
        bh=kEZnDQ3EPN69hzxp+XwMgJi39q3+ALjlYK44BICSftw=;
        b=GvZT5/J4pkkznu2EBQOZY/Bs6XiUBrRRBJuKY6WWCwST1YFVv5nIvcDGyXseJjyT+8UGp/
        GLtsLA0E/9kC9L6m+/TGtjUD3IkUF+IdeuRmEpX8Hts3e0AvZsS+ZEKiISpxFwGKDPK+XV
        1HhTHICsmQRfUN7ojIraYEGb97ZdYYM=
Received: from mail-wr1-f69.google.com (mail-wr1-f69.google.com
 [209.85.221.69]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-105-8hg-rbRHP_ON8fBtS4JqUA-1; Mon, 09 Mar 2020 11:52:34 -0400
X-MC-Unique: 8hg-rbRHP_ON8fBtS4JqUA-1
Received: by mail-wr1-f69.google.com with SMTP id j5so433883wrt.1
        for <kvm@vger.kernel.org>; Mon, 09 Mar 2020 08:52:33 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=kEZnDQ3EPN69hzxp+XwMgJi39q3+ALjlYK44BICSftw=;
        b=JsvJaMl+RB5oW4S8nV71gTQpM7A5T4ubA8Fb8TDZeZgdntTUHm959hHt+Fkvd2b4uq
         9/LLkG5pxOEvnBI+jS6L749HJ/OgOMEsosyijRGYtsy8J/Nq17KYnwd8fRxHGM14aKMo
         XG9w353YVuHOY3wT4p26hkvqmdAJVX6xYsrtzJ9dbnK5Nign1cWisl3xoKreh+WEOG3H
         WJ0gCVRhKux2n6mMxK7EShKCya12erl2FR2nar6xptJMgvWm/GZ+OXHYMZ41uIO6iUp4
         6WFaEVnqLtZQfUih62+BVC1kzw677onykvxqYkjFKX1VcXHk3arAxlVkjbJ8oCiKyOgT
         jU9A==
X-Gm-Message-State: ANhLgQ30KAjofYzesvjMs8lElZnK2jfVLKwLbA/VuR2xoT7/a/GsCg/f
        cHu8a6aD1kGwn2ZfkZBHGp8nos4FXL5hU4MF42lFwLoqsutooRv4SJghYzPkhbzo+LVcNnI0w6y
        FJ+goWYtvwKlB
X-Received: by 2002:a1c:a345:: with SMTP id
 m66mr21683093wme.114.1583769152544;
        Mon, 09 Mar 2020 08:52:32 -0700 (PDT)
X-Google-Smtp-Source: 
 ADFU+vuBsFwL/38WqBZvYsDczlUIj4JLSMvzr77wkabrGWT0xBQqHgpF8sih91f14RuhC/Y3HCPJng==
X-Received: by 2002:a1c:a345:: with SMTP id
 m66mr21683080wme.114.1583769152339;
        Mon, 09 Mar 2020 08:52:32 -0700 (PDT)
Received: from vitty.brq.redhat.com (nat-pool-brq-t.redhat.com.
 [213.175.37.10])
        by smtp.gmail.com with ESMTPSA id
 q4sm17294521wro.56.2020.03.09.08.52.29
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Mon, 09 Mar 2020 08:52:30 -0700 (PDT)
From: Vitaly Kuznetsov <vkuznets@redhat.com>
To: Paolo Bonzini <pbonzini@redhat.com>
Cc: Jim Mattson <jmattson@google.com>,
        Sean Christopherson <sean.j.christopherson@intel.com>,
        kvm@vger.kernel.org, linux-kernel@vger.kernel.org,
        Liran Alon <liran.alon@oracle.com>,
        Miaohe Lin <linmiaohe@huawei.com>
Subject: [PATCH 5/6] KVM: selftests: test enlightened vmenter with wrong eVMCS
 version
Date: Mon,  9 Mar 2020 16:52:15 +0100
Message-Id: <20200309155216.204752-6-vkuznets@redhat.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200309155216.204752-1-vkuznets@redhat.com>
References: <20200309155216.204752-1-vkuznets@redhat.com>
MIME-Version: 1.0
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Check that VMfailInvalid happens when eVMCS revision is is invalid.

Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
---
 tools/testing/selftests/kvm/x86_64/evmcs_test.c | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/tools/testing/selftests/kvm/x86_64/evmcs_test.c b/tools/testing/selftests/kvm/x86_64/evmcs_test.c
index 92915e6408e7..10e9c158dc96 100644
--- a/tools/testing/selftests/kvm/x86_64/evmcs_test.c
+++ b/tools/testing/selftests/kvm/x86_64/evmcs_test.c
@@ -21,10 +21,10 @@
 
 void l2_guest_code(void)
 {
-	GUEST_SYNC(6);
-
 	GUEST_SYNC(7);
 
+	GUEST_SYNC(8);
+
 	/* Done, exit to L1 and never come back.  */
 	vmcall();
 }
@@ -50,12 +50,17 @@ void l1_guest_code(struct vmx_pages *vmx_pages)
 
 	GUEST_SYNC(5);
 	GUEST_ASSERT(vmptrstz() == vmx_pages->enlightened_vmcs_gpa);
+	current_evmcs->revision_id = -1u;
+	GUEST_ASSERT(vmlaunch());
+	current_evmcs->revision_id = EVMCS_VERSION;
+	GUEST_SYNC(6);
+
 	GUEST_ASSERT(!vmlaunch());
 	GUEST_ASSERT(vmptrstz() == vmx_pages->enlightened_vmcs_gpa);
-	GUEST_SYNC(8);
+	GUEST_SYNC(9);
 	GUEST_ASSERT(!vmresume());
 	GUEST_ASSERT(vmreadz(VM_EXIT_REASON) == EXIT_REASON_VMCALL);
-	GUEST_SYNC(9);
+	GUEST_SYNC(10);
 }
 
 void guest_code(struct vmx_pages *vmx_pages)

From patchwork Mon Mar  9 15:52:16 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Vitaly Kuznetsov <vkuznets@redhat.com>
X-Patchwork-Id: 11427467
Return-Path: <SRS0=BDOO=42=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 975331800
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon,  9 Mar 2020 15:52:45 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 78D7F208C3
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon,  9 Mar 2020 15:52:45 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (1024-bit key) header.d=redhat.com header.i=@redhat.com
 header.b="dkb0iEEk"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726990AbgCIPwo (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Mon, 9 Mar 2020 11:52:44 -0400
Received: from us-smtp-delivery-1.mimecast.com ([205.139.110.120]:41066 "EHLO
        us-smtp-1.mimecast.com" rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org
        with ESMTP id S1727202AbgCIPwk (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 9 Mar 2020 11:52:40 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
        s=mimecast20190719; t=1583769159;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:
         content-transfer-encoding:content-transfer-encoding:
         in-reply-to:in-reply-to:references:references;
        bh=gpdJ6Cg1tIsPQIU8l639Qlh3t2/IFpSBkTvWUWG8TI0=;
        b=dkb0iEEkKkIDWuo2ZvLGLm1Co03rJZFT6xlJJv0O1UqvUdCRQWwbGF5bq5RfE6wZtO3KbP
        VAROzTBx4DjCUMVfXnm3wWtgsN415OCf609jsHnqpq/I/Tbkt5QNAiATsXeLZwOxdEJr8Z
        Hb+F8m8dQxvTjAtreNvPafZ2lD6SQWY=
Received: from mail-wr1-f70.google.com (mail-wr1-f70.google.com
 [209.85.221.70]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-280-5tpYYNb_PbqstWxIyZKFfQ-1; Mon, 09 Mar 2020 11:52:35 -0400
X-MC-Unique: 5tpYYNb_PbqstWxIyZKFfQ-1
Received: by mail-wr1-f70.google.com with SMTP id p11so5383638wrn.10
        for <kvm@vger.kernel.org>; Mon, 09 Mar 2020 08:52:35 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=gpdJ6Cg1tIsPQIU8l639Qlh3t2/IFpSBkTvWUWG8TI0=;
        b=Sw3wcV0wMZ+tuKUb8RjSmOB/nTwF8DTfwoRnPLoYUqcM9XS0vyTt8sFm5+pBI8J25Z
         mCSfBRvr0Cwn1q9IDE/j/5ugM8z8Qqs6qd7Y7XWNWt3rlZ94pNtH70WkO4WgquZTlKDN
         Rd04cG8pN6HBVRodTsCyU0rhJiTwxVpcxSs/FBJagIXGWlSxf79YnZMZC2PTFpmQIEos
         SDDnLUgf6BGVU1+hhRw7Bof5VVQayYjUK1p0vCMKx/LdEz17Xs3tDf+gPxVVBb0PkGo7
         uyp1uRISLaMGq2SOj+sHA7vcZHNiQKgMc9+O0M9OpQ9oUCxM2QWCmjjy2esXI661FJvt
         971Q==
X-Gm-Message-State: ANhLgQ1d6IQThBZ+P7Zhdlfs2CLroto5oJtSr7Lti2AQyJ6Ax04OStbz
        k/tYYH1Ef52k1phTjS85LCGCK1/t+gCu+0ha+9utSpyq2fr+x71RRfCfCEsaFVJ38PQ8DACzMzG
        Re3ugH7Li1Qwo
X-Received: by 2002:a1c:9d41:: with SMTP id
 g62mr19391296wme.131.1583769154409;
        Mon, 09 Mar 2020 08:52:34 -0700 (PDT)
X-Google-Smtp-Source: 
 ADFU+vucLw7YOCnn8HRRRJAIb3+rjAedSA1dvQR96Or6tajfe9jl5CymLzC/u8rLXBoNjwCxXzD9vw==
X-Received: by 2002:a1c:9d41:: with SMTP id
 g62mr19391282wme.131.1583769154229;
        Mon, 09 Mar 2020 08:52:34 -0700 (PDT)
Received: from vitty.brq.redhat.com (nat-pool-brq-t.redhat.com.
 [213.175.37.10])
        by smtp.gmail.com with ESMTPSA id
 q4sm17294521wro.56.2020.03.09.08.52.32
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Mon, 09 Mar 2020 08:52:32 -0700 (PDT)
From: Vitaly Kuznetsov <vkuznets@redhat.com>
To: Paolo Bonzini <pbonzini@redhat.com>
Cc: Jim Mattson <jmattson@google.com>,
        Sean Christopherson <sean.j.christopherson@intel.com>,
        kvm@vger.kernel.org, linux-kernel@vger.kernel.org,
        Liran Alon <liran.alon@oracle.com>,
        Miaohe Lin <linmiaohe@huawei.com>
Subject: [PATCH 6/6] KVM: selftests: enlightened VMPTRLD with an incorrect GPA
Date: Mon,  9 Mar 2020 16:52:16 +0100
Message-Id: <20200309155216.204752-7-vkuznets@redhat.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200309155216.204752-1-vkuznets@redhat.com>
References: <20200309155216.204752-1-vkuznets@redhat.com>
MIME-Version: 1.0
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Check that guest doesn't hang when an invalid eVMCS GPA is specified.
Testing that #UD is injected would probably be better but selftests lack
the infrastructure currently.

Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
---
 tools/testing/selftests/kvm/x86_64/evmcs_test.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/tools/testing/selftests/kvm/x86_64/evmcs_test.c b/tools/testing/selftests/kvm/x86_64/evmcs_test.c
index 10e9c158dc96..fed8f933748b 100644
--- a/tools/testing/selftests/kvm/x86_64/evmcs_test.c
+++ b/tools/testing/selftests/kvm/x86_64/evmcs_test.c
@@ -72,6 +72,10 @@ void guest_code(struct vmx_pages *vmx_pages)
 		l1_guest_code(vmx_pages);
 
 	GUEST_DONE();
+
+	/* Try enlightened vmptrld with an incorrect GPA */
+	evmcs_vmptrld(0xdeadbeef, vmx_pages->enlightened_vmcs);
+	GUEST_ASSERT(vmlaunch());
 }
 
 int main(int argc, char *argv[])
@@ -120,7 +124,7 @@ int main(int argc, char *argv[])
 		case UCALL_SYNC:
 			break;
 		case UCALL_DONE:
-			goto done;
+			goto part1_done;
 		default:
 			TEST_ASSERT(false, "Unknown ucall 0x%x.", uc.cmd);
 		}
@@ -152,6 +156,10 @@ int main(int argc, char *argv[])
 			    (ulong) regs2.rdi, (ulong) regs2.rsi);
 	}
 
-done:
+part1_done:
+	_vcpu_run(vm, VCPU_ID);
+	TEST_ASSERT(run->exit_reason == KVM_EXIT_SHUTDOWN,
+		    "Unexpected successful VMEnter with invalid eVMCS pointer!");
+
 	kvm_vm_free(vm);
 }
