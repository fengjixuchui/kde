From patchwork Thu Jan 21 06:55:05 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Wei Huang <wei.huang2@amd.com>
X-Patchwork-Id: 12034909
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=unavailable
	autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 89C1FC433DB
	for <kvm@archiver.kernel.org>; Thu, 21 Jan 2021 06:57:28 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 47FE82396F
	for <kvm@archiver.kernel.org>; Thu, 21 Jan 2021 06:57:28 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726294AbhAUG4w (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Thu, 21 Jan 2021 01:56:52 -0500
Received: from mail-eopbgr760075.outbound.protection.outlook.com
 ([40.107.76.75]:35598
        "EHLO NAM02-CY1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1725967AbhAUG4p (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 21 Jan 2021 01:56:45 -0500
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=V8SHMWAbvPwhGac0kpsbsiyI8v0ITK/5DIYYWgpDDaGw6rU7+1iS3iQ+BibCbszlJnP3pkd6gzqTWVycuCqGlswFdkHpbnd7SM72ropO3ZRKo3oHmWxWpWI1BRulUPmHNBnUeS1rbxFytmTm5sIInDlrnQhnLrukUf7NmyoCg+Nkm3zdAwqmqQ9zN+9SVUoxRcaJBGLWBt7bMkQAzydLkDHSPP8+cVJQrnbstUvVkIs3z1I/PK5Uwjq2KoJEG9+vwutZ1wr9bPxZhTcTLsFoCTMEuSeelVH8APYZ+pf1yQkjq07n7ZOXKNR+kqZyalOewJYS6OgDOXbPmmtaAHj/VA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=/u2e1NwXSIFY6408TR3E4ui0BK0d0t1eZ5AiNvDwuMM=;
 b=MCF1vuvFysDCntO17CN2K2eCabtGWaMm7d8JHBAgsHUcwy9iuNGGMrKiNOKqRdEzCD1f20SmsOcqFcR5Du1i/Wbr1UASc+1OWZCFoMtbDazb1lKEVpPqeZnvPzdLXsc/Yruu6ud/noyTQ8QYaWjt1W8QJbwTqZsaHNUxSH/TaK+INZEy3A4gWuN6JL6Z3XyoYnAz3mKudo12AW/kO37uzqwohc+nfn9VqDjo6z0Pa86g2PO9EgqW+8F8ITjsKv4ET1KFIXwdqpHgSRMaSyPmKYEXMKSKUvvW8mS3YCLPq4bLEFHGjBv8KeampzMa2HBnKzBBUBoUkD+XYFLo2DHefw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=/u2e1NwXSIFY6408TR3E4ui0BK0d0t1eZ5AiNvDwuMM=;
 b=dTI7u16VX0ZSigevAR6EntXyeTEceq8gCNta4+21KTP+y4fomDPR3q2TwtYqPsv4SNoMHfXOU9OS8UGgWr+BQolKQEbHfl8vTt5eebsc4iQE5tzOt8FvLvFyu24fGORNyksU47YRBGCaQ2FxoU9mY3vnID0h4PlLXJNBhLH1HIM=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from MWHPR12MB1502.namprd12.prod.outlook.com (2603:10b6:301:10::20)
 by MW3PR12MB4441.namprd12.prod.outlook.com (2603:10b6:303:59::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3784.13; Thu, 21 Jan
 2021 06:56:09 +0000
Received: from MWHPR12MB1502.namprd12.prod.outlook.com
 ([fe80::d06d:c93c:539d:5460]) by MWHPR12MB1502.namprd12.prod.outlook.com
 ([fe80::d06d:c93c:539d:5460%10]) with mapi id 15.20.3784.013; Thu, 21 Jan
 2021 06:56:09 +0000
From: Wei Huang <wei.huang2@amd.com>
To: kvm@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, pbonzini@redhat.com,
        vkuznets@redhat.com, mlevitsk@redhat.com, seanjc@google.com,
        joro@8bytes.org, bp@alien8.de, tglx@linutronix.de,
        mingo@redhat.com, x86@kernel.org, jmattson@google.com,
        wanpengli@tencent.com, bsd@redhat.com, dgilbert@redhat.com,
        luto@amacapital.net, wei.huang2@amd.com
Subject: [PATCH v2 1/4] KVM: x86: Factor out x86 instruction emulation with
 decoding
Date: Thu, 21 Jan 2021 01:55:05 -0500
Message-Id: <20210121065508.1169585-2-wei.huang2@amd.com>
X-Mailer: git-send-email 2.27.0
In-Reply-To: <20210121065508.1169585-1-wei.huang2@amd.com>
References: <20210121065508.1169585-1-wei.huang2@amd.com>
X-Originating-IP: [66.187.233.206]
X-ClientProxiedBy: SG2PR0601CA0009.apcprd06.prod.outlook.com (2603:1096:3::19)
 To MWHPR12MB1502.namprd12.prod.outlook.com (2603:10b6:301:10::20)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from amd-daytona-06.khw1.lab.eng.bos.redhat.com (66.187.233.206) by
 SG2PR0601CA0009.apcprd06.prod.outlook.com (2603:1096:3::19) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3784.12 via Frontend
 Transport; Thu, 21 Jan 2021 06:56:00 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 37463c4a-4f8e-49c9-abfd-08d8bdd9a1b3
X-MS-TrafficTypeDiagnostic: MW3PR12MB4441:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <MW3PR12MB4441E7400DB86CBA6CC476EBCFA19@MW3PR12MB4441.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:8882;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 qPBvq8ahXDxjey6BYc+7Rq8nMkW+C91tnqPX5wIO9nIJDioAj1wmJLU09VuWBP3PYEYLTfeAU/0CfcQFpxX/6rOwaU/V4zCPdYPVSvpik3ZzHD6DHmbYoez59keJt0FdxmGdx5N3VpWMVmlzipGmm2fdBjnGEAkcok9ZBl190Smf37d9TxhpF2DacTfMaNh8+ic6mGpJm0YUXE70iP7+GA3TImBrVqgKYJbqOroWf48HlyBvJSabZ5xMxvNfc6BoHHTyZDDV3K0hYc2iRMjalJsdnv9dA6c7aoeYz7hxfl7NMd2gwqMTHU11vJKF3eyMpGDSh/q/OPYLoHc624MMjbmKokEtTLDLxhnjNwQ5VGHeSpMLJxrGNB8aR3BucyeNPSlpYN0Gw9praxKZs43iLA==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:MWHPR12MB1502.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(396003)(366004)(136003)(376002)(346002)(83380400001)(52116002)(8936002)(86362001)(6506007)(66476007)(6512007)(6916009)(2906002)(186003)(478600001)(4326008)(6486002)(16526019)(956004)(26005)(2616005)(36756003)(8676002)(1076003)(316002)(7416002)(5660300002)(66946007)(66556008);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 uLOAEyE9FsQDBV1sNVWVgfg8L7g4z25jE9gOBH5TwF0C9IJSJ4ttHUch4LaNw59s7kQ3ORH+sIdDk9Fm+fhNnCpjpr8IEz7yMprGUjbaJbu186dJFiJuBQ/5hb073ZtcBASPSwKbRuy/sAVgxhALeQvWgJy1Hn1hkegq6cIM95Bfxxa7arwmsZ/DfsUAdFXUMR8PULEClP4J96lfmfVMp/rrYsBKHuUE9yHvCbPB6EvtE93njpT91/8CMRwLdM26ArGe4tGDiNo+YutfwZH3aO9QEqwEyKYTyph48JlnEENpuUnRVKFiAZE8lo6/ei9Wgy1okfA7C/92lAfnk1ARnY0+0jiN+iBdYttWzM6PPQOAyHvqPpEgKSXfMaiYb5ptsAQyrN6L6orJUhM+1SE89ror15WKGHX04ZPP7Zj1C2xDmdNUASuI2hh6AH+zl+VKZe10ALYR6kOo9CxDivWVYiEy05rWdBscUKRWbZ7v1TusY1tI1aoa6hb6lmeZ+1zAoaK/p2hUweFqxl9EjtxkV4L/P8VhvtOudjak/Q/03P0FW4WwZMXSFsGF1d7jzIs+K+vo1zty9ISKSOTVgTPrOfSqHd7iMdpdJYwBARJj9QXvaYE/43lXmNRlYylidIRiavYjeWnkFM0iAsqcVbosWtulAyxTvrVE4a9NeRU/ir1+l+zmdLbAyiJ8mbmqpwd/IE9qS1CEgMMDALmGpaWe8meJIi/pqG73M4NdMhfsDy1FQsOzDEshfXVbQOEtxg0fA2So2tD+jdn0AB/tRAx3ddr85+eeNbYlI1PSE/x6l79SgUPZsdYlQFSz5RRdtpBSftiFKYOzcFhT3JMudavlu/Y18eJQDVF73/6UqMGumONN0z0U3TxrQTfX/ODuVt/MBFhbg+7OIgLUszUhWB/IkclO4TXoXwsXVFSV/V+4DpohgCA9XeTIyIHGouux66qRVzfNuMyrjn2eF/C5CRxvtrDfmtnoXDQ6OhSoeMvdm4yagfJRKkL8aoTraZ3SK/RQ
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 37463c4a-4f8e-49c9-abfd-08d8bdd9a1b3
X-MS-Exchange-CrossTenant-AuthSource: MWHPR12MB1502.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 21 Jan 2021 06:56:09.5562
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 LRglpc6fglwsvcjVKKRorrzxuVLL+RQHcDrARB9Wv55asJEwOoMycnhfCvceVuHo
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MW3PR12MB4441
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Move the instruction decode part out of x86_emulate_instruction() for it
to be used in other places. Also kvm_clear_exception_queue() is moved
inside the if-statement as it doesn't apply when KVM are coming back from
userspace.

Co-developed-by: Bandan Das <bsd@redhat.com>
Signed-off-by: Bandan Das <bsd@redhat.com>
Signed-off-by: Wei Huang <wei.huang2@amd.com>
---
 arch/x86/kvm/x86.c | 63 +++++++++++++++++++++++++++++-----------------
 arch/x86/kvm/x86.h |  2 ++
 2 files changed, 42 insertions(+), 23 deletions(-)

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 9a8969a6dd06..580883cee493 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -7298,6 +7298,43 @@ static bool is_vmware_backdoor_opcode(struct x86_emulate_ctxt *ctxt)
 	return false;
 }
 
+/*
+ * Decode and emulate instruction. Return EMULATION_OK if success.
+ */
+int x86_emulate_decoded_instruction(struct kvm_vcpu *vcpu, int emulation_type,
+				    void *insn, int insn_len)
+{
+	int r = EMULATION_OK;
+	struct x86_emulate_ctxt *ctxt = vcpu->arch.emulate_ctxt;
+
+	init_emulate_ctxt(vcpu);
+
+	/*
+	 * We will reenter on the same instruction since
+	 * we do not set complete_userspace_io.  This does not
+	 * handle watchpoints yet, those would be handled in
+	 * the emulate_ops.
+	 */
+	if (!(emulation_type & EMULTYPE_SKIP) &&
+	    kvm_vcpu_check_breakpoint(vcpu, &r))
+		return r;
+
+	ctxt->interruptibility = 0;
+	ctxt->have_exception = false;
+	ctxt->exception.vector = -1;
+	ctxt->perm_ok = false;
+
+	ctxt->ud = emulation_type & EMULTYPE_TRAP_UD;
+
+	r = x86_decode_insn(ctxt, insn, insn_len);
+
+	trace_kvm_emulate_insn_start(vcpu);
+	++vcpu->stat.insn_emulation;
+
+	return r;
+}
+EXPORT_SYMBOL_GPL(x86_emulate_decoded_instruction);
+
 int x86_emulate_instruction(struct kvm_vcpu *vcpu, gpa_t cr2_or_gpa,
 			    int emulation_type, void *insn, int insn_len)
 {
@@ -7317,32 +7354,12 @@ int x86_emulate_instruction(struct kvm_vcpu *vcpu, gpa_t cr2_or_gpa,
 	 */
 	write_fault_to_spt = vcpu->arch.write_fault_to_shadow_pgtable;
 	vcpu->arch.write_fault_to_shadow_pgtable = false;
-	kvm_clear_exception_queue(vcpu);
 
 	if (!(emulation_type & EMULTYPE_NO_DECODE)) {
-		init_emulate_ctxt(vcpu);
-
-		/*
-		 * We will reenter on the same instruction since
-		 * we do not set complete_userspace_io.  This does not
-		 * handle watchpoints yet, those would be handled in
-		 * the emulate_ops.
-		 */
-		if (!(emulation_type & EMULTYPE_SKIP) &&
-		    kvm_vcpu_check_breakpoint(vcpu, &r))
-			return r;
-
-		ctxt->interruptibility = 0;
-		ctxt->have_exception = false;
-		ctxt->exception.vector = -1;
-		ctxt->perm_ok = false;
-
-		ctxt->ud = emulation_type & EMULTYPE_TRAP_UD;
-
-		r = x86_decode_insn(ctxt, insn, insn_len);
+		kvm_clear_exception_queue(vcpu);
 
-		trace_kvm_emulate_insn_start(vcpu);
-		++vcpu->stat.insn_emulation;
+		r = x86_emulate_decoded_instruction(vcpu, emulation_type,
+						    insn, insn_len);
 		if (r != EMULATION_OK)  {
 			if ((emulation_type & EMULTYPE_TRAP_UD) ||
 			    (emulation_type & EMULTYPE_TRAP_UD_FORCED)) {
diff --git a/arch/x86/kvm/x86.h b/arch/x86/kvm/x86.h
index c5ee0f5ce0f1..fc42454a4c27 100644
--- a/arch/x86/kvm/x86.h
+++ b/arch/x86/kvm/x86.h
@@ -273,6 +273,8 @@ bool kvm_mtrr_check_gfn_range_consistency(struct kvm_vcpu *vcpu, gfn_t gfn,
 					  int page_num);
 bool kvm_vector_hashing_enabled(void);
 void kvm_fixup_and_inject_pf_error(struct kvm_vcpu *vcpu, gva_t gva, u16 error_code);
+int x86_emulate_decoded_instruction(struct kvm_vcpu *vcpu, int emulation_type,
+				    void *insn, int insn_len);
 int x86_emulate_instruction(struct kvm_vcpu *vcpu, gpa_t cr2_or_gpa,
 			    int emulation_type, void *insn, int insn_len);
 fastpath_t handle_fastpath_set_msr_irqoff(struct kvm_vcpu *vcpu);

From patchwork Thu Jan 21 06:55:06 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Wei Huang <wei.huang2@amd.com>
X-Patchwork-Id: 12034911
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 2FD19C433DB
	for <kvm@archiver.kernel.org>; Thu, 21 Jan 2021 06:58:09 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id E033723788
	for <kvm@archiver.kernel.org>; Thu, 21 Jan 2021 06:58:08 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726477AbhAUG5c (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Thu, 21 Jan 2021 01:57:32 -0500
Received: from mail-eopbgr760075.outbound.protection.outlook.com
 ([40.107.76.75]:35598
        "EHLO NAM02-CY1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726324AbhAUG5M (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 21 Jan 2021 01:57:12 -0500
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=R92UkCVre8u/zeRHoFAUOHIEG01QSF2jds+EUoRRKWGqaFFT3ja56E/Xx/a3lZTEp7/i8trF0bGPaywPkQiQTz7fPeK9OP4cy5dIqFSavBb1yuetG9168nN/vXvZfNsfxZPD9KFfr5jE7646BQ3TJlJ7V1OrqpFlFQROUC4YKg9o/vqiwF1lCmxuQHPFIXTbeufG8zJkwg/RmeED/+rO2n0lpU24U9jz68iEaEY2K5nadX1Khss0c9qhubxp53lr6poCpZrYRN00SsDf0JD7PqGQJr8pF/VvISbIahffUbEH5bga0+vNTtP1Azdeq+K5kYzXlThboGRXfx17hrb6hA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=DWRhRO3ipZl2BovuoC1BQFXysuEQjKHSz4E+7Auq4/4=;
 b=EZP90QTvsUdCr5f5lZ9OtuHU8pxCv6ylqKbRa6pKi/rI9srIG+uSYy0ZGWUyanULOM0hHT1yiDkNmNczEf4iG8sI6CVlSkfaBBZr3FOOyUl1lr76pezljMbdDt8tvlu29aE/Y3oLh1w3ULzUiypPkOf4AiIVDRkYylYR8JBTrB0Ppld5GR2lGbITwr9H5JBQevxi+cFHyMWVPxtyw4KVr0NlXnBimfqjG0Jy2eKQOHV7P5KVeiqWa7fK5jeXDBZcoXdtAXu12IESvkPJD90CtQpOLo9ZWgEZ4SsDKwCkJ8olWnm/tIiCRfJev3ulcCFoOcVdGjDsZopgSa5o9OKWWQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=DWRhRO3ipZl2BovuoC1BQFXysuEQjKHSz4E+7Auq4/4=;
 b=ZMyncybh0jKsiqm028QL4YvykzOwF4up8FEykGoLvCZ2MlxV7qYLZ1iGdg+o1PBY2hpQO4CLnu8dVoz/o9Cdaa2bFcdcBwIgnHtJWo2qsALMUC5tBK7h5yNsTHRrKOXf2k14wkw/6X6zPwqQ27kBIKR9nn4nTR790tP1Iq27IIs=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from MWHPR12MB1502.namprd12.prod.outlook.com (2603:10b6:301:10::20)
 by MW3PR12MB4441.namprd12.prod.outlook.com (2603:10b6:303:59::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3784.13; Thu, 21 Jan
 2021 06:56:41 +0000
Received: from MWHPR12MB1502.namprd12.prod.outlook.com
 ([fe80::d06d:c93c:539d:5460]) by MWHPR12MB1502.namprd12.prod.outlook.com
 ([fe80::d06d:c93c:539d:5460%10]) with mapi id 15.20.3784.013; Thu, 21 Jan
 2021 06:56:41 +0000
From: Wei Huang <wei.huang2@amd.com>
To: kvm@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, pbonzini@redhat.com,
        vkuznets@redhat.com, mlevitsk@redhat.com, seanjc@google.com,
        joro@8bytes.org, bp@alien8.de, tglx@linutronix.de,
        mingo@redhat.com, x86@kernel.org, jmattson@google.com,
        wanpengli@tencent.com, bsd@redhat.com, dgilbert@redhat.com,
        luto@amacapital.net, wei.huang2@amd.com
Subject: [PATCH v2 2/4] KVM: SVM: Add emulation support for #GP triggered by
 SVM instructions
Date: Thu, 21 Jan 2021 01:55:06 -0500
Message-Id: <20210121065508.1169585-3-wei.huang2@amd.com>
X-Mailer: git-send-email 2.27.0
In-Reply-To: <20210121065508.1169585-1-wei.huang2@amd.com>
References: <20210121065508.1169585-1-wei.huang2@amd.com>
X-Originating-IP: [66.187.233.206]
X-ClientProxiedBy: SGAP274CA0009.SGPP274.PROD.OUTLOOK.COM (2603:1096:4:b6::21)
 To MWHPR12MB1502.namprd12.prod.outlook.com (2603:10b6:301:10::20)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from amd-daytona-06.khw1.lab.eng.bos.redhat.com (66.187.233.206) by
 SGAP274CA0009.SGPP274.PROD.OUTLOOK.COM (2603:1096:4:b6::21) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3784.11 via Frontend
 Transport; Thu, 21 Jan 2021 06:56:32 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: bbaa2551-4ce5-4228-e1eb-08d8bdd9b472
X-MS-TrafficTypeDiagnostic: MW3PR12MB4441:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <MW3PR12MB4441B4BDD53A2F763CBACE66CFA19@MW3PR12MB4441.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:4502;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 DROG17Nq0hBRkIZVeljyzbwjUvl7RbdduiLHZAv0KyHFAMEYyuUCVEskq00zitUOju5KHuylGxP6KWVbxvuoaW67YblBpY1rznC6504tV7X2arT/W38SZTVt7tSGidaPsJQTyJTKE/YBsGaLUA4zf15HMkd73r+49rvIzuXutLzmKtgAPJL0NMHSZ8ugEPQiSkAbYSLH9NpJhGLZ73QXQ84ATLH8WW748nz/N5hJkO7/s2SNElVaSLSuTic7YZ2CQHjWvqbVVBqWUR1JFeVilqhQ+lW8NAkbZdSA11B16BP+Ras2ciM7FruTJ1RViu9n1dC9obkWfma9/fIRAQncVP5fIkiAUz+V1NTwZOeNM8vVcDY/f7c2eb3n21GlK2/i
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:MWHPR12MB1502.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(396003)(366004)(136003)(376002)(346002)(83380400001)(52116002)(8936002)(86362001)(6506007)(66476007)(6512007)(6916009)(2906002)(186003)(478600001)(4326008)(6486002)(16526019)(956004)(26005)(2616005)(36756003)(8676002)(1076003)(316002)(6666004)(7416002)(5660300002)(66946007)(66556008);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 1g80F0mn5KFKxGfUZHxLoW2meMf+4nY0hrcOeMNIxM81s5JF9iIrp5q83HEEcjzZZfJduAJ8B1SWBrqLlJYfxUubpW49Mlly4OytRlfGto2IEV26louTlnSSJ3Uxxhobl57yvYMcLRCmtjNgmKhczKQKXI7VQjrDSZh0+RCgM6/ZJCB8fsnBytSdg6vW7RIssOu1hIF4ma8qAYsGCUVGGCiqe9Mb8nf1gHRsHUiB6bSX7AwDYS4ataoENxl7GCcH7/Vib/5ZbKd7F8pxT0Fr3CEjIpqAlE1YOQ4vf9/G7Fgj4H3mHLe+gsCDDdyF++lUIrddMMK0KcvI+vRECid5wxniQDY9TZXothyzuyZwcT8XlYPx8EkRnNeHFFR0HxSRZRZjf4hat71Ga0Mu688n+kjMFgpOccFaiu2ATNWHhAsatzzguUWt63cV2DC0ZNIhBZEHiFL/lE5eaE2/ahDyWAUq1axzPZkHeM3Z51bAyxT3bWPL0QUuxTjx7xej1okyQcPEiq7MNA75B+M2cJaxBYDyqGdd3nusl4Oh/Q7dlrx5W2hBuLJ+KylB1IqEXtrV4qPq0FSu969VVgs8CQd3P9qd1LGF8CW46aeXbn+zOuZvKOA89t+h5YjpGkpH1ijFFbNiZB17bgr5PYdjGAiYjOLL4k9NCZx/48WqX2MbjHWxZ+vXOm+dLva+p1M6+YkSpWfr4jf4wwDXN1Uhm7tBVP4gCNlHsWICcZATBr4IomG3gZHgpAjX+cEeXm62iGC9crHwQw1OkXwwuBPXrrW4vnlrKP8KPfhaPXx2uMDe0nAJqkU1/9RkJDiFhTc6lqBZCLaFOkH7mYLXeGRkSNeUwbp2iDggTS8Yc6CX1xpMhbvu+MBKE/ov+NykQe4UZ4sEcKdKOLYffxpkLqPw17t8mcU35xrk3zJZ2cHVVaDk9vxtxcYrM4m/JmVfovCiGwcM0YEqQDmjyFJLYHYC83k5n8aWq8CMwym9lPiBnzFrkLxtQUSTK680trw0iCFWSBlu
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 bbaa2551-4ce5-4228-e1eb-08d8bdd9b472
X-MS-Exchange-CrossTenant-AuthSource: MWHPR12MB1502.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 21 Jan 2021 06:56:41.0253
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 5UQNxBTdhJaa3osKSeI2I/c/BmyYjoxQltcV0Y+xYVjBY97mTLJkPW3bT+VyIEH6
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MW3PR12MB4441
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Bandan Das <bsd@redhat.com>

While running SVM related instructions (VMRUN/VMSAVE/VMLOAD), some AMD
CPUs check EAX against reserved memory regions (e.g. SMM memory on host)
before checking VMCB's instruction intercept. If EAX falls into such
memory areas, #GP is triggered before VMEXIT. This causes problem under
nested virtualization. To solve this problem, KVM needs to trap #GP and
check the instructions triggering #GP. For VM execution instructions,
KVM emulates these instructions.

Co-developed-by: Wei Huang <wei.huang2@amd.com>
Signed-off-by: Wei Huang <wei.huang2@amd.com>
Signed-off-by: Bandan Das <bsd@redhat.com>
---
 arch/x86/kvm/svm/svm.c | 99 ++++++++++++++++++++++++++++++++++--------
 1 file changed, 81 insertions(+), 18 deletions(-)

diff --git a/arch/x86/kvm/svm/svm.c b/arch/x86/kvm/svm/svm.c
index 7ef171790d02..6ed523cab068 100644
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@ -288,6 +288,9 @@ int svm_set_efer(struct kvm_vcpu *vcpu, u64 efer)
 		if (!(efer & EFER_SVME)) {
 			svm_leave_nested(svm);
 			svm_set_gif(svm, true);
+			/* #GP intercept is still needed in vmware_backdoor */
+			if (!enable_vmware_backdoor)
+				clr_exception_intercept(svm, GP_VECTOR);
 
 			/*
 			 * Free the nested guest state, unless we are in SMM.
@@ -309,6 +312,9 @@ int svm_set_efer(struct kvm_vcpu *vcpu, u64 efer)
 
 	svm->vmcb->save.efer = efer | EFER_SVME;
 	vmcb_mark_dirty(svm->vmcb, VMCB_CR);
+	/* Enable #GP interception for SVM instructions */
+	set_exception_intercept(svm, GP_VECTOR);
+
 	return 0;
 }
 
@@ -1957,24 +1963,6 @@ static int ac_interception(struct vcpu_svm *svm)
 	return 1;
 }
 
-static int gp_interception(struct vcpu_svm *svm)
-{
-	struct kvm_vcpu *vcpu = &svm->vcpu;
-	u32 error_code = svm->vmcb->control.exit_info_1;
-
-	WARN_ON_ONCE(!enable_vmware_backdoor);
-
-	/*
-	 * VMware backdoor emulation on #GP interception only handles IN{S},
-	 * OUT{S}, and RDPMC, none of which generate a non-zero error code.
-	 */
-	if (error_code) {
-		kvm_queue_exception_e(vcpu, GP_VECTOR, error_code);
-		return 1;
-	}
-	return kvm_emulate_instruction(vcpu, EMULTYPE_VMWARE_GP);
-}
-
 static bool is_erratum_383(void)
 {
 	int err, i;
@@ -2173,6 +2161,81 @@ static int vmrun_interception(struct vcpu_svm *svm)
 	return nested_svm_vmrun(svm);
 }
 
+enum {
+	NOT_SVM_INSTR,
+	SVM_INSTR_VMRUN,
+	SVM_INSTR_VMLOAD,
+	SVM_INSTR_VMSAVE,
+};
+
+/* Return NOT_SVM_INSTR if not SVM instrs, otherwise return decode result */
+static int svm_instr_opcode(struct kvm_vcpu *vcpu)
+{
+	struct x86_emulate_ctxt *ctxt = vcpu->arch.emulate_ctxt;
+
+	if (ctxt->b != 0x1 || ctxt->opcode_len != 2)
+		return NOT_SVM_INSTR;
+
+	switch (ctxt->modrm) {
+	case 0xd8: /* VMRUN */
+		return SVM_INSTR_VMRUN;
+	case 0xda: /* VMLOAD */
+		return SVM_INSTR_VMLOAD;
+	case 0xdb: /* VMSAVE */
+		return SVM_INSTR_VMSAVE;
+	default:
+		break;
+	}
+
+	return NOT_SVM_INSTR;
+}
+
+static int emulate_svm_instr(struct kvm_vcpu *vcpu, int opcode)
+{
+	int (*const svm_instr_handlers[])(struct vcpu_svm *svm) = {
+		[SVM_INSTR_VMRUN] = vmrun_interception,
+		[SVM_INSTR_VMLOAD] = vmload_interception,
+		[SVM_INSTR_VMSAVE] = vmsave_interception,
+	};
+	struct vcpu_svm *svm = to_svm(vcpu);
+
+	return svm_instr_handlers[opcode](svm);
+}
+
+/*
+ * #GP handling code. Note that #GP can be triggered under the following two
+ * cases:
+ *   1) SVM VM-related instructions (VMRUN/VMSAVE/VMLOAD) that trigger #GP on
+ *      some AMD CPUs when EAX of these instructions are in the reserved memory
+ *      regions (e.g. SMM memory on host).
+ *   2) VMware backdoor
+ */
+static int gp_interception(struct vcpu_svm *svm)
+{
+	struct kvm_vcpu *vcpu = &svm->vcpu;
+	u32 error_code = svm->vmcb->control.exit_info_1;
+	int opcode;
+
+	/* Both #GP cases have zero error_code */
+	if (error_code)
+		goto reinject;
+
+	/* Decode the instruction for usage later */
+	if (x86_emulate_decoded_instruction(vcpu, 0, NULL, 0) != EMULATION_OK)
+		goto reinject;
+
+	opcode = svm_instr_opcode(vcpu);
+	if (opcode)
+		return emulate_svm_instr(vcpu, opcode);
+	else
+		return kvm_emulate_instruction(vcpu,
+				EMULTYPE_VMWARE_GP | EMULTYPE_NO_DECODE);
+
+reinject:
+	kvm_queue_exception_e(vcpu, GP_VECTOR, error_code);
+	return 1;
+}
+
 void svm_set_gif(struct vcpu_svm *svm, bool value)
 {
 	if (value) {

From patchwork Thu Jan 21 06:55:07 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Wei Huang <wei.huang2@amd.com>
X-Patchwork-Id: 12035031
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 6B49AC433E6
	for <kvm@archiver.kernel.org>; Thu, 21 Jan 2021 07:49:02 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 37735238EC
	for <kvm@archiver.kernel.org>; Thu, 21 Jan 2021 07:49:02 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727608AbhAUHsz (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Thu, 21 Jan 2021 02:48:55 -0500
Received: from mail-eopbgr760075.outbound.protection.outlook.com
 ([40.107.76.75]:35598
        "EHLO NAM02-CY1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1725967AbhAUG5i (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 21 Jan 2021 01:57:38 -0500
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=jhz+5JuIDZpV/klaypKH7wVapn9+ECuf+vSjZezmpYNIOnT8l4bpy+He6e6ui4LE6RFD3n3HNY9JPSRKKtDsoBjH4KpgrZbxH/4sAEvWsV5ZLt9ukaXhD2Abxkundz64q3Ahu/euQXeb0BXfxV5Q+nGE0Ah8wfexkGtvRcXMSxlTBXzjmxi+l4uQ0zP9Yq3+A6gTMzhvJT+3elKPcEk9VBiPn0QEmSGkZTJwggjeLqdqqZvnUNO/WF6ZrmCY5stlWC4ljVGlIXhyCBr9cA8t+dix/vseQqcixt5KvtD7tVoGDweusJ+MmAZsPF/14+W/3aOjfziOFvbQXq7NvXj5cw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=1EIiAKuDJITokT4quODEVwGb3x5p6+c0mqJ0yG3gW0E=;
 b=YZyTIvfSAhLrM0Z3vsUq5C2INh3JGl6QyVjcw2mr2LIfFEL3/re7RSyhGtQ/DG+IX3WipYZmOdnvG+Jhl/WjSgU13OjdNO0pxpotBpnFjLyWvmwqtZCDPEMnXhghMEeOh7+dVtcU8S3jg6DY20GI5fzvivNqe4CluPoK+gZsafiiX4/yrBp74wAYrMYUGwASGPINlTW0zHNo+M4UQEvFAARhZ6KqhWvxtm8W5F/5ywCQGjDdbLlSQbEzBMZ+MM4zR4J90bzRgmL1w1Y/Qs1rTZ+YwrKBkbGftXQzyU0JAqet63M0mThS++nys4Y0guOoMMcsDo+/QoIxDXDsyWtMXA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=1EIiAKuDJITokT4quODEVwGb3x5p6+c0mqJ0yG3gW0E=;
 b=33ygBH0rnLafa09Q5RL5XxahC3/rzOy5lmV4TTd9DVXY5jfGR4X7PItQdzm/9OKu+FDTHNywL2DcF3GFVp5TfmI/8TJ4APeSjMns0zgV9g4R6JcpufJuI8eyG2E3Kqm/iOIxEvsEIWMAbI0GgCtP9s35T2a2ijcXeq0NvLLwLcQ=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from MWHPR12MB1502.namprd12.prod.outlook.com (2603:10b6:301:10::20)
 by MW3PR12MB4441.namprd12.prod.outlook.com (2603:10b6:303:59::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3784.13; Thu, 21 Jan
 2021 06:57:09 +0000
Received: from MWHPR12MB1502.namprd12.prod.outlook.com
 ([fe80::d06d:c93c:539d:5460]) by MWHPR12MB1502.namprd12.prod.outlook.com
 ([fe80::d06d:c93c:539d:5460%10]) with mapi id 15.20.3784.013; Thu, 21 Jan
 2021 06:57:09 +0000
From: Wei Huang <wei.huang2@amd.com>
To: kvm@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, pbonzini@redhat.com,
        vkuznets@redhat.com, mlevitsk@redhat.com, seanjc@google.com,
        joro@8bytes.org, bp@alien8.de, tglx@linutronix.de,
        mingo@redhat.com, x86@kernel.org, jmattson@google.com,
        wanpengli@tencent.com, bsd@redhat.com, dgilbert@redhat.com,
        luto@amacapital.net, wei.huang2@amd.com
Subject: [PATCH v2 3/4] KVM: SVM: Add support for VMCB address check change
Date: Thu, 21 Jan 2021 01:55:07 -0500
Message-Id: <20210121065508.1169585-4-wei.huang2@amd.com>
X-Mailer: git-send-email 2.27.0
In-Reply-To: <20210121065508.1169585-1-wei.huang2@amd.com>
References: <20210121065508.1169585-1-wei.huang2@amd.com>
X-Originating-IP: [66.187.233.206]
X-ClientProxiedBy: SG2PR0601CA0017.apcprd06.prod.outlook.com (2603:1096:3::27)
 To MWHPR12MB1502.namprd12.prod.outlook.com (2603:10b6:301:10::20)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from amd-daytona-06.khw1.lab.eng.bos.redhat.com (66.187.233.206) by
 SG2PR0601CA0017.apcprd06.prod.outlook.com (2603:1096:3::27) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3784.12 via Frontend
 Transport; Thu, 21 Jan 2021 06:57:00 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 14a80c13-2932-4a41-1064-08d8bdd9c52b
X-MS-TrafficTypeDiagnostic: MW3PR12MB4441:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <MW3PR12MB4441ED40210358F1ECC0B9AFCFA19@MW3PR12MB4441.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:326;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 COVmcjyt9Q8J2rJHiPaqhgeq3Na1GVk0tVrwmmTSDuXs+KnVseCTpnDg/ODvxrCIu+NOM6C3e9MdImrzH1BhkApcPqLvyjjhbochGt/uz98SjY5oZ+zfcRvUAR8pBAZMvzz2u3fJuZBZdXeX85Tw4ds/2w9rXlsrw6dhaOHyjsOTY+man/sMvXNm624KTKY87+zT/2LnkThIL7f6ygLfEHXnXSseBXwRcbtSCUNUXcbC9KBlw8HActC2/S5zsyfj0ZgCKWkWNzF5nYiKetIB468txlV4l+37LzS0usMd6C7Mw4xG1tuZtzTFr5CWZ+HF55opp9jtS2QtCccixJz7BB3xqbobJJWs1vdDdMgKJ7WINZ3tp0C+yoEy4LpWCcveRf0vsElQ5PlutFcYo6iZ8Q==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:MWHPR12MB1502.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(396003)(366004)(136003)(376002)(346002)(83380400001)(52116002)(8936002)(86362001)(6506007)(66476007)(6512007)(6916009)(2906002)(186003)(478600001)(4326008)(6486002)(16526019)(956004)(26005)(2616005)(36756003)(8676002)(1076003)(316002)(7416002)(5660300002)(66946007)(66556008);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 o1C76GElcHMhJ6DImL0KdO2RayDomKJYurm3QtFX9WMa9UOFQWec3mKOm8AzWrPcSmDfgBWWAzsL0/9eOnAff6PIqFPu31b2Wqn+TCcDfZxDW++ne0vSfwzOrZ9qbmVrH+qUnEoNzTxO16GPya944+ruzPGysbIxel7ikUxq3/I03c/2pHCA8ic7hcFYlHNJpAAG5DKcVZFoOPB1OHSMusj6SWqPvbOwdGs1ABdLYZBqYqC3NMthO5mnmxBs1OISezTTFU4JBT719P6iVKe5YsPdkLePCYrfPKJ9yzuipy0sZecMFP0tUK6GnwrZboIVbxgK8CadlK5rVnxdBBZAGEPXTbzxcLGr6hHdmDbtHGow87fEkvWVApEEA/TlXYHJfH6qIA/c7RF2esbNxQgWq5gWK154wEw1j57RJF4uAplUhF/m4t8YBpAT6V9sHKWusTy8YbxMY2w7Cig2AMJRMZ39HpwFqL/60UxICXJbGfg5J/2mYBkq/Gv91QsdWdOPcNDA5CkHgN8uq/4RwljzKiOxifcbJtEex3S5FFXkciWDfnn+lc2hNO6JwwGGEcJPZliog7p1Xka8AxMGKfC5mAnCR6OTUvwF+VJhpZ2O5uV/1ON0ywp29Cc/5RFZKXBi7ojBjDorliPS+aeJnHglA5WQEYwrvwaFW6Z+p9JA2N1bijpLHNHy8wrH8U9m3BIIhnG/+81zC3sOb25NlsnkVo29YatJjGcEKuhP1PZuYX7zuB15epY6j+7/27RNJmpPNnlJoRVzyT1ZDOS4K3yIg2RLW1Hx76dUYFZNcaBkCOeIRX9aAcu9yTgjchlnIQp7ozkD1Ysj+G4djx5ZF+hC67ZQSEjNNlpGrQpAddYjs6WjcaTAoKlGynjF07jSdhR6R+zGUuRFoXRwsX+Z5hwaJGhRm/LolMCOvnn99DxdPHM0Ia4XHwCpgAyayIoYREGzv95fatyV2vm8jcvVV3v1HOgde4ZFXTRoN+E6gGTWZlcsadougAbhXwjPQJd1IWEc
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 14a80c13-2932-4a41-1064-08d8bdd9c52b
X-MS-Exchange-CrossTenant-AuthSource: MWHPR12MB1502.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 21 Jan 2021 06:57:09.1069
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 9QqwhRh+WXe1hLxIxarT1x0lo1reVpdAKVPMVdF2xeSlYPuPweYCWChmR6JTkujW
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MW3PR12MB4441
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

New AMD CPUs have a change that checks VMEXIT intercept on special SVM
instructions before checking their EAX against reserved memory region.
This change is indicated by CPUID_0x8000000A_EDX[28]. If it is 1, #VMEXIT
is triggered before #GP. KVM doesn't need to intercept and emulate #GP
faults as #GP is supposed to be triggered.

Co-developed-by: Bandan Das <bsd@redhat.com>
Signed-off-by: Bandan Das <bsd@redhat.com>
Signed-off-by: Wei Huang <wei.huang2@amd.com>
Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
---
 arch/x86/include/asm/cpufeatures.h | 1 +
 arch/x86/kvm/svm/svm.c             | 6 +++++-
 2 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/arch/x86/include/asm/cpufeatures.h b/arch/x86/include/asm/cpufeatures.h
index 84b887825f12..ea89d6fdd79a 100644
--- a/arch/x86/include/asm/cpufeatures.h
+++ b/arch/x86/include/asm/cpufeatures.h
@@ -337,6 +337,7 @@
 #define X86_FEATURE_AVIC		(15*32+13) /* Virtual Interrupt Controller */
 #define X86_FEATURE_V_VMSAVE_VMLOAD	(15*32+15) /* Virtual VMSAVE VMLOAD */
 #define X86_FEATURE_VGIF		(15*32+16) /* Virtual GIF */
+#define X86_FEATURE_SVME_ADDR_CHK	(15*32+28) /* "" SVME addr check */
 
 /* Intel-defined CPU features, CPUID level 0x00000007:0 (ECX), word 16 */
 #define X86_FEATURE_AVX512VBMI		(16*32+ 1) /* AVX512 Vector Bit Manipulation instructions*/
diff --git a/arch/x86/kvm/svm/svm.c b/arch/x86/kvm/svm/svm.c
index 6ed523cab068..2a12870ac71a 100644
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@ -313,7 +313,8 @@ int svm_set_efer(struct kvm_vcpu *vcpu, u64 efer)
 	svm->vmcb->save.efer = efer | EFER_SVME;
 	vmcb_mark_dirty(svm->vmcb, VMCB_CR);
 	/* Enable #GP interception for SVM instructions */
-	set_exception_intercept(svm, GP_VECTOR);
+	if (!kvm_cpu_cap_has(X86_FEATURE_SVME_ADDR_CHK))
+		set_exception_intercept(svm, GP_VECTOR);
 
 	return 0;
 }
@@ -933,6 +934,9 @@ static __init void svm_set_cpu_caps(void)
 	    boot_cpu_has(X86_FEATURE_AMD_SSBD))
 		kvm_cpu_cap_set(X86_FEATURE_VIRT_SSBD);
 
+	if (boot_cpu_has(X86_FEATURE_SVME_ADDR_CHK))
+		kvm_cpu_cap_set(X86_FEATURE_SVME_ADDR_CHK);
+
 	/* Enable INVPCID feature */
 	kvm_cpu_cap_check_and_set(X86_FEATURE_INVPCID);
 }

From patchwork Thu Jan 21 06:55:08 2021
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Wei Huang <wei.huang2@amd.com>
X-Patchwork-Id: 12035029
Return-Path: <kvm-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-18.7 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,
	INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,
	SPF_PASS,URIBL_BLOCKED,USER_AGENT_GIT autolearn=ham autolearn_force=no
	version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 7C26BC433E0
	for <kvm@archiver.kernel.org>; Thu, 21 Jan 2021 07:48:31 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 2C95B23356
	for <kvm@archiver.kernel.org>; Thu, 21 Jan 2021 07:48:31 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727217AbhAUHsE (ORCPT <rfc822;kvm@archiver.kernel.org>);
        Thu, 21 Jan 2021 02:48:04 -0500
Received: from mail-eopbgr760078.outbound.protection.outlook.com
 ([40.107.76.78]:49574
        "EHLO NAM02-CY1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726532AbhAUG7B (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 21 Jan 2021 01:59:01 -0500
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=X17WqyuVhdF4opAaYT1QnHJVgb2bodBU86uvRYPv0nD6yc841OYPI97w8UrQGXj4LQ2zb5AKbmMv5cON6SBcbH4BIwze88vxawMe+2yWDiGfkTbXRLrn06Hr3KtkVn/ATe9rlNciCuY2A+AfYRaDsVrYcmpixhjdvBs4X1eFUqQP6l4caw3uE7bYChz+HGE47mjxGM+Qsh9i6Tjp3Kd5N6hgdfHc48o1g/MZmcHpOLvgeN40f2j4Lk8FsBMo3RLgGP9guIf7/oqxmfLoncMCW+KU6Aoow9ySLdrLv8XOF/GSMAXIjRHR+i7i48ip7CfTwbbUbVmVd9NwEduyEHwe0A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=xpZJbAn5nhbRVpSW2zl+vZ8xxubU+Zyp7mbDXO2XOHk=;
 b=gbVGkfJ4a/WiWI1e2E1GLCxfLMIN+oa0K+O4ftHhSY/QDnC1TYMGFDYbP6CfszZmsp7EiAO7ZhpB7KhMOVCJmsa0rHHzVSd+6vFVgKWFXd+becGs3GrIXfCxhEzqEYt5MPmt/mlTJG+V4JvgU31S4s8aEewIdqVPUKH6fL566f+8yCVEMTq/Wl3vwoM87MnI3g2LvzgBFms7MHqEy+xW3mFIHSPn36UKTTheb4kMJ4ez8p9ThGEViHs/nT2gYp4iv5TXCR9TG5ofdNbLGR1SSW5wmdAxBI92l+DTwnyJudUVsIfRXXdC8TMKh2wtptvLTFbLcsBuWIOb271HfyGiNA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=xpZJbAn5nhbRVpSW2zl+vZ8xxubU+Zyp7mbDXO2XOHk=;
 b=O3JDjtxqJhrai8IZM2+2STqtCmUh6UutF8KqvD/ICVHG9bVoV10mTB9XeLySV+4C+eWhG4bZPfvBVKSMIpbwSBqr0PQyKWT0vL3FD2SmK2luuc4mA4ZqDaFRZ3iEsawgJ67vCt2mWcDGk7SSnezM/SJga4F28HyIilTxoSAxKeY=
Authentication-Results: vger.kernel.org; dkim=none (message not signed)
 header.d=none;vger.kernel.org; dmarc=none action=none header.from=amd.com;
Received: from MWHPR12MB1502.namprd12.prod.outlook.com (2603:10b6:301:10::20)
 by MW3PR12MB4441.namprd12.prod.outlook.com (2603:10b6:303:59::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3784.13; Thu, 21 Jan
 2021 06:57:39 +0000
Received: from MWHPR12MB1502.namprd12.prod.outlook.com
 ([fe80::d06d:c93c:539d:5460]) by MWHPR12MB1502.namprd12.prod.outlook.com
 ([fe80::d06d:c93c:539d:5460%10]) with mapi id 15.20.3784.013; Thu, 21 Jan
 2021 06:57:39 +0000
From: Wei Huang <wei.huang2@amd.com>
To: kvm@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, pbonzini@redhat.com,
        vkuznets@redhat.com, mlevitsk@redhat.com, seanjc@google.com,
        joro@8bytes.org, bp@alien8.de, tglx@linutronix.de,
        mingo@redhat.com, x86@kernel.org, jmattson@google.com,
        wanpengli@tencent.com, bsd@redhat.com, dgilbert@redhat.com,
        luto@amacapital.net, wei.huang2@amd.com
Subject: [PATCH v2 4/4] KVM: SVM: Support #GP handling for the case of nested
 on nested
Date: Thu, 21 Jan 2021 01:55:08 -0500
Message-Id: <20210121065508.1169585-5-wei.huang2@amd.com>
X-Mailer: git-send-email 2.27.0
In-Reply-To: <20210121065508.1169585-1-wei.huang2@amd.com>
References: <20210121065508.1169585-1-wei.huang2@amd.com>
X-Originating-IP: [66.187.233.206]
X-ClientProxiedBy: SG2PR02CA0055.apcprd02.prod.outlook.com
 (2603:1096:4:54::19) To MWHPR12MB1502.namprd12.prod.outlook.com
 (2603:10b6:301:10::20)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from amd-daytona-06.khw1.lab.eng.bos.redhat.com (66.187.233.206) by
 SG2PR02CA0055.apcprd02.prod.outlook.com (2603:1096:4:54::19) with Microsoft
 SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3784.12 via Frontend
 Transport; Thu, 21 Jan 2021 06:57:31 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: 44cafa43-dd60-4acd-78f6-08d8bdd9d783
X-MS-TrafficTypeDiagnostic: MW3PR12MB4441:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: 
 <MW3PR12MB444157DB16B40FA78F934C7ACFA19@MW3PR12MB4441.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:8273;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 
 KA5M6/MjHh1DYfe3y/oc+A4xhfYXaFl2PYKXc+C3X1Hp6UHCzQaVmTzT8yqptMRXsf2i/QQoBCY+rbK5sTKJnxGRkxZSR37ov+D7gpT9yhdgm4yDo2dtUDT1Sx3UJhQ9Ac1rpXMtnyPskQmCQ7+Mlx+Id0PPBcuqPin1YFh2tfIOrxbRyMwsailPup2kRkrZNNmCJ35EPPhnRmX524oNooqYBv2QeJVnXEr2OqpQmjMs84FZfcytVLgu5cWExyrwm8aesCB+JPC5zBjRBzS8GTBDxyuDx9Xel6GbqP0DCCdb+uwAfTghqH3D70/I51d2fU4ccDZtZzypeEm2DPbIXEHbMqyonyg4PJmvRwVg3RxwjvUjtBpnt+g7dvLu3U52n5L9GSNe4JhVt83MNTX7Xw==
X-Forefront-Antispam-Report: 
 CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:MWHPR12MB1502.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(39860400002)(396003)(366004)(136003)(376002)(346002)(83380400001)(52116002)(8936002)(86362001)(6506007)(66476007)(6512007)(6916009)(2906002)(186003)(478600001)(4326008)(6486002)(16526019)(956004)(26005)(2616005)(36756003)(8676002)(1076003)(316002)(6666004)(7416002)(5660300002)(66946007)(66556008);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData: 
 JfcuitQJ6lACGOLfBwQUNvQX6uWpFbdn5iZqnckYp8FZdrZRHl6REJFo+4bOhmZbcImR77RBuCT9ru1sSWPcF1hTPJpchsB3oWOKeWPKAj2I3rxM63ffT29bz4fwuEBaXiyIDPBV+ZR6GKwMZGTrVRDiyZHnLThWAu+Wsz7zmCZN6lLvbuBOhHSsUIyIo9GUkiklBsedY5OU5V3P7bKUXaxSLUy/eAiJunVLnJ4Tr/TesW6pruNllONqbdaH47ruu0rGoWxm68xLVtf6P4xtEUQfnElhe+F/aumEJ7EtJWiBMXnJKXk16r2613NfMUcaBZQZSPf1ohRWkMUThk2qAiMOI64BGMnGAXnuGnUUOEavXiBwg/eknKnJxpHOBo9h1Fs/UHW4msTVHb4cWXTvpmFPUzPXRKiOtA98b7J/qLgb6T9OrHUY9yu/0FLB/reCf8dYqFy0WDoKAukrdigE7c9BXIPYonBTCTI5NEqGzrxz7AhiJNVBEFyPRf/5OH/ICGcnnUDouLx9S44H4wIcvRITFBCrsq8bcEfbqRDB09eIe4sp4RUQw1peBalmSMk6OQQvdH2ajYKKPjzbYSEYkB43ZIjLwcyiROEIEuYwdwEFLyFcR1gqVfk6/QMOTo9b2Tn1risH9ADjW+qI07QJQOHGrwM1G4ksZ1sIuwdKwGBdN3Hy+h+bb1zQ7M0sGVlgTlmoyI+8BgKMCKcI0jpTU89L2vGch99rXKX2P+hNEZYS1zL4FJNkS4U2XhFdNT7/PktdtHBQxWWobvg9VZUAr6TIVlN5k6p3nhDWfxcV12wQlqkK8VR8jAgQ6wZq9pjvLaznYJOa8ku3EVcs1C/LOlsPoEkFDg9g8+Q6yGAewmOdZ8YBosY0U6croh31sZ+1J750Zo1DATfdVUEfewsiW2vCFliI3XINjRfqKaf/olXHqX8lMS3jZmJAXFn4ntwYd/bftRqlokPQiowJSptCfud5P8Wowp3+6bn7boUJ9+lOnTqO1nvHt1jWqSy8x8ay
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 44cafa43-dd60-4acd-78f6-08d8bdd9d783
X-MS-Exchange-CrossTenant-AuthSource: MWHPR12MB1502.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 21 Jan 2021 06:57:39.8363
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 
 MdhByhlkOavzS8/NM4AtR4kTfGwbdNCENBpCUvLRYF+OJLTUp3pwMMOtJsKSxCSi
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MW3PR12MB4441
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Under the case of nested on nested (e.g. L0->L1->L2->L3), #GP triggered
by SVM instructions can be hided from L1. Instead the hypervisor can
inject the proper #VMEXIT to inform L1 of what is happening. Thus L1
can avoid invoking the #GP workaround. For this reason we turns on
guest VM's X86_FEATURE_SVME_ADDR_CHK bit for KVM running inside VM to
receive the notification and change behavior.

Co-developed-by: Bandan Das <bsd@redhat.com>
Signed-off-by: Bandan Das <bsd@redhat.com>
Signed-off-by: Wei Huang <wei.huang2@amd.com>
Tested-by: Maxim Levitsky <mlevitsk@redhat.com>
Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
---
 arch/x86/kvm/svm/svm.c | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/arch/x86/kvm/svm/svm.c b/arch/x86/kvm/svm/svm.c
index 2a12870ac71a..89512c0e7663 100644
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@ -2196,6 +2196,11 @@ static int svm_instr_opcode(struct kvm_vcpu *vcpu)
 
 static int emulate_svm_instr(struct kvm_vcpu *vcpu, int opcode)
 {
+	const int guest_mode_exit_codes[] = {
+		[SVM_INSTR_VMRUN] = SVM_EXIT_VMRUN,
+		[SVM_INSTR_VMLOAD] = SVM_EXIT_VMLOAD,
+		[SVM_INSTR_VMSAVE] = SVM_EXIT_VMSAVE,
+	};
 	int (*const svm_instr_handlers[])(struct vcpu_svm *svm) = {
 		[SVM_INSTR_VMRUN] = vmrun_interception,
 		[SVM_INSTR_VMLOAD] = vmload_interception,
@@ -2203,7 +2208,14 @@ static int emulate_svm_instr(struct kvm_vcpu *vcpu, int opcode)
 	};
 	struct vcpu_svm *svm = to_svm(vcpu);
 
-	return svm_instr_handlers[opcode](svm);
+	if (is_guest_mode(vcpu)) {
+		svm->vmcb->control.exit_code = guest_mode_exit_codes[opcode];
+		svm->vmcb->control.exit_info_1 = 0;
+		svm->vmcb->control.exit_info_2 = 0;
+
+		return nested_svm_vmexit(svm);
+	} else
+		return svm_instr_handlers[opcode](svm);
 }
 
 /*
@@ -4034,6 +4046,11 @@ static void svm_vcpu_after_set_cpuid(struct kvm_vcpu *vcpu)
 	/* Check again if INVPCID interception if required */
 	svm_check_invpcid(svm);
 
+	if (nested && guest_cpuid_has(vcpu, X86_FEATURE_SVM)) {
+		best = kvm_find_cpuid_entry(vcpu, 0x8000000A, 0);
+		best->edx |= (1 << 28);
+	}
+
 	/* For sev guests, the memory encryption bit is not reserved in CR3.  */
 	if (sev_guest(vcpu->kvm)) {
 		best = kvm_find_cpuid_entry(vcpu, 0x8000001F, 0);
